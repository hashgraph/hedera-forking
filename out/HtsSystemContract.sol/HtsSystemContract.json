{
    "abi": [
        { "type": "fallback", "stateMutability": "nonpayable" },
        {
            "type": "function",
            "name": "_update",
            "inputs": [
                { "name": "from", "type": "address", "internalType": "address" },
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "associateToken",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "token", "type": "address", "internalType": "address" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "associateTokens",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "tokens", "type": "address[]", "internalType": "address[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "burnToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int64[]", "internalType": "int64[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "dissociateToken",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "token", "type": "address", "internalType": "address" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "dissociateTokens",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "tokens", "type": "address[]", "internalType": "address[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getAccountId",
            "inputs": [{ "name": "account", "type": "address", "internalType": "address" }],
            "outputs": [{ "name": "accountId", "type": "uint32", "internalType": "uint32" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getApproved",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "approved", "type": "address", "internalType": "address" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getFungibleTokenInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.FungibleTokenInfo",
                    "components": [
                        {
                            "name": "tokenInfo",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "components": [
                                {
                                    "name": "token",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "components": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "symbol",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "treasury",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "memo",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "tokenSupplyType",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "maxSupply",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "freezeDefault",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "components": [
                                                {
                                                    "name": "keyType",
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                {
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "components": [
                                                        {
                                                            "name": "inheritAccountKey",
                                                            "type": "bool",
                                                            "internalType": "bool"
                                                        },
                                                        {
                                                            "name": "contractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        },
                                                        {
                                                            "name": "ed25519",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "delegatableContractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "expiry",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "components": [
                                                {
                                                    "name": "second",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                },
                                                {
                                                    "name": "autoRenewAccount",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                                { "name": "deleted", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "defaultKycStatus",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "components": [
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "minimumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "maximumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "netOfTransfers",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                { "name": "ledgerId", "type": "string", "internalType": "string" }
                            ]
                        },
                        { "name": "decimals", "type": "int32", "internalType": "int32" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getNonFungibleTokenInfo",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "int64", "internalType": "int64" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                    "components": [
                        {
                            "name": "tokenInfo",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "components": [
                                {
                                    "name": "token",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "components": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "symbol",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "treasury",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "memo",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "tokenSupplyType",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "maxSupply",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "freezeDefault",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "components": [
                                                {
                                                    "name": "keyType",
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                {
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "components": [
                                                        {
                                                            "name": "inheritAccountKey",
                                                            "type": "bool",
                                                            "internalType": "bool"
                                                        },
                                                        {
                                                            "name": "contractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        },
                                                        {
                                                            "name": "ed25519",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "delegatableContractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "expiry",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "components": [
                                                {
                                                    "name": "second",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                },
                                                {
                                                    "name": "autoRenewAccount",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                                { "name": "deleted", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "defaultKycStatus",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "components": [
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "minimumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "maximumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "netOfTransfers",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                { "name": "ledgerId", "type": "string", "internalType": "string" }
                            ]
                        },
                        { "name": "serialNumber", "type": "int64", "internalType": "int64" },
                        { "name": "ownerId", "type": "address", "internalType": "address" },
                        { "name": "creationTime", "type": "int64", "internalType": "int64" },
                        { "name": "metadata", "type": "bytes", "internalType": "bytes" },
                        { "name": "spenderId", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenCustomFees",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FixedFee[]",
                    "components": [
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        {
                            "name": "useCurrentTokenForPayment",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "minimumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "maximumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "netOfTransfers", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenDefaultFreezeStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenDefaultKycStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenExpiryInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.Expiry",
                    "components": [
                        { "name": "second", "type": "int64", "internalType": "int64" },
                        {
                            "name": "autoRenewAccount",
                            "type": "address",
                            "internalType": "address"
                        },
                        { "name": "autoRenewPeriod", "type": "int64", "internalType": "int64" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.TokenInfo",
                    "components": [
                        {
                            "name": "token",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "components": [
                                { "name": "name", "type": "string", "internalType": "string" },
                                { "name": "symbol", "type": "string", "internalType": "string" },
                                {
                                    "name": "treasury",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                { "name": "memo", "type": "string", "internalType": "string" },
                                {
                                    "name": "tokenSupplyType",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "maxSupply", "type": "int64", "internalType": "int64" },
                                { "name": "freezeDefault", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "components": [
                                        {
                                            "name": "keyType",
                                            "type": "uint256",
                                            "internalType": "uint256"
                                        },
                                        {
                                            "name": "key",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "components": [
                                                {
                                                    "name": "inheritAccountKey",
                                                    "type": "bool",
                                                    "internalType": "bool"
                                                },
                                                {
                                                    "name": "contractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "ed25519",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "delegatableContractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "expiry",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "components": [
                                        {
                                            "name": "second",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "autoRenewAccount",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "autoRenewPeriod",
                                            "type": "int64",
                                            "internalType": "int64"
                                        }
                                    ]
                                }
                            ]
                        },
                        { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                        { "name": "deleted", "type": "bool", "internalType": "bool" },
                        { "name": "defaultKycStatus", "type": "bool", "internalType": "bool" },
                        { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                        {
                            "name": "fixedFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "components": [
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "fractionalFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                {
                                    "name": "minimumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "maximumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "netOfTransfers",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "royaltyFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        { "name": "ledgerId", "type": "string", "internalType": "string" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenKey",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "keyType", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.KeyValue",
                    "components": [
                        { "name": "inheritAccountKey", "type": "bool", "internalType": "bool" },
                        { "name": "contractId", "type": "address", "internalType": "address" },
                        { "name": "ed25519", "type": "bytes", "internalType": "bytes" },
                        { "name": "ECDSA_secp256k1", "type": "bytes", "internalType": "bytes" },
                        {
                            "name": "delegatableContractId",
                            "type": "address",
                            "internalType": "address"
                        }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenType",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int32", "internalType": "int32" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isApprovedForAll",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "owner", "type": "address", "internalType": "address" },
                { "name": "operator", "type": "address", "internalType": "address" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isToken",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bytes[]", "internalType": "bytes[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" },
                { "name": "serialNumbers", "type": "int64[]", "internalType": "int64[]" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ApprovalForAll",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "320:30831:1:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "320:30831:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13116:12;13549:2;13530:21;;;13522:63;;;;-1:-1:-1;;;13522:63:1;;216:2:39;13522:63:1;;;198:21:39;255:2;235:18;;;228:30;294:31;274:18;;;267:59;343:18;;13522:63:1;;;;;;;;;13596:24;13637:13;13648:1;13596:24;13637:8;13596:24;13637:13;:::i;:::-;13630:21;;;:::i;:::-;13623:29;;;-1:-1:-1;13690:10:1;13670:30;;13662:73;;;;-1:-1:-1;;;13662:73:1;;1253:2:39;13662:73:1;;;1235:21:39;1292:2;1272:18;;;1265:30;1331:32;1311:18;;;1304:60;1381:18;;13662:73:1;1051:354:39;13662:73:1;13746:13;13778:14;13789:2;13787:1;13778:8;13746:13;13778:14;:::i;:::-;13770:23;;;:::i;:::-;13762:32;;;-1:-1:-1;13829:4:1;13812:22;;13804:64;;;;-1:-1:-1;;;13804:64:1;;1991:2:39;13804:64:1;;;1973:21:39;2030:2;2010:18;;;2003:30;2069:31;2049:18;;;2042:59;2118:18;;13804:64:1;1789:353:39;13804:64:1;14047:20;:18;:20::i;:::-;320:30831;;;-1:-1:-1;320:30831:1;;;-1:-1:-1;;;;320:30831:1;5860:300;;;;;;:::i;:::-;;:::i;:::-;;;;3059:1:39;3048:21;;;;3030:40;;-1:-1:-1;;;;;3106:32:39;;;3101:2;3086:18;;3079:60;3003:18;5860:300:1;;;;;;;;5322:239;;;;;;:::i;:::-;;:::i;:::-;;;3714:1:39;3703:21;;;;3685:40;;3673:2;3658:18;5322:239:1;3543:188:39;28367:962:1;;;;;;:::i;:::-;;:::i;:::-;;8198:284;;;;;;:::i;:::-;;:::i;:::-;;;;4790:1:39;4779:21;;;;4761:40;;4844:14;;4837:22;4832:2;4817:18;;4810:50;4734:18;8198:284:1;4597:269:39;1638:272:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1916:1017::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3546:805::-;;;;;;:::i;:::-;;:::i;7057:253::-;;;;;;:::i;:::-;;:::i;7316:652::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2939:601::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5079:237::-;;;;;;:::i;:::-;;:::i;4357:716::-;;;;;;:::i;:::-;;:::i;7974:218::-;;;;;;:::i;:::-;;:::i;:::-;;;;17983:1:39;17972:21;;;;17954:40;;18041:1;18030:21;;;;18025:2;18010:18;;18003:49;17927:18;7974:218:1;17788:270:39;6478:262:1;;;;;;:::i;:::-;;:::i;6746:305::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;5567:287::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;9496:924::-;;;;;;:::i;:::-;;:::i;:::-;;;;20788:1:39;20777:21;;;20759:40;;20835:21;;;;20830:2;20815:18;;20808:49;20732:18;9496:924:1;20593:270:39;1329:303:1;;;;;;:::i;:::-;;:::i;:::-;;;21042:10:39;21030:23;;;21012:42;;21000:2;20985:18;1329:303:1;20868:192:39;8488:1002:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;6166:306::-;;;;;;:::i;:::-;;:::i;14176:3120::-;14232:12;14256:15;14281;14293:2;14290;14281:8;14256:15;14281;:::i;:::-;14274:23;;;:::i;:::-;14256:41;;14380:18;;;;;;;;;;;-1:-1:-1;;;14380:18:1;;;;;14339:27;14370:29;;14339:27;;-1:-1:-1;;14339:27:1;:::i;:::-;;;;;;;;:60;14335:134;;14415:43;;-1:-1:-1;;;14415:43:1;;25825:2:39;14415:43:1;;;25807:21:39;25864:2;25844:18;;;25837:30;25903:34;25883:18;;;25876:62;-1:-1:-1;;;25954:18:39;;;25947:31;25995:19;;14415:43:1;25623:397:39;14335:134:1;-1:-1:-1;;14530:10:1;:25;14526:2242;;-1:-1:-1;;;;;;;;;14575:38:1;;;14571:195;;14660:2;14641:8;:21;;14633:67;;;;-1:-1:-1;;;14633:67:1;;26227:2:39;14633:67:1;;;26209:21:39;26266:2;26246:18;;;26239:30;26305:34;26285:18;;;26278:62;-1:-1:-1;;;26356:18:39;;;26349:31;26397:19;;14633:67:1;26025:397:39;14633:67:1;14736:2;14740:10;14725:26;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14718:33;;;14176:3120;:::o;14571:195::-;-1:-1:-1;;;;;;;;;14783:44:1;;;14779:268;;14874:2;14855:8;:21;;14847:73;;;;-1:-1:-1;;;14847:73:1;;34589:2:39;14847:73:1;;;34571:21:39;34628:2;34608:18;;;34601:30;34667:34;34647:18;;;34640:62;-1:-1:-1;;;34718:18:39;;;34711:37;34765:19;;14847:73:1;34387:403:39;14847:73:1;14945:87;;;;14956:2;;14960:20;;14982:25;;15009:22;;14945:87;;;:::i;14779:268::-;-1:-1:-1;;;;;;;;;15064:50:1;;;15060:236;;15161:2;15142:8;:21;;15134:79;;;;-1:-1:-1;;;15134:79:1;;35969:2:39;15134:79:1;;;35951:21:39;36008:2;35988:18;;;35981:30;36047:34;36027:18;;;36020:62;-1:-1:-1;;;36098:18:39;;;36091:43;36151:19;;15134:79:1;35767:409:39;15134:79:1;15253:27;;15238:43;;;15249:2;15238:43;;;36356:36:39;-1:-1:-1;;;15253:27:1;;;;;36435:14:39;36428:22;36408:18;;;36401:50;36329:18;;15238:43:1;36181:276:39;15060:236:1;-1:-1:-1;;;;;;;;;15313:53:1;;;15309:245;;15413:2;15394:8;:21;;15386:82;;;;-1:-1:-1;;;15386:82:1;;36664:2:39;15386:82:1;;;36646:21:39;36703:2;36683:18;;;36676:30;36742:34;36722:18;;;36715:62;-1:-1:-1;;;36793:18:39;;;36786:46;36849:19;;15386:82:1;36462:412:39;15386:82:1;15508:30;;15493:46;;;15504:2;15493:46;;;36356:36:39;-1:-1:-1;;;15508:30:1;;;;;36435:14:39;36428:22;36408:18;;;36401:50;36329:18;;15493:46:1;36181:276:39;15309:245:1;-1:-1:-1;;;;;;;;;15571:44:1;;;15567:220;;15662:2;15643:8;:21;;15635:73;;;;-1:-1:-1;;;15635:73:1;;37081:2:39;15635:73:1;;;37063:21:39;37120:2;37100:18;;;37093:30;37159:34;37139:18;;;37132:62;-1:-1:-1;;;37210:18:39;;;37203:37;37257:19;;15635:73:1;36879:403:39;15635:73:1;15733:39;;;;15744:2;;15748:23;;15733:39;;;:::i;15567:220::-;-1:-1:-1;;;;;;;;;15804:38:1;;;15800:528;;15889:2;15870:8;:21;;15862:67;;;;-1:-1:-1;;;15862:67:1;;37832:2:39;15862:67:1;;;37814:21:39;37871:2;37851:18;;;37844:30;37910:34;37890:18;;;37883:62;-1:-1:-1;;;37961:18:39;;;37954:31;38002:19;;15862:67:1;37630:397:39;15862:67:1;15993:28;15978:9;15961:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;15951:38;;;;;;:70;15947:148;;16052:24;;;16063:2;16052:24;;;38414:36:39;16073:1:1;38466:18:39;;;38459:49;;;;38387:18;;16052:24:1;38237:277:39;15947:148:1;16158:32;16143:9;16126:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;16116:38;;;;;;:74;16112:152;;16221:24;;;16232:2;16221:24;;;38414:36:39;16242:1:1;38466:18:39;;;38459:49;;;;38387:18;;16221:24:1;38237:277:39;16112:152:1;16288:25;;;16299:2;16288:25;;;38414:36:39;-1:-1:-1;;38466:18:39;;;38459:49;;;;38387:18;;16288:25:1;38237:277:39;15800:528:1;-1:-1:-1;;;;;;;;;16345:33:1;;;16341:417;;16425:3;16406:8;:22;;16398:62;;;;-1:-1:-1;;;16398:62:1;;38721:2:39;16398:62:1;;;38703:21:39;38760:2;38740:18;;;38733:30;38799:29;38779:18;;;38772:57;38846:18;;16398:62:1;38519:351:39;16398:62:1;16478:12;16509:15;16521:2;16518;16509:8;16478:12;16509:15;:::i;:::-;16501:24;;;:::i;:::-;16493:33;;;-1:-1:-1;16544:10:1;16573:15;16585:2;16582;16573:8;16544:10;16573:15;:::i;:::-;16565:24;;;:::i;:::-;16557:33;;;-1:-1:-1;16608:14:1;16641:16;16653:3;16650:2;16641:8;16608:14;16641:16;:::i;:::-;16633:25;;;:::i;:::-;16625:34;-1:-1:-1;16677:25:1;16685:4;16691:2;16625:34;16677:7;:25::i;:::-;16727:16;;;16738:4;16727:16;;;39275:41:39;39248:18;16727:16:1;;;;;;;;;;;;16720:23;;;;;;14176:3120;:::o;16341:417::-;16906:24;;;;;;;;;;;-1:-1:-1;;;16906:24:1;;;;;16865:27;16896:35;;16865:27;;-1:-1:-1;;16865:27:1;:::i;:::-;;;;;;;;:66;16861:131;;16954:27;16972:8;16954:17;:27::i;:::-;16947:34;;;14176:3120;:::o;16861:131::-;17135:28;;;;;;;;;;;-1:-1:-1;;;17135:28:1;;;;;17094:27;17125:39;;17094:27;;-1:-1:-1;;17094:27:1;:::i;:::-;;;;;;;;:70;17090:136;;17187:28;17206:8;17187:18;:28::i;17090:136::-;17236:53;;-1:-1:-1;;;17236:53:1;;39529:2:39;17236:53:1;;;39511:21:39;39568:2;39548:18;;;39541:30;39607:34;39587:18;;;39580:62;-1:-1:-1;;;39658:18:39;;;39651:40;39708:19;;17236:53:1;39327:406:39;5860:300:1;5957:18;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6013:19:1;::::1;6005:58;;;::::0;-1:-1:-1;;;6005:58:1;;40292:2:39;6005:58:1::1;::::0;::::1;40274:21:39::0;40331:2;40311:18;;;40304:30;40370:28;40350:18;;;40343:56;40416:18;;6005:58:1::1;40090:350:39::0;6005:58:1::1;6112:40;::::0;-1:-1:-1;;;6112:40:1;;::::1;::::0;::::1;40591:25:39::0;;;6107:2:1::1;::::0;-1:-1:-1;;;;;6112:26:1;::::1;::::0;::::1;::::0;40564:18:39;;6112:40:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6073:80:::0;;;;-1:-1:-1;5860:300:1;-1:-1:-1;;;5860:300:1:o;5322:239::-;5405:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;5461:16:::1;::::0;;5475:1:::1;5461:16:::0;;;;;::::1;::::0;;;5435:23:::1;::::0;5461:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;5461:16:1::1;5435:42;;5499:5;5487:6;5494:1;5487:9;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1::0;;;;;5487:17:1::1;;;-1:-1:-1::0;;;;;5487:17:1::1;;;::::0;::::1;5521:33;5538:7;5547:6;5521:16;:33::i;:::-;5514:40;;;904:1;5322:239:::0;;;;:::o;28367:962::-;-1:-1:-1;;;;;28447:18:1;;28443:376;;28496:6;28481:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;28443:376:1;;-1:-1:-1;28443:376:1;;28533:16;28552:20;28567:4;28552:14;:20::i;:::-;28645:15;;28533:39;;-1:-1:-1;28683:21:1;;;;28675:65;;;;-1:-1:-1;;;28675:65:1;;41622:2:39;28675:65:1;;;41604:21:39;41661:2;41641:18;;;41634:30;41700:33;41680:18;;;41673:61;41751:18;;28675:65:1;41420:355:39;28675:65:1;28782:24;;;28765:42;;28443:376;-1:-1:-1;;;;;28833:16:1;;28829:494;;28880:6;28865:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;28829:494:1;;-1:-1:-1;28829:494:1;;28917:14;28934:18;28949:2;28934:14;:18::i;:::-;29021:13;;28917:35;;-1:-1:-1;28966:17:1;29240:18;29252:6;29021:13;29240:18;:::i;:::-;29283:28;;;-1:-1:-1;;28829:494:1;28367:962;;;:::o;8198:284::-;8294:55;;-1:-1:-1;;;;;42077:32:39;;8294:55:1;;;42059:51:39;8248:5:1;;;;;;42032:18:39;;8294:55:1;;;-1:-1:-1;;8294:55:1;;;;;;;;;;;;;;-1:-1:-1;;;;;8294:55:1;-1:-1:-1;;;8294:55:1;;;8401:19;8294:55;;-1:-1:-1;;;;;;;;;;8401:10:1;;;:19;;8294:55;;8401:19;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8359:61;;;;8438:2;8442:7;:32;;;;;8473:1;8453:10;:17;:21;8442:32;8430:45;;;;;;;8198:284;;;:::o;1638:272::-;1701:18;1721:26;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1767:19:1;::::1;1759:59;;;::::0;-1:-1:-1;;;1759:59:1;;42629:2:39;1759:59:1::1;::::0;::::1;42611:21:39::0;42668:2;42648:18;;;42641:30;42707:29;42687:18;;;42680:57;42754:18;;1759:59:1::1;42427:351:39::0;1759:59:1::1;1857:46;::::0;-1:-1:-1;;;1857:46:1;;-1:-1:-1;;;;;1857:39:1;::::1;:46;::::0;::::1;42059:51:39::0;;;1857:39:1;::::1;::::0;42032:18:39;;1857:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1857:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1829:74:::0;;;;-1:-1:-1;1638:272:1;-1:-1:-1;;1638:272:1:o;1916:1017::-;2026:5;2033:27;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2080:19:1;::::1;2072:70;;;::::0;-1:-1:-1;;;2072:70:1;;54442:2:39;2072:70:1::1;::::0;::::1;54424:21:39::0;54481:2;54461:18;;;54454:30;54520:34;54500:18;;;54493:62;-1:-1:-1;;;54571:18:39;;;54564:36;54617:19;;2072:70:1::1;54240:402:39::0;2072:70:1::1;2204:46;::::0;-1:-1:-1;;;2204:46:1;;-1:-1:-1;;;;;2204:39:1;::::1;:46;::::0;::::1;42059:51:39::0;;;2154:18:1::1;::::0;;;2204:39;::::1;::::0;42032:18:39;;2204:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2204:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;2153:97;;;;2268:12;:17;;2284:1;2268:17;2260:79;;;::::0;-1:-1:-1;;;2260:79:1;;54849:2:39;2260:79:1::1;::::0;::::1;54831:21:39::0;54888:2;54868:18;;;54861:30;54927:34;54907:18;;;54900:62;-1:-1:-1;;;54978:18:39;;;54971:47;55035:19;;2260:79:1::1;54647:413:39::0;2260:79:1::1;2349:48;;:::i;:::-;2407:42:::0;;;2459:48:::1;::::0;;::::1;:33;::::0;::::1;:48:::0;2550:57:::1;::::0;-1:-1:-1;;;2550:57:1;;-1:-1:-1;;;;;2577:29:1;::::1;2550:57;::::0;::::1;40591:25:39::0;-1:-1:-1;;;;;2550:26:1;::::1;::::0;::::1;::::0;40564:18:39;;2550:57:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2517:90:1;;::::1;:30;::::0;::::1;:90:::0;2648:53:::1;::::0;-1:-1:-1;;;2648:53:1;;-1:-1:-1;;;;;2671:29:1;::::1;2648:53;::::0;::::1;40591:25:39::0;2648:22:1;;::::1;::::0;::::1;::::0;40564:18:39;;2648:53:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2617:84:1::1;:28;::::0;::::1;:84:::0;2901:2:::1;::::0;-1:-1:-1;2617:20:1;-1:-1:-1;;;904:1:1::1;1916:1017:::0;;;;;:::o;3546:805::-;3637:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;3691:1:::1;3675:6;:13;:17;3667:61;;;::::0;-1:-1:-1;;;3667:61:1;;55267:2:39;3667:61:1::1;::::0;::::1;55249:21:39::0;55306:2;55286:18;;;55279:30;55345:33;55325:18;;;55318:61;55396:18;;3667:61:1::1;55065:355:39::0;3667:61:1::1;-1:-1:-1::0;;;;;3746:21:1;::::1;3757:10;3746:21;3738:136;;;::::0;-1:-1:-1;;;3738:136:1;;55627:2:39;3738:136:1::1;::::0;::::1;55609:21:39::0;55666:3;55646:18;;;55639:31;55706:34;55686:18;;;55679:62;55777:34;55757:18;;;55750:62;55849:34;55828:19;;;55821:63;-1:-1:-1;;;55900:19:39;;;55893:37;55947:19;;3738:136:1::1;55425:547:39::0;3738:136:1::1;3889:9;3884:403;3908:6;:13;3904:1;:17;3884:403;;;3971:1;-1:-1:-1::0;;;;;3950:23:1::1;:6;3957:1;3950:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;3950:23:1::1;::::0;3942:66:::1;;;::::0;-1:-1:-1;;;3942:66:1;;56179:2:39;3942:66:1::1;::::0;::::1;56161:21:39::0;56218:2;56198:18;;;56191:30;56257:32;56237:18;;;56230:60;56307:18;;3942:66:1::1;55977:354:39::0;3942:66:1::1;4022:6;4029:1;4022:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;4062:38:::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;4062:38:1::1;-1:-1:-1::0;;;4062:38:1::1;::::0;;4022:92;-1:-1:-1;;;;;4022:22:1;;::::1;::::0;:92:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;3923:3:1::1;;3884:403;;;-1:-1:-1::0;4311:2:1::1;::::0;3546:805;-1:-1:-1;;;3546:805:1:o;7057:253::-;7132:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7163:19:1;::::1;7155:73;;;::::0;-1:-1:-1;;;7155:73:1;;56538:2:39;7155:73:1::1;::::0;::::1;56520:21:39::0;56577:2;56557:18;;;56550:30;56616:34;56596:18;;;56589:62;-1:-1:-1;;;56667:18:39;;;56660:39;56716:19;;7155:73:1::1;56336:405:39::0;7155:73:1::1;7245:58;::::0;-1:-1:-1;;;7245:58:1;;-1:-1:-1;;;;;7245:51:1;::::1;:58;::::0;::::1;42059:51:39::0;;;7245::1;::::1;::::0;42032:18:39;;7245:58:1::1;;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7238:65;;;;7057:253:::0;;;:::o;7316:652::-;7392:5;7399:15;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7434:19:1;::::1;7426:58;;;::::0;-1:-1:-1;;;7426:58:1;;57279:2:39;7426:58:1::1;::::0;::::1;57261:21:39::0;57318:2;57298:18;;;57291:30;57357:28;57337:18;;;57330:56;57403:18;;7426:58:1::1;57077:350:39::0;7426:58:1::1;7545:46;::::0;-1:-1:-1;;;7545:46:1;;-1:-1:-1;;;;;7545:39:1;::::1;:46;::::0;::::1;42059:51:39::0;;;7495:18:1::1;::::0;;;7545:39;::::1;::::0;42032:18:39;;7545:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;7545:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;7494:97;;;;7609:12;:18;;7625:2;7609:18;7601:68;;;::::0;-1:-1:-1;;;7601:68:1;;57634:2:39;7601:68:1::1;::::0;::::1;57616:21:39::0;57673:2;57653:18;;;57646:30;57712:34;57692:18;;;57685:62;-1:-1:-1;;;57763:18:39;;;57756:35;57808:19;;7601:68:1::1;57432:401:39::0;7601:68:1::1;7684:9;7679:218;7703:15:::0;;:25:::1;;::::0;:32;7699:36;::::1;7679:218;;;7800:7;7760:9;:15;;;:25;;;7786:1;7760:28;;;;;;;;:::i;:::-;;;;;;;:36;;;:47:::0;7756:131:::1;;7835:2;7839:9;:15;;;:25;;;7865:1;7839:28;;;;;;;;:::i;:::-;;;;;;;:32;;;7827:45;;;;;;;;;7756:131;7737:3;;7679:218;;;;7906:24;;:::i;:::-;7948:2;::::0;7952:8;;-1:-1:-1;7316:652:1;-1:-1:-1;;;;;7316:652:1:o;2939:601::-;3010:5;3017:24;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;3061:19:1;::::1;3053:67;;;::::0;-1:-1:-1;;;3053:67:1;;58040:2:39;3053:67:1::1;::::0;::::1;58022:21:39::0;58079:2;58059:18;;;58052:30;58118:34;58098:18;;;58091:62;-1:-1:-1;;;58169:18:39;;;58162:33;58212:19;;3053:67:1::1;57838:399:39::0;3053:67:1::1;3182:46;::::0;-1:-1:-1;;;3182:46:1;;-1:-1:-1;;;;;3182:39:1;::::1;:46;::::0;::::1;42059:51:39::0;;;3132:18:1::1;::::0;;;3182:39;::::1;::::0;42032:18:39;;3182:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;3182:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;3131:97;;;;3246:12;:17;;3262:1;3246:17;3238:76;;;::::0;-1:-1:-1;;;3238:76:1;;58444:2:39;3238:76:1::1;::::0;::::1;58426:21:39::0;58483:2;58463:18;;;58456:30;58522:34;58502:18;;;58495:62;-1:-1:-1;;;58573:18:39;;;58566:44;58627:19;;3238:76:1::1;58242:410:39::0;3238:76:1::1;3324:42;;:::i;:::-;3406:9;3376:17;:27;;:39;;;;3473:5;-1:-1:-1::0;;;;;3466:22:1::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3455:37;;3425:26;::::0;::::1;:67:::0;3511:2:::1;::::0;-1:-1:-1;3425:17:1;-1:-1:-1;;;2939:601:1;;;:::o;5079:237::-;5161:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;5217:16:::1;::::0;;5231:1:::1;5217:16:::0;;;;;::::1;::::0;;;5191:23:::1;::::0;5217:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;5217:16:1::1;5191:42;;5255:5;5243:6;5250:1;5243:9;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1::0;;;;;5243:17:1::1;;;-1:-1:-1::0;;;;;5243:17:1::1;;;::::0;::::1;5277:32;5293:7;5302:6;5277:15;:32::i;4357:716::-:0;4449:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;4503:1:::1;4487:6;:13;:17;4479:62;;;::::0;-1:-1:-1;;;4479:62:1;;59137:2:39;4479:62:1::1;::::0;::::1;59119:21:39::0;;;59156:18;;;59149:30;59215:34;59195:18;;;59188:62;59267:18;;4479:62:1::1;58935:356:39::0;4479:62:1::1;-1:-1:-1::0;;;;;4559:21:1;::::1;4570:10;4559:21;4551:137;;;::::0;-1:-1:-1;;;4551:137:1;;59498:2:39;4551:137:1::1;::::0;::::1;59480:21:39::0;59537:3;59517:18;;;59510:31;59577:34;59557:18;;;59550:62;59648:34;59628:18;;;59621:62;59720:34;59699:19;;;59692:63;-1:-1:-1;;;59771:19:39;;;59764:38;59819:19;;4551:137:1::1;59296:548:39::0;4551:137:1::1;4703:9;4698:311;4722:6;:13;4718:1;:17;4698:311;;;4785:1;-1:-1:-1::0;;;;;4764:23:1::1;:6;4771:1;4764:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4764:23:1::1;::::0;4756:67:::1;;;::::0;-1:-1:-1;;;4756:67:1;;60051:2:39;4756:67:1::1;::::0;::::1;60033:21:39::0;60090:2;60070:18;;;60063:30;60129:33;60109:18;;;60102:61;60180:18;;4756:67:1::1;59849:355:39::0;4756:67:1::1;4837:30;4878:6;4885:1;4878:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4870:29:1::1;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4837:64;;4923:22;4949:1;4923:27;4915:83;;;::::0;-1:-1:-1;;;4915:83:1;;60646:2:39;4915:83:1::1;::::0;::::1;60628:21:39::0;60685:2;60665:18;;;60658:30;60724:34;60704:18;;;60697:62;-1:-1:-1;;;60775:18:39;;;60768:41;60826:19;;4915:83:1::1;60444:407:39::0;4915:83:1::1;-1:-1:-1::0;4737:3:1::1;;4698:311;;7974:218:::0;8037:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;8069:19:1;::::1;8061:61;;;::::0;-1:-1:-1;;;8061:61:1;;61058:2:39;8061:61:1::1;::::0;::::1;61040:21:39::0;61097:2;61077:18;;;61070:30;61136:31;61116:18;;;61109:59;61185:18;;8061:61:1::1;60856:353:39::0;8061:61:1::1;8139:46;::::0;-1:-1:-1;;;8139:46:1;;-1:-1:-1;;;;;8139:39:1;::::1;:46;::::0;::::1;42059:51:39::0;;;8139:39:1;::::1;::::0;42032:18:39;;8139:46:1::1;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6478:262::-:0;6556:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6587:19:1;::::1;6579:76;;;::::0;-1:-1:-1;;;6579:76:1;;61830:2:39;6579:76:1::1;::::0;::::1;61812:21:39::0;61869:2;61849:18;;;61842:30;61908:34;61888:18;;;61881:62;-1:-1:-1;;;61959:18:39;;;61952:42;62011:19;;6579:76:1::1;61628:408:39::0;6579:76:1::1;6672:61;::::0;-1:-1:-1;;;6672:61:1;;-1:-1:-1;;;;;6672:54:1;::::1;:61;::::0;::::1;42059:51:39::0;;;6672:54:1;::::1;::::0;42032:18:39;;6672:61:1::1;41913:203:39::0;6746:305:1;6829:5;6836:17;;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6918:19:1;::::1;6910:65;;;::::0;-1:-1:-1;;;6910:65:1;;62243:2:39;6910:65:1::1;::::0;::::1;62225:21:39::0;62282:2;62262:18;;;62255:30;62321:34;62301:18;;;62294:62;-1:-1:-1;;;62372:18:39;;;62365:31;62413:19;;6910:65:1::1;62041:397:39::0;6910:65:1::1;6992:52;::::0;-1:-1:-1;;;6992:52:1;;-1:-1:-1;;;;;6992:45:1;::::1;:52;::::0;::::1;42059:51:39::0;;;6992:45:1;::::1;::::0;42032:18:39;;6992:52:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;6992:52:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;6985:59;;;;;;;;6746:305:::0;;;;;:::o;5567:287::-;-1:-1:-1;;;;;;;;5636:18:1;-1:-1:-1;;;;;;;;;;;;;;;846:4:1;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;5699:19:1;::::1;5691:65;;;::::0;-1:-1:-1;;;5691:65:1;;63746:2:39;5691:65:1::1;::::0;::::1;63728:21:39::0;63785:2;63765:18;;;63758:30;63824:34;63804:18;;;63797:62;-1:-1:-1;;;63875:18:39;;;63868:31;63916:19;;5691:65:1::1;63544:397:39::0;5691:65:1::1;5795:52;::::0;-1:-1:-1;;;5795:52:1;;-1:-1:-1;;;;;5795:45:1;::::1;:52;::::0;::::1;42059:51:39::0;;;5795:45:1;::::1;::::0;42032:18:39;;5795:52:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9496:924::-:0;9595:18;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;9668:19:1;::::1;9660:56;;;::::0;-1:-1:-1;;;9660:56:1;;64525:2:39;9660:56:1::1;::::0;::::1;64507:21:39::0;64564:2;64544:18;;;64537:30;64603:26;64583:18;;;64576:54;64647:18;;9660:56:1::1;64323:348:39::0;9660:56:1::1;9743:1;9734:6;:10;;;9726:48;;;::::0;-1:-1:-1;;;9726:48:1;;64878:2:39;9726:48:1::1;::::0;::::1;64860:21:39::0;64917:2;64897:18;;;64890:30;64956:27;64936:18;;;64929:55;65001:18;;9726:48:1::1;64676:349:39::0;9726:48:1::1;9845:46;::::0;-1:-1:-1;;;9845:46:1;;-1:-1:-1;;;;;9845:39:1;::::1;:46;::::0;::::1;42059:51:39::0;;;9786:27:1::1;::::0;;;9845:39;::::1;::::0;42032:18:39;;9845:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;9845:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;9785:106;;;;9909:21;:27;;9934:2;9909:27;9901:75;;;::::0;-1:-1:-1;;;9901:75:1;;65232:2:39;9901:75:1::1;::::0;::::1;65214:21:39::0;65271:2;65251:18;;;65244:30;65310:34;65290:18;;;65283:62;-1:-1:-1;;;65361:18:39;;;65354:33;65404:19;;9901:75:1::1;65030:399:39::0;9901:75:1::1;10013:15:::0;;:24:::1;;::::0;-1:-1:-1;;;;;10055:29:1;::::1;10047:68;;;::::0;-1:-1:-1;;;10047:68:1;;65636:2:39;10047:68:1::1;::::0;::::1;65618:21:39::0;65675:2;65655:18;;;65648:30;65714:28;65694:18;;;65687:56;65760:18;;10047:68:1::1;65434:350:39::0;10047:68:1::1;10126:86;::::0;-1:-1:-1;;;10126:86:1;;-1:-1:-1;;;;;66009:32:39;;;10126:86:1::1;::::0;::::1;65991:51:39::0;10184:1:1::1;66058:18:39::0;;;66051:60;-1:-1:-1;;;;;10188:23:1;::::1;66127:18:39::0;;;66120:34;10126:32:1;::::1;::::0;::::1;::::0;65964:18:39;;10126:86:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10238:2;10223:17;;10318:5;-1:-1:-1::0;;;;;10311:25:1::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10281:59;;10376:1;10358:14;:19;;;;10350:63;;;::::0;-1:-1:-1;;;10350:63:1;;66367:2:39;10350:63:1::1;::::0;::::1;66349:21:39::0;66406:2;66386:18;;;66379:30;66445:33;66425:18;;;66418:61;66496:18;;10350:63:1::1;66165:355:39::0;10350:63:1::1;9650:770;;;9496:924:::0;;;;;;:::o;1329:303::-;1407:16;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;1538:40:::1;::::0;;-1:-1:-1;;;1538:40:1::1;::::0;::::1;66706:46:39::0;;;1435:15:1::1;66768:11:39::0;;;66761:72;;;-1:-1:-1;;;;;;66871:2:39;66867:15;;;66863:53;66849:12;;;66842:75;1453:26:1;;1435:15;;;;66933:12:39;1538:40:1::1;;;;;;;;;;;;1530:49;;;:::i;:::-;1613:11:::0;;1329:303;-1:-1:-1;;;;;1329:303:1:o;8488:1002::-;8587:18;;8645:28;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;8698:19:1;::::1;8690:56;;;::::0;-1:-1:-1;;;8690:56:1;;67460:2:39;8690:56:1::1;::::0;::::1;67442:21:39::0;67499:2;67479:18;;;67472:30;67538:26;67518:18;;;67511:54;67582:18;;8690:56:1::1;67258:348:39::0;8690:56:1::1;8773:1;8764:6;:10;;;8756:48;;;::::0;-1:-1:-1;;;8756:48:1;;67813:2:39;8756:48:1::1;::::0;::::1;67795:21:39::0;67852:2;67832:18;;;67825:30;67891:27;67871:18;;;67864:55;67936:18;;8756:48:1::1;67611:349:39::0;8756:48:1::1;8875:46;::::0;-1:-1:-1;;;8875:46:1;;-1:-1:-1;;;;;8875:39:1;::::1;:46;::::0;::::1;42059:51:39::0;;;8816:27:1::1;::::0;;;8875:39;::::1;::::0;42032:18:39;;8875:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;8875:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;8815:106;;;;8939:21;:27;;8964:2;8939:27;8931:75;;;::::0;-1:-1:-1;;;8931:75:1;;68167:2:39;8931:75:1::1;::::0;::::1;68149:21:39::0;68206:2;68186:18;;;68179:30;68245:34;68225:18;;;68218:62;-1:-1:-1;;;68296:18:39;;;68289:33;68339:19;;8931:75:1::1;67965:399:39::0;8931:75:1::1;9043:15:::0;;:24:::1;;::::0;-1:-1:-1;;;;;9085:29:1;::::1;9077:68;;;::::0;-1:-1:-1;;;9077:68:1;;68571:2:39;9077:68:1::1;::::0;::::1;68553:21:39::0;68610:2;68590:18;;;68583:30;68649:28;68629:18;;;68622:56;68695:18;;9077:68:1::1;68369:350:39::0;9077:68:1::1;9156:86;::::0;-1:-1:-1;;;9156:86:1;;9197:1:::1;9156:86;::::0;::::1;65991:51:39::0;-1:-1:-1;;;;;66078:32:39;;;66058:18;;;66051:60;-1:-1:-1;;;;;9218:23:1;::::1;66127:18:39::0;;;66120:34;9156:32:1;::::1;::::0;::::1;::::0;65964:18:39;;9156:86:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9268:2;9253:17;;9348:5;-1:-1:-1::0;;;;;9341:25:1::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9396:14;::::0;;9408:1:::1;9396:14:::0;;;::::1;::::0;::::1;::::0;;;9311:59;;-1:-1:-1;9396:14:1::1;9380:30;;9446:1;9428:14;:19;;;;9420:63;;;::::0;-1:-1:-1;;;9420:63:1;;68926:2:39;9420:63:1::1;::::0;::::1;68908:21:39::0;68965:2;68945:18;;;68938:30;69004:33;68984:18;;;68977:61;69055:18;;9420:63:1::1;68724:355:39::0;9420:63:1::1;8680:810;;;8488:1002:::0;;;;;;;:::o;6166:306::-;6301:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6332:19:1;::::1;6324:63;;;::::0;-1:-1:-1;;;6324:63:1;;69286:2:39;6324:63:1::1;::::0;::::1;69268:21:39::0;69325:2;69305:18;;;69298:30;69364:33;69344:18;;;69337:61;69415:18;;6324:63:1::1;69084:355:39::0;6324:63:1::1;6416:48;::::0;-1:-1:-1;;;6416:48:1;;-1:-1:-1;;;;;69636:32:39;;;6416:48:1::1;::::0;::::1;69618:51:39::0;69705:32;;;69685:18;;;69678:60;6411:2:1::1;::::0;6416:31;;::::1;::::0;::::1;::::0;69591:18:39;;6416:48:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6397:68;;;;6166:306:::0;;;;;;:::o;17302:2453::-;17363:12;-1:-1:-1;;;;;;;;;17391:32:1;;;17387:86;;17457:4;17446:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;17439:23;;17302:2453;;;:::o;17387:86::-;-1:-1:-1;;;;;;;;;17486:36:1;;;17482:94;;17556:8;;17545:20;;;17556:8;;;;17545:20;;;70328:36:39;70301:18;17545:20:1;70186:184:39;17482:94:1;-1:-1:-1;;;;;;;;;17589:39:1;;;17585:100;;17662:11;;17651:23;;;;;;40591:25:39;;40579:2;40564:18;;40445:177;17585:100:1;-1:-1:-1;;;;;;;;;17698:34:1;;;17694:90;;17766:6;17755:18;;;;;;;;:::i;17694:90::-;-1:-1:-1;;;;;;;;;17797:37:1;;;17793:251;;17877:2;17858:8;:21;;17850:64;;;;-1:-1:-1;;;17850:64:1;;70577:2:39;17850:64:1;;;70559:21:39;70616:2;70596:18;;;70589:30;70655:32;70635:18;;;70628:60;70705:18;;17850:64:1;70375:354:39;17850:64:1;17929:15;17963;17975:2;17972;17963:8;17929:15;17963;:::i;:::-;17955:24;;;:::i;:::-;17947:33;;17929:51;;18012:20;18024:7;18012:11;:20::i;:::-;18001:32;;;;;;40591:25:39;;40579:2;40564:18;;40445:177;18001:32:1;;;;;;;;;;;;;17994:39;;;17302:2453;;;:::o;17793:251::-;-1:-1:-1;;;;;;;;;18057:36:1;;;18053:374;;18136:2;18117:8;:21;;18109:63;;;;-1:-1:-1;;;18109:63:1;;70936:2:39;18109:63:1;;;70918:21:39;70975:2;70955:18;;;70948:30;71014:31;70994:18;;;70987:59;71063:18;;18109:63:1;70734:353:39;18109:63:1;18187:10;18216:15;18228:2;18225;18216:8;18187:10;18216:15;:::i;:::-;18208:24;;;:::i;:::-;18200:33;;;-1:-1:-1;18247:14:1;18280:15;18292:2;18289;18280:8;18247:14;18280:15;:::i;:::-;18272:24;;;:::i;:::-;18264:33;-1:-1:-1;18327:10:1;18351:28;18327:10;18368:2;18264:33;18351:9;:28::i;:::-;18400:16;;;18411:4;18400:16;;;39275:41:39;39248:18;18400:16:1;;;;;;;;;;;;;18393:23;;;;;17302:2453;;;:::o;18053:374::-;-1:-1:-1;;;;;;;;;18440:40:1;;;18436:497;;18523:3;18504:8;:22;;18496:65;;;;-1:-1:-1;;;18496:65:1;;71294:2:39;18496:65:1;;;71276:21:39;71333:2;71313:18;;;71306:30;71372:32;71352:18;;;71345:60;71422:18;;18496:65:1;71092:354:39;18496:65:1;18576:12;18607:15;18619:2;18616;18607:8;18576:12;18607:15;:::i;:::-;18599:24;;;:::i;:::-;18591:33;;;-1:-1:-1;18638:10:1;18667:15;18679:2;18676;18667:8;18638:10;18667:15;:::i;:::-;18659:24;;;:::i;:::-;18651:33;;;-1:-1:-1;18698:14:1;18731:16;18743:3;18740:2;18731:8;18698:14;18731:16;:::i;:::-;18723:25;;;:::i;:::-;18715:34;-1:-1:-1;18781:10:1;18806:38;18822:4;18781:10;18715:34;18806:15;:38::i;:::-;18858:27;18868:4;18874:2;18878:6;18858:9;:27::i;:::-;18906:16;;;18917:4;18906:16;;;39275:41:39;39248:18;18906:16:1;;;;;;;;;;;;18899:23;;;;;;17302:2453;;;:::o;18436:497::-;-1:-1:-1;;;;;;;;;18946:37:1;;;18942:321;;19026:2;19007:8;:21;;18999:64;;;;-1:-1:-1;;;18999:64:1;;71653:2:39;18999:64:1;;;71635:21:39;71692:2;71672:18;;;71665:30;71731:32;71711:18;;;71704:60;71781:18;;18999:64:1;71451:354:39;18999:64:1;19078:13;19110:15;19122:2;19119;19110:8;19078:13;19110:15;:::i;:::-;19102:24;;;:::i;:::-;19094:33;;;-1:-1:-1;19141:15:1;19175;19187:2;19184;19175:8;19141:15;19175;:::i;:::-;19167:24;;;:::i;:::-;19159:33;;19141:51;;19224:27;19236:5;19243:7;19224:11;:27::i;:::-;19213:39;;;;;;40591:25:39;;40579:2;40564:18;;40445:177;19213:39:1;;;;;;;;;;;;;19206:46;;;;17302:2453;;;:::o;18942:321::-;-1:-1:-1;;;;;;;;;19276:35:1;;;19272:432;;19354:2;19335:8;:21;;19327:62;;;;-1:-1:-1;;;19327:62:1;;72012:2:39;19327:62:1;;;71994:21:39;72051:2;72031:18;;;72024:30;72090;72070:18;;;72063:58;72138:18;;19327:62:1;71810:352:39;19327:62:1;19404:15;19438;19450:2;19447;19438:8;19404:15;19438;:::i;:::-;19430:24;;;:::i;:::-;19422:33;;;-1:-1:-1;19469:14:1;19502:15;19514:2;19511;19502:8;19469:14;19502:15;:::i;:::-;19494:24;;;:::i;:::-;19486:33;-1:-1:-1;19549:10:1;19573:32;19549:10;19589:7;19486:33;19573:8;:32::i;:::-;19640:7;-1:-1:-1;;;;;19624:32:1;19633:5;-1:-1:-1;;;;;19624:32:1;;19649:6;19624:32;;;;40591:25:39;;40579:2;40564:18;;40445:177;19624:32:1;;;;;;;;19677:16;;;19688:4;19677:16;;;39275:41:39;39248:18;19677:16:1;39135:187:39;19272:432:1;19720:28;19739:8;19720:18;:28::i;19761:2981::-;19823:12;-1:-1:-1;;;;;;;;;19851:33:1;;;19847:87;;19918:4;19907:16;;;;;;;;:::i;19847:87::-;-1:-1:-1;;;;;;;;;19947:35:1;;;19943:91;;20016:6;20005:18;;;;;;;;:::i;19943:91::-;-1:-1:-1;;;;;;;;;20047:37:1;;;20043:250;;20127:2;20108:8;:21;;20100:63;;;;-1:-1:-1;;;20100:63:1;;72369:2:39;20100:63:1;;;72351:21:39;72408:2;72388:18;;;72381:30;72447:31;72427:18;;;72420:59;72496:18;;20100:63:1;72167:353:39;20100:63:1;20177:16;20212:15;20224:2;20221;20212:8;20177:16;20212:15;:::i;:::-;20204:24;;;:::i;:::-;20196:33;-1:-1:-1;20261:20:1;20196:33;20261:10;:20::i;:::-;20250:32;;;;;;;;:::i;20043:250::-;-1:-1:-1;;;;;;;;;20306:40:1;;;20302:101;;20380:11;;20369:23;;;;;;40591:25:39;;40579:2;40564:18;;40445:177;20302:101:1;-1:-1:-1;;;;;;;;;20416:38:1;;;20412:247;;20497:2;20478:8;:21;;20470:64;;;;-1:-1:-1;;;20470:64:1;;70577:2:39;20470:64:1;;;70559:21:39;70616:2;70596:18;;;70589:30;70655:32;70635:18;;;70628:60;70705:18;;20470:64:1;70375:354:39;20412:247:1;-1:-1:-1;;;;;;;;;20672:36:1;;;20668:247;;20751:2;20732:8;:21;;20724:62;;;;-1:-1:-1;;;20724:62:1;;72952:2:39;20724:62:1;;;72934:21:39;72991:2;72971:18;;;72964:30;73030;73010:18;;;73003:58;73078:18;;20724:62:1;72750:352:39;20724:62:1;20800:16;20835:15;20847:2;20844;20835:8;20800:16;20835:15;:::i;:::-;20827:24;;;:::i;:::-;20819:33;-1:-1:-1;20884:19:1;20819:33;20884:9;:19::i;:::-;20873:31;;;-1:-1:-1;;;;;42077:32:39;;;20873:31:1;;;42059:51:39;42032:18;20873:31:1;41913:203:39;20668:247:1;-1:-1:-1;;;;;;;;;20928:41:1;;;20924:412;;21012:3;20993:8;:22;;20985:68;;;;-1:-1:-1;;;20985:68:1;;73309:2:39;20985:68:1;;;73291:21:39;73348:2;73328:18;;;73321:30;73387:34;73367:18;;;73360:62;-1:-1:-1;;;73438:18:39;;;73431:31;73479:19;;20985:68:1;73107:397:39;20985:68:1;21067:12;21098:15;21110:2;21107;21098:8;21067:12;21098:15;:::i;:::-;21090:24;;;:::i;:::-;21082:33;;;-1:-1:-1;21129:10:1;21158:15;21170:2;21167;21158:8;21129:10;21158:15;:::i;:::-;21150:24;;;:::i;:::-;21142:33;;;-1:-1:-1;21189:16:1;21224;21236:3;21233:2;21224:8;21189:16;21224;:::i;:::-;21216:25;;;:::i;:::-;21208:34;-1:-1:-1;21256:32:1;21269:4;21275:2;21208:34;21256:12;:32::i;20924:412::-;-1:-1:-1;;;;;;;;;21349:36:1;;;21345:344;;21428:2;21409:8;:21;;21401:62;;;;-1:-1:-1;;;21401:62:1;;72012:2:39;21401:62:1;;;71994:21:39;72051:2;72031:18;;;72024:30;72090;72070:18;;;72063:58;72138:18;;21401:62:1;71810:352:39;21401:62:1;21477:15;21511;21523:2;21520;21511:8;21477:15;21511;:::i;:::-;21503:24;;;:::i;:::-;21495:33;;;-1:-1:-1;21542:16:1;21577:15;21589:2;21586;21577:8;21542:16;21577:15;:::i;:::-;21569:24;;;:::i;:::-;21561:33;-1:-1:-1;21608:33:1;21617:7;21561:33;21636:4;21608:8;:33::i;:::-;21662:16;;;21673:4;21662:16;;;39275:41:39;39248:18;21662:16:1;39135:187:39;21345:344:1;-1:-1:-1;;;;;;;;;21702:46:1;;;21698:372;;21791:2;21772:8;:21;;21764:72;;;;-1:-1:-1;;;21764:72:1;;73711:2:39;21764:72:1;;;73693:21:39;73750:2;73730:18;;;73723:30;73789:34;73769:18;;;73762:62;-1:-1:-1;;;73840:18:39;;;73833:36;73886:19;;21764:72:1;73509:402:39;21764:72:1;21850:16;21885:15;21897:2;21894;21885:8;21850:16;21885:15;:::i;:::-;21877:24;;;:::i;:::-;21869:33;;;-1:-1:-1;21916:13:1;21948:15;21960:2;21957;21948:8;21916:13;21948:15;:::i;:::-;21940:24;;;:::i;:::-;21969:1;21932:38;;-1:-1:-1;21984:38:1;22003:8;21932:38;21984:18;:38::i;21698:372::-;-1:-1:-1;;;;;;;;;22083:40:1;;;22079:259;;22166:2;22147:8;:21;;22139:66;;;;-1:-1:-1;;;22139:66:1;;74118:2:39;22139:66:1;;;74100:21:39;;;74137:18;;;74130:30;74196:34;74176:18;;;74169:62;74248:18;;22139:66:1;73916:356:39;22139:66:1;22219:16;22254:15;22266:2;22263;22254:8;22219:16;22254:15;:::i;:::-;22246:24;;;:::i;:::-;22238:33;-1:-1:-1;22303:23:1;22238:33;22303:13;:23::i;22079:259::-;-1:-1:-1;;;;;;;;;22351:45:1;;;22347:344;;22439:2;22420:8;:21;;22412:71;;;;-1:-1:-1;;;22412:71:1;;74479:2:39;22412:71:1;;;74461:21:39;74518:2;74498:18;;;74491:30;74557:34;74537:18;;;74530:62;-1:-1:-1;;;74608:18:39;;;74601:35;74653:19;;22412:71:1;74277:401:39;22412:71:1;22497:13;22529:15;22541:2;22538;22529:8;22497:13;22529:15;:::i;:::-;22521:24;;;:::i;:::-;22513:33;;;-1:-1:-1;22560:16:1;22595:15;22607:2;22604;22595:8;22560:16;22595:15;:::i;:::-;22587:24;;;:::i;:::-;22579:33;;22560:52;;22644:35;22663:5;22670:8;22644:18;:35::i;:::-;22633:47;;;39300:14:39;;39293:22;22633:47:1;;;39275:41:39;39248:18;22633:47:1;39135:187:39;23579:312:1;23764:52;;-1:-1:-1;;;23764:52:1;;-1:-1:-1;;;;;42077:32:39;;23764:52:1;;;42059:51:39;23646:7:1;;-1:-1:-1;;;23683:25:1;23646:7;;;;311:5;;23764:43;;42032:18:39;;23764:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23745:71;;23858:8;23868:3;23873:9;23841:42;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;23833:51;;;:::i;:::-;23826:58;23579:312;-1:-1:-1;;;;;23579:312:1:o;25788:169::-;25843:14;25869:12;25884:23;25899:7;25884:14;:23::i;:::-;25938:11;;25788:169;-1:-1:-1;;;25788:169:1:o;26989:272::-;-1:-1:-1;;;;;27076:18:1;;27068:50;;;;-1:-1:-1;;;27068:50:1;;75585:2:39;27068:50:1;;;75567:21:39;75624:2;75604:18;;;75597:30;-1:-1:-1;;;75643:18:39;;;75636:49;75702:18;;27068:50:1;75383:343:39;27068:50:1;-1:-1:-1;;;;;27136:16:1;;27128:50;;;;-1:-1:-1;;;27128:50:1;;75933:2:39;27128:50:1;;;75915:21:39;75972:2;75952:18;;;75945:30;-1:-1:-1;;;75991:18:39;;;75984:51;76052:18;;27128:50:1;75731:345:39;27128:50:1;27188:25;27196:4;27202:2;27206:6;27188:7;:25::i;:::-;27243:2;-1:-1:-1;;;;;27228:26:1;27237:4;-1:-1:-1;;;;;27228:26:1;;27247:6;27228:26;;;;40591:25:39;;40579:2;40564:18;;40445:177;27228:26:1;;;;;;;;26989:272;;;:::o;30363:404::-;30454:24;30481:27;30493:5;30500:7;30481:11;:27::i;:::-;30454:54;;-1:-1:-1;;30522:16:1;:37;30518:243;;30603:6;30583:16;:26;;30575:68;;;;-1:-1:-1;;;30575:68:1;;76283:2:39;30575:68:1;;;76265:21:39;76322:2;76302:18;;;76295:30;76361:31;76341:18;;;76334:59;76410:18;;30575:68:1;76081:353:39;30575:68:1;30685:51;30694:5;30701:7;30729:6;30710:16;:25;30685:8;:51::i;:::-;30444:323;30363:404;;;:::o;25963:191::-;26033:14;26059:12;26074:30;26089:5;26096:7;26074:14;:30::i;:::-;26135:11;;25963:191;-1:-1:-1;;;;25963:191:1:o;29335:330::-;-1:-1:-1;;;;;29427:19:1;;29419:55;;;;-1:-1:-1;;;29419:55:1;;76641:2:39;29419:55:1;;;76623:21:39;76680:2;76660:18;;;76653:30;76719:25;76699:18;;;76692:53;76762:18;;29419:55:1;76439:347:39;29419:55:1;-1:-1:-1;;;;;29492:21:1;;29484:59;;;;-1:-1:-1;;;29484:59:1;;76993:2:39;29484:59:1;;;76975:21:39;77032:2;77012:18;;;77005:30;77071:27;77051:18;;;77044:55;77116:18;;29484:59:1;76791:349:39;29484:59:1;29553:21;29577:30;29592:5;29599:7;29577:14;:30::i;:::-;29628:29;;;;-1:-1:-1;;;29335:330:1:o;22748:769::-;22810:12;-1:-1:-1;;;;;;;;;22838:38:1;;;22834:194;;22892:12;22907:29;22925:10;22907:17;:29::i;:::-;22892:44;;22974:4;22968;22961:18;23012:4;23001:16;;;;;;39300:14:39;39293:22;39275:41;;39263:2;39248:18;;39135:187;22834:194:1;-1:-1:-1;;;;;;;;;23041:39:1;;;23037:196;;23096:12;23111:29;23129:10;23111:17;:29::i;:::-;23178:5;23165:19;;23206:16;;;23217:4;23206:16;;;39275:41:39;23096:44:1;;-1:-1:-1;39248:18:39;23206:16:1;39135:187:39;23037:196:1;-1:-1:-1;;;;;;;;;23246:41:1;;;23242:218;;23303:12;23318:29;23336:10;23318:17;:29::i;:::-;23401:11;;23434:15;;;39300:14:39;;39293:22;23434:15:1;;;39275:41:39;23401:11:1;;-1:-1:-1;23401:11:1;;39248:18:39;23434:15:1;39135:187:39;23242:218:1;23469:41;;-1:-1:-1;;;23469:41:1;;77347:2:39;23469:41:1;;;77329:21:39;77386:2;77366:18;;;77359:30;77425:33;77405:18;;;77398:61;77476:18;;23469:41:1;77145:355:39;26160:225:1;26215:17;26244:12;26259:31;26280:8;26259:13;:31::i;:::-;26244:46;;26300:19;26353:4;26340:17;;26374:4;26368:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26234:151;;26160:225;;;:::o;26391:173::-;26445:13;26470:12;26485:30;26505:8;26485:12;:30::i;27267:1094::-;-1:-1:-1;;;;;27359:18:1;;27351:50;;;;-1:-1:-1;;;27351:50:1;;75585:2:39;27351:50:1;;;75567:21:39;75624:2;75604:18;;;75597:30;-1:-1:-1;;;75643:18:39;;;75636:49;75702:18;;27351:50:1;75383:343:39;27351:50:1;-1:-1:-1;;;;;27419:16:1;;27411:50;;;;-1:-1:-1;;;27411:50:1;;75933:2:39;27411:50:1;;;75915:21:39;75972:2;75952:18;;;75945:30;-1:-1:-1;;;75991:18:39;;;75984:51;76052:18;;27411:50:1;75731:345:39;27411:50:1;27529:12;27544:30;27564:8;27544:12;:30::i;:::-;27627:11;;27529:45;;-1:-1:-1;;;;;;27657:13:1;;;;;;;27649:50;;;;-1:-1:-1;;;27649:50:1;;77707:2:39;27649:50:1;;;77689:21:39;77746:2;77726:18;;;77719:30;77785:26;77765:18;;;77758:54;77829:18;;27649:50:1;77505:348:39;27649:50:1;27789:10;-1:-1:-1;;;;;27789:18:1;;;27785:156;;27845:23;27859:8;27845:13;:23::i;:::-;-1:-1:-1;;;;;27831:37:1;:10;-1:-1:-1;;;;;27831:37:1;;:77;;;;27872:36;27891:4;27897:10;27872:18;:36::i;:::-;27823:107;;;;-1:-1:-1;;;27823:107:1;;78060:2:39;27823:107:1;;;78042:21:39;78099:2;78079:18;;;78072:30;-1:-1:-1;;;78118:18:39;;;78111:47;78175:18;;27823:107:1;77858:341:39;27823:107:1;27977:20;28000:34;28024:8;28000:16;:34::i;:::-;27977:57;;28076:1;28062:12;28055:23;28124:28;28155:31;28177:4;28183:2;28155:21;:31::i;:::-;28124:62;;28236:5;28214:20;28207:35;28307:2;28301:4;28294:16;28341:2;-1:-1:-1;;;;;28326:28:1;28335:4;-1:-1:-1;;;;;28326:28:1;;28345:8;28326:28;;;;40591:25:39;;40579:2;40564:18;;40445:177;28326:28:1;;;;;;;;27341:1020;;;;27267:1094;;;:::o;29671:567::-;29828:13;29844:19;29854:8;29844:9;:19::i;:::-;29828:35;-1:-1:-1;29881:10:1;-1:-1:-1;;;;;29881:19:1;;;;:60;;-1:-1:-1;29931:10:1;29904:23;29918:8;29904:13;:23::i;:::-;-1:-1:-1;;;;;29904:37:1;;29881:60;:101;;;;29945:37;29964:5;29971:10;29945:18;:37::i;:::-;29873:136;;;;-1:-1:-1;;;29873:136:1;;78406:2:39;29873:136:1;;;78388:21:39;78445:2;78425:18;;;78418:30;-1:-1:-1;;;78464:18:39;;;78457:52;78526:18;;29873:136:1;78204:346:39;29873:136:1;30020:12;30035:34;30059:8;30035:16;:34::i;:::-;30020:49;;30079:19;30101:10;:33;;30132:1;30101:33;;;30114:7;30101:33;30079:55;;30168:11;30162:4;30155:25;30213:7;-1:-1:-1;;;;;30197:34:1;30206:5;-1:-1:-1;;;;;30197:34:1;;30222:8;30197:34;;;;40591:25:39;;40579:2;40564:18;;40445:177;30197:34:1;;;;;;;;29749:489;;;29671:567;;;:::o;30773:376::-;30868:10;-1:-1:-1;;;;;30896:22:1;;;;;;:43;;;30934:5;-1:-1:-1;;;;;30922:17:1;:8;-1:-1:-1;;;;;30922:17:1;;;30896:43;30888:91;;;;-1:-1:-1;;;30888:91:1;;78757:2:39;30888:91:1;;;78739:21:39;78796:2;78776:18;;;78769:30;78835:34;78815:18;;;78808:62;-1:-1:-1;;;78886:18:39;;;78879:33;78929:19;;30888:91:1;78555:399:39;30888:91:1;30989:12;31004:38;31026:5;31033:8;31004:21;:38::i;:::-;30989:53;;31076:8;31070:4;31063:22;31123:8;-1:-1:-1;;;;;31101:41:1;31116:5;-1:-1:-1;;;;;31101:41:1;;31133:8;31101:41;;;;39300:14:39;39293:22;39275:41;;39263:2;39248:18;;39135:187;31101:41:1;;;;;;;;30842:307;;30773:376;;:::o;26570:187::-;26628:16;26656:12;26671:34;26695:8;26671:16;:34::i;26763:220::-;26841:19;26872:12;26887:38;26909:5;26916:8;26887:21;:38::i;23897:413::-;24095:50;;-1:-1:-1;;;24095:50:1;;-1:-1:-1;;;;;42077:32:39;;24095:50:1;;;42059:51:39;23979:7:1;;-1:-1:-1;;;24016:25:1;23979:7;;;;311:5;;24095:43;;42032:18:39;;24095:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24174:52;;-1:-1:-1;;;24174:52:1;;-1:-1:-1;;;;;42077:32:39;;24174:52:1;;;42059:51:39;24078:67:1;;-1:-1:-1;24155:16:1;;311:5;;24174:43;;42032:18:39;;24174:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24155:71;;24268:8;24278:3;24283:9;24294:7;24251:51;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;24243:60;;;:::i;:::-;24236:67;23897:413;-1:-1:-1;;;;;;;23897:413:1:o;24316:319::-;24508:52;;-1:-1:-1;;;24508:52:1;;-1:-1:-1;;;;;42077:32:39;;24508:52:1;;;42059:51:39;24386:7:1;;-1:-1:-1;;;24423:29:1;24386:7;;;;311:5;;24508:43;;42032:18:39;;24508:52:1;41913:203:39;24641:229:1;24821:41;;24707:7;;-1:-1:-1;;;24744:25:1;24707:7;;24821:41;;24744:25;;24707:7;;24853:8;;24821:41;;;:::i;:::-;;;;;;;;;;;;;24813:50;;;:::i;:::-;24806:57;24641:229;-1:-1:-1;;;;24641:229:1:o;24876:227::-;25054:41;;24941:7;;-1:-1:-1;;;24978:24:1;24941:7;;25054:41;;24978:24;;24941:7;;25086:8;;25054:41;;;:::i;25109:235::-;25295:41;;25178:7;;-1:-1:-1;;;25215:28:1;25178:7;;25295:41;;25215:28;;25178:7;;25327:8;;25295:41;;;:::i;25350:432::-;25564:50;;-1:-1:-1;;;25564:50:1;;-1:-1:-1;;;;;42077:32:39;;25564:50:1;;;42059:51:39;25440:7:1;;-1:-1:-1;;;25477:33:1;25440:7;;;;311:5;;25564:43;;42032:18:39;;25564:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25644:53;;-1:-1:-1;;;25644:53:1;;-1:-1:-1;;;;;42077:32:39;;25644:53:1;;;42059:51:39;25547:67:1;;-1:-1:-1;25624:17:1;;311:5;;25644:43;;42032:18:39;;25644:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25624:73;;25739:8;25749:3;25754:7;25763:10;25722:52;;;;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;372:331:39:-;477:9;488;530:8;518:10;515:24;512:44;;;552:1;549;542:12;512:44;581:6;571:8;568:20;565:40;;;601:1;598;591:12;565:40;-1:-1:-1;;627:23:39;;;672:25;;;;;-1:-1:-1;372:331:39:o;708:338::-;828:19;;-1:-1:-1;;;;;;865:29:39;;;914:1;906:10;;903:137;;;-1:-1:-1;;;;;;975:1:39;971:11;;;968:1;964:19;960:46;;;952:55;;948:82;;-1:-1:-1;903:137:39;;708:338;;;;:::o;1410:374::-;1531:19;;-1:-1:-1;;;;;;1568:40:39;;;1628:2;1620:11;;1617:161;;;-1:-1:-1;;;;;;1690:2:39;1686:12;;;;1683:1;1679:20;1675:58;;;1667:67;1663:105;;;;1410:374;-1:-1:-1;;1410:374:39:o;2147:131::-;-1:-1:-1;;;;;2222:31:39;;2212:42;;2202:70;;2268:1;2265;2258:12;2202:70;2147:131;:::o;2283:367::-;2351:6;2359;2412:2;2400:9;2391:7;2387:23;2383:32;2380:52;;;2428:1;2425;2418:12;2380:52;2467:9;2454:23;2486:31;2511:5;2486:31;:::i;:::-;2536:5;2614:2;2599:18;;;;2586:32;;-1:-1:-1;;;2283:367:39:o;3150:388::-;3218:6;3226;3279:2;3267:9;3258:7;3254:23;3250:32;3247:52;;;3295:1;3292;3285:12;3247:52;3334:9;3321:23;3353:31;3378:5;3353:31;:::i;:::-;3403:5;-1:-1:-1;3460:2:39;3445:18;;3432:32;3473:33;3432:32;3473:33;:::i;:::-;3525:7;3515:17;;;3150:388;;;;;:::o;3736:508::-;3813:6;3821;3829;3882:2;3870:9;3861:7;3857:23;3853:32;3850:52;;;3898:1;3895;3888:12;3850:52;3937:9;3924:23;3956:31;3981:5;3956:31;:::i;:::-;4006:5;-1:-1:-1;4063:2:39;4048:18;;4035:32;4076:33;4035:32;4076:33;:::i;:::-;3736:508;;4128:7;;-1:-1:-1;;;4208:2:39;4193:18;;;;4180:32;;3736:508::o;4249:247::-;4308:6;4361:2;4349:9;4340:7;4336:23;4332:32;4329:52;;;4377:1;4374;4367:12;4329:52;4416:9;4403:23;4435:31;4460:5;4435:31;:::i;:::-;4485:5;4249:247;-1:-1:-1;;;4249:247:39:o;4871:289::-;4913:3;4951:5;4945:12;4978:6;4973:3;4966:19;5034:6;5027:4;5020:5;5016:16;5009:4;5004:3;5000:14;4994:47;5086:1;5079:4;5070:6;5065:3;5061:16;5057:27;5050:38;5149:4;5142:2;5138:7;5133:2;5125:6;5121:15;5117:29;5112:3;5108:39;5104:50;5097:57;;;4871:289;;;;:::o;5165:622::-;5266:5;5260:12;5253:20;5246:28;5241:3;5234:41;5353:1;5349;5344:3;5340:11;5336:19;5328:4;5321:5;5317:16;5311:23;5307:49;5300:4;5295:3;5291:14;5284:73;5216:3;5403:4;5396:5;5392:16;5386:23;5441:4;5434;5429:3;5425:14;5418:28;5467:47;5508:4;5503:3;5499:14;5485:12;5467:47;:::i;:::-;5455:59;;5562:4;5555:5;5551:16;5545:23;5610:3;5604:4;5600:14;5593:4;5588:3;5584:14;5577:38;5638:39;5672:4;5656:14;5638:39;:::i;:::-;5730:4;5719:16;;;5713:23;-1:-1:-1;;;;;5709:49:39;5693:14;;;;5686:73;;;;-1:-1:-1;5624:53:39;;5165:622;-1:-1:-1;;5165:622:39:o;5792:774::-;5853:3;5884;5916:5;5910:12;5943:6;5938:3;5931:19;5975:4;5970:3;5966:14;5959:21;;6033:4;6023:6;6020:1;6016:14;6009:5;6005:26;6001:37;6072:4;6065:5;6061:16;6095:1;6105:435;6119:6;6116:1;6113:13;6105:435;;;6206:2;6202:7;6194:5;6188:4;6184:16;6180:30;6175:3;6168:43;6240:6;6234:13;6279:2;6273:9;6267:4;6260:23;6330:4;6326:2;6322:13;6316:20;6296:40;;6373:4;6366;6360;6356:15;6349:29;6399:57;6450:4;6444;6440:15;6426:12;6399:57;:::i;:::-;6491:4;6516:14;;;;6391:65;;-1:-1:-1;6479:17:39;;;;;-1:-1:-1;6141:1:39;6134:9;6105:435;;;-1:-1:-1;6556:4:39;;5792:774;-1:-1:-1;;;;;;5792:774:39:o;6835:1313::-;6889:3;6933:5;6927:12;6960:6;6955:3;6948:19;6988:49;7029:6;7024:3;7020:16;7006:12;6988:49;:::i;:::-;6976:61;;7085:4;7078:5;7074:16;7068:23;7133:3;7127:4;7123:14;7116:4;7111:3;7107:14;7100:38;7161:39;7195:4;7179:14;7161:39;:::i;:::-;7147:53;;;7248:4;7241:5;7237:16;7231:23;7263:50;7307:4;7302:3;7298:14;7282;-1:-1:-1;;;;;2817:31:39;2805:44;;2751:104;7263:50;;7361:4;7354:5;7350:16;7344:23;7411:3;7403:6;7399:16;7392:4;7387:3;7383:14;7376:40;7439:41;7473:6;7457:14;7439:41;:::i;:::-;7425:55;;;7528:4;7521:5;7517:16;7511:23;7543:47;7584:4;7579:3;7575:14;7559;4571:13;4564:21;4552:34;;4501:91;7543:47;;7638:4;7631:5;7627:16;7621:23;7653:48;7695:4;7690:3;7686:14;7670;2730:1;2719:20;2707:33;;2655:91;7653:48;;7749:4;7742:5;7738:16;7732:23;7764:47;7805:4;7800:3;7796:14;7780;4571:13;4564:21;4552:34;;4501:91;7764:47;;7859:4;7852:5;7848:16;7842:23;7909:3;7901:6;7897:16;7890:4;7885:3;7881:14;7874:40;7937:60;7990:6;7974:14;7937:60;:::i;:::-;7923:74;;;8045:6;8038:5;8034:18;8028:25;8062:58;8112:6;8107:3;8103:16;8087:14;6657:12;;6654:1;6643:27;;;6631:40;;6724:4;6713:16;;;6707:23;-1:-1:-1;;;;;6703:49:39;6687:14;;;6680:73;6816:4;6805:16;;;6799:23;6785:38;;6769:14;;6762:62;6571:259;8062:58;-1:-1:-1;8136:6:39;6835:1313;-1:-1:-1;;;6835:1313:39:o;8153:856::-;8214:3;8252:5;8246:12;8279:6;8274:3;8267:19;8311:4;8306:3;8302:14;8295:21;;8350:4;8343:5;8339:16;8373:1;8383:601;8397:6;8394:1;8391:13;8383:601;;;8456:13;;8540:9;;8537:1;8526:24;8514:37;;8605:4;8597:13;;;8591:20;-1:-1:-1;;;;;8587:46:39;;;8571:14;;;8564:70;8698:4;8690:13;;;8684:20;8677:28;8670:36;8654:14;;;8647:60;8771:4;8763:13;;;8757:20;8750:28;8743:36;8727:14;;;8720:60;8834:4;8826:13;;;8820:20;8816:46;8800:14;;;8793:70;;;;8621:3;8890:14;;;;8957:17;;;;8630:1;8412:9;8383:601;;;-1:-1:-1;9000:3:39;;8153:856;-1:-1:-1;;;;8153:856:39:o;9014:921::-;9080:3;9118:5;9112:12;9145:6;9140:3;9133:19;9177:4;9172:3;9168:14;9161:21;;9216:4;9209:5;9205:16;9239:1;9249:661;9263:6;9260:1;9257:13;9249:661;;;9328:6;9322:13;9366:1;9412:2;9406:9;9403:1;9392:24;9387:3;9380:37;9481:4;9477:2;9473:13;9467:20;9464:1;9453:35;9446:4;9441:3;9437:14;9430:59;9553:4;9549:2;9545:13;9539:20;9536:1;9525:35;9518:4;9513:3;9509:14;9502:59;9625:4;9621:2;9617:13;9611:20;9608:1;9597:35;9590:4;9585:3;9581:14;9574:59;9697:4;9693:2;9689:13;9683:20;9676:28;9669:36;9662:4;9657:3;9653:14;9646:60;9785:1;9781;9776:3;9772:11;9768:19;9760:4;9756:2;9752:13;9746:20;9742:46;9735:4;9730:3;9726:14;9719:70;9825:4;9820:3;9816:14;9802:28;;9850:10;9843:17;;;;9895:4;9887:6;9883:17;9873:27;;9285:1;9282;9278:9;9273:14;;9249:661;;9940:929;10003:3;10041:5;10035:12;10068:6;10063:3;10056:19;10100:4;10095:3;10091:14;10084:21;;10139:4;10132:5;10128:16;10162:1;10172:672;10186:6;10183:1;10180:13;10172:672;;;10251:6;10245:13;10289:1;10335:2;10329:9;10326:1;10315:24;10310:3;10303:37;10404:4;10400:2;10396:13;10390:20;10387:1;10376:35;10369:4;10364:3;10360:14;10353:59;10476:4;10472:2;10468:13;10462:20;10459:1;10448:35;10441:4;10436:3;10432:14;10425:59;10563:1;10559;10554:3;10550:11;10546:19;10538:4;10534:2;10530:13;10524:20;10520:46;10513:4;10508:3;10504:14;10497:70;10631:4;10627:2;10623:13;10617:20;10610:28;10603:36;10596:4;10591:3;10587:14;10580:60;10719:1;10715;10710:3;10706:11;10702:19;10694:4;10690:2;10686:13;10680:20;10676:46;10669:4;10664:3;10660:14;10653:70;10759:4;10754:3;10750:14;10736:28;;10784:10;10777:17;;;;10829:4;10821:6;10817:17;10807:27;;10208:1;10205;10201:9;10196:14;;10172:672;;10874:1384;10926:3;10970:5;10964:12;10997:6;10992:3;10985:19;11025:61;11078:6;11073:3;11069:16;11055:12;11025:61;:::i;:::-;11013:73;;11134:4;11127:5;11123:16;11117:23;11149:48;11191:4;11186:3;11182:14;11166;2730:1;2719:20;2707:33;;2655:91;11149:48;;11245:4;11238:5;11234:16;11228:23;11260:47;11301:4;11296:3;11292:14;11276;4571:13;4564:21;4552:34;;4501:91;11260:47;;11355:4;11348:5;11344:16;11338:23;11370:47;11411:4;11406:3;11402:14;11386;4571:13;4564:21;4552:34;;4501:91;11370:47;;11465:4;11458:5;11454:16;11448:23;11480:47;11521:4;11516:3;11512:14;11496;4571:13;4564:21;4552:34;;4501:91;11480:47;;11575:4;11568:5;11564:16;11558:23;11623:3;11617:4;11613:14;11606:4;11601:3;11597:14;11590:38;11651:58;11704:4;11688:14;11651:58;:::i;:::-;11637:72;;;11757:4;11750:5;11746:16;11740:23;11807:3;11799:6;11795:16;11788:4;11783:3;11779:14;11772:40;11835:65;11893:6;11877:14;11835:65;:::i;:::-;11821:79;;;11948:4;11941:5;11937:16;11931:23;11998:3;11990:6;11986:16;11979:4;11974:3;11970:14;11963:40;12026:62;12081:6;12065:14;12026:62;:::i;:::-;12012:76;;;12136:6;12129:5;12125:18;12119:25;12190:3;12182:6;12178:16;12169:6;12164:3;12160:16;12153:42;12211:41;12245:6;12229:14;12211:41;:::i;12263:346::-;12484:6;12481:1;12470:21;12459:9;12452:40;12528:2;12523;12512:9;12508:18;12501:30;12433:4;12548:55;12599:2;12588:9;12584:18;12576:6;12548:55;:::i;12614:118::-;12701:5;12698:1;12687:20;12680:5;12677:31;12667:59;;12722:1;12719;12712:12;12737:384;12803:6;12811;12864:2;12852:9;12843:7;12839:23;12835:32;12832:52;;;12880:1;12877;12870:12;12832:52;12919:9;12906:23;12938:31;12963:5;12938:31;:::i;:::-;12988:5;-1:-1:-1;13045:2:39;13030:18;;13017:32;13058:31;13017:32;13058:31;:::i;13126:1002::-;13369:6;13366:1;13355:21;13344:9;13337:40;13413:2;13408;13397:9;13393:18;13386:30;13318:4;13451:6;13445:13;13494:4;13489:2;13478:9;13474:18;13467:32;13522:62;13579:3;13568:9;13564:19;13550:12;13522:62;:::i;:::-;13508:76;;13652:2;13644:6;13640:15;13634:22;13631:1;13620:37;13615:2;13604:9;13600:18;13593:65;13740:1;13736;13731:3;13727:11;13723:19;13717:2;13709:6;13705:15;13699:22;13695:48;13689:3;13678:9;13674:19;13667:77;13813:2;13805:6;13801:15;13795:22;13792:1;13781:37;13775:3;13764:9;13760:19;13753:66;13868:3;13860:6;13856:16;13850:23;13943:2;13939:7;13927:9;13919:6;13915:22;13911:36;13904:4;13893:9;13889:20;13882:66;13971:41;14005:6;13989:14;13971:41;:::i;:::-;14086:3;14059:16;;;;14053:23;-1:-1:-1;;;;;14049:49:39;14043:3;14028:19;;;;14021:78;;;;-1:-1:-1;13957:55:39;;13126:1002;-1:-1:-1;;;13126:1002:39:o;14133:127::-;14194:10;14189:3;14185:20;14182:1;14175:31;14225:4;14222:1;14215:15;14249:4;14246:1;14239:15;14265:258;14338:4;14332:11;;;14370:17;;-1:-1:-1;;;;;14402:34:39;;14438:22;;;14399:62;14396:88;;;14464:18;;:::i;:::-;14500:4;14493:24;14265:258;:::o;14528:254::-;14601:2;14595:9;14643:4;14631:17;;-1:-1:-1;;;;;14663:34:39;;14699:22;;;14660:62;14657:88;;;14725:18;;:::i;14787:256::-;14860:2;14854:9;14902:6;14890:19;;-1:-1:-1;;;;;14924:34:39;;14960:22;;;14921:62;14918:88;;;14986:18;;:::i;15048:254::-;15121:2;15115:9;15163:4;15151:17;;-1:-1:-1;;;;;15183:34:39;;15219:22;;;15180:62;15177:88;;;15245:18;;:::i;15307:275::-;15378:2;15372:9;15443:2;15424:13;;-1:-1:-1;;15420:27:39;15408:40;;-1:-1:-1;;;;;15463:34:39;;15499:22;;;15460:62;15457:88;;;15525:18;;:::i;:::-;15561:2;15554:22;15307:275;;-1:-1:-1;15307:275:39:o;15587:183::-;15647:4;-1:-1:-1;;;;;15672:6:39;15669:30;15666:56;;;15702:18;;:::i;:::-;-1:-1:-1;15747:1:39;15743:14;15759:4;15739:25;;15587:183::o;15775:1102::-;15868:6;15876;15929:2;15917:9;15908:7;15904:23;15900:32;15897:52;;;15945:1;15942;15935:12;15897:52;15984:9;15971:23;16003:31;16028:5;16003:31;:::i;:::-;16053:5;-1:-1:-1;16109:2:39;16094:18;;16081:32;-1:-1:-1;;;;;16125:30:39;;16122:50;;;16168:1;16165;16158:12;16122:50;16191:22;;16244:4;16236:13;;16232:27;-1:-1:-1;16222:55:39;;16273:1;16270;16263:12;16222:55;16313:2;16300:16;16336:64;16352:47;16392:6;16352:47;:::i;:::-;16336:64;:::i;:::-;16422:3;16446:6;16441:3;16434:19;16478:2;16473:3;16469:12;16462:19;;16533:2;16523:6;16520:1;16516:14;16512:2;16508:23;16504:32;16490:46;;16559:7;16551:6;16548:19;16545:39;;;16580:1;16577;16570:12;16545:39;16612:2;16608;16604:11;16593:22;;16624:223;16640:6;16635:3;16632:15;16624:223;;;16722:3;16709:17;16739:33;16764:7;16739:33;:::i;:::-;16785:20;;16834:2;16657:12;;;;16825;;;;16624:223;;;16866:5;16856:15;;;;;;15775:1102;;;;;:::o;16882:343::-;17101:6;17098:1;17087:21;17076:9;17069:40;17145:2;17140;17129:9;17125:18;17118:30;17050:4;17165:54;17215:2;17204:9;17200:18;17192:6;17165:54;:::i;17230:553::-;17467:6;17464:1;17453:21;17442:9;17435:40;17511:2;17506;17495:9;17491:18;17484:30;17416:4;17549:6;17543:13;17592:2;17587;17576:9;17572:18;17565:30;17618:62;17675:3;17664:9;17660:19;17646:12;17618:62;:::i;:::-;17604:76;;17748:2;17740:6;17736:15;17730:22;17727:1;17716:37;17711:2;17700:9;17696:18;17689:65;17771:6;17763:14;;;17230:553;;;;;:::o;18063:954::-;18606:6;18603:1;18592:21;18581:9;18574:40;18650:3;18645:2;18634:9;18630:18;18623:31;18555:4;18677:65;18737:3;18726:9;18722:19;18714:6;18677:65;:::i;:::-;18790:9;18782:6;18778:22;18773:2;18762:9;18758:18;18751:50;18824:57;18874:6;18866;18824:57;:::i;:::-;18810:71;;18929:9;18921:6;18917:22;18912:2;18901:9;18897:18;18890:50;18957:54;19004:6;18996;18957:54;:::i;19022:326::-;19270:1;19259:21;;;19241:40;;19228:3;19213:19;;19290:52;19338:2;19323:18;;19315:6;6657:12;;6654:1;6643:27;;;6631:40;;6724:4;6713:16;;;6707:23;-1:-1:-1;;;;;6703:49:39;6687:14;;;6680:73;6816:4;6805:16;;;6799:23;6785:38;;6769:14;;6762:62;6571:259;19353:1235;19451:6;19459;19467;19520:2;19508:9;19499:7;19495:23;19491:32;19488:52;;;19536:1;19533;19526:12;19488:52;19575:9;19562:23;19594:31;19619:5;19594:31;:::i;:::-;19644:5;-1:-1:-1;19701:2:39;19686:18;;19673:32;19714:31;19673:32;19714:31;:::i;:::-;19764:7;-1:-1:-1;19822:2:39;19807:18;;19794:32;-1:-1:-1;;;;;19838:30:39;;19835:50;;;19881:1;19878;19871:12;19835:50;19904:22;;19957:4;19949:13;;19945:27;-1:-1:-1;19935:55:39;;19986:1;19983;19976:12;19935:55;20026:2;20013:16;20049:64;20065:47;20105:6;20065:47;:::i;20049:64::-;20135:3;20159:6;20154:3;20147:19;20191:2;20186:3;20182:12;20175:19;;20246:2;20236:6;20233:1;20229:14;20225:2;20221:23;20217:32;20203:46;;20272:7;20264:6;20261:19;20258:39;;;20293:1;20290;20283:12;20258:39;20325:2;20321;20317:11;20306:22;;20337:221;20353:6;20348:3;20345:15;20337:221;;;20435:3;20422:17;20452:31;20475:7;20452:31;:::i;:::-;20496:20;;20545:2;20370:12;;;;20536;;;;20337:221;;;20577:5;20567:15;;;;;;19353:1235;;;;;:::o;21065:186::-;21113:4;-1:-1:-1;;;;;21138:6:39;21135:30;21132:56;;;21168:18;;:::i;:::-;-1:-1:-1;21234:2:39;21213:15;-1:-1:-1;;21209:29:39;21240:4;21205:40;;21065:186::o;21256:1759::-;21365:6;21373;21381;21434:2;21422:9;21413:7;21409:23;21405:32;21402:52;;;21450:1;21447;21440:12;21402:52;21489:9;21476:23;21508:31;21533:5;21508:31;:::i;:::-;21558:5;-1:-1:-1;21615:2:39;21600:18;;21587:32;21628:31;21587:32;21628:31;:::i;:::-;21678:7;-1:-1:-1;21736:2:39;21721:18;;21708:32;-1:-1:-1;;;;;21752:30:39;;21749:50;;;21795:1;21792;21785:12;21749:50;21818:22;;21871:4;21863:13;;21859:27;-1:-1:-1;21849:55:39;;21900:1;21897;21890:12;21849:55;21940:2;21927:16;21963:64;21979:47;22019:6;21979:47;:::i;21963:64::-;22049:3;22073:6;22068:3;22061:19;22105:2;22100:3;22096:12;22089:19;;22160:2;22150:6;22147:1;22143:14;22139:2;22135:23;22131:32;22117:46;;22186:7;22178:6;22175:19;22172:39;;;22207:1;22204;22197:12;22172:39;22239:2;22235;22231:11;22251:734;22267:6;22262:3;22259:15;22251:734;;;22353:3;22340:17;-1:-1:-1;;;;;22376:11:39;22373:35;22370:55;;;22421:1;22418;22411:12;22370:55;22448:20;;22503:2;22495:11;;22491:25;-1:-1:-1;22481:53:39;;22530:1;22527;22520:12;22481:53;22584:2;22580;22576:11;22563:25;22616:54;22632:37;22660:8;22632:37;:::i;22616:54::-;22683:25;;;22727:35;22735:17;;;22727:35;22724:48;-1:-1:-1;22721:68:39;;;22785:1;22782;22775:12;22721:68;22846:8;22841:2;22837;22833:11;22828:2;22819:7;22815:16;22802:53;22908:1;22903:2;22892:8;22883:7;22879:22;22875:31;22868:42;22935:7;22930:3;22923:20;;;;22972:2;22967:3;22963:12;22956:19;;22293:2;22288:3;22284:12;22277:19;;22251:734;;;22255:3;23004:5;22994:15;;;;;;21256:1759;;;;;:::o;23020:787::-;23206:4;23254:2;23243:9;23239:18;23298:6;23295:1;23284:21;23273:9;23266:40;23356:6;23353:1;23342:21;23337:2;23326:9;23322:18;23315:49;23400:2;23395;23384:9;23380:18;23373:30;23423:6;23458;23452:13;23489:6;23481;23474:22;23527:3;23516:9;23512:19;23505:26;;23566:2;23558:6;23554:15;23540:29;;23587:1;23597:184;23611:6;23608:1;23605:13;23597:184;;;23686:13;;23683:1;23672:28;23660:41;;23730:2;23756:15;;;;23721:12;;;;23633:1;23626:9;23597:184;;;-1:-1:-1;23798:3:39;;23020:787;-1:-1:-1;;;;;;;23020:787:39:o;23812:529::-;23889:6;23897;23905;23958:2;23946:9;23937:7;23933:23;23929:32;23926:52;;;23974:1;23971;23964:12;23926:52;24013:9;24000:23;24032:31;24057:5;24032:31;:::i;:::-;24082:5;-1:-1:-1;24139:2:39;24124:18;;24111:32;24152:33;24111:32;24152:33;:::i;:::-;24204:7;-1:-1:-1;24263:2:39;24248:18;;24235:32;24276:33;24235:32;24276:33;:::i;:::-;24328:7;24318:17;;;23812:529;;;;;:::o;24346:380::-;24425:1;24421:12;;;;24468;;;24489:61;;24543:4;24535:6;24531:17;24521:27;;24489:61;24596:2;24588:6;24585:14;24565:18;24562:38;24559:161;;24642:10;24637:3;24633:20;24630:1;24623:31;24677:4;24674:1;24667:15;24705:4;24702:1;24695:15;24559:161;;24346:380;;;:::o;24731:680::-;24784:3;24825:5;24819:12;24854:36;24880:9;24854:36;:::i;:::-;24921:1;24906:17;;24932:133;;;;25079:1;25074:331;;;;24899:506;;24932:133;-1:-1:-1;;24965:24:39;;24953:37;;25038:14;;25031:22;25019:35;;25010:45;;;-1:-1:-1;24932:133:39;;25074:331;25105:5;25102:1;25095:16;25152:4;25149:1;25139:18;25179:1;25193:166;25207:6;25204:1;25201:13;25193:166;;;25287:14;;25274:11;;;25267:35;25343:1;25330:15;;;;25229:4;25222:12;25193:166;;;25197:3;;25388:6;25383:3;25379:16;25372:23;;24899:506;;;;24731:680;;;;:::o;25416:202::-;25546:3;25571:41;25608:3;25600:6;25571:41;:::i;26427:739::-;26477:3;26518:5;26512:12;26547:36;26573:9;26547:36;:::i;:::-;26592:19;;;26642:1;26627:17;;26653:150;;;;26817:1;26812:348;;;;26620:540;;26653:150;26716:3;26712:8;26701:9;26697:24;26690:4;26685:3;26681:14;26674:48;26788:4;26776:6;26769:14;26762:22;26759:1;26755:30;26750:3;26746:40;26742:51;26735:58;;26653:150;;26812:348;26843:5;26840:1;26833:16;26890:4;26887:1;26877:18;26917:1;26931:177;26945:6;26942:1;26939:13;26931:177;;;27042:7;27036:14;27029:4;27025:1;27020:3;27016:11;27012:22;27005:46;27092:1;27083:7;27079:15;27068:26;;26967:4;26964:1;26960:12;26955:17;;26931:177;;;27132:11;;27145:4;27128:22;;-1:-1:-1;;26620:540:39;;;26427:739;;;;:::o;27314:1237::-;27383:3;27414;27446:5;27440:12;27473:6;27468:3;27461:19;27505:4;27500:3;27496:14;27489:21;;27563:4;27553:6;27550:1;27546:14;27539:5;27535:26;27531:37;27587:5;27584:1;27577:16;27629:4;27626:1;27616:18;27652:1;27662:863;27676:6;27673:1;27670:13;27662:863;;;27741:16;;;-1:-1:-1;;27737:30:39;27725:43;;27794:13;;27781:27;;27845:4;27838;27828:15;;27821:29;;;27898:1;27886:14;;27880:21;27967:4;27952:20;;27945:28;27938:36;27921:15;;;27914:61;;;;28020:1;28016:17;-1:-1:-1;;;;;28012:43:39;28005:4;27995:15;;27988:68;28043:3;28086:4;28076:15;;28069:29;28125:60;28180:3;28170:14;;28163:4;28151:17;;28125:60;:::i;:::-;28226:17;;;-1:-1:-1;;28222:31:39;28215:4;28205:15;;28198:56;28281:52;28230:6;28319:4;28307:17;;28281:52;:::i;:::-;28391:1;28379:14;;28373:21;-1:-1:-1;;;;;28369:47:39;28363:3;28353:14;;;;28346:71;;;;-1:-1:-1;28510:4:39;28501:14;;;;;28479:1;28467:14;;;;28413:1;27691:9;27662:863;;28856:1069;28948:6;28943:3;28936:19;28918:3;28976:50;29018:6;29013:3;29009:16;29002:5;28976:50;:::i;:::-;29068:3;29062:4;29058:14;29051:4;29046:3;29042:14;29035:38;29096:49;29140:4;29133;29126:5;29122:16;29096:49;:::i;:::-;29082:63;;29174:67;29234:4;29227:5;29223:16;29217:23;-1:-1:-1;;;;;27267:36:39;;27171:138;29174:67;-1:-1:-1;;;;;2817:31:39;29292:4;29283:14;;2805:44;29330:16;;;29323:4;29314:14;;29307:40;29370:51;29334:6;29407:4;29396:16;;29370:51;:::i;:::-;29356:65;;29464:4;29457:5;29453:16;29447:23;29479:53;29526:4;29521:3;29517:14;29510:4;29499:9;29495:20;4571:13;4564:21;4552:34;;4501:91;29479:53;29576:1;29572:17;;;29569:1;29558:32;29601:4;29592:14;;2707:33;29616:62;29672:4;29667:3;29663:14;29656:4;29644:9;29640:2;29636:18;29632:29;4571:13;4564:21;4552:34;;4501:91;29616:62;;29722:3;29714:6;29710:16;29703:4;29698:3;29694:14;29687:40;29750:70;29813:6;29806:4;29799:5;29795:16;29750:70;:::i;:::-;29736:84;;29829:68;29889:6;29884:3;29880:16;29873:4;29866:5;29862:16;28641:12;;28685:1;28674:24;;;28662:37;;28739:2;28735:18;;;-1:-1:-1;;;;;28731:44:39;28724:4;28715:14;;28708:68;28772:1;28826:16;;;28820:23;28806:38;;;28792:12;;28785:60;28556:295;29930:915;29999:3;30037:5;30031:12;30064:6;30059:3;30052:19;30096:4;30091:3;30087:14;30080:21;;30120:5;30117:1;30110:16;30162:4;30159:1;30149:18;30185:1;30195:625;30209:6;30206:1;30203:13;30195:625;;;30307:13;;30356:1;30345:24;;;30333:37;;30414:2;30410:18;;;-1:-1:-1;;;;;30406:44:39;;;30399:4;30390:14;;30383:68;30507:3;30503:19;;;30524:4;30499:30;;;30492:38;30485:46;30471:12;;;30464:68;;;;30590:3;30586:19;;;;30582:30;30575:38;30568:46;30561:4;30552:14;;30545:70;30447:1;30661:14;;;30655:21;30651:47;;;30644:4;30635:14;;30628:71;30438:3;30726:14;;;;30805:4;30793:17;;;;30224:9;30195:625;;30850:1014;30924:3;30962:5;30956:12;30989:6;30984:3;30977:19;31021:4;31016:3;31012:14;31005:21;;31045:5;31042:1;31035:16;31087:4;31084:1;31074:18;31110:1;31120:719;31134:6;31131:1;31128:13;31120:719;;;31201:1;31238:6;31232:13;31284:9;31281:1;31270:24;31265:3;31258:37;31353:9;31349:2;31345:18;31342:1;31331:33;31324:4;31319:3;31315:14;31308:57;31422:9;31417:3;31413:19;31410:1;31399:34;31394:2;31389:3;31385:12;31378:56;31493:9;31488:3;31484:19;31481:1;31470:34;31463:4;31458:3;31454:14;31447:58;;31555:1;31547:6;31543:14;31537:21;31571:54;31620:3;31615;31611:13;31604:4;31591:11;31587:22;4571:13;4564:21;4552:34;;4501:91;31571:54;31665:1;31661:19;-1:-1:-1;;;;;31657:45:39;31713:4;31704:14;;2805:44;-1:-1:-1;31755:3:39;31746:13;;;;31824:4;31812:17;;;;;31156:1;31149:9;31120:719;;31869:1092;31940:3;31978:5;31972:12;32005:6;32000:3;31993:19;32037:4;32032:3;32028:14;32021:21;;32061:5;32058:1;32051:16;32103:4;32100:1;32090:18;32126:1;32136:800;32150:6;32147:1;32144:13;32136:800;;;32217:1;32254:6;32248:13;32300:9;32297:1;32286:24;32281:3;32274:37;32369:9;32365:2;32361:18;32358:1;32347:33;32340:4;32335:3;32331:14;32324:57;32438:9;32433:3;32429:19;32426:1;32415:34;32410:2;32405:3;32401:12;32394:56;;32500:1;32492:6;32488:14;32482:21;32573:1;32569;32564:3;32560:11;32556:19;32543:11;32539:37;32532:4;32527:3;32523:14;32516:61;32590:64;32649:3;32644;32640:13;32633:4;32619:11;32614:3;32610:21;32606:32;4571:13;4564:21;4552:34;;4501:91;32590:64;-1:-1:-1;;32748:4:39;32736:17;;32730:24;-1:-1:-1;;;;;27267:36:39;32810:3;32801:13;;2805:44;32851:4;32842:14;;;;32921:4;32909:17;;;;32172:1;32165:9;32136:800;;32966:1416;33193:4;33185:6;33181:17;33170:9;33163:36;33235:2;33230;33219:9;33215:18;33208:30;33274:6;33269:2;33258:9;33254:18;33247:34;33144:4;33304:66;33365:3;33354:9;33350:19;33342:6;33304:66;:::i;:::-;33414:4;33402:17;;33396:24;33457:1;33446:24;;;33487:2;33472:18;;2707:33;33500:67;33562:3;33551:9;33547:19;33540:4;33528:9;33524:2;33520:18;33516:29;4571:13;4564:21;4552:34;;4501:91;33500:67;33576;33638:3;33627:9;33623:19;33616:4;33604:9;33600:2;33596:18;33592:29;4571:13;4564:21;4552:34;;4501:91;33576:67;33652;33714:3;33703:9;33699:19;33692:4;33680:9;33676:2;33672:18;33668:29;4571:13;4564:21;4552:34;;4501:91;33652:67;-1:-1:-1;33760:22:39;;;-1:-1:-1;;33756:36:39;33750:3;33735:19;;33728:65;33816:71;33764:6;33873:4;33861:17;;33816:71;:::i;:::-;33928:22;;;-1:-1:-1;;33924:36:39;33918:3;33903:19;;33896:65;33802:85;-1:-1:-1;33984:76:39;33802:85;34046:4;34034:17;;33984:76;:::i;:::-;34104:22;;;-1:-1:-1;;34100:36:39;34091:6;34076:22;;34069:68;33970:90;-1:-1:-1;34160:73:39;33970:90;34219:4;34207:17;;34160:73;:::i;:::-;34274:22;;;-1:-1:-1;;34270:36:39;34264:3;34249:19;;34242:65;34146:87;-1:-1:-1;34324:52:39;34146:87;34362:4;34350:17;;34324:52;:::i;34795:967::-;35329:4;35321:6;35317:17;35306:9;35299:36;35371:3;35366:2;35355:9;35351:18;35344:31;35280:4;35398:73;35466:3;35455:9;35451:19;35443:6;35398:73;:::i;:::-;35519:9;35511:6;35507:22;35502:2;35491:9;35487:18;35480:50;35553:65;35611:6;35603;35553:65;:::i;:::-;35539:79;;35666:9;35658:6;35654:22;35649:2;35638:9;35634:18;35627:50;35694:62;35749:6;35741;35694:62;:::i;37287:338::-;37544:4;37532:17;;37514:36;;37501:3;37486:19;;37559:60;37615:2;37600:18;;37592:6;28641:12;;28685:1;28674:24;;;28662:37;;28739:2;28735:18;;;-1:-1:-1;;;;;28731:44:39;28724:4;28715:14;;28708:68;28772:1;28826:16;;;28820:23;28806:38;;;28792:12;;28785:60;28556:295;38875:255;38995:19;;39034:2;39026:11;;39023:101;;;-1:-1:-1;;39095:2:39;39091:12;;;39088:1;39084:20;39080:33;39069:45;38875:255;;;;:::o;39738:347::-;39940:2;39922:21;;;39979:2;39959:18;;;39952:30;40018:25;40013:2;39998:18;;39991:53;40076:2;40061:18;;39738:347::o;40627:138::-;40706:13;;40728:31;40706:13;40728:31;:::i;:::-;40627:138;;;:::o;40770:251::-;40840:6;40893:2;40881:9;40872:7;40868:23;40864:32;40861:52;;;40909:1;40906;40899:12;40861:52;40941:9;40935:16;40960:31;40985:5;40960:31;:::i;41026:127::-;41087:10;41082:3;41078:20;41075:1;41068:31;41118:4;41115:1;41108:15;41142:4;41139:1;41132:15;41158:127;41219:10;41214:3;41210:20;41207:1;41200:31;41250:4;41247:1;41240:15;41274:4;41271:1;41264:15;41290:125;41355:9;;;41376:10;;;41373:36;;;41389:18;;:::i;41780:128::-;41847:9;;;41868:11;;;41865:37;;;41882:18;;:::i;42121:301::-;42250:3;42288:6;42282:13;42334:6;42327:4;42319:6;42315:17;42310:3;42304:37;42396:1;42360:16;;42385:13;;;-1:-1:-1;42360:16:39;42121:301;-1:-1:-1;42121:301:39:o;42783:134::-;42860:13;;42882:29;42860:13;42882:29;:::i;42922:514::-;42976:5;43029:3;43022:4;43014:6;43010:17;43006:27;42996:55;;43047:1;43044;43037:12;42996:55;43080:6;43074:13;43119:4;43111:6;43107:17;43148:1;43169:52;43185:35;43213:6;43185:35;:::i;43169:52::-;43158:63;;43246:6;43237:7;43230:23;43286:3;43277:6;43272:3;43268:16;43265:25;43262:45;;;43303:1;43300;43293:12;43262:45;43347:6;43342:3;43335:4;43326:7;43322:18;43316:38;43403:1;43374:20;;;43396:4;43370:31;43363:42;;;;-1:-1:-1;43378:7:39;42922:514;-1:-1:-1;;;42922:514:39:o;43441:164::-;43517:13;;43566;;43559:21;43549:32;;43539:60;;43595:1;43592;43585:12;43610:2123;43683:5;43736:3;43729:4;43721:6;43717:17;43713:27;43703:55;;43754:1;43751;43744:12;43703:55;43787:6;43781:13;43814:64;43830:47;43870:6;43830:47;:::i;43814:64::-;43902:3;43926:6;43921:3;43914:19;43958:4;43953:3;43949:14;43942:21;;44019:4;44009:6;44006:1;44002:14;43994:6;43990:27;43986:38;43972:52;;44047:3;44039:6;44036:15;44033:35;;;44064:1;44061;44054:12;44033:35;44100:4;44092:6;44088:17;44114:1588;44130:6;44125:3;44122:15;44114:1588;;;44211:3;44205:10;-1:-1:-1;;;;;44234:11:39;44231:35;44228:55;;;44279:1;44276;44269:12;44228:55;44306:24;;44378:4;44354:12;;;-1:-1:-1;;44350:26:39;44346:37;44343:57;;;44396:1;44393;44386:12;44343:57;44426:23;;:::i;:::-;44516:4;44508:13;;44502:20;44535:22;;44600:4;44592:13;;44586:20;-1:-1:-1;;;;;44622:32:39;;44619:52;;;44667:1;44664;44657:12;44619:52;44717:4;44706:8;44702:2;44698:17;44694:28;44684:38;;;44756:4;44751:2;44746:3;44742:12;44738:23;44735:43;;;44774:1;44771;44764:12;44735:43;44806:23;;:::i;:::-;44858:30;44885:2;44858:30;:::i;:::-;44849:7;44842:47;44931:4;44927:2;44923:13;44917:20;44950:33;44975:7;44950:33;:::i;:::-;45016:4;45003:18;;44996:35;45074:4;45066:13;;45060:20;-1:-1:-1;;;;;45096:32:39;;45093:52;;;45141:1;45138;45131:12;45093:52;45185;45233:3;45222:8;45218:2;45214:17;45185:52;:::i;:::-;45178:4;45169:7;45165:18;45158:80;;45281:2;45277;45273:11;45267:18;-1:-1:-1;;;;;45304:8:39;45301:32;45298:52;;;45346:1;45343;45336:12;45298:52;45388;45436:3;45425:8;45421:2;45417:17;45388:52;:::i;:::-;45383:2;45374:7;45370:16;45363:78;;45483:3;45479:2;45475:12;45469:19;45454:34;;45501:33;45526:7;45501:33;:::i;:::-;45567:3;45554:17;;45547:34;;;;45612:4;45601:16;;;45594:33;;;;45640:18;;45678:14;;;;44147;44114:1588;;;-1:-1:-1;45720:7:39;43610:2123;-1:-1:-1;;;;;43610:2123:39:o;45738:762::-;45802:5;45850:4;45838:9;45833:3;45829:19;45825:30;45822:50;;;45868:1;45865;45858:12;45822:50;45921:2;45915:9;45963:4;45951:17;;-1:-1:-1;;;;;45983:34:39;;46019:22;;;45980:62;45977:88;;;46045:18;;:::i;:::-;46085:10;46081:2;46074:22;;46114:6;46105:15;;46150:9;46144:16;46169:31;46192:7;46169:31;:::i;:::-;46209:23;;46277:2;46262:18;;46256:25;46290:33;46256:25;46290:33;:::i;:::-;46351:2;46339:15;;46332:32;46409:2;46394:18;;46388:25;46422:31;46388:25;46422:31;:::i;:::-;46481:2;46469:15;;;;46462:32;45738:762;;-1:-1:-1;;45738:762:39:o;46505:1418::-;46574:5;46622:6;46610:9;46605:3;46601:19;46597:32;46594:52;;;46642:1;46639;46632:12;46594:52;46664:23;;:::i;:::-;46655:32;;46716:9;46710:16;-1:-1:-1;;;;;46741:6:39;46738:30;46735:50;;;46781:1;46778;46771:12;46735:50;46808:57;46861:3;46852:6;46841:9;46837:22;46808:57;:::i;:::-;46801:5;46794:72;;46912:2;46901:9;46897:18;46891:25;-1:-1:-1;;;;;46931:8:39;46928:32;46925:52;;;46973:1;46970;46963:12;46925:52;47009:59;47064:3;47053:8;47042:9;47038:24;47009:59;:::i;:::-;47004:2;46997:5;46993:14;46986:83;;47101:49;47146:2;47135:9;47131:18;47101:49;:::i;:::-;47096:2;47089:5;47085:14;47078:73;47197:2;47186:9;47182:18;47176:25;-1:-1:-1;;;;;47216:8:39;47213:32;47210:52;;;47258:1;47255;47248:12;47210:52;47294:59;47349:3;47338:8;47327:9;47323:24;47294:59;:::i;:::-;47289:2;47282:5;47278:14;47271:83;;47387:47;47429:3;47418:9;47414:19;47387:47;:::i;:::-;47381:3;47374:5;47370:15;47363:72;47468:48;47511:3;47500:9;47496:19;47468:48;:::i;:::-;47462:3;47455:5;47451:15;47444:73;47550:47;47592:3;47581:9;47577:19;47550:47;:::i;:::-;47544:3;47537:5;47533:15;47526:72;47644:3;47633:9;47629:19;47623:26;-1:-1:-1;;;;;47664:8:39;47661:32;47658:52;;;47706:1;47703;47696:12;47658:52;47743:78;47817:3;47806:8;47795:9;47791:24;47743:78;:::i;:::-;47737:3;47730:5;47726:15;47719:103;;47855:61;47912:3;47906;47895:9;47891:19;47855:61;:::i;:::-;47849:3;47842:5;47838:15;47831:86;46505:1418;;;;:::o;47928:1329::-;48001:5;48054:3;48047:4;48039:6;48035:17;48031:27;48021:55;;48072:1;48069;48062:12;48021:55;48105:6;48099:13;48132:64;48148:47;48188:6;48148:47;:::i;48132:64::-;48220:3;48244:6;48239:3;48232:19;48276:4;48271:3;48267:14;48260:21;;48340:4;48332;48324:6;48320:17;48312:6;48308:30;48304:41;48290:55;;48368:3;48360:6;48357:15;48354:35;;;48385:1;48382;48375:12;48354:35;48421:4;48413:6;48409:17;48435:791;48451:6;48446:3;48443:15;48435:791;;;48529:4;48523:3;48518;48514:13;48510:24;48507:44;;;48547:1;48544;48537:12;48507:44;48577:23;;:::i;:::-;48634:3;48628:10;48651:31;48674:7;48651:31;:::i;:::-;48695:22;;48760:4;48751:14;;48745:21;48779:33;48745:21;48779:33;:::i;:::-;48843:4;48832:16;;48825:33;48894:40;48930:2;48921:12;;48894:40;:::i;:::-;48889:2;48882:5;48878:14;48871:64;48971:40;49007:2;49002:3;48998:12;48971:40;:::i;:::-;48966:2;48959:5;48955:14;48948:64;49055:3;49050;49046:13;49040:20;49073:33;49098:7;49073:33;:::i;:::-;49137:3;49126:15;;49119:32;49164:18;;49211:4;49202:14;;;;48477:4;48468:14;48435:791;;49262:1527;49340:5;49393:3;49386:4;49378:6;49374:17;49370:27;49360:55;;49411:1;49408;49401:12;49360:55;49444:6;49438:13;49471:64;49487:47;49527:6;49487:47;:::i;49471:64::-;49559:3;49583:6;49578:3;49571:19;49615:4;49610:3;49606:14;49599:21;;49679:4;49671;49663:6;49659:17;49651:6;49647:30;49643:41;49629:55;;49707:3;49699:6;49696:15;49693:35;;;49724:1;49721;49714:12;49693:35;49760:4;49752:6;49748:17;49774:984;49790:6;49785:3;49782:15;49774:984;;;49868:4;49862:3;49857;49853:13;49849:24;49846:44;;;49886:1;49883;49876:12;49846:44;49916:23;;:::i;:::-;49973:3;49967:10;49990:31;50013:7;49990:31;:::i;:::-;50034:22;;50099:4;50090:14;;50084:21;50118:31;50084:21;50118:31;:::i;:::-;50180:4;50169:16;;50162:33;50238:2;50229:12;;50223:19;50255:31;50223:19;50255:31;:::i;:::-;50317:2;50306:14;;50299:31;50373:2;50364:12;;50358:19;50390:31;50358:19;50390:31;:::i;:::-;50452:2;50441:14;;50434:31;50502:41;50538:3;50529:13;;50502:41;:::i;:::-;50496:3;50489:5;50485:15;50478:66;50587:3;50582;50578:13;50572:20;50605:33;50630:7;50605:33;:::i;:::-;50669:3;50658:15;;50651:32;50696:18;;50743:4;50734:14;;;;49816:4;49807:14;49774:984;;50794:1526;50869:5;50922:3;50915:4;50907:6;50903:17;50899:27;50889:55;;50940:1;50937;50930:12;50889:55;50973:6;50967:13;51000:64;51016:47;51056:6;51016:47;:::i;51000:64::-;51088:3;51112:6;51107:3;51100:19;51144:4;51139:3;51135:14;51128:21;;51208:4;51200;51192:6;51188:17;51180:6;51176:30;51172:41;51158:55;;51236:3;51228:6;51225:15;51222:35;;;51253:1;51250;51243:12;51222:35;51289:4;51281:6;51277:17;51303:986;51319:6;51314:3;51311:15;51303:986;;;51397:4;51391:3;51386;51382:13;51378:24;51375:44;;;51415:1;51412;51405:12;51375:44;51445:23;;:::i;:::-;51502:3;51496:10;51519:31;51542:7;51519:31;:::i;:::-;51563:22;;51628:4;51619:14;;51613:21;51647:31;51613:21;51647:31;:::i;:::-;51709:4;51698:16;;51691:33;51767:2;51758:12;;51752:19;51784:31;51752:19;51784:31;:::i;:::-;51846:2;51835:14;;51828:31;51902:2;51893:12;;51887:19;51919:33;51887:19;51919:33;:::i;:::-;51983:2;51972:14;;51965:31;52033:41;52069:3;52060:13;;52033:41;:::i;:::-;52027:3;52020:5;52016:15;52009:66;52118:3;52113;52109:13;52103:20;52136:33;52161:7;52136:33;:::i;:::-;52200:3;52189:15;;52182:32;52227:18;;52274:4;52265:14;;;;51345:4;51336:14;51303:986;;52325:1910;52429:6;52437;52490:2;52478:9;52469:7;52465:23;52461:32;52458:52;;;52506:1;52503;52496:12;52458:52;52538:9;52532:16;52557:29;52580:5;52557:29;:::i;:::-;52654:2;52639:18;;52633:25;52605:5;;-1:-1:-1;;;;;;52670:30:39;;52667:50;;;52713:1;52710;52703:12;52667:50;52736:22;;52792:6;52774:16;;;52770:29;52767:49;;;52812:1;52809;52802:12;52767:49;52840:23;;:::i;:::-;52894:2;52888:9;-1:-1:-1;;;;;52912:8:39;52909:32;52906:52;;;52954:1;52951;52944:12;52906:52;52983:68;53043:7;53032:8;53028:2;53024:17;52983:68;:::i;:::-;52974:7;52967:85;;53086:40;53122:2;53118;53114:11;53086:40;:::i;:::-;53081:2;53072:7;53068:16;53061:66;53161:39;53196:2;53192;53188:11;53161:39;:::i;:::-;53156:2;53147:7;53143:16;53136:65;53235:39;53270:2;53266;53262:11;53235:39;:::i;:::-;53230:2;53221:7;53217:16;53210:65;53310:40;53345:3;53341:2;53337:12;53310:40;:::i;:::-;53304:3;53295:7;53291:17;53284:67;53390:3;53386:2;53382:12;53376:19;-1:-1:-1;;;;;53410:8:39;53407:32;53404:52;;;53452:1;53449;53442:12;53404:52;53491:75;53558:7;53547:8;53543:2;53539:17;53491:75;:::i;:::-;53485:3;53476:7;53472:17;53465:102;;53606:3;53602:2;53598:12;53592:19;-1:-1:-1;;;;;53626:8:39;53623:32;53620:52;;;53668:1;53665;53658:12;53620:52;53707:80;53779:7;53768:8;53764:2;53760:17;53707:80;:::i;:::-;53701:3;53692:7;53688:17;53681:107;;53827:3;53823:2;53819:12;53813:19;-1:-1:-1;;;;;53847:8:39;53844:32;53841:52;;;53889:1;53886;53879:12;53841:52;53928:77;53997:7;53986:8;53982:2;53978:17;53928:77;:::i;:::-;53922:3;53913:7;53909:17;53902:104;;54045:3;54041:2;54037:12;54031:19;-1:-1:-1;;;;;54065:8:39;54062:32;54059:52;;;54107:1;54104;54097:12;54059:52;54146:56;54194:7;54183:8;54179:2;54175:17;54146:56;:::i;:::-;54140:3;54131:7;54127:17;54120:83;;54222:7;54212:17;;;;52325:1910;;;;;:::o;56746:326::-;56820:6;56828;56881:2;56869:9;56860:7;56856:23;56852:32;56849:52;;;56897:1;56894;56887:12;56849:52;56929:9;56923:16;56948:29;56971:5;56948:29;:::i;:::-;56996:5;-1:-1:-1;57020:46:39;57062:2;57047:18;;57020:46;:::i;:::-;57010:56;;56746:326;;;;;:::o;58657:273::-;58725:6;58778:2;58766:9;58757:7;58753:23;58749:32;58746:52;;;58794:1;58791;58784:12;58746:52;58826:9;58820:16;58876:4;58869:5;58865:16;58858:5;58855:27;58845:55;;58896:1;58893;58886:12;60209:230;60279:6;60332:2;60320:9;60311:7;60307:23;60303:32;60300:52;;;60348:1;60345;60338:12;60300:52;-1:-1:-1;60393:16:39;;60209:230;-1:-1:-1;60209:230:39:o;61214:409::-;61289:6;61297;61350:2;61338:9;61329:7;61325:23;61321:32;61318:52;;;61366:1;61363;61356:12;61318:52;61398:9;61392:16;61417:29;61440:5;61417:29;:::i;:::-;61465:5;61455:15;;;61515:2;61504:9;61500:18;61494:25;61564:7;61561:1;61550:22;61541:7;61538:35;61528:63;;61587:1;61584;61577:12;62443:1096;62698:6;62706;62714;62722;62775:3;62763:9;62754:7;62750:23;62746:33;62743:53;;;62792:1;62789;62782:12;62743:53;62824:9;62818:16;62843:29;62866:5;62843:29;:::i;:::-;62940:2;62925:18;;62919:25;62891:5;;-1:-1:-1;;;;;;62956:30:39;;62953:50;;;62999:1;62996;62989:12;62953:50;63022:80;63094:7;63085:6;63074:9;63070:22;63022:80;:::i;:::-;63012:90;;;63148:2;63137:9;63133:18;63127:25;-1:-1:-1;;;;;63167:8:39;63164:32;63161:52;;;63209:1;63206;63199:12;63161:52;63232:87;63311:7;63300:8;63289:9;63285:24;63232:87;:::i;:::-;63222:97;;;63365:2;63354:9;63350:18;63344:25;-1:-1:-1;;;;;63384:8:39;63381:32;63378:52;;;63426:1;63423;63416:12;63378:52;63449:84;63525:7;63514:8;63503:9;63499:24;63449:84;:::i;:::-;63439:94;;;62443:1096;;;;;;;:::o;63946:372::-;64047:6;64055;64108:3;64096:9;64087:7;64083:23;64079:33;64076:53;;;64125:1;64122;64115:12;64076:53;64157:9;64151:16;64176:29;64199:5;64176:29;:::i;:::-;64224:5;-1:-1:-1;64248:64:39;64304:7;64299:2;64284:18;;64248:64;:::i;66956:297::-;67074:12;;67121:4;67110:16;;;67104:23;;67074:12;67139:16;;67136:111;;;-1:-1:-1;;67213:4:39;67209:17;;;;67206:1;67202:25;67198:38;67187:50;;66956:297;-1:-1:-1;66956:297:39:o;69749:202::-;69816:6;69869:2;69857:9;69848:7;69844:23;69840:32;69837:52;;;69885:1;69882;69875:12;69837:52;69908:37;69935:9;69908:37;:::i;69956:225::-;70102:2;70091:9;70084:21;70065:4;70122:53;70171:2;70160:9;70156:18;70148:6;70122:53;:::i;72525:220::-;72674:2;72663:9;72656:21;72637:4;72694:45;72735:2;72724:9;72720:18;72712:6;72694:45;:::i;74683:280::-;74752:6;74805:2;74793:9;74784:7;74780:23;74776:32;74773:52;;;74821:1;74818;74811:12;74773:52;74853:9;74847:16;74903:10;74896:5;74892:22;74885:5;74882:33;74872:61;;74929:1;74926;74919:12;74968:410;-1:-1:-1;;;;;;75161:33:39;;;75149:46;;75232:2;75228:15;;;;-1:-1:-1;;75224:45:39;75220:1;75211:11;;75204:66;75177:3;75304:16;75300:43;;;75295:2;75286:12;;75279:65;75369:2;75360:12;;74968:410::o;78959:518::-;-1:-1:-1;;;;;;79178:33:39;;;79166:46;;79249:2;79245:15;;;;-1:-1:-1;;;;;;79241:53:39;79237:1;79228:11;;79221:74;79194:3;79329:16;;;79325:43;;79320:2;79311:12;;79304:65;79403:16;;79399:43;;;79394:2;79385:12;;79378:65;79468:2;79459:12;;78959:518::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "_update(address,address,uint256)": "0bb3bfa8",
        "associateToken(address,address)": "49146bde",
        "associateTokens(address,address[])": "2e63879b",
        "burnToken(address,int64,int64[])": "d6910d06",
        "dissociateToken(address,address)": "099794e8",
        "dissociateTokens(address,address[])": "78b63918",
        "getAccountId(address)": "e0b490f7",
        "getApproved(address,uint256)": "098f2366",
        "getFungibleTokenInfo(address)": "3f28a19b",
        "getNonFungibleTokenInfo(address,int64)": "287e1da8",
        "getTokenCustomFees(address)": "ae7611a0",
        "getTokenDefaultFreezeStatus(address)": "a7daa18d",
        "getTokenDefaultKycStatus(address)": "335e04c1",
        "getTokenExpiryInfo(address)": "d614cdb8",
        "getTokenInfo(address)": "1f69565f",
        "getTokenKey(address,uint256)": "3c4dd32e",
        "getTokenType(address)": "93272baf",
        "isApprovedForAll(address,address,address)": "f49f40db",
        "isToken(address)": "19f37361",
        "mintToken(address,int64,bytes[])": "e0f4059a"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"associateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"associateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"\",\"type\":\"int64[]\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"dissociateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"dissociateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"accountId\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int32\",\"name\":\"decimals\",\"type\":\"int32\"}],\"internalType\":\"struct IHederaTokenService.FungibleTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"getNonFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"ownerId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"creationTime\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"spenderId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.NonFungibleTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultFreezeStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultKycStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenExpiryInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"getTokenKey\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"associateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"associateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be associated with the provided tokens\",\"tokens\":\"The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"dissociateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"dissociateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be dissociated from the provided tokens\",\"tokens\":\"The tokens to be dissociated from the provided account.\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getAccountId(address)\":{\"details\":\"Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties.\"},\"getApproved(address,uint256)\":{\"params\":{\"serialNumber\":\"The NFT to find the approved address for\",\"token\":\"The Hedera NFT token address to check approval\"},\"returns\":{\"approved\":\"The approved address for this NFT, or the zero address if there is none\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getFungibleTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"FungibleTokenInfo info for `token`\"}},\"getNonFungibleTokenInfo(address,int64)\":{\"params\":{\"serialNumber\":\"The NFT serialNumber to check\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"NonFungibleTokenInfo info for `token` `serialNumber`\"}},\"getTokenCustomFees(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"Set of fixed fees for `token`\",\"_2\":\"Set of fractional fees for `token`\",\"_3\":\"Set of royalty fees for `token`\"}},\"getTokenDefaultFreezeStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default freeze status is frozen.\"}},\"getTokenDefaultKycStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default kyc status is KycNotApplicable and false if Revoked.\"}},\"getTokenExpiryInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"Expiry info for `token`\"}},\"getTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"TokenInfo info for `token`\"}},\"getTokenKey(address,uint256)\":{\"params\":{\"keyType\":\"The keyType of the desired KeyValue\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"KeyValue info for key of type `keyType`\"}},\"getTokenType(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\"}},\"isApprovedForAll(address,address,address)\":{\"params\":{\"operator\":\"The address that acts on behalf of the owner\",\"owner\":\"The address that owns the NFTs\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `operator` is an approved operator for `owner`, false otherwise\"}},\"isToken(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if valid token found for the given address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"associateToken(address,address)\":{\"notice\":\"Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\"},\"associateTokens(address,address[])\":{\"notice\":\"Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens.\"},\"dissociateToken(address,address)\":{\"notice\":\"Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\"},\"dissociateTokens(address,address[])\":{\"notice\":\"Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed.\"},\"getApproved(address,uint256)\":{\"notice\":\"Get the approved address for a single NFT Only Applicable to NFT Tokens\"},\"getFungibleTokenInfo(address)\":{\"notice\":\"Query fungible token info\"},\"getNonFungibleTokenInfo(address,int64)\":{\"notice\":\"Query non fungible token info\"},\"getTokenCustomFees(address)\":{\"notice\":\"Query token custom fees\"},\"getTokenDefaultFreezeStatus(address)\":{\"notice\":\"Query token default freeze status\"},\"getTokenDefaultKycStatus(address)\":{\"notice\":\"Query token default kyc status\"},\"getTokenExpiryInfo(address)\":{\"notice\":\"Query token expiry info\"},\"getTokenInfo(address)\":{\"notice\":\"Query token info\"},\"getTokenKey(address,uint256)\":{\"notice\":\"Query token KeyValue\"},\"getTokenType(address)\":{\"notice\":\"Query to return the token type for a given address\"},\"isApprovedForAll(address,address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address Only Applicable to NFT Tokens\"},\"isToken(address)\":{\"notice\":\"Query if valid token found for the given address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HtsSystemContract.sol\":\"HtsSystemContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":surl/=lib/surl/\"]},\"sources\":{\"contracts/HtsSystemContract.sol\":{\"keccak256\":\"0x46d489d30ee171ab1cc1050ffcc4f12077f8fa8f926f4870f49ce1a1c63e904d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b89fdd6e38f9e243b1f0f6df0789335b56b2a2e160760da76ebb06f679f59e63\",\"dweb:/ipfs/QmRFQVBjqa34zCJ4SPTqt3CneTKjA5YB3oYhxSrq5WEEuM\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x77993e2d90d6b91d30b8721a52364902d823dd5d1020500071c4ecd7f847a00e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://776be938a4f20b2b40e95a5d58f330454d21077894659a674ac8bda378561598\",\"dweb:/ipfs/QmToUenT2jKjiJLCozN3xQp2esRVbRceyS8KVMqcd9j29W\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0x7b4a961afb96ff6326f4d2985f20edf7aa10b3ba1b68c502a0cdcd84ba26e767\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://322d92f6a244dd8a9818d5be6e4e17c6dd048a033449dd79b43229c7077da06d\",\"dweb:/ipfs/QmdFyC7EU8iGiyFzh77YsUpp6eysV8ijyLUKWsDPVKq7yG\"]},\"contracts/IHRC719.sol\":{\"keccak256\":\"0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d\",\"dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD\"]},\"contracts/IHederaTokenService.sol\":{\"keccak256\":\"0x753e733f6c1921938f300e2a1d31f7fc09d598149c9991ffa91d99a4d26ca3f1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b68ea0df42ebc03fe33e2dc56b80f9d9dbfed1c0b528436423cf66de5a1e4a43\",\"dweb:/ipfs/QmXJbGG7nEH9fNDpxgXfUKE8aG7pcwPB72EbuYUgtSAGWY\"]}},\"version\":1}",
    "metadata": {
        "compiler": { "version": "0.8.26+commit.8a97fa7a" },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "approved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ApprovalForAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                { "inputs": [], "stateMutability": "nonpayable", "type": "fallback" },
                {
                    "inputs": [
                        { "internalType": "address", "name": "from", "type": "address" },
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "amount", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "_update"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address", "name": "token", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "associateToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address[]", "name": "tokens", "type": "address[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "associateTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "int64[]", "name": "", "type": "int64[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address", "name": "token", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "dissociateToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address[]", "name": "tokens", "type": "address[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "dissociateTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAccountId",
                    "outputs": [{ "internalType": "uint32", "name": "accountId", "type": "uint32" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "serialNumber", "type": "uint256" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getApproved",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "address", "name": "approved", "type": "address" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getFungibleTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.FungibleTokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.TokenInfo",
                                    "name": "tokenInfo",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IHederaTokenService.HederaToken",
                                            "name": "token",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "string",
                                                    "name": "name",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "symbol",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "treasury",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "memo",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "tokenSupplyType",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maxSupply",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "freezeDefault",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                                    "name": "tokenKeys",
                                                    "type": "tuple[]",
                                                    "components": [
                                                        {
                                                            "internalType": "uint256",
                                                            "name": "keyType",
                                                            "type": "uint256"
                                                        },
                                                        {
                                                            "internalType": "struct IHederaTokenService.KeyValue",
                                                            "name": "key",
                                                            "type": "tuple",
                                                            "components": [
                                                                {
                                                                    "internalType": "bool",
                                                                    "name": "inheritAccountKey",
                                                                    "type": "bool"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "contractId",
                                                                    "type": "address"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ed25519",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ECDSA_secp256k1",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "delegatableContractId",
                                                                    "type": "address"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.Expiry",
                                                    "name": "expiry",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "int64",
                                                            "name": "second",
                                                            "type": "int64"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "autoRenewAccount",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "int64",
                                                            "name": "autoRenewPeriod",
                                                            "type": "int64"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "totalSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "deleted",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "defaultKycStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "pauseStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FixedFee[]",
                                            "name": "fixedFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useCurrentTokenForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                                            "name": "fractionalFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "minimumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maximumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "netOfTransfers",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                            "name": "royaltyFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "ledgerId",
                                            "type": "string"
                                        }
                                    ]
                                },
                                { "internalType": "int32", "name": "decimals", "type": "int32" }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "serialNumber", "type": "int64" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getNonFungibleTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.TokenInfo",
                                    "name": "tokenInfo",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IHederaTokenService.HederaToken",
                                            "name": "token",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "string",
                                                    "name": "name",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "symbol",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "treasury",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "memo",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "tokenSupplyType",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maxSupply",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "freezeDefault",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                                    "name": "tokenKeys",
                                                    "type": "tuple[]",
                                                    "components": [
                                                        {
                                                            "internalType": "uint256",
                                                            "name": "keyType",
                                                            "type": "uint256"
                                                        },
                                                        {
                                                            "internalType": "struct IHederaTokenService.KeyValue",
                                                            "name": "key",
                                                            "type": "tuple",
                                                            "components": [
                                                                {
                                                                    "internalType": "bool",
                                                                    "name": "inheritAccountKey",
                                                                    "type": "bool"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "contractId",
                                                                    "type": "address"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ed25519",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ECDSA_secp256k1",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "delegatableContractId",
                                                                    "type": "address"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.Expiry",
                                                    "name": "expiry",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "int64",
                                                            "name": "second",
                                                            "type": "int64"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "autoRenewAccount",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "int64",
                                                            "name": "autoRenewPeriod",
                                                            "type": "int64"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "totalSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "deleted",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "defaultKycStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "pauseStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FixedFee[]",
                                            "name": "fixedFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useCurrentTokenForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                                            "name": "fractionalFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "minimumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maximumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "netOfTransfers",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                            "name": "royaltyFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "ledgerId",
                                            "type": "string"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "int64",
                                    "name": "serialNumber",
                                    "type": "int64"
                                },
                                { "internalType": "address", "name": "ownerId", "type": "address" },
                                {
                                    "internalType": "int64",
                                    "name": "creationTime",
                                    "type": "int64"
                                },
                                { "internalType": "bytes", "name": "metadata", "type": "bytes" },
                                {
                                    "internalType": "address",
                                    "name": "spenderId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenCustomFees",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                {
                                    "internalType": "int64",
                                    "name": "minimumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "maximumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "netOfTransfers",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenDefaultFreezeStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenDefaultKycStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenExpiryInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.Expiry",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                { "internalType": "int64", "name": "second", "type": "int64" },
                                {
                                    "internalType": "address",
                                    "name": "autoRenewAccount",
                                    "type": "address"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "autoRenewPeriod",
                                    "type": "int64"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "name": "token",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "string",
                                            "name": "name",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "symbol",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "treasury",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "memo",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "tokenSupplyType",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maxSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "freezeDefault",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "uint256",
                                                    "name": "keyType",
                                                    "type": "uint256"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "bool",
                                                            "name": "inheritAccountKey",
                                                            "type": "bool"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "contractId",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ed25519",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "delegatableContractId",
                                                            "type": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "name": "expiry",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "second",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "autoRenewAccount",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "internalType": "int64", "name": "totalSupply", "type": "int64" },
                                { "internalType": "bool", "name": "deleted", "type": "bool" },
                                {
                                    "internalType": "bool",
                                    "name": "defaultKycStatus",
                                    "type": "bool"
                                },
                                { "internalType": "bool", "name": "pauseStatus", "type": "bool" },
                                {
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "minimumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maximumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "netOfTransfers",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                { "internalType": "string", "name": "ledgerId", "type": "string" }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "keyType", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenKey",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.KeyValue",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "inheritAccountKey",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "contractId",
                                    "type": "address"
                                },
                                { "internalType": "bytes", "name": "ed25519", "type": "bytes" },
                                {
                                    "internalType": "bytes",
                                    "name": "ECDSA_secp256k1",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatableContractId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenType",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "int32", "name": "", "type": "int32" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "owner", "type": "address" },
                        { "internalType": "address", "name": "operator", "type": "address" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isApprovedForAll",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "isToken",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "bytes[]", "name": "", "type": "bytes[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" },
                        { "internalType": "int64[]", "name": "serialNumbers", "type": "int64[]" }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "associateToken(address,address)": {
                        "params": {
                            "account": "The account to be associated with the provided token",
                            "token": "The token to be associated with the provided account"
                        }
                    },
                    "associateTokens(address,address[])": {
                        "params": {
                            "account": "The account to be associated with the provided tokens",
                            "tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "dissociateToken(address,address)": {
                        "params": {
                            "account": "The account to be associated with the provided token",
                            "token": "The token to be associated with the provided account"
                        }
                    },
                    "dissociateTokens(address,address[])": {
                        "params": {
                            "account": "The account to be dissociated from the provided tokens",
                            "tokens": "The tokens to be dissociated from the provided account."
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getAccountId(address)": {
                        "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
                    },
                    "getApproved(address,uint256)": {
                        "params": {
                            "serialNumber": "The NFT to find the approved address for",
                            "token": "The Hedera NFT token address to check approval"
                        },
                        "returns": {
                            "approved": "The approved address for this NFT, or the zero address if there is none",
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getFungibleTokenInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "FungibleTokenInfo info for `token`"
                        }
                    },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "params": {
                            "serialNumber": "The NFT serialNumber to check",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                        }
                    },
                    "getTokenCustomFees(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "Set of fixed fees for `token`",
                            "_2": "Set of fractional fees for `token`",
                            "_3": "Set of royalty fees for `token`"
                        }
                    },
                    "getTokenDefaultFreezeStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default freeze status is frozen."
                        }
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                        }
                    },
                    "getTokenExpiryInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenInfo": "Expiry info for `token`"
                        }
                    },
                    "getTokenInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenInfo": "TokenInfo info for `token`"
                        }
                    },
                    "getTokenKey(address,uint256)": {
                        "params": {
                            "keyType": "The keyType of the desired KeyValue",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "KeyValue info for key of type `keyType`"
                        }
                    },
                    "getTokenType(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                        }
                    },
                    "isApprovedForAll(address,address,address)": {
                        "params": {
                            "operator": "The address that acts on behalf of the owner",
                            "owner": "The address that owns the NFTs",
                            "token": "The Hedera NFT token address to approve"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                        }
                    },
                    "isToken(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if valid token found for the given address"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "associateToken(address,address)": {
                        "notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
                    },
                    "associateTokens(address,address[])": {
                        "notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
                    },
                    "dissociateToken(address,address)": {
                        "notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
                    },
                    "dissociateTokens(address,address[])": {
                        "notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
                    },
                    "getApproved(address,uint256)": {
                        "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
                    },
                    "getFungibleTokenInfo(address)": { "notice": "Query fungible token info" },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "notice": "Query non fungible token info"
                    },
                    "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
                    "getTokenDefaultFreezeStatus(address)": {
                        "notice": "Query token default freeze status"
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "notice": "Query token default kyc status"
                    },
                    "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
                    "getTokenInfo(address)": { "notice": "Query token info" },
                    "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
                    "getTokenType(address)": {
                        "notice": "Query to return the token type for a given address"
                    },
                    "isApprovedForAll(address,address,address)": {
                        "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
                    },
                    "isToken(address)": {
                        "notice": "Query if valid token found for the given address"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/",
                "forge-std/=lib/forge-std/src/",
                "solidity-stringutils/=lib/surl/lib/solidity-stringutils/",
                "surl/=lib/surl/"
            ],
            "optimizer": { "enabled": true, "runs": 200 },
            "metadata": { "bytecodeHash": "ipfs" },
            "compilationTarget": { "contracts/HtsSystemContract.sol": "HtsSystemContract" },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "contracts/HtsSystemContract.sol": {
                "keccak256": "0x46d489d30ee171ab1cc1050ffcc4f12077f8fa8f926f4870f49ce1a1c63e904d",
                "urls": [
                    "bzz-raw://b89fdd6e38f9e243b1f0f6df0789335b56b2a2e160760da76ebb06f679f59e63",
                    "dweb:/ipfs/QmRFQVBjqa34zCJ4SPTqt3CneTKjA5YB3oYhxSrq5WEEuM"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC20.sol": {
                "keccak256": "0x77993e2d90d6b91d30b8721a52364902d823dd5d1020500071c4ecd7f847a00e",
                "urls": [
                    "bzz-raw://776be938a4f20b2b40e95a5d58f330454d21077894659a674ac8bda378561598",
                    "dweb:/ipfs/QmToUenT2jKjiJLCozN3xQp2esRVbRceyS8KVMqcd9j29W"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC721.sol": {
                "keccak256": "0x7b4a961afb96ff6326f4d2985f20edf7aa10b3ba1b68c502a0cdcd84ba26e767",
                "urls": [
                    "bzz-raw://322d92f6a244dd8a9818d5be6e4e17c6dd048a033449dd79b43229c7077da06d",
                    "dweb:/ipfs/QmdFyC7EU8iGiyFzh77YsUpp6eysV8ijyLUKWsDPVKq7yG"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHRC719.sol": {
                "keccak256": "0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd",
                "urls": [
                    "bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d",
                    "dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHederaTokenService.sol": {
                "keccak256": "0x753e733f6c1921938f300e2a1d31f7fc09d598149c9991ffa91d99a4d26ca3f1",
                "urls": [
                    "bzz-raw://b68ea0df42ebc03fe33e2dc56b80f9d9dbfed1c0b528436423cf66de5a1e4a43",
                    "dweb:/ipfs/QmXJbGG7nEH9fNDpxgXfUKE8aG7pcwPB72EbuYUgtSAGWY"
                ],
                "license": "Apache-2.0"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 91,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "tokenType",
                "offset": 0,
                "slot": "0",
                "type": "t_string_storage"
            },
            {
                "astId": 93,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "name",
                "offset": 0,
                "slot": "1",
                "type": "t_string_storage"
            },
            {
                "astId": 95,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "symbol",
                "offset": 0,
                "slot": "2",
                "type": "t_string_storage"
            },
            {
                "astId": 97,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "decimals",
                "offset": 0,
                "slot": "3",
                "type": "t_uint8"
            },
            {
                "astId": 99,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "totalSupply",
                "offset": 0,
                "slot": "4",
                "type": "t_uint256"
            },
            {
                "astId": 102,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "_tokenInfo",
                "offset": 0,
                "slot": "5",
                "type": "t_struct(TokenInfo)6374_storage"
            }
        ],
        "types": {
            "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
            "t_array(t_struct(FixedFee)6416_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FixedFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FixedFee)6416_storage"
            },
            "t_array(t_struct(FractionalFee)6430_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FractionalFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FractionalFee)6430_storage"
            },
            "t_array(t_struct(RoyaltyFee)6444_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.RoyaltyFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(RoyaltyFee)6444_storage"
            },
            "t_array(t_struct(TokenKey)6315_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.TokenKey[]",
                "numberOfBytes": "32",
                "base": "t_struct(TokenKey)6315_storage"
            },
            "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
            "t_bytes_storage": { "encoding": "bytes", "label": "bytes", "numberOfBytes": "32" },
            "t_int64": { "encoding": "inplace", "label": "int64", "numberOfBytes": "8" },
            "t_string_storage": { "encoding": "bytes", "label": "string", "numberOfBytes": "32" },
            "t_struct(Expiry)6296_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.Expiry",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6291,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "second",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6293,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewAccount",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6295,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewPeriod",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_int64"
                    }
                ]
            },
            "t_struct(FixedFee)6416_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FixedFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6407,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6409,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6411,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 28,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6413,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useCurrentTokenForPayment",
                        "offset": 29,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6415,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(FractionalFee)6430_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FractionalFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6419,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6421,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6423,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "minimumAmount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6425,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maximumAmount",
                        "offset": 24,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6427,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "netOfTransfers",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6429,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 1,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(HederaToken)6338_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.HederaToken",
                "numberOfBytes": "256",
                "members": [
                    {
                        "astId": 6318,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "name",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6320,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "symbol",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6322,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "treasury",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    },
                    {
                        "astId": 6324,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "memo",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6326,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenSupplyType",
                        "offset": 0,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6328,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maxSupply",
                        "offset": 1,
                        "slot": "4",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6330,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "freezeDefault",
                        "offset": 9,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6334,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenKeys",
                        "offset": 0,
                        "slot": "5",
                        "type": "t_array(t_struct(TokenKey)6315_storage)dyn_storage"
                    },
                    {
                        "astId": 6337,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "expiry",
                        "offset": 0,
                        "slot": "6",
                        "type": "t_struct(Expiry)6296_storage"
                    }
                ]
            },
            "t_struct(KeyValue)6308_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.KeyValue",
                "numberOfBytes": "128",
                "members": [
                    {
                        "astId": 6299,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "inheritAccountKey",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6301,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "contractId",
                        "offset": 1,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6303,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ed25519",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 6305,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ECDSA_secp256k1",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 6307,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "delegatableContractId",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(RoyaltyFee)6444_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.RoyaltyFee",
                "numberOfBytes": "96",
                "members": [
                    {
                        "astId": 6433,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6435,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6437,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6439,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    },
                    {
                        "astId": 6441,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 20,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6443,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(TokenInfo)6374_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenInfo",
                "numberOfBytes": "416",
                "members": [
                    {
                        "astId": 6343,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "token",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_struct(HederaToken)6338_storage"
                    },
                    {
                        "astId": 6346,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "totalSupply",
                        "offset": 0,
                        "slot": "8",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6349,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "deleted",
                        "offset": 8,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6352,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "defaultKycStatus",
                        "offset": 9,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6355,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "pauseStatus",
                        "offset": 10,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6360,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fixedFees",
                        "offset": 0,
                        "slot": "9",
                        "type": "t_array(t_struct(FixedFee)6416_storage)dyn_storage"
                    },
                    {
                        "astId": 6365,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fractionalFees",
                        "offset": 0,
                        "slot": "10",
                        "type": "t_array(t_struct(FractionalFee)6430_storage)dyn_storage"
                    },
                    {
                        "astId": 6370,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "royaltyFees",
                        "offset": 0,
                        "slot": "11",
                        "type": "t_array(t_struct(RoyaltyFee)6444_storage)dyn_storage"
                    },
                    {
                        "astId": 6373,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ledgerId",
                        "offset": 0,
                        "slot": "12",
                        "type": "t_string_storage"
                    }
                ]
            },
            "t_struct(TokenKey)6315_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenKey",
                "numberOfBytes": "160",
                "members": [
                    {
                        "astId": 6311,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "keyType",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 6314,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "key",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_struct(KeyValue)6308_storage"
                    }
                ]
            },
            "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" },
            "t_uint8": { "encoding": "inplace", "label": "uint8", "numberOfBytes": "1" }
        }
    },
    "userdoc": {
        "version": 1,
        "kind": "user",
        "methods": {
            "associateToken(address,address)": {
                "notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
            },
            "associateTokens(address,address[])": {
                "notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
            },
            "dissociateToken(address,address)": {
                "notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
            },
            "dissociateTokens(address,address[])": {
                "notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
            },
            "getApproved(address,uint256)": {
                "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
            },
            "getFungibleTokenInfo(address)": { "notice": "Query fungible token info" },
            "getNonFungibleTokenInfo(address,int64)": { "notice": "Query non fungible token info" },
            "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
            "getTokenDefaultFreezeStatus(address)": {
                "notice": "Query token default freeze status"
            },
            "getTokenDefaultKycStatus(address)": { "notice": "Query token default kyc status" },
            "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
            "getTokenInfo(address)": { "notice": "Query token info" },
            "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
            "getTokenType(address)": {
                "notice": "Query to return the token type for a given address"
            },
            "isApprovedForAll(address,address,address)": {
                "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
            },
            "isToken(address)": { "notice": "Query if valid token found for the given address" }
        }
    },
    "devdoc": {
        "version": 1,
        "kind": "dev",
        "methods": {
            "associateToken(address,address)": {
                "params": {
                    "account": "The account to be associated with the provided token",
                    "token": "The token to be associated with the provided account"
                }
            },
            "associateTokens(address,address[])": {
                "params": {
                    "account": "The account to be associated with the provided tokens",
                    "tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "dissociateToken(address,address)": {
                "params": {
                    "account": "The account to be associated with the provided token",
                    "token": "The token to be associated with the provided account"
                }
            },
            "dissociateTokens(address,address[])": {
                "params": {
                    "account": "The account to be dissociated from the provided tokens",
                    "tokens": "The tokens to be dissociated from the provided account."
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "getAccountId(address)": {
                "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
            },
            "getApproved(address,uint256)": {
                "params": {
                    "serialNumber": "The NFT to find the approved address for",
                    "token": "The Hedera NFT token address to check approval"
                },
                "returns": {
                    "approved": "The approved address for this NFT, or the zero address if there is none",
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "getFungibleTokenInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "FungibleTokenInfo info for `token`"
                }
            },
            "getNonFungibleTokenInfo(address,int64)": {
                "params": {
                    "serialNumber": "The NFT serialNumber to check",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                }
            },
            "getTokenCustomFees(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "Set of fixed fees for `token`",
                    "_2": "Set of fractional fees for `token`",
                    "_3": "Set of royalty fees for `token`"
                }
            },
            "getTokenDefaultFreezeStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default freeze status is frozen."
                }
            },
            "getTokenDefaultKycStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                }
            },
            "getTokenExpiryInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenInfo": "Expiry info for `token`"
                }
            },
            "getTokenInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenInfo": "TokenInfo info for `token`"
                }
            },
            "getTokenKey(address,uint256)": {
                "params": {
                    "keyType": "The keyType of the desired KeyValue",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "KeyValue info for key of type `keyType`"
                }
            },
            "getTokenType(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                }
            },
            "isApprovedForAll(address,address,address)": {
                "params": {
                    "operator": "The address that acts on behalf of the owner",
                    "owner": "The address that owns the NFTs",
                    "token": "The Hedera NFT token address to approve"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                }
            },
            "isToken(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if valid token found for the given address"
                }
            }
        },
        "events": {
            "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
            },
            "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
            }
        }
    },
    "id": 1
}
