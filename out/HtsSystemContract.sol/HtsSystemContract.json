{
    "abi": [
        { "type": "fallback", "stateMutability": "nonpayable" },
        {
            "type": "function",
            "name": "_transferAsHTS",
            "inputs": [
                { "name": "from", "type": "address", "internalType": "address" },
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "_update",
            "inputs": [
                { "name": "from", "type": "address", "internalType": "address" },
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "associateToken",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "token", "type": "address", "internalType": "address" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "associateTokens",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "tokens", "type": "address[]", "internalType": "address[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "burnToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int64[]", "internalType": "int64[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "dissociateToken",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "token", "type": "address", "internalType": "address" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "dissociateTokens",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "tokens", "type": "address[]", "internalType": "address[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getAccountId",
            "inputs": [{ "name": "account", "type": "address", "internalType": "address" }],
            "outputs": [{ "name": "accountId", "type": "uint32", "internalType": "uint32" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getApproved",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "approved", "type": "address", "internalType": "address" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getFungibleTokenInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.FungibleTokenInfo",
                    "components": [
                        {
                            "name": "tokenInfo",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "components": [
                                {
                                    "name": "token",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "components": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "symbol",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "treasury",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "memo",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "tokenSupplyType",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "maxSupply",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "freezeDefault",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "components": [
                                                {
                                                    "name": "keyType",
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                {
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "components": [
                                                        {
                                                            "name": "inheritAccountKey",
                                                            "type": "bool",
                                                            "internalType": "bool"
                                                        },
                                                        {
                                                            "name": "contractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        },
                                                        {
                                                            "name": "ed25519",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "delegatableContractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "expiry",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "components": [
                                                {
                                                    "name": "second",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                },
                                                {
                                                    "name": "autoRenewAccount",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                                { "name": "deleted", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "defaultKycStatus",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "components": [
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "minimumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "maximumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "netOfTransfers",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                { "name": "ledgerId", "type": "string", "internalType": "string" }
                            ]
                        },
                        { "name": "decimals", "type": "int32", "internalType": "int32" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getNonFungibleTokenInfo",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "int64", "internalType": "int64" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                    "components": [
                        {
                            "name": "tokenInfo",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "components": [
                                {
                                    "name": "token",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "components": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "symbol",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "treasury",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "memo",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "tokenSupplyType",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "maxSupply",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "freezeDefault",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "components": [
                                                {
                                                    "name": "keyType",
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                {
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "components": [
                                                        {
                                                            "name": "inheritAccountKey",
                                                            "type": "bool",
                                                            "internalType": "bool"
                                                        },
                                                        {
                                                            "name": "contractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        },
                                                        {
                                                            "name": "ed25519",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "delegatableContractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "expiry",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "components": [
                                                {
                                                    "name": "second",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                },
                                                {
                                                    "name": "autoRenewAccount",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                                { "name": "deleted", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "defaultKycStatus",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "components": [
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "minimumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "maximumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "netOfTransfers",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                { "name": "ledgerId", "type": "string", "internalType": "string" }
                            ]
                        },
                        { "name": "serialNumber", "type": "int64", "internalType": "int64" },
                        { "name": "ownerId", "type": "address", "internalType": "address" },
                        { "name": "creationTime", "type": "int64", "internalType": "int64" },
                        { "name": "metadata", "type": "bytes", "internalType": "bytes" },
                        { "name": "spenderId", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenCustomFees",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FixedFee[]",
                    "components": [
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        {
                            "name": "useCurrentTokenForPayment",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "minimumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "maximumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "netOfTransfers", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenDefaultFreezeStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenDefaultKycStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenExpiryInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.Expiry",
                    "components": [
                        { "name": "second", "type": "int64", "internalType": "int64" },
                        {
                            "name": "autoRenewAccount",
                            "type": "address",
                            "internalType": "address"
                        },
                        { "name": "autoRenewPeriod", "type": "int64", "internalType": "int64" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.TokenInfo",
                    "components": [
                        {
                            "name": "token",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "components": [
                                { "name": "name", "type": "string", "internalType": "string" },
                                { "name": "symbol", "type": "string", "internalType": "string" },
                                {
                                    "name": "treasury",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                { "name": "memo", "type": "string", "internalType": "string" },
                                {
                                    "name": "tokenSupplyType",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "maxSupply", "type": "int64", "internalType": "int64" },
                                { "name": "freezeDefault", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "components": [
                                        {
                                            "name": "keyType",
                                            "type": "uint256",
                                            "internalType": "uint256"
                                        },
                                        {
                                            "name": "key",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "components": [
                                                {
                                                    "name": "inheritAccountKey",
                                                    "type": "bool",
                                                    "internalType": "bool"
                                                },
                                                {
                                                    "name": "contractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "ed25519",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "delegatableContractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "expiry",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "components": [
                                        {
                                            "name": "second",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "autoRenewAccount",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "autoRenewPeriod",
                                            "type": "int64",
                                            "internalType": "int64"
                                        }
                                    ]
                                }
                            ]
                        },
                        { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                        { "name": "deleted", "type": "bool", "internalType": "bool" },
                        { "name": "defaultKycStatus", "type": "bool", "internalType": "bool" },
                        { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                        {
                            "name": "fixedFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "components": [
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "fractionalFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                {
                                    "name": "minimumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "maximumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "netOfTransfers",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "royaltyFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        { "name": "ledgerId", "type": "string", "internalType": "string" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenKey",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "keyType", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.KeyValue",
                    "components": [
                        { "name": "inheritAccountKey", "type": "bool", "internalType": "bool" },
                        { "name": "contractId", "type": "address", "internalType": "address" },
                        { "name": "ed25519", "type": "bytes", "internalType": "bytes" },
                        { "name": "ECDSA_secp256k1", "type": "bytes", "internalType": "bytes" },
                        {
                            "name": "delegatableContractId",
                            "type": "address",
                            "internalType": "address"
                        }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenType",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int32", "internalType": "int32" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isApprovedForAll",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "owner", "type": "address", "internalType": "address" },
                { "name": "operator", "type": "address", "internalType": "address" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isToken",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bytes[]", "internalType": "bytes[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" },
                { "name": "serialNumbers", "type": "int64[]", "internalType": "int64[]" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "sender", "type": "address", "internalType": "address" },
                { "name": "recipient", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferTokens",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "accountId", "type": "address[]", "internalType": "address[]" },
                { "name": "amount", "type": "int64[]", "internalType": "int64[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ApprovalForAll",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "389:33623:1:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "389:33623:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14430:12;14863:2;14844:21;;;14836:63;;;;-1:-1:-1;;;14836:63:1;;216:2:39;14836:63:1;;;198:21:39;255:2;235:18;;;228:30;294:31;274:18;;;267:59;343:18;;14836:63:1;;;;;;;;;14910:24;14951:13;14962:1;14910:24;14951:8;14910:24;14951:13;:::i;:::-;14944:21;;;:::i;:::-;14937:29;;;-1:-1:-1;15004:10:1;14984:30;;14976:73;;;;-1:-1:-1;;;14976:73:1;;1253:2:39;14976:73:1;;;1235:21:39;1292:2;1272:18;;;1265:30;1331:32;1311:18;;;1304:60;1381:18;;14976:73:1;1051:354:39;14976:73:1;15060:13;15092:14;15103:2;15101:1;15092:8;15060:13;15092:14;:::i;:::-;15084:23;;;:::i;:::-;15076:32;;;-1:-1:-1;15143:4:1;15126:22;;15118:64;;;;-1:-1:-1;;;15118:64:1;;1991:2:39;15118:64:1;;;1973:21:39;2030:2;2010:18;;;2003:30;2069:31;2049:18;;;2042:59;2118:18;;15118:64:1;1789:353:39;15118:64:1;15361:20;:18;:20::i;:::-;389:33623;;;-1:-1:-1;389:33623:1;;;-1:-1:-1;;;;389:33623:1;7174:300;;;;;;:::i;:::-;;:::i;:::-;;;;3059:1:39;3048:21;;;;3030:40;;-1:-1:-1;;;;;3106:32:39;;;3101:2;3086:18;;3079:60;3003:18;7174:300:1;;;;;;;;6636:239;;;;;;:::i;:::-;;:::i;:::-;;;3714:1:39;3703:21;;;;3685:40;;3673:2;3658:18;6636:239:1;3543:188:39;31228:962:1;;;;;;:::i;:::-;;:::i;:::-;;9512:284;;;;;;:::i;:::-;;:::i;:::-;;;;4790:1:39;4779:21;;;;4761:40;;4844:14;;4837:22;4832:2;4817:18;;4810:50;4734:18;9512:284:1;4597:269:39;1707:272:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1985:1028::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3637:746::-;;;;;;:::i;:::-;;:::i;29780:342::-;;;;;;:::i;:::-;;:::i;8371:253::-;;;;;;:::i;:::-;;:::i;8630:652::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3019:612::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;6393:237::-;;;;;;:::i;:::-;;:::i;5632:755::-;;;;;;:::i;:::-;;:::i;4389:605::-;;;;;;:::i;:::-;;:::i;9288:218::-;;;;;;:::i;:::-;;:::i;:::-;;;;19584:1:39;19573:21;;;;19555:40;;19642:1;19631:21;;;;19626:2;19611:18;;19604:49;19528:18;9288:218:1;19389:270:39;7792:262:1;;;;;;:::i;:::-;;:::i;8060:305::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;6881:287::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;10810:924::-;;;;;;:::i;:::-;;:::i;:::-;;;;21770:1:39;21759:21;;;21741:40;;21817:21;;;;21812:2;21797:18;;21790:49;21714:18;10810:924:1;21575:270:39;1398:303:1;;;;;;:::i;:::-;;:::i;:::-;;;22024:10:39;22012:23;;;21994:42;;21982:2;21967:18;1398:303:1;21850:192:39;9802:1002:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;5000:626::-;;;;;;:::i;:::-;;:::i;7480:306::-;;;;;;:::i;:::-;;:::i;15490:4319::-;15546:12;15570:15;15595;15607:2;15604;15595:8;15570:15;15595;:::i;:::-;15588:23;;;:::i;:::-;15570:41;;15694:18;;;;;;;;;;;-1:-1:-1;;;15694:18:1;;;;;15653:27;15684:29;;15653:27;;-1:-1:-1;;15653:27:1;:::i;:::-;;;;;;;;:60;15649:134;;15729:43;;-1:-1:-1;;;15729:43:1;;27479:2:39;15729:43:1;;;27461:21:39;27518:2;27498:18;;;27491:30;27557:34;27537:18;;;27530:62;-1:-1:-1;;;27608:18:39;;;27601:31;27649:19;;15729:43:1;27277:397:39;15649:134:1;-1:-1:-1;;15844:10:1;:25;15840:3441;;-1:-1:-1;;;;;;;;;15889:38:1;;;15885:195;;15974:2;15955:8;:21;;15947:67;;;;-1:-1:-1;;;15947:67:1;;27881:2:39;15947:67:1;;;27863:21:39;27920:2;27900:18;;;27893:30;27959:34;27939:18;;;27932:62;-1:-1:-1;;;28010:18:39;;;28003:31;28051:19;;15947:67:1;27679:397:39;15947:67:1;16050:2;16054:10;16039:26;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16032:33;;;15490:4319;:::o;15885:195::-;-1:-1:-1;;;;;;;;;16097:44:1;;;16093:268;;16188:2;16169:8;:21;;16161:73;;;;-1:-1:-1;;;16161:73:1;;36240:2:39;16161:73:1;;;36222:21:39;36279:2;36259:18;;;36252:30;36318:34;36298:18;;;36291:62;-1:-1:-1;;;36369:18:39;;;36362:37;36416:19;;16161:73:1;36038:403:39;16161:73:1;16259:87;;;;16270:2;;16274:20;;16296:25;;16323:22;;16259:87;;;:::i;16093:268::-;-1:-1:-1;;;;;;;;;16378:50:1;;;16374:236;;16475:2;16456:8;:21;;16448:79;;;;-1:-1:-1;;;16448:79:1;;37620:2:39;16448:79:1;;;37602:21:39;37659:2;37639:18;;;37632:30;37698:34;37678:18;;;37671:62;-1:-1:-1;;;37749:18:39;;;37742:43;37802:19;;16448:79:1;37418:409:39;16448:79:1;16567:27;;16552:43;;;16563:2;16552:43;;;38007:36:39;-1:-1:-1;;;16567:27:1;;;;;38086:14:39;38079:22;38059:18;;;38052:50;37980:18;;16552:43:1;37832:276:39;16374:236:1;-1:-1:-1;;;;;;;;;16627:53:1;;;16623:245;;16727:2;16708:8;:21;;16700:82;;;;-1:-1:-1;;;16700:82:1;;38315:2:39;16700:82:1;;;38297:21:39;38354:2;38334:18;;;38327:30;38393:34;38373:18;;;38366:62;-1:-1:-1;;;38444:18:39;;;38437:46;38500:19;;16700:82:1;38113:412:39;16700:82:1;16822:30;;16807:46;;;16818:2;16807:46;;;38007:36:39;-1:-1:-1;;;16822:30:1;;;;;38086:14:39;38079:22;38059:18;;;38052:50;37980:18;;16807:46:1;37832:276:39;16623:245:1;-1:-1:-1;;;;;;;;;16885:44:1;;;16881:220;;16976:2;16957:8;:21;;16949:73;;;;-1:-1:-1;;;16949:73:1;;38732:2:39;16949:73:1;;;38714:21:39;38771:2;38751:18;;;38744:30;38810:34;38790:18;;;38783:62;-1:-1:-1;;;38861:18:39;;;38854:37;38908:19;;16949:73:1;38530:403:39;16949:73:1;17047:39;;;;17058:2;;17062:23;;17047:39;;;:::i;16881:220::-;-1:-1:-1;;;;;;;;;17118:40:1;;;17114:363;;17205:2;17186:8;:21;;17178:69;;;;-1:-1:-1;;;17178:69:1;;39483:2:39;17178:69:1;;;39465:21:39;39522:2;39502:18;;;39495:30;39561:34;39541:18;;;39534:62;-1:-1:-1;;;39612:18:39;;;39605:33;39655:19;;17178:69:1;39281:399:39;17178:69:1;17265:15;17299;17311:2;17308;17299:8;17265:15;17299;:::i;:::-;17291:24;;;:::i;:::-;17283:33;;17265:51;;17334:12;17349:26;17367:7;17349:17;:26::i;:::-;17417:4;17404:18;;17448:14;;;17459:2;17448:14;;;39838:36:39;17334:41:1;;-1:-1:-1;39811:18:39;17448:14:1;;;;;;;;;;;;;17441:21;;;;;15490:4319;:::o;17114:363::-;-1:-1:-1;;;;;;;;;17494:41:1;;;17490:366;;17582:2;17563:8;:21;;17555:70;;;;-1:-1:-1;;;17555:70:1;;40087:2:39;17555:70:1;;;40069:21:39;40126:2;40106:18;;;40099:30;40165:34;40145:18;;;40138:62;-1:-1:-1;;;40216:18:39;;;40209:34;40260:19;;17555:70:1;39885:400:39;17555:70:1;17643:15;17677;17689:2;17686;17677:8;17643:15;17677;:::i;:::-;17669:24;;;:::i;:::-;17661:33;;17643:51;;17712:12;17727:26;17745:7;17727:17;:26::i;:::-;17795:5;17782:19;;17827:14;;;17838:2;17827:14;;;39838:36:39;17712:41:1;;-1:-1:-1;39811:18:39;17827:14:1;39685:195:39;17490:366:1;-1:-1:-1;;;;;;;;;17873:38:1;;;17869:528;;17958:2;17939:8;:21;;17931:67;;;;-1:-1:-1;;;17931:67:1;;40492:2:39;17931:67:1;;;40474:21:39;40531:2;40511:18;;;40504:30;40570:34;40550:18;;;40543:62;-1:-1:-1;;;40621:18:39;;;40614:31;40662:19;;17931:67:1;40290:397:39;17931:67:1;18062:28;18047:9;18030:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;18020:38;;;;;;:70;18016:148;;18121:24;;;18132:2;18121:24;;;41074:36:39;18142:1:1;41126:18:39;;;41119:49;;;;41047:18;;18121:24:1;40897:277:39;18016:148:1;18227:32;18212:9;18195:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;18185:38;;;;;;:74;18181:152;;18290:24;;;18301:2;18290:24;;;41074:36:39;18311:1:1;41126:18:39;;;41119:49;;;;41047:18;;18290:24:1;40897:277:39;18181:152:1;18357:25;;;18368:2;18357:25;;;41074:36:39;-1:-1:-1;;41126:18:39;;;41119:49;;;;41047:18;;18357:25:1;40897:277:39;17869:528:1;-1:-1:-1;;;;;;;;;18414:40:1;;;18410:431;;18501:3;18482:8;:22;;18474:62;;;;-1:-1:-1;;;18474:62:1;;41381:2:39;18474:62:1;;;41363:21:39;41420:2;41400:18;;;41393:30;41459:29;41439:18;;;41432:57;41506:18;;18474:62:1;41179:351:39;18474:62:1;18554:12;18585:15;18597:2;18594;18585:8;18554:12;18585:15;:::i;:::-;18577:24;;;:::i;:::-;18569:33;;;-1:-1:-1;18620:10:1;18649:15;18661:2;18658;18649:8;18620:10;18649:15;:::i;:::-;18641:24;;;:::i;:::-;18633:33;;;-1:-1:-1;18684:14:1;18717:16;18729:3;18726:2;18717:8;18684:14;18717:16;:::i;:::-;18709:25;;;:::i;:::-;18701:34;-1:-1:-1;18753:32:1;18768:4;18774:2;18701:34;18753:14;:32::i;:::-;18810:16;;;18821:4;18810:16;;;41935:41:39;41908:18;18810:16:1;;;;;;;;;;;;18803:23;;;;;;15490:4319;:::o;18410:431::-;-1:-1:-1;;;;;;;;;18858:33:1;;;18854:417;;18938:3;18919:8;:22;;18911:62;;;;-1:-1:-1;;;18911:62:1;;41381:2:39;18911:62:1;;;41363:21:39;41420:2;41400:18;;;41393:30;41459:29;41439:18;;;41432:57;41506:18;;18911:62:1;41179:351:39;18911:62:1;18991:12;19022:15;19034:2;19031;19022:8;18991:12;19022:15;:::i;:::-;19014:24;;;:::i;:::-;19006:33;;;-1:-1:-1;19057:10:1;19086:15;19098:2;19095;19086:8;19057:10;19086:15;:::i;:::-;19078:24;;;:::i;:::-;19070:33;;;-1:-1:-1;19121:14:1;19154:16;19166:3;19163:2;19154:8;19121:14;19154:16;:::i;:::-;19146:25;;;:::i;:::-;19138:34;-1:-1:-1;19190:25:1;19198:4;19204:2;19138:34;19190:7;:25::i;18854:417::-;19419:24;;;;;;;;;;;-1:-1:-1;;;19419:24:1;;;;;19378:27;19409:35;;19378:27;;-1:-1:-1;;19378:27:1;:::i;:::-;;;;;;;;:66;19374:131;;19467:27;19485:8;19467:17;:27::i;:::-;19460:34;;;15490:4319;:::o;19374:131::-;19648:28;;;;;;;;;;;-1:-1:-1;;;19648:28:1;;;;;19607:27;19638:39;;19607:27;;-1:-1:-1;;19607:27:1;:::i;:::-;;;;;;;;:70;19603:136;;19700:28;19719:8;19700:18;:28::i;19603:136::-;19749:53;;-1:-1:-1;;;19749:53:1;;42189:2:39;19749:53:1;;;42171:21:39;42228:2;42208:18;;;42201:30;42267:34;42247:18;;;42240:62;-1:-1:-1;;;42318:18:39;;;42311:40;42368:19;;19749:53:1;41987:406:39;7174:300:1;7271:18;;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7327:19:1;::::1;7319:58;;;::::0;-1:-1:-1;;;7319:58:1;;42952:2:39;7319:58:1::1;::::0;::::1;42934:21:39::0;42991:2;42971:18;;;42964:30;43030:28;43010:18;;;43003:56;43076:18;;7319:58:1::1;42750:350:39::0;7319:58:1::1;7426:40;::::0;-1:-1:-1;;;7426:40:1;;::::1;::::0;::::1;43251:25:39::0;;;7421:2:1::1;::::0;-1:-1:-1;;;;;7426:26:1;::::1;::::0;::::1;::::0;43224:18:39;;7426:40:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7387:80:::0;;;;-1:-1:-1;7174:300:1;-1:-1:-1;;;7174:300:1:o;6636:239::-;6719:18;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;6775:16:::1;::::0;;6789:1:::1;6775:16:::0;;;;;::::1;::::0;;;6749:23:::1;::::0;6775:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;6775:16:1::1;6749:42;;6813:5;6801:6;6808:1;6801:9;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1::0;;;;;6801:17:1::1;;;-1:-1:-1::0;;;;;6801:17:1::1;;;::::0;::::1;6835:33;6852:7;6861:6;6835:16;:33::i;:::-;6828:40;;;973:1;6636:239:::0;;;;:::o;31228:962::-;-1:-1:-1;;;;;31308:18:1;;31304:376;;31357:6;31342:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;31304:376:1;;-1:-1:-1;31304:376:1;;31394:16;31413:20;31428:4;31413:14;:20::i;:::-;31506:15;;31394:39;;-1:-1:-1;31544:21:1;;;;31536:65;;;;-1:-1:-1;;;31536:65:1;;44282:2:39;31536:65:1;;;44264:21:39;44321:2;44301:18;;;44294:30;44360:33;44340:18;;;44333:61;44411:18;;31536:65:1;44080:355:39;31536:65:1;31643:24;;;31626:42;;31304:376;-1:-1:-1;;;;;31694:16:1;;31690:494;;31741:6;31726:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;31690:494:1;;-1:-1:-1;31690:494:1;;31778:14;31795:18;31810:2;31795:14;:18::i;:::-;31882:13;;31778:35;;-1:-1:-1;31827:17:1;32101:18;32113:6;31882:13;32101:18;:::i;:::-;32144:28;;;-1:-1:-1;;31690:494:1;31228:962;;;:::o;9512:284::-;9608:55;;-1:-1:-1;;;;;44737:32:39;;9608:55:1;;;44719:51:39;9562:5:1;;;;;;44692:18:39;;9608:55:1;;;-1:-1:-1;;9608:55:1;;;;;;;;;;;;;;-1:-1:-1;;;;;9608:55:1;-1:-1:-1;;;9608:55:1;;;9715:19;9608:55;;-1:-1:-1;;;;;;;;;;9715:10:1;;;:19;;9608:55;;9715:19;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9673:61;;;;9752:2;9756:7;:32;;;;;9787:1;9767:10;:17;:21;9756:32;9744:45;;;;;;;9512:284;;;:::o;1707:272::-;1770:18;1790:26;;:::i;:::-;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1836:19:1;::::1;1828:59;;;::::0;-1:-1:-1;;;1828:59:1;;45289:2:39;1828:59:1::1;::::0;::::1;45271:21:39::0;45328:2;45308:18;;;45301:30;45367:29;45347:18;;;45340:57;45414:18;;1828:59:1::1;45087:351:39::0;1828:59:1::1;1926:46;::::0;-1:-1:-1;;;1926:46:1;;-1:-1:-1;;;;;1926:39:1;::::1;:46;::::0;::::1;44719:51:39::0;;;1926:39:1;::::1;::::0;44692:18:39;;1926:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1926:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1898:74:::0;;;;-1:-1:-1;1707:272:1;-1:-1:-1;;1707:272:1:o;1985:1028::-;2095:5;2102:27;;:::i;:::-;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2149:19:1;::::1;2141:70;;;::::0;-1:-1:-1;;;2141:70:1;;57102:2:39;2141:70:1::1;::::0;::::1;57084:21:39::0;57141:2;57121:18;;;57114:30;57180:34;57160:18;;;57153:62;-1:-1:-1;;;57231:18:39;;;57224:36;57277:19;;2141:70:1::1;56900:402:39::0;2141:70:1::1;2273:46;::::0;-1:-1:-1;;;2273:46:1;;-1:-1:-1;;;;;2273:39:1;::::1;:46;::::0;::::1;44719:51:39::0;;;2223:18:1::1;::::0;;;2273:39;::::1;::::0;44692:18:39;;2273:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2273:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;2222:97;;;;2337:12;:18;;2353:2;2337:18;2329:80;;;::::0;-1:-1:-1;;;2329:80:1;;57509:2:39;2329:80:1::1;::::0;::::1;57491:21:39::0;57548:2;57528:18;;;57521:30;57587:34;57567:18;;;57560:62;-1:-1:-1;;;57638:18:39;;;57631:47;57695:19;;2329:80:1::1;57307:413:39::0;2329:80:1::1;2419:48;;:::i;:::-;2477:42:::0;;;2529:48:::1;::::0;;::::1;:33;::::0;::::1;:48:::0;2620:57:::1;::::0;-1:-1:-1;;;2620:57:1;;-1:-1:-1;;;;;2647:29:1;::::1;2620:57;::::0;::::1;43251:25:39::0;-1:-1:-1;;;;;2620:26:1;::::1;::::0;::::1;::::0;43224:18:39;;2620:57:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2587:90:1;;::::1;:30;::::0;::::1;:90:::0;2718:53:::1;::::0;-1:-1:-1;;;2718:53:1;;-1:-1:-1;;;;;2741:29:1;::::1;2718:53;::::0;::::1;43251:25:39::0;2718:22:1;;::::1;::::0;::::1;::::0;43224:18:39;;2718:53:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2687:84:1::1;:28;::::0;::::1;:84:::0;2971:12;;-1:-1:-1;2687:20:1;;-1:-1:-1;;973:1:1::1;1985:1028:::0;;;;;:::o;3637:746::-;3728:18;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;3782:1:::1;3766:6;:13;:17;3758:61;;;::::0;-1:-1:-1;;;3758:61:1;;57927:2:39;3758:61:1::1;::::0;::::1;57909:21:39::0;57966:2;57946:18;;;57939:30;58005:33;57985:18;;;57978:61;58056:18;;3758:61:1::1;57725:355:39::0;3758:61:1::1;-1:-1:-1::0;;;;;3837:21:1;::::1;3848:10;3837:21;3829:136;;;::::0;-1:-1:-1;;;3829:136:1;;58287:2:39;3829:136:1::1;::::0;::::1;58269:21:39::0;58326:3;58306:18;;;58299:31;58366:34;58346:18;;;58339:62;58437:34;58417:18;;;58410:62;58509:34;58488:19;;;58481:63;-1:-1:-1;;;58560:19:39;;;58553:37;58607:19;;3829:136:1::1;58085:547:39::0;3829:136:1::1;3980:9;3975:344;3999:6;:13;3995:1;:17;3975:344;;;4062:1;-1:-1:-1::0;;;;;4041:23:1::1;:6;4048:1;4041:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4041:23:1::1;::::0;4033:66:::1;;;::::0;-1:-1:-1;;;4033:66:1;;58839:2:39;4033:66:1::1;::::0;::::1;58821:21:39::0;58878:2;58858:18;;;58851:30;58917:32;58897:18;;;58890:60;58967:18;;4033:66:1::1;58637:354:39::0;4033:66:1::1;4113:29;4165:6;4172:1;4165:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4145:45:1::1;;4191:7;4200:6;4207:1;4200:9;;;;;;;;:::i;:::-;;;;;;;4145:65;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;59188:32:39;;;59170:51;;59257:32;;59252:2;59237:18;;59230:60;59158:2;59143:18;;58996:300;4145:65:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4113:97;;4232:23;:29;;4259:2;4232:29;4224:84;;;::::0;-1:-1:-1;;;4224:84:1;;59755:2:39;4224:84:1::1;::::0;::::1;59737:21:39::0;59794:2;59774:18;;;59767:30;59833:34;59813:18;;;59806:62;-1:-1:-1;;;59884:18:39;;;59877:40;59934:19;;4224:84:1::1;59553:406:39::0;4224:84:1::1;-1:-1:-1::0;4014:3:1::1;;3975:344;;;-1:-1:-1::0;4343:2:1::1;::::0;3637:746;-1:-1:-1;;;3637:746:1:o;29780:342::-;29871:10;380:5;29871:25;29863:56;;;;-1:-1:-1;;;29863:56:1;;60166:2:39;29863:56:1;;;60148:21:39;60205:2;60185:18;;;60178:30;-1:-1:-1;;;60224:18:39;;;60217:48;60282:18;;29863:56:1;59964:342:39;29863:56:1;-1:-1:-1;;;;;29937:18:1;;29929:50;;;;-1:-1:-1;;;29929:50:1;;60513:2:39;29929:50:1;;;60495:21:39;60552:2;60532:18;;;60525:30;-1:-1:-1;;;60571:18:39;;;60564:49;60630:18;;29929:50:1;60311:343:39;29929:50:1;-1:-1:-1;;;;;29997:16:1;;29989:50;;;;-1:-1:-1;;;29989:50:1;;60861:2:39;29989:50:1;;;60843:21:39;60900:2;60880:18;;;60873:30;-1:-1:-1;;;60919:18:39;;;60912:51;60980:18;;29989:50:1;60659:345:39;29989:50:1;30049:25;30057:4;30063:2;30067:6;30049:7;:25::i;:::-;30104:2;-1:-1:-1;;;;;30089:26:1;30098:4;-1:-1:-1;;;;;30089:26:1;;30108:6;30089:26;;;;43251:25:39;;43239:2;43224:18;;43105:177;30089:26:1;;;;;;;;29780:342;;;:::o;8371:253::-;8446:5;;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;8477:19:1;::::1;8469:73;;;::::0;-1:-1:-1;;;8469:73:1;;61211:2:39;8469:73:1::1;::::0;::::1;61193:21:39::0;61250:2;61230:18;;;61223:30;61289:34;61269:18;;;61262:62;-1:-1:-1;;;61340:18:39;;;61333:39;61389:19;;8469:73:1::1;61009:405:39::0;8469:73:1::1;8559:58;::::0;-1:-1:-1;;;8559:58:1;;-1:-1:-1;;;;;8559:51:1;::::1;:58;::::0;::::1;44719:51:39::0;;;8559::1;::::1;::::0;44692:18:39;;8559:58:1::1;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8552:65;;;;8371:253:::0;;;:::o;8630:652::-;8706:5;8713:15;;:::i;:::-;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;8748:19:1;::::1;8740:58;;;::::0;-1:-1:-1;;;8740:58:1;;61952:2:39;8740:58:1::1;::::0;::::1;61934:21:39::0;61991:2;61971:18;;;61964:30;62030:28;62010:18;;;62003:56;62076:18;;8740:58:1::1;61750:350:39::0;8740:58:1::1;8859:46;::::0;-1:-1:-1;;;8859:46:1;;-1:-1:-1;;;;;8859:39:1;::::1;:46;::::0;::::1;44719:51:39::0;;;8809:18:1::1;::::0;;;8859:39;::::1;::::0;44692:18:39;;8859:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;8859:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;8808:97;;;;8923:12;:18;;8939:2;8923:18;8915:68;;;::::0;-1:-1:-1;;;8915:68:1;;62307:2:39;8915:68:1::1;::::0;::::1;62289:21:39::0;62346:2;62326:18;;;62319:30;62385:34;62365:18;;;62358:62;-1:-1:-1;;;62436:18:39;;;62429:35;62481:19;;8915:68:1::1;62105:401:39::0;8915:68:1::1;8998:9;8993:218;9017:15:::0;;:25:::1;;::::0;:32;9013:36;::::1;8993:218;;;9114:7;9074:9;:15;;;:25;;;9100:1;9074:28;;;;;;;;:::i;:::-;;;;;;;:36;;;:47:::0;9070:131:::1;;9149:2;9153:9;:15;;;:25;;;9179:1;9153:28;;;;;;;;:::i;:::-;;;;;;;:32;;;9141:45;;;;;;;;;9070:131;9051:3;;8993:218;;;;9220:24;;:::i;:::-;9262:2;::::0;9266:8;;-1:-1:-1;8630:652:1;-1:-1:-1;;;;;8630:652:1:o;3019:612::-;3090:5;3097:24;;:::i;:::-;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;3141:19:1;::::1;3133:67;;;::::0;-1:-1:-1;;;3133:67:1;;62713:2:39;3133:67:1::1;::::0;::::1;62695:21:39::0;62752:2;62732:18;;;62725:30;62791:34;62771:18;;;62764:62;-1:-1:-1;;;62842:18:39;;;62835:33;62885:19;;3133:67:1::1;62511:399:39::0;3133:67:1::1;3262:46;::::0;-1:-1:-1;;;3262:46:1;;-1:-1:-1;;;;;3262:39:1;::::1;:46;::::0;::::1;44719:51:39::0;;;3212:18:1::1;::::0;;;3262:39;::::1;::::0;44692:18:39;;3262:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;3262:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;3211:97;;;;3326:12;:18;;3342:2;3326:18;3318:77;;;::::0;-1:-1:-1;;;3318:77:1;;63117:2:39;3318:77:1::1;::::0;::::1;63099:21:39::0;63156:2;63136:18;;;63129:30;63195:34;63175:18;;;63168:62;-1:-1:-1;;;63246:18:39;;;63239:44;63300:19;;3318:77:1::1;62915:410:39::0;3318:77:1::1;3405:42;;:::i;:::-;3487:9;3457:17;:27;;:39;;;;3554:5;-1:-1:-1::0;;;;;3547:22:1::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3536:37;;3506:26;::::0;::::1;:67:::0;3592:12;;-1:-1:-1;3506:17:1;;-1:-1:-1;;3019:612:1;;;:::o;6393:237::-;6475:18;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;6531:16:::1;::::0;;6545:1:::1;6531:16:::0;;;;;::::1;::::0;;;6505:23:::1;::::0;6531:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;6531:16:1::1;6505:42;;6569:5;6557:6;6564:1;6557:9;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1::0;;;;;6557:17:1::1;;;-1:-1:-1::0;;;;;6557:17:1::1;;;::::0;::::1;6591:32;6607:7;6616:6;6591:15;:32::i;5632:755::-:0;5724:18;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;5778:1:::1;5762:6;:13;:17;5754:62;;;::::0;-1:-1:-1;;;5754:62:1;;63810:2:39;5754:62:1::1;::::0;::::1;63792:21:39::0;;;63829:18;;;63822:30;63888:34;63868:18;;;63861:62;63940:18;;5754:62:1::1;63608:356:39::0;5754:62:1::1;-1:-1:-1::0;;;;;5834:21:1;::::1;5845:10;5834:21;5826:137;;;::::0;-1:-1:-1;;;5826:137:1;;64171:2:39;5826:137:1::1;::::0;::::1;64153:21:39::0;64210:3;64190:18;;;64183:31;64250:34;64230:18;;;64223:62;64321:34;64301:18;;;64294:62;64393:34;64372:19;;;64365:63;-1:-1:-1;;;64444:19:39;;;64437:38;64492:19;;5826:137:1::1;63969:548:39::0;5826:137:1::1;5978:9;5973:350;5997:6;:13;5993:1;:17;5973:350;;;6060:1;-1:-1:-1::0;;;;;6039:23:1::1;:6;6046:1;6039:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;6039:23:1::1;::::0;6031:67:::1;;;::::0;-1:-1:-1;;;6031:67:1;;64724:2:39;6031:67:1::1;::::0;::::1;64706:21:39::0;64763:2;64743:18;;;64736:30;64802:33;64782:18;;;64775:61;64853:18;;6031:67:1::1;64522:355:39::0;6031:67:1::1;6112:30;6165:6;6172:1;6165:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;6145:46:1::1;;6192:7;6201:6;6208:1;6201:9;;;;;;;;:::i;:::-;;;;;;;6145:66;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;59188:32:39;;;59170:51;;59257:32;;59252:2;59237:18;;59230:60;59158:2;59143:18;;58996:300;6145:66:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6112:99;;6233:24;:30;;6261:2;6233:30;6225:87;;;::::0;-1:-1:-1;;;6225:87:1;;65084:2:39;6225:87:1::1;::::0;::::1;65066:21:39::0;65123:2;65103:18;;;65096:30;65162:34;65142:18;;;65135:62;-1:-1:-1;;;65213:18:39;;;65206:42;65265:19;;6225:87:1::1;64882:408:39::0;6225:87:1::1;-1:-1:-1::0;6012:3:1::1;;5973:350;;4389:605:::0;4533:18;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;4571:19:1;::::1;4563:61;;;::::0;-1:-1:-1;;;4563:61:1;;65497:2:39;4563:61:1::1;::::0;::::1;65479:21:39::0;65536:2;65516:18;;;65509:30;65575:31;65555:18;;;65548:59;65624:18;;4563:61:1::1;65295:353:39::0;4563:61:1::1;4661:1;4642:9;:16;:20;4634:67;;;::::0;-1:-1:-1;;;4634:67:1;;65855:2:39;4634:67:1::1;::::0;::::1;65837:21:39::0;65894:2;65874:18;;;65867:30;65933:34;65913:18;;;65906:62;-1:-1:-1;;;65984:18:39;;;65977:32;66026:19;;4634:67:1::1;65653:398:39::0;4634:67:1::1;4736:9;:16;4719:6;:13;:33;4711:80;;;::::0;-1:-1:-1;;;4711:80:1;;66258:2:39;4711:80:1::1;::::0;::::1;66240:21:39::0;66297:2;66277:18;;;66270:30;66336:34;66316:18;;;66309:62;-1:-1:-1;;;66387:18:39;;;66380:32;66429:19;;4711:80:1::1;66056:398:39::0;4711:80:1::1;4806:9;4801:129;4825:9;:16;4821:1;:20;4801:129;;;4862:57;4876:5;4883:10;4895:9;4905:1;4895:12;;;;;;;;:::i;:::-;;;;;;;4909:6;4916:1;4909:9;;;;;;;;:::i;:::-;;;;;;;4862:13;:57::i;:::-;-1:-1:-1::0;4843:3:1::1;;4801:129;;;-1:-1:-1::0;4954:2:1::1;::::0;4389:605;-1:-1:-1;;;;4389:605:1:o;9288:218::-;9351:5;;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;9383:19:1;::::1;9375:61;;;::::0;-1:-1:-1;;;9375:61:1;;66661:2:39;9375:61:1::1;::::0;::::1;66643:21:39::0;66700:2;66680:18;;;66673:30;66739:31;66719:18;;;66712:59;66788:18;;9375:61:1::1;66459:353:39::0;9375:61:1::1;9453:46;::::0;-1:-1:-1;;;9453:46:1;;-1:-1:-1;;;;;9453:39:1;::::1;:46;::::0;::::1;44719:51:39::0;;;9453:39:1;::::1;::::0;44692:18:39;;9453:46:1::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7792:262::-:0;7870:5;;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7901:19:1;::::1;7893:76;;;::::0;-1:-1:-1;;;7893:76:1;;67433:2:39;7893:76:1::1;::::0;::::1;67415:21:39::0;67472:2;67452:18;;;67445:30;67511:34;67491:18;;;67484:62;-1:-1:-1;;;67562:18:39;;;67555:42;67614:19;;7893:76:1::1;67231:408:39::0;7893:76:1::1;7986:61;::::0;-1:-1:-1;;;7986:61:1;;-1:-1:-1;;;;;7986:54:1;::::1;:61;::::0;::::1;44719:51:39::0;;;7986:54:1;::::1;::::0;44692:18:39;;7986:61:1::1;44573:203:39::0;8060:305:1;8143:5;8150:17;;;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;8232:19:1;::::1;8224:65;;;::::0;-1:-1:-1;;;8224:65:1;;67846:2:39;8224:65:1::1;::::0;::::1;67828:21:39::0;67885:2;67865:18;;;67858:30;67924:34;67904:18;;;67897:62;-1:-1:-1;;;67975:18:39;;;67968:31;68016:19;;8224:65:1::1;67644:397:39::0;8224:65:1::1;8306:52;::::0;-1:-1:-1;;;8306:52:1;;-1:-1:-1;;;;;8306:45:1;::::1;:52;::::0;::::1;44719:51:39::0;;;8306:45:1;::::1;::::0;44692:18:39;;8306:52:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;8306:52:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;8299:59;;;;;;;;8060:305:::0;;;;;:::o;6881:287::-;-1:-1:-1;;;;;;;;6950:18:1;-1:-1:-1;;;;;;;;;;;;;;;915:4:1;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7013:19:1;::::1;7005:65;;;::::0;-1:-1:-1;;;7005:65:1;;69349:2:39;7005:65:1::1;::::0;::::1;69331:21:39::0;69388:2;69368:18;;;69361:30;69427:34;69407:18;;;69400:62;-1:-1:-1;;;69478:18:39;;;69471:31;69519:19;;7005:65:1::1;69147:397:39::0;7005:65:1::1;7109:52;::::0;-1:-1:-1;;;7109:52:1;;-1:-1:-1;;;;;7109:45:1;::::1;:52;::::0;::::1;44719:51:39::0;;;7109:45:1;::::1;::::0;44692:18:39;;7109:52:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;10810:924::-:0;10909:18;;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10982:19:1;::::1;10974:56;;;::::0;-1:-1:-1;;;10974:56:1;;70128:2:39;10974:56:1::1;::::0;::::1;70110:21:39::0;70167:2;70147:18;;;70140:30;70206:26;70186:18;;;70179:54;70250:18;;10974:56:1::1;69926:348:39::0;10974:56:1::1;11057:1;11048:6;:10;;;11040:48;;;::::0;-1:-1:-1;;;11040:48:1;;70481:2:39;11040:48:1::1;::::0;::::1;70463:21:39::0;70520:2;70500:18;;;70493:30;70559:27;70539:18;;;70532:55;70604:18;;11040:48:1::1;70279:349:39::0;11040:48:1::1;11159:46;::::0;-1:-1:-1;;;11159:46:1;;-1:-1:-1;;;;;11159:39:1;::::1;:46;::::0;::::1;44719:51:39::0;;;11100:27:1::1;::::0;;;11159:39;::::1;::::0;44692:18:39;;11159:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;11159:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;11099:106;;;;11223:21;:27;;11248:2;11223:27;11215:75;;;::::0;-1:-1:-1;;;11215:75:1;;70835:2:39;11215:75:1::1;::::0;::::1;70817:21:39::0;70874:2;70854:18;;;70847:30;70913:34;70893:18;;;70886:62;-1:-1:-1;;;70964:18:39;;;70957:33;71007:19;;11215:75:1::1;70633:399:39::0;11215:75:1::1;11327:15:::0;;:24:::1;;::::0;-1:-1:-1;;;;;11369:29:1;::::1;11361:68;;;::::0;-1:-1:-1;;;11361:68:1;;71239:2:39;11361:68:1::1;::::0;::::1;71221:21:39::0;71278:2;71258:18;;;71251:30;71317:28;71297:18;;;71290:56;71363:18;;11361:68:1::1;71037:350:39::0;11361:68:1::1;11440:86;::::0;-1:-1:-1;;;11440:86:1;;-1:-1:-1;;;;;71612:32:39;;;11440:86:1::1;::::0;::::1;71594:51:39::0;11498:1:1::1;71661:18:39::0;;;71654:60;-1:-1:-1;;;;;11502:23:1;::::1;71730:18:39::0;;;71723:34;11440:32:1;::::1;::::0;::::1;::::0;71567:18:39;;11440:86:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11552:2;11537:17;;11632:5;-1:-1:-1::0;;;;;11625:25:1::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11595:59;;11690:1;11672:14;:19;;;;11664:63;;;::::0;-1:-1:-1;;;11664:63:1;;72205:2:39;11664:63:1::1;::::0;::::1;72187:21:39::0;72244:2;72224:18;;;72217:30;72283:33;72263:18;;;72256:61;72334:18;;11664:63:1::1;72003:355:39::0;11664:63:1::1;10964:770;;;10810:924:::0;;;;;;:::o;1398:303::-;1476:16;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;1607:40:::1;::::0;;-1:-1:-1;;;1607:40:1::1;::::0;::::1;72544:46:39::0;;;1504:15:1::1;72606:11:39::0;;;72599:72;;;-1:-1:-1;;;;;;72709:2:39;72705:15;;;72701:53;72687:12;;;72680:75;1522:26:1;;1504:15;;;;72771:12:39;1607:40:1::1;;;;;;;;;;;;1599:49;;;:::i;:::-;1682:11:::0;;1398:303;-1:-1:-1;;;;;1398:303:1:o;9802:1002::-;9901:18;;9959:28;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10012:19:1;::::1;10004:56;;;::::0;-1:-1:-1;;;10004:56:1;;73298:2:39;10004:56:1::1;::::0;::::1;73280:21:39::0;73337:2;73317:18;;;73310:30;73376:26;73356:18;;;73349:54;73420:18;;10004:56:1::1;73096:348:39::0;10004:56:1::1;10087:1;10078:6;:10;;;10070:48;;;::::0;-1:-1:-1;;;10070:48:1;;73651:2:39;10070:48:1::1;::::0;::::1;73633:21:39::0;73690:2;73670:18;;;73663:30;73729:27;73709:18;;;73702:55;73774:18;;10070:48:1::1;73449:349:39::0;10070:48:1::1;10189:46;::::0;-1:-1:-1;;;10189:46:1;;-1:-1:-1;;;;;10189:39:1;::::1;:46;::::0;::::1;44719:51:39::0;;;10130:27:1::1;::::0;;;10189:39;::::1;::::0;44692:18:39;;10189:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;10189:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;10129:106;;;;10253:21;:27;;10278:2;10253:27;10245:75;;;::::0;-1:-1:-1;;;10245:75:1;;74005:2:39;10245:75:1::1;::::0;::::1;73987:21:39::0;74044:2;74024:18;;;74017:30;74083:34;74063:18;;;74056:62;-1:-1:-1;;;74134:18:39;;;74127:33;74177:19;;10245:75:1::1;73803:399:39::0;10245:75:1::1;10357:15:::0;;:24:::1;;::::0;-1:-1:-1;;;;;10399:29:1;::::1;10391:68;;;::::0;-1:-1:-1;;;10391:68:1;;74409:2:39;10391:68:1::1;::::0;::::1;74391:21:39::0;74448:2;74428:18;;;74421:30;74487:28;74467:18;;;74460:56;74533:18;;10391:68:1::1;74207:350:39::0;10391:68:1::1;10470:86;::::0;-1:-1:-1;;;10470:86:1;;10511:1:::1;10470:86;::::0;::::1;71594:51:39::0;-1:-1:-1;;;;;71681:32:39;;;71661:18;;;71654:60;-1:-1:-1;;;;;10532:23:1;::::1;71730:18:39::0;;;71723:34;10470:32:1;::::1;::::0;::::1;::::0;71567:18:39;;10470:86:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10582:2;10567:17;;10662:5;-1:-1:-1::0;;;;;10655:25:1::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10710:14;::::0;;10722:1:::1;10710:14:::0;;;::::1;::::0;::::1;::::0;;;10625:59;;-1:-1:-1;10710:14:1::1;10694:30;;10760:1;10742:14;:19;;;;10734:63;;;::::0;-1:-1:-1;;;10734:63:1;;74764:2:39;10734:63:1::1;::::0;::::1;74746:21:39::0;74803:2;74783:18;;;74776:30;74842:33;74822:18;;;74815:61;74893:18;;10734:63:1::1;74562:355:39::0;10734:63:1::1;9994:810;;;9802:1002:::0;;;;;;;:::o;5000:626::-;5149:18;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;5187:19:1;::::1;5179:60;;;::::0;-1:-1:-1;;;5179:60:1;;75124:2:39;5179:60:1::1;::::0;::::1;75106:21:39::0;75163:2;75143:18;;;75136:30;75202;75182:18;;;75175:58;75250:18;;5179:60:1::1;74922:352:39::0;5179:60:1::1;5264:6:::0;5293:9;5249:12:::1;5316:10;::::0;;::::1;;5312:108;;;-1:-1:-1::0;5349:9:1;;-1:-1:-1;5377:6:1;5397:12:::1;-1:-1:-1::0;;5397:12:1;::::1;:::i;:::-;;;5312:108;5449:2;-1:-1:-1::0;;;;;5434:43:1::1;5443:4;-1:-1:-1::0;;;;;5434:43:1::1;;5468:6;-1:-1:-1::0;;;;;5453:23:1::1;5434:43;;;;43251:25:39::0;;43239:2;43224:18;;43105:177;5434:43:1::1;;;;;;;;5487:74;::::0;-1:-1:-1;;;5487:74:1;;-1:-1:-1;;;;;71612:32:39;;;5487:74:1::1;::::0;::::1;71594:51:39::0;71681:32;;;71661:18;;;71654:60;-1:-1:-1;;;;;5537:23:1;::::1;71730:18:39::0;;;71723:34;5487:39:1;::::1;::::0;::::1;::::0;71567:18:39;;5487:74:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;5586:2:1::1;::::0;5000:626;-1:-1:-1;;;;;;;;;;5000:626:1:o;7480:306::-;7615:5;;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7646:19:1;::::1;7638:63;;;::::0;-1:-1:-1;;;7638:63:1;;75723:2:39;7638:63:1::1;::::0;::::1;75705:21:39::0;75762:2;75742:18;;;75735:30;75801:33;75781:18;;;75774:61;75852:18;;7638:63:1::1;75521:355:39::0;7638:63:1::1;7730:48;::::0;-1:-1:-1;;;7730:48:1;;-1:-1:-1;;;;;59188:32:39;;;7730:48:1::1;::::0;::::1;59170:51:39::0;59257:32;;;59237:18;;;59230:60;7725:2:1::1;::::0;7730:31;;::::1;::::0;::::1;::::0;59143:18:39;;7730:48:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7711:68;;;;7480:306:::0;;;;;;:::o;26829:319::-;27021:52;;-1:-1:-1;;;27021:52:1;;-1:-1:-1;;;;;44737:32:39;;27021:52:1;;;44719:51:39;26899:7:1;;-1:-1:-1;;;26936:29:1;26899:7;;;;380:5;;27021:43;;44692:18:39;;27021:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27002:71;;27115:8;27125:3;27130:9;27098:42;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;27090:51;;;:::i;:::-;27083:58;26829:319;-1:-1:-1;;;;;26829:319:1:o;19815:2453::-;19876:12;-1:-1:-1;;;;;;;;;19904:32:1;;;19900:86;;19970:4;19959:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;19952:23;;19815:2453;;;:::o;19900:86::-;-1:-1:-1;;;;;;;;;19999:36:1;;;19995:94;;20069:8;;20058:20;;;20069:8;;;;20058:20;;;39838:36:39;39811:18;20058:20:1;39685:195:39;19995:94:1;-1:-1:-1;;;;;;;;;20102:39:1;;;20098:100;;20175:11;;20164:23;;;;;;43251:25:39;;43239:2;43224:18;;43105:177;20098:100:1;-1:-1:-1;;;;;;;;;20211:34:1;;;20207:90;;20279:6;20268:18;;;;;;;;:::i;20207:90::-;-1:-1:-1;;;;;;;;;20310:37:1;;;20306:251;;20390:2;20371:8;:21;;20363:64;;;;-1:-1:-1;;;20363:64:1;;77409:2:39;20363:64:1;;;77391:21:39;77448:2;77428:18;;;77421:30;77487:32;77467:18;;;77460:60;77537:18;;20363:64:1;77207:354:39;20363:64:1;20442:15;20476;20488:2;20485;20476:8;20442:15;20476;:::i;:::-;20468:24;;;:::i;:::-;20460:33;;20442:51;;20525:20;20537:7;20525:11;:20::i;:::-;20514:32;;;;;;43251:25:39;;43239:2;43224:18;;43105:177;20514:32:1;;;;;;;;;;;;;20507:39;;;19815:2453;;;:::o;20306:251::-;-1:-1:-1;;;;;;;;;20570:36:1;;;20566:374;;20649:2;20630:8;:21;;20622:63;;;;-1:-1:-1;;;20622:63:1;;77768:2:39;20622:63:1;;;77750:21:39;77807:2;77787:18;;;77780:30;77846:31;77826:18;;;77819:59;77895:18;;20622:63:1;77566:353:39;20622:63:1;20700:10;20729:15;20741:2;20738;20729:8;20700:10;20729:15;:::i;:::-;20721:24;;;:::i;:::-;20713:33;;;-1:-1:-1;20760:14:1;20793:15;20805:2;20802;20793:8;20760:14;20793:15;:::i;:::-;20785:24;;;:::i;:::-;20777:33;-1:-1:-1;20840:10:1;20864:28;20840:10;20881:2;20777:33;20864:9;:28::i;:::-;20913:16;;;20924:4;20913:16;;;41935:41:39;41908:18;20913:16:1;;;;;;;;;;;;;20906:23;;;;;19815:2453;;;:::o;20566:374::-;-1:-1:-1;;;;;;;;;20953:40:1;;;20949:497;;21036:3;21017:8;:22;;21009:65;;;;-1:-1:-1;;;21009:65:1;;78126:2:39;21009:65:1;;;78108:21:39;78165:2;78145:18;;;78138:30;78204:32;78184:18;;;78177:60;78254:18;;21009:65:1;77924:354:39;21009:65:1;21089:12;21120:15;21132:2;21129;21120:8;21089:12;21120:15;:::i;:::-;21112:24;;;:::i;:::-;21104:33;;;-1:-1:-1;21151:10:1;21180:15;21192:2;21189;21180:8;21151:10;21180:15;:::i;:::-;21172:24;;;:::i;:::-;21164:33;;;-1:-1:-1;21211:14:1;21244:16;21256:3;21253:2;21244:8;21211:14;21244:16;:::i;:::-;21236:25;;;:::i;:::-;21228:34;-1:-1:-1;21294:10:1;21319:38;21335:4;21294:10;21228:34;21319:15;:38::i;:::-;21371:27;21381:4;21387:2;21391:6;21371:9;:27::i;:::-;21419:16;;;21430:4;21419:16;;;41935:41:39;41908:18;21419:16:1;;;;;;;;;;;;21412:23;;;;;;19815:2453;;;:::o;20949:497::-;-1:-1:-1;;;;;;;;;21459:37:1;;;21455:321;;21539:2;21520:8;:21;;21512:64;;;;-1:-1:-1;;;21512:64:1;;78485:2:39;21512:64:1;;;78467:21:39;78524:2;78504:18;;;78497:30;78563:32;78543:18;;;78536:60;78613:18;;21512:64:1;78283:354:39;21512:64:1;21591:13;21623:15;21635:2;21632;21623:8;21591:13;21623:15;:::i;:::-;21615:24;;;:::i;:::-;21607:33;;;-1:-1:-1;21654:15:1;21688;21700:2;21697;21688:8;21654:15;21688;:::i;:::-;21680:24;;;:::i;:::-;21672:33;;21654:51;;21737:27;21749:5;21756:7;21737:11;:27::i;:::-;21726:39;;;;;;43251:25:39;;43239:2;43224:18;;43105:177;21726:39:1;;;;;;;;;;;;;21719:46;;;;19815:2453;;;:::o;21455:321::-;-1:-1:-1;;;;;;;;;21789:35:1;;;21785:432;;21867:2;21848:8;:21;;21840:62;;;;-1:-1:-1;;;21840:62:1;;78844:2:39;21840:62:1;;;78826:21:39;78883:2;78863:18;;;78856:30;78922;78902:18;;;78895:58;78970:18;;21840:62:1;78642:352:39;21840:62:1;21917:15;21951;21963:2;21960;21951:8;21917:15;21951;:::i;:::-;21943:24;;;:::i;:::-;21935:33;;;-1:-1:-1;21982:14:1;22015:15;22027:2;22024;22015:8;21982:14;22015:15;:::i;:::-;22007:24;;;:::i;:::-;21999:33;-1:-1:-1;22062:10:1;22086:32;22062:10;22102:7;21999:33;22086:8;:32::i;:::-;22153:7;-1:-1:-1;;;;;22137:32:1;22146:5;-1:-1:-1;;;;;22137:32:1;;22162:6;22137:32;;;;43251:25:39;;43239:2;43224:18;;43105:177;22137:32:1;;;;;;;;22190:16;;;22201:4;22190:16;;;41935:41:39;41908:18;22190:16:1;41795:187:39;21785:432:1;22233:28;22252:8;22233:18;:28::i;22274:2981::-;22336:12;-1:-1:-1;;;;;;;;;22364:33:1;;;22360:87;;22431:4;22420:16;;;;;;;;:::i;22360:87::-;-1:-1:-1;;;;;;;;;22460:35:1;;;22456:91;;22529:6;22518:18;;;;;;;;:::i;22456:91::-;-1:-1:-1;;;;;;;;;22560:37:1;;;22556:250;;22640:2;22621:8;:21;;22613:63;;;;-1:-1:-1;;;22613:63:1;;79201:2:39;22613:63:1;;;79183:21:39;79240:2;79220:18;;;79213:30;79279:31;79259:18;;;79252:59;79328:18;;22613:63:1;78999:353:39;22613:63:1;22690:16;22725:15;22737:2;22734;22725:8;22690:16;22725:15;:::i;:::-;22717:24;;;:::i;:::-;22709:33;-1:-1:-1;22774:20:1;22709:33;22774:10;:20::i;:::-;22763:32;;;;;;;;:::i;22556:250::-;-1:-1:-1;;;;;;;;;22819:40:1;;;22815:101;;22893:11;;22882:23;;;;;;43251:25:39;;43239:2;43224:18;;43105:177;22815:101:1;-1:-1:-1;;;;;;;;;22929:38:1;;;22925:247;;23010:2;22991:8;:21;;22983:64;;;;-1:-1:-1;;;22983:64:1;;77409:2:39;22983:64:1;;;77391:21:39;77448:2;77428:18;;;77421:30;77487:32;77467:18;;;77460:60;77537:18;;22983:64:1;77207:354:39;22925:247:1;-1:-1:-1;;;;;;;;;23185:36:1;;;23181:247;;23264:2;23245:8;:21;;23237:62;;;;-1:-1:-1;;;23237:62:1;;79784:2:39;23237:62:1;;;79766:21:39;79823:2;79803:18;;;79796:30;79862;79842:18;;;79835:58;79910:18;;23237:62:1;79582:352:39;23237:62:1;23313:16;23348:15;23360:2;23357;23348:8;23313:16;23348:15;:::i;:::-;23340:24;;;:::i;:::-;23332:33;-1:-1:-1;23397:19:1;23332:33;23397:9;:19::i;:::-;23386:31;;;-1:-1:-1;;;;;44737:32:39;;;23386:31:1;;;44719:51:39;44692:18;23386:31:1;44573:203:39;23181:247:1;-1:-1:-1;;;;;;;;;23441:41:1;;;23437:412;;23525:3;23506:8;:22;;23498:68;;;;-1:-1:-1;;;23498:68:1;;80141:2:39;23498:68:1;;;80123:21:39;80180:2;80160:18;;;80153:30;80219:34;80199:18;;;80192:62;-1:-1:-1;;;80270:18:39;;;80263:31;80311:19;;23498:68:1;79939:397:39;23498:68:1;23580:12;23611:15;23623:2;23620;23611:8;23580:12;23611:15;:::i;:::-;23603:24;;;:::i;:::-;23595:33;;;-1:-1:-1;23642:10:1;23671:15;23683:2;23680;23671:8;23642:10;23671:15;:::i;:::-;23663:24;;;:::i;:::-;23655:33;;;-1:-1:-1;23702:16:1;23737;23749:3;23746:2;23737:8;23702:16;23737;:::i;:::-;23729:25;;;:::i;:::-;23721:34;-1:-1:-1;23769:32:1;23782:4;23788:2;23721:34;23769:12;:32::i;23437:412::-;-1:-1:-1;;;;;;;;;23862:36:1;;;23858:344;;23941:2;23922:8;:21;;23914:62;;;;-1:-1:-1;;;23914:62:1;;78844:2:39;23914:62:1;;;78826:21:39;78883:2;78863:18;;;78856:30;78922;78902:18;;;78895:58;78970:18;;23914:62:1;78642:352:39;23914:62:1;23990:15;24024;24036:2;24033;24024:8;23990:15;24024;:::i;:::-;24016:24;;;:::i;:::-;24008:33;;;-1:-1:-1;24055:16:1;24090:15;24102:2;24099;24090:8;24055:16;24090:15;:::i;:::-;24082:24;;;:::i;:::-;24074:33;-1:-1:-1;24121:33:1;24130:7;24074:33;24149:4;24121:8;:33::i;:::-;24175:16;;;24186:4;24175:16;;;41935:41:39;41908:18;24175:16:1;41795:187:39;23858:344:1;-1:-1:-1;;;;;;;;;24215:46:1;;;24211:372;;24304:2;24285:8;:21;;24277:72;;;;-1:-1:-1;;;24277:72:1;;80543:2:39;24277:72:1;;;80525:21:39;80582:2;80562:18;;;80555:30;80621:34;80601:18;;;80594:62;-1:-1:-1;;;80672:18:39;;;80665:36;80718:19;;24277:72:1;80341:402:39;24277:72:1;24363:16;24398:15;24410:2;24407;24398:8;24363:16;24398:15;:::i;:::-;24390:24;;;:::i;:::-;24382:33;;;-1:-1:-1;24429:13:1;24461:15;24473:2;24470;24461:8;24429:13;24461:15;:::i;:::-;24453:24;;;:::i;:::-;24482:1;24445:38;;-1:-1:-1;24497:38:1;24516:8;24445:38;24497:18;:38::i;24211:372::-;-1:-1:-1;;;;;;;;;24596:40:1;;;24592:259;;24679:2;24660:8;:21;;24652:66;;;;-1:-1:-1;;;24652:66:1;;80950:2:39;24652:66:1;;;80932:21:39;;;80969:18;;;80962:30;81028:34;81008:18;;;81001:62;81080:18;;24652:66:1;80748:356:39;24652:66:1;24732:16;24767:15;24779:2;24776;24767:8;24732:16;24767:15;:::i;:::-;24759:24;;;:::i;:::-;24751:33;-1:-1:-1;24816:23:1;24751:33;24816:13;:23::i;24592:259::-;-1:-1:-1;;;;;;;;;24864:45:1;;;24860:344;;24952:2;24933:8;:21;;24925:71;;;;-1:-1:-1;;;24925:71:1;;81311:2:39;24925:71:1;;;81293:21:39;81350:2;81330:18;;;81323:30;81389:34;81369:18;;;81362:62;-1:-1:-1;;;81440:18:39;;;81433:35;81485:19;;24925:71:1;81109:401:39;24925:71:1;25010:13;25042:15;25054:2;25051;25042:8;25010:13;25042:15;:::i;:::-;25034:24;;;:::i;:::-;25026:33;;;-1:-1:-1;25073:16:1;25108:15;25120:2;25117;25108:8;25073:16;25108:15;:::i;:::-;25100:24;;;:::i;:::-;25092:33;;25073:52;;25157:35;25176:5;25183:8;25157:18;:35::i;:::-;25146:47;;;41960:14:39;;41953:22;25146:47:1;;;41935:41:39;41908:18;25146:47:1;41795:187:39;26092:312:1;26277:52;;-1:-1:-1;;;26277:52:1;;-1:-1:-1;;;;;44737:32:39;;26277:52:1;;;44719:51:39;26159:7:1;;-1:-1:-1;;;26196:25:1;26159:7;;;;380:5;;26277:43;;44692:18:39;;26277:52:1;44573:203:39;28301:169:1;28356:14;28382:12;28397:23;28412:7;28397:14;:23::i;:::-;28451:11;;28301:169;-1:-1:-1;;;28301:169:1:o;33224:404::-;33315:24;33342:27;33354:5;33361:7;33342:11;:27::i;:::-;33315:54;;-1:-1:-1;;33383:16:1;:37;33379:243;;33464:6;33444:16;:26;;33436:68;;;;-1:-1:-1;;;33436:68:1;;81717:2:39;33436:68:1;;;81699:21:39;81756:2;81736:18;;;81729:30;81795:31;81775:18;;;81768:59;81844:18;;33436:68:1;81515:353:39;33436:68:1;33546:51;33555:5;33562:7;33590:6;33571:16;:25;33546:8;:51::i;:::-;33305:323;33224:404;;;:::o;28476:191::-;28546:14;28572:12;28587:30;28602:5;28609:7;28587:14;:30::i;:::-;28648:11;;28476:191;-1:-1:-1;;;;28476:191:1:o;32196:330::-;-1:-1:-1;;;;;32288:19:1;;32280:55;;;;-1:-1:-1;;;32280:55:1;;82075:2:39;32280:55:1;;;82057:21:39;82114:2;82094:18;;;82087:30;82153:25;82133:18;;;82126:53;82196:18;;32280:55:1;81873:347:39;32280:55:1;-1:-1:-1;;;;;32353:21:1;;32345:59;;;;-1:-1:-1;;;32345:59:1;;82427:2:39;32345:59:1;;;82409:21:39;82466:2;82446:18;;;82439:30;82505:27;82485:18;;;82478:55;82550:18;;32345:59:1;82225:349:39;32345:59:1;32414:21;32438:30;32453:5;32460:7;32438:14;:30::i;:::-;32489:29;;;;-1:-1:-1;;;32196:330:1:o;25261:769::-;25323:12;-1:-1:-1;;;;;;;;;25351:38:1;;;25347:194;;25405:12;25420:29;25438:10;25420:17;:29::i;:::-;25405:44;;25487:4;25481;25474:18;25525:4;25514:16;;;;;;41960:14:39;41953:22;41935:41;;41923:2;41908:18;;41795:187;25347:194:1;-1:-1:-1;;;;;;;;;25554:39:1;;;25550:196;;25609:12;25624:29;25642:10;25624:17;:29::i;:::-;25691:5;25678:19;;25719:16;;;25730:4;25719:16;;;41935:41:39;25609:44:1;;-1:-1:-1;41908:18:39;25719:16:1;41795:187:39;25550:196:1;-1:-1:-1;;;;;;;;;25759:41:1;;;25755:218;;25816:12;25831:29;25849:10;25831:17;:29::i;:::-;25914:11;;25947:15;;;41960:14:39;;41953:22;25947:15:1;;;41935:41:39;25914:11:1;;-1:-1:-1;25914:11:1;;41908:18:39;25947:15:1;41795:187:39;25755:218:1;25982:41;;-1:-1:-1;;;25982:41:1;;82781:2:39;25982:41:1;;;82763:21:39;82820:2;82800:18;;;82793:30;82859:33;82839:18;;;82832:61;82910:18;;25982:41:1;82579:355:39;28673:225:1;28728:17;28757:12;28772:31;28793:8;28772:13;:31::i;:::-;28757:46;;28813:19;28866:4;28853:17;;28887:4;28881:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28747:151;;28673:225;;;:::o;28904:173::-;28958:13;28983:12;28998:30;29018:8;28998:12;:30::i;30128:1094::-;-1:-1:-1;;;;;30220:18:1;;30212:50;;;;-1:-1:-1;;;30212:50:1;;60513:2:39;30212:50:1;;;60495:21:39;60552:2;60532:18;;;60525:30;-1:-1:-1;;;60571:18:39;;;60564:49;60630:18;;30212:50:1;60311:343:39;30212:50:1;-1:-1:-1;;;;;30280:16:1;;30272:50;;;;-1:-1:-1;;;30272:50:1;;60861:2:39;30272:50:1;;;60843:21:39;60900:2;60880:18;;;60873:30;-1:-1:-1;;;60919:18:39;;;60912:51;60980:18;;30272:50:1;60659:345:39;30272:50:1;30390:12;30405:30;30425:8;30405:12;:30::i;:::-;30488:11;;30390:45;;-1:-1:-1;;;;;;30518:13:1;;;;;;;30510:50;;;;-1:-1:-1;;;30510:50:1;;83141:2:39;30510:50:1;;;83123:21:39;83180:2;83160:18;;;83153:30;83219:26;83199:18;;;83192:54;83263:18;;30510:50:1;82939:348:39;30510:50:1;30650:10;-1:-1:-1;;;;;30650:18:1;;;30646:156;;30706:23;30720:8;30706:13;:23::i;:::-;-1:-1:-1;;;;;30692:37:1;:10;-1:-1:-1;;;;;30692:37:1;;:77;;;;30733:36;30752:4;30758:10;30733:18;:36::i;:::-;30684:107;;;;-1:-1:-1;;;30684:107:1;;83494:2:39;30684:107:1;;;83476:21:39;83533:2;83513:18;;;83506:30;-1:-1:-1;;;83552:18:39;;;83545:47;83609:18;;30684:107:1;83292:341:39;30684:107:1;30838:20;30861:34;30885:8;30861:16;:34::i;:::-;30838:57;;30937:1;30923:12;30916:23;30985:28;31016:31;31038:4;31044:2;31016:21;:31::i;:::-;30985:62;;31097:5;31075:20;31068:35;31168:2;31162:4;31155:16;31202:2;-1:-1:-1;;;;;31187:28:1;31196:4;-1:-1:-1;;;;;31187:28:1;;31206:8;31187:28;;;;43251:25:39;;43239:2;43224:18;;43105:177;31187:28:1;;;;;;;;30202:1020;;;;30128:1094;;;:::o;32532:567::-;32689:13;32705:19;32715:8;32705:9;:19::i;:::-;32689:35;-1:-1:-1;32742:10:1;-1:-1:-1;;;;;32742:19:1;;;;:60;;-1:-1:-1;32792:10:1;32765:23;32779:8;32765:13;:23::i;:::-;-1:-1:-1;;;;;32765:37:1;;32742:60;:101;;;;32806:37;32825:5;32832:10;32806:18;:37::i;:::-;32734:136;;;;-1:-1:-1;;;32734:136:1;;83840:2:39;32734:136:1;;;83822:21:39;83879:2;83859:18;;;83852:30;-1:-1:-1;;;83898:18:39;;;83891:52;83960:18;;32734:136:1;83638:346:39;32734:136:1;32881:12;32896:34;32920:8;32896:16;:34::i;:::-;32881:49;;32940:19;32962:10;:33;;32993:1;32962:33;;;32975:7;32962:33;32940:55;;33029:11;33023:4;33016:25;33074:7;-1:-1:-1;;;;;33058:34:1;33067:5;-1:-1:-1;;;;;33058:34:1;;33083:8;33058:34;;;;43251:25:39;;43239:2;43224:18;;43105:177;33058:34:1;;;;;;;;32610:489;;;32532:567;;;:::o;33634:376::-;33729:10;-1:-1:-1;;;;;33757:22:1;;;;;;:43;;;33795:5;-1:-1:-1;;;;;33783:17:1;:8;-1:-1:-1;;;;;33783:17:1;;;33757:43;33749:91;;;;-1:-1:-1;;;33749:91:1;;84191:2:39;33749:91:1;;;84173:21:39;84230:2;84210:18;;;84203:30;84269:34;84249:18;;;84242:62;-1:-1:-1;;;84320:18:39;;;84313:33;84363:19;;33749:91:1;83989:399:39;33749:91:1;33850:12;33865:38;33887:5;33894:8;33865:21;:38::i;:::-;33850:53;;33937:8;33931:4;33924:22;33984:8;-1:-1:-1;;;;;33962:41:1;33977:5;-1:-1:-1;;;;;33962:41:1;;33994:8;33962:41;;;;41960:14:39;41953:22;41935:41;;41923:2;41908:18;;41795:187;33962:41:1;;;;;;;;33703:307;;33634:376;;:::o;29083:187::-;29141:16;29169:12;29184:34;29208:8;29184:16;:34::i;29276:220::-;29354:19;29385:12;29400:38;29422:5;29429:8;29400:21;:38::i;26410:413::-;26608:50;;-1:-1:-1;;;26608:50:1;;-1:-1:-1;;;;;44737:32:39;;26608:50:1;;;44719:51:39;26492:7:1;;-1:-1:-1;;;26529:25:1;26492:7;;;;380:5;;26608:43;;44692:18:39;;26608:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26687:52;;-1:-1:-1;;;26687:52:1;;-1:-1:-1;;;;;44737:32:39;;26687:52:1;;;44719:51:39;26591:67:1;;-1:-1:-1;26668:16:1;;380:5;;26687:43;;44692:18:39;;26687:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26668:71;;26781:8;26791:3;26796:9;26807:7;26764:51;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;26756:60;;;:::i;:::-;26749:67;26410:413;-1:-1:-1;;;;;;;26410:413:1:o;27154:229::-;27334:41;;27220:7;;-1:-1:-1;;;27257:25:1;27220:7;;27334:41;;27257:25;;27220:7;;27366:8;;27334:41;;;:::i;:::-;;;;;;;;;;;;;27326:50;;;:::i;:::-;27319:57;27154:229;-1:-1:-1;;;;27154:229:1:o;27389:227::-;27567:41;;27454:7;;-1:-1:-1;;;27491:24:1;27454:7;;27567:41;;27491:24;;27454:7;;27599:8;;27567:41;;;:::i;27622:235::-;27808:41;;27691:7;;-1:-1:-1;;;27728:28:1;27691:7;;27808:41;;27728:28;;27691:7;;27840:8;;27808:41;;;:::i;27863:432::-;28077:50;;-1:-1:-1;;;28077:50:1;;-1:-1:-1;;;;;44737:32:39;;28077:50:1;;;44719:51:39;27953:7:1;;-1:-1:-1;;;27990:33:1;27953:7;;;;380:5;;28077:43;;44692:18:39;;28077:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28157:53;;-1:-1:-1;;;28157:53:1;;-1:-1:-1;;;;;44737:32:39;;28157:53:1;;;44719:51:39;28060:67:1;;-1:-1:-1;28137:17:1;;380:5;;28157:43;;44692:18:39;;28157:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28137:73;;28252:8;28262:3;28267:7;28276:10;28235:52;;;;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;372:331:39:-;477:9;488;530:8;518:10;515:24;512:44;;;552:1;549;542:12;512:44;581:6;571:8;568:20;565:40;;;601:1;598;591:12;565:40;-1:-1:-1;;627:23:39;;;672:25;;;;;-1:-1:-1;372:331:39:o;708:338::-;828:19;;-1:-1:-1;;;;;;865:29:39;;;914:1;906:10;;903:137;;;-1:-1:-1;;;;;;975:1:39;971:11;;;968:1;964:19;960:46;;;952:55;;948:82;;-1:-1:-1;903:137:39;;708:338;;;;:::o;1410:374::-;1531:19;;-1:-1:-1;;;;;;1568:40:39;;;1628:2;1620:11;;1617:161;;;-1:-1:-1;;;;;;1690:2:39;1686:12;;;;1683:1;1679:20;1675:58;;;1667:67;1663:105;;;;1410:374;-1:-1:-1;;1410:374:39:o;2147:131::-;-1:-1:-1;;;;;2222:31:39;;2212:42;;2202:70;;2268:1;2265;2258:12;2202:70;2147:131;:::o;2283:367::-;2351:6;2359;2412:2;2400:9;2391:7;2387:23;2383:32;2380:52;;;2428:1;2425;2418:12;2380:52;2467:9;2454:23;2486:31;2511:5;2486:31;:::i;:::-;2536:5;2614:2;2599:18;;;;2586:32;;-1:-1:-1;;;2283:367:39:o;3150:388::-;3218:6;3226;3279:2;3267:9;3258:7;3254:23;3250:32;3247:52;;;3295:1;3292;3285:12;3247:52;3334:9;3321:23;3353:31;3378:5;3353:31;:::i;:::-;3403:5;-1:-1:-1;3460:2:39;3445:18;;3432:32;3473:33;3432:32;3473:33;:::i;:::-;3525:7;3515:17;;;3150:388;;;;;:::o;3736:508::-;3813:6;3821;3829;3882:2;3870:9;3861:7;3857:23;3853:32;3850:52;;;3898:1;3895;3888:12;3850:52;3937:9;3924:23;3956:31;3981:5;3956:31;:::i;:::-;4006:5;-1:-1:-1;4063:2:39;4048:18;;4035:32;4076:33;4035:32;4076:33;:::i;:::-;3736:508;;4128:7;;-1:-1:-1;;;4208:2:39;4193:18;;;;4180:32;;3736:508::o;4249:247::-;4308:6;4361:2;4349:9;4340:7;4336:23;4332:32;4329:52;;;4377:1;4374;4367:12;4329:52;4416:9;4403:23;4435:31;4460:5;4435:31;:::i;:::-;4485:5;4249:247;-1:-1:-1;;;4249:247:39:o;4871:289::-;4913:3;4951:5;4945:12;4978:6;4973:3;4966:19;5034:6;5027:4;5020:5;5016:16;5009:4;5004:3;5000:14;4994:47;5086:1;5079:4;5070:6;5065:3;5061:16;5057:27;5050:38;5149:4;5142:2;5138:7;5133:2;5125:6;5121:15;5117:29;5112:3;5108:39;5104:50;5097:57;;;4871:289;;;;:::o;5165:622::-;5266:5;5260:12;5253:20;5246:28;5241:3;5234:41;5353:1;5349;5344:3;5340:11;5336:19;5328:4;5321:5;5317:16;5311:23;5307:49;5300:4;5295:3;5291:14;5284:73;5216:3;5403:4;5396:5;5392:16;5386:23;5441:4;5434;5429:3;5425:14;5418:28;5467:47;5508:4;5503:3;5499:14;5485:12;5467:47;:::i;:::-;5455:59;;5562:4;5555:5;5551:16;5545:23;5610:3;5604:4;5600:14;5593:4;5588:3;5584:14;5577:38;5638:39;5672:4;5656:14;5638:39;:::i;:::-;5730:4;5719:16;;;5713:23;-1:-1:-1;;;;;5709:49:39;5693:14;;;;5686:73;;;;-1:-1:-1;5624:53:39;;5165:622;-1:-1:-1;;5165:622:39:o;5792:774::-;5853:3;5884;5916:5;5910:12;5943:6;5938:3;5931:19;5975:4;5970:3;5966:14;5959:21;;6033:4;6023:6;6020:1;6016:14;6009:5;6005:26;6001:37;6072:4;6065:5;6061:16;6095:1;6105:435;6119:6;6116:1;6113:13;6105:435;;;6206:2;6202:7;6194:5;6188:4;6184:16;6180:30;6175:3;6168:43;6240:6;6234:13;6279:2;6273:9;6267:4;6260:23;6330:4;6326:2;6322:13;6316:20;6296:40;;6373:4;6366;6360;6356:15;6349:29;6399:57;6450:4;6444;6440:15;6426:12;6399:57;:::i;:::-;6491:4;6516:14;;;;6391:65;;-1:-1:-1;6479:17:39;;;;;-1:-1:-1;6141:1:39;6134:9;6105:435;;;-1:-1:-1;6556:4:39;;5792:774;-1:-1:-1;;;;;;5792:774:39:o;6835:1313::-;6889:3;6933:5;6927:12;6960:6;6955:3;6948:19;6988:49;7029:6;7024:3;7020:16;7006:12;6988:49;:::i;:::-;6976:61;;7085:4;7078:5;7074:16;7068:23;7133:3;7127:4;7123:14;7116:4;7111:3;7107:14;7100:38;7161:39;7195:4;7179:14;7161:39;:::i;:::-;7147:53;;;7248:4;7241:5;7237:16;7231:23;7263:50;7307:4;7302:3;7298:14;7282;-1:-1:-1;;;;;2817:31:39;2805:44;;2751:104;7263:50;;7361:4;7354:5;7350:16;7344:23;7411:3;7403:6;7399:16;7392:4;7387:3;7383:14;7376:40;7439:41;7473:6;7457:14;7439:41;:::i;:::-;7425:55;;;7528:4;7521:5;7517:16;7511:23;7543:47;7584:4;7579:3;7575:14;7559;4571:13;4564:21;4552:34;;4501:91;7543:47;;7638:4;7631:5;7627:16;7621:23;7653:48;7695:4;7690:3;7686:14;7670;2730:1;2719:20;2707:33;;2655:91;7653:48;;7749:4;7742:5;7738:16;7732:23;7764:47;7805:4;7800:3;7796:14;7780;4571:13;4564:21;4552:34;;4501:91;7764:47;;7859:4;7852:5;7848:16;7842:23;7909:3;7901:6;7897:16;7890:4;7885:3;7881:14;7874:40;7937:60;7990:6;7974:14;7937:60;:::i;:::-;7923:74;;;8045:6;8038:5;8034:18;8028:25;8062:58;8112:6;8107:3;8103:16;8087:14;6657:12;;6654:1;6643:27;;;6631:40;;6724:4;6713:16;;;6707:23;-1:-1:-1;;;;;6703:49:39;6687:14;;;6680:73;6816:4;6805:16;;;6799:23;6785:38;;6769:14;;6762:62;6571:259;8062:58;-1:-1:-1;8136:6:39;6835:1313;-1:-1:-1;;;6835:1313:39:o;8153:856::-;8214:3;8252:5;8246:12;8279:6;8274:3;8267:19;8311:4;8306:3;8302:14;8295:21;;8350:4;8343:5;8339:16;8373:1;8383:601;8397:6;8394:1;8391:13;8383:601;;;8456:13;;8540:9;;8537:1;8526:24;8514:37;;8605:4;8597:13;;;8591:20;-1:-1:-1;;;;;8587:46:39;;;8571:14;;;8564:70;8698:4;8690:13;;;8684:20;8677:28;8670:36;8654:14;;;8647:60;8771:4;8763:13;;;8757:20;8750:28;8743:36;8727:14;;;8720:60;8834:4;8826:13;;;8820:20;8816:46;8800:14;;;8793:70;;;;8621:3;8890:14;;;;8957:17;;;;8630:1;8412:9;8383:601;;;-1:-1:-1;9000:3:39;;8153:856;-1:-1:-1;;;;8153:856:39:o;9014:921::-;9080:3;9118:5;9112:12;9145:6;9140:3;9133:19;9177:4;9172:3;9168:14;9161:21;;9216:4;9209:5;9205:16;9239:1;9249:661;9263:6;9260:1;9257:13;9249:661;;;9328:6;9322:13;9366:1;9412:2;9406:9;9403:1;9392:24;9387:3;9380:37;9481:4;9477:2;9473:13;9467:20;9464:1;9453:35;9446:4;9441:3;9437:14;9430:59;9553:4;9549:2;9545:13;9539:20;9536:1;9525:35;9518:4;9513:3;9509:14;9502:59;9625:4;9621:2;9617:13;9611:20;9608:1;9597:35;9590:4;9585:3;9581:14;9574:59;9697:4;9693:2;9689:13;9683:20;9676:28;9669:36;9662:4;9657:3;9653:14;9646:60;9785:1;9781;9776:3;9772:11;9768:19;9760:4;9756:2;9752:13;9746:20;9742:46;9735:4;9730:3;9726:14;9719:70;9825:4;9820:3;9816:14;9802:28;;9850:10;9843:17;;;;9895:4;9887:6;9883:17;9873:27;;9285:1;9282;9278:9;9273:14;;9249:661;;9940:929;10003:3;10041:5;10035:12;10068:6;10063:3;10056:19;10100:4;10095:3;10091:14;10084:21;;10139:4;10132:5;10128:16;10162:1;10172:672;10186:6;10183:1;10180:13;10172:672;;;10251:6;10245:13;10289:1;10335:2;10329:9;10326:1;10315:24;10310:3;10303:37;10404:4;10400:2;10396:13;10390:20;10387:1;10376:35;10369:4;10364:3;10360:14;10353:59;10476:4;10472:2;10468:13;10462:20;10459:1;10448:35;10441:4;10436:3;10432:14;10425:59;10563:1;10559;10554:3;10550:11;10546:19;10538:4;10534:2;10530:13;10524:20;10520:46;10513:4;10508:3;10504:14;10497:70;10631:4;10627:2;10623:13;10617:20;10610:28;10603:36;10596:4;10591:3;10587:14;10580:60;10719:1;10715;10710:3;10706:11;10702:19;10694:4;10690:2;10686:13;10680:20;10676:46;10669:4;10664:3;10660:14;10653:70;10759:4;10754:3;10750:14;10736:28;;10784:10;10777:17;;;;10829:4;10821:6;10817:17;10807:27;;10208:1;10205;10201:9;10196:14;;10172:672;;10874:1384;10926:3;10970:5;10964:12;10997:6;10992:3;10985:19;11025:61;11078:6;11073:3;11069:16;11055:12;11025:61;:::i;:::-;11013:73;;11134:4;11127:5;11123:16;11117:23;11149:48;11191:4;11186:3;11182:14;11166;2730:1;2719:20;2707:33;;2655:91;11149:48;;11245:4;11238:5;11234:16;11228:23;11260:47;11301:4;11296:3;11292:14;11276;4571:13;4564:21;4552:34;;4501:91;11260:47;;11355:4;11348:5;11344:16;11338:23;11370:47;11411:4;11406:3;11402:14;11386;4571:13;4564:21;4552:34;;4501:91;11370:47;;11465:4;11458:5;11454:16;11448:23;11480:47;11521:4;11516:3;11512:14;11496;4571:13;4564:21;4552:34;;4501:91;11480:47;;11575:4;11568:5;11564:16;11558:23;11623:3;11617:4;11613:14;11606:4;11601:3;11597:14;11590:38;11651:58;11704:4;11688:14;11651:58;:::i;:::-;11637:72;;;11757:4;11750:5;11746:16;11740:23;11807:3;11799:6;11795:16;11788:4;11783:3;11779:14;11772:40;11835:65;11893:6;11877:14;11835:65;:::i;:::-;11821:79;;;11948:4;11941:5;11937:16;11931:23;11998:3;11990:6;11986:16;11979:4;11974:3;11970:14;11963:40;12026:62;12081:6;12065:14;12026:62;:::i;:::-;12012:76;;;12136:6;12129:5;12125:18;12119:25;12190:3;12182:6;12178:16;12169:6;12164:3;12160:16;12153:42;12211:41;12245:6;12229:14;12211:41;:::i;12263:346::-;12484:6;12481:1;12470:21;12459:9;12452:40;12528:2;12523;12512:9;12508:18;12501:30;12433:4;12548:55;12599:2;12588:9;12584:18;12576:6;12548:55;:::i;12614:118::-;12701:5;12698:1;12687:20;12680:5;12677:31;12667:59;;12722:1;12719;12712:12;12737:384;12803:6;12811;12864:2;12852:9;12843:7;12839:23;12835:32;12832:52;;;12880:1;12877;12870:12;12832:52;12919:9;12906:23;12938:31;12963:5;12938:31;:::i;:::-;12988:5;-1:-1:-1;13045:2:39;13030:18;;13017:32;13058:31;13017:32;13058:31;:::i;13126:1002::-;13369:6;13366:1;13355:21;13344:9;13337:40;13413:2;13408;13397:9;13393:18;13386:30;13318:4;13451:6;13445:13;13494:4;13489:2;13478:9;13474:18;13467:32;13522:62;13579:3;13568:9;13564:19;13550:12;13522:62;:::i;:::-;13508:76;;13652:2;13644:6;13640:15;13634:22;13631:1;13620:37;13615:2;13604:9;13600:18;13593:65;13740:1;13736;13731:3;13727:11;13723:19;13717:2;13709:6;13705:15;13699:22;13695:48;13689:3;13678:9;13674:19;13667:77;13813:2;13805:6;13801:15;13795:22;13792:1;13781:37;13775:3;13764:9;13760:19;13753:66;13868:3;13860:6;13856:16;13850:23;13943:2;13939:7;13927:9;13919:6;13915:22;13911:36;13904:4;13893:9;13889:20;13882:66;13971:41;14005:6;13989:14;13971:41;:::i;:::-;14086:3;14059:16;;;;14053:23;-1:-1:-1;;;;;14049:49:39;14043:3;14028:19;;;;14021:78;;;;-1:-1:-1;13957:55:39;;13126:1002;-1:-1:-1;;;13126:1002:39:o;14133:127::-;14194:10;14189:3;14185:20;14182:1;14175:31;14225:4;14222:1;14215:15;14249:4;14246:1;14239:15;14265:258;14338:4;14332:11;;;14370:17;;-1:-1:-1;;;;;14402:34:39;;14438:22;;;14399:62;14396:88;;;14464:18;;:::i;:::-;14500:4;14493:24;14265:258;:::o;14528:254::-;14601:2;14595:9;14643:4;14631:17;;-1:-1:-1;;;;;14663:34:39;;14699:22;;;14660:62;14657:88;;;14725:18;;:::i;14787:256::-;14860:2;14854:9;14902:6;14890:19;;-1:-1:-1;;;;;14924:34:39;;14960:22;;;14921:62;14918:88;;;14986:18;;:::i;15048:254::-;15121:2;15115:9;15163:4;15151:17;;-1:-1:-1;;;;;15183:34:39;;15219:22;;;15180:62;15177:88;;;15245:18;;:::i;15307:275::-;15378:2;15372:9;15443:2;15424:13;;-1:-1:-1;;15420:27:39;15408:40;;-1:-1:-1;;;;;15463:34:39;;15499:22;;;15460:62;15457:88;;;15525:18;;:::i;:::-;15561:2;15554:22;15307:275;;-1:-1:-1;15307:275:39:o;15587:183::-;15647:4;-1:-1:-1;;;;;15672:6:39;15669:30;15666:56;;;15702:18;;:::i;:::-;-1:-1:-1;15747:1:39;15743:14;15759:4;15739:25;;15587:183::o;15775:744::-;15829:5;15882:3;15875:4;15867:6;15863:17;15859:27;15849:55;;15900:1;15897;15890:12;15849:55;15940:6;15927:20;15967:64;15983:47;16023:6;15983:47;:::i;:::-;15967:64;:::i;:::-;16055:3;16079:6;16074:3;16067:19;16111:4;16106:3;16102:14;16095:21;;16172:4;16162:6;16159:1;16155:14;16147:6;16143:27;16139:38;16125:52;;16200:3;16192:6;16189:15;16186:35;;;16217:1;16214;16207:12;16186:35;16253:4;16245:6;16241:17;16267:221;16283:6;16278:3;16275:15;16267:221;;;16365:3;16352:17;16382:31;16407:5;16382:31;:::i;:::-;16426:18;;16473:4;16464:14;;;;16300;16267:221;;;-1:-1:-1;16506:7:39;15775:744;-1:-1:-1;;;;;15775:744:39:o;16524:483::-;16617:6;16625;16678:2;16666:9;16657:7;16653:23;16649:32;16646:52;;;16694:1;16691;16684:12;16646:52;16733:9;16720:23;16752:31;16777:5;16752:31;:::i;:::-;16802:5;-1:-1:-1;16858:2:39;16843:18;;16830:32;-1:-1:-1;;;;;16874:30:39;;16871:50;;;16917:1;16914;16907:12;16871:50;16940:61;16993:7;16984:6;16973:9;16969:22;16940:61;:::i;:::-;16930:71;;;16524:483;;;;;:::o;17012:343::-;17231:6;17228:1;17217:21;17206:9;17199:40;17275:2;17270;17259:9;17255:18;17248:30;17180:4;17295:54;17345:2;17334:9;17330:18;17322:6;17295:54;:::i;17360:553::-;17597:6;17594:1;17583:21;17572:9;17565:40;17641:2;17636;17625:9;17621:18;17614:30;17546:4;17679:6;17673:13;17722:2;17717;17706:9;17702:18;17695:30;17748:62;17805:3;17794:9;17790:19;17776:12;17748:62;:::i;:::-;17734:76;;17878:2;17870:6;17866:15;17860:22;17857:1;17846:37;17841:2;17830:9;17826:18;17819:65;17901:6;17893:14;;;17360:553;;;;;:::o;17918:740::-;17970:5;18023:3;18016:4;18008:6;18004:17;18000:27;17990:55;;18041:1;18038;18031:12;17990:55;18081:6;18068:20;18108:64;18124:47;18164:6;18124:47;:::i;18108:64::-;18196:3;18220:6;18215:3;18208:19;18252:4;18247:3;18243:14;18236:21;;18313:4;18303:6;18300:1;18296:14;18288:6;18284:27;18280:38;18266:52;;18341:3;18333:6;18330:15;18327:35;;;18358:1;18355;18348:12;18327:35;18394:4;18386:6;18382:17;18408:219;18424:6;18419:3;18416:15;18408:219;;;18506:3;18493:17;18523:29;18546:5;18523:29;:::i;:::-;18565:18;;18612:4;18603:14;;;;18441;18408:219;;18663:721;18788:6;18796;18804;18857:2;18845:9;18836:7;18832:23;18828:32;18825:52;;;18873:1;18870;18863:12;18825:52;18912:9;18899:23;18931:31;18956:5;18931:31;:::i;:::-;18981:5;-1:-1:-1;19037:2:39;19022:18;;19009:32;-1:-1:-1;;;;;19053:30:39;;19050:50;;;19096:1;19093;19086:12;19050:50;19119:61;19172:7;19163:6;19152:9;19148:22;19119:61;:::i;:::-;19109:71;;;19233:2;19222:9;19218:18;19205:32;-1:-1:-1;;;;;19252:8:39;19249:32;19246:52;;;19294:1;19291;19284:12;19246:52;19317:61;19370:7;19359:8;19348:9;19344:24;19317:61;:::i;:::-;19307:71;;;18663:721;;;;;:::o;19664:954::-;20207:6;20204:1;20193:21;20182:9;20175:40;20251:3;20246:2;20235:9;20231:18;20224:31;20156:4;20278:65;20338:3;20327:9;20323:19;20315:6;20278:65;:::i;:::-;20391:9;20383:6;20379:22;20374:2;20363:9;20359:18;20352:50;20425:57;20475:6;20467;20425:57;:::i;:::-;20411:71;;20530:9;20522:6;20518:22;20513:2;20502:9;20498:18;20491:50;20558:54;20605:6;20597;20558:54;:::i;20623:326::-;20871:1;20860:21;;;20842:40;;20829:3;20814:19;;20891:52;20939:2;20924:18;;20916:6;6657:12;;6654:1;6643:27;;;6631:40;;6724:4;6713:16;;;6707:23;-1:-1:-1;;;;;6703:49:39;6687:14;;;6680:73;6816:4;6805:16;;;6799:23;6785:38;;6769:14;;6762:62;6571:259;20954:616;21052:6;21060;21068;21121:2;21109:9;21100:7;21096:23;21092:32;21089:52;;;21137:1;21134;21127:12;21089:52;21176:9;21163:23;21195:31;21220:5;21195:31;:::i;:::-;21245:5;-1:-1:-1;21302:2:39;21287:18;;21274:32;21315:31;21274:32;21315:31;:::i;:::-;21365:7;-1:-1:-1;21423:2:39;21408:18;;21395:32;-1:-1:-1;;;;;21439:30:39;;21436:50;;;21482:1;21479;21472:12;22047:186;22095:4;-1:-1:-1;;;;;22120:6:39;22117:30;22114:56;;;22150:18;;:::i;:::-;-1:-1:-1;22216:2:39;22195:15;-1:-1:-1;;22191:29:39;22222:4;22187:40;;22047:186::o;22238:1759::-;22347:6;22355;22363;22416:2;22404:9;22395:7;22391:23;22387:32;22384:52;;;22432:1;22429;22422:12;22384:52;22471:9;22458:23;22490:31;22515:5;22490:31;:::i;:::-;22540:5;-1:-1:-1;22597:2:39;22582:18;;22569:32;22610:31;22569:32;22610:31;:::i;:::-;22660:7;-1:-1:-1;22718:2:39;22703:18;;22690:32;-1:-1:-1;;;;;22734:30:39;;22731:50;;;22777:1;22774;22767:12;22731:50;22800:22;;22853:4;22845:13;;22841:27;-1:-1:-1;22831:55:39;;22882:1;22879;22872:12;22831:55;22922:2;22909:16;22945:64;22961:47;23001:6;22961:47;:::i;22945:64::-;23031:3;23055:6;23050:3;23043:19;23087:2;23082:3;23078:12;23071:19;;23142:2;23132:6;23129:1;23125:14;23121:2;23117:23;23113:32;23099:46;;23168:7;23160:6;23157:19;23154:39;;;23189:1;23186;23179:12;23154:39;23221:2;23217;23213:11;23233:734;23249:6;23244:3;23241:15;23233:734;;;23335:3;23322:17;-1:-1:-1;;;;;23358:11:39;23355:35;23352:55;;;23403:1;23400;23393:12;23352:55;23430:20;;23485:2;23477:11;;23473:25;-1:-1:-1;23463:53:39;;23512:1;23509;23502:12;23463:53;23566:2;23562;23558:11;23545:25;23598:54;23614:37;23642:8;23614:37;:::i;23598:54::-;23665:25;;;23709:35;23717:17;;;23709:35;23706:48;-1:-1:-1;23703:68:39;;;23767:1;23764;23757:12;23703:68;23828:8;23823:2;23819;23815:11;23810:2;23801:7;23797:16;23784:53;23890:1;23885:2;23874:8;23865:7;23861:22;23857:31;23850:42;23917:7;23912:3;23905:20;;;;23954:2;23949:3;23945:12;23938:19;;23275:2;23270:3;23266:12;23259:19;;23233:734;;;23237:3;23986:5;23976:15;;;;;;22238:1759;;;;;:::o;24002:787::-;24188:4;24236:2;24225:9;24221:18;24280:6;24277:1;24266:21;24255:9;24248:40;24338:6;24335:1;24324:21;24319:2;24308:9;24304:18;24297:49;24382:2;24377;24366:9;24362:18;24355:30;24405:6;24440;24434:13;24471:6;24463;24456:22;24509:3;24498:9;24494:19;24487:26;;24548:2;24540:6;24536:15;24522:29;;24569:1;24579:184;24593:6;24590:1;24587:13;24579:184;;;24668:13;;24665:1;24654:28;24642:41;;24712:2;24738:15;;;;24703:12;;;;24615:1;24608:9;24579:184;;;-1:-1:-1;24780:3:39;;24002:787;-1:-1:-1;;;;;;;24002:787:39:o;24794:667::-;24878:6;24886;24894;24902;24955:3;24943:9;24934:7;24930:23;24926:33;24923:53;;;24972:1;24969;24962:12;24923:53;25011:9;24998:23;25030:31;25055:5;25030:31;:::i;:::-;25080:5;-1:-1:-1;25137:2:39;25122:18;;25109:32;25150:33;25109:32;25150:33;:::i;:::-;25202:7;-1:-1:-1;25261:2:39;25246:18;;25233:32;25274:33;25233:32;25274:33;:::i;:::-;25326:7;-1:-1:-1;25385:2:39;25370:18;;25357:32;25398:31;25357:32;25398:31;:::i;:::-;24794:667;;;;-1:-1:-1;24794:667:39;;-1:-1:-1;;24794:667:39:o;25466:529::-;25543:6;25551;25559;25612:2;25600:9;25591:7;25587:23;25583:32;25580:52;;;25628:1;25625;25618:12;25580:52;25667:9;25654:23;25686:31;25711:5;25686:31;:::i;:::-;25736:5;-1:-1:-1;25793:2:39;25778:18;;25765:32;25806:33;25765:32;25806:33;:::i;:::-;25858:7;-1:-1:-1;25917:2:39;25902:18;;25889:32;25930:33;25889:32;25930:33;:::i;:::-;25982:7;25972:17;;;25466:529;;;;;:::o;26000:380::-;26079:1;26075:12;;;;26122;;;26143:61;;26197:4;26189:6;26185:17;26175:27;;26143:61;26250:2;26242:6;26239:14;26219:18;26216:38;26213:161;;26296:10;26291:3;26287:20;26284:1;26277:31;26331:4;26328:1;26321:15;26359:4;26356:1;26349:15;26213:161;;26000:380;;;:::o;26385:680::-;26438:3;26479:5;26473:12;26508:36;26534:9;26508:36;:::i;:::-;26575:1;26560:17;;26586:133;;;;26733:1;26728:331;;;;26553:506;;26586:133;-1:-1:-1;;26619:24:39;;26607:37;;26692:14;;26685:22;26673:35;;26664:45;;;-1:-1:-1;26586:133:39;;26728:331;26759:5;26756:1;26749:16;26806:4;26803:1;26793:18;26833:1;26847:166;26861:6;26858:1;26855:13;26847:166;;;26941:14;;26928:11;;;26921:35;26997:1;26984:15;;;;26883:4;26876:12;26847:166;;;26851:3;;27042:6;27037:3;27033:16;27026:23;;26553:506;;;;26385:680;;;;:::o;27070:202::-;27200:3;27225:41;27262:3;27254:6;27225:41;:::i;28081:739::-;28131:3;28172:5;28166:12;28201:36;28227:9;28201:36;:::i;:::-;28246:19;;;28296:1;28281:17;;28307:150;;;;28471:1;28466:348;;;;28274:540;;28307:150;28370:3;28366:8;28355:9;28351:24;28344:4;28339:3;28335:14;28328:48;28442:4;28430:6;28423:14;28416:22;28413:1;28409:30;28404:3;28400:40;28396:51;28389:58;;28307:150;;28466:348;28497:5;28494:1;28487:16;28544:4;28541:1;28531:18;28571:1;28585:177;28599:6;28596:1;28593:13;28585:177;;;28696:7;28690:14;28683:4;28679:1;28674:3;28670:11;28666:22;28659:46;28746:1;28737:7;28733:15;28722:26;;28621:4;28618:1;28614:12;28609:17;;28585:177;;;28786:11;;28799:4;28782:22;;-1:-1:-1;;28274:540:39;;;28081:739;;;;:::o;28967:1237::-;29036:3;29067;29099:5;29093:12;29126:6;29121:3;29114:19;29158:4;29153:3;29149:14;29142:21;;29216:4;29206:6;29203:1;29199:14;29192:5;29188:26;29184:37;29240:5;29237:1;29230:16;29282:4;29279:1;29269:18;29305:1;29315:863;29329:6;29326:1;29323:13;29315:863;;;29394:16;;;-1:-1:-1;;29390:30:39;29378:43;;29447:13;;29434:27;;29498:4;29491;29481:15;;29474:29;;;29551:1;29539:14;;29533:21;29620:4;29605:20;;29598:28;29591:36;29574:15;;;29567:61;;;;29673:1;29669:17;-1:-1:-1;;;;;29665:43:39;29658:4;29648:15;;29641:68;29696:3;29739:4;29729:15;;29722:29;29778:60;29833:3;29823:14;;29816:4;29804:17;;29778:60;:::i;:::-;29879:17;;;-1:-1:-1;;29875:31:39;29868:4;29858:15;;29851:56;29934:52;29883:6;29972:4;29960:17;;29934:52;:::i;:::-;30044:1;30032:14;;30026:21;-1:-1:-1;;;;;30022:47:39;30016:3;30006:14;;;;29999:71;;;;-1:-1:-1;30163:4:39;30154:14;;;;;30132:1;30120:14;;;;30066:1;29344:9;29315:863;;30509:1068;30601:6;30596:3;30589:19;30571:3;30629:50;30671:6;30666:3;30662:16;30655:5;30629:50;:::i;:::-;30721:3;30715:4;30711:14;30704:4;30699:3;30695:14;30688:38;30749:49;30793:4;30786;30779:5;30775:16;30749:49;:::i;:::-;30735:63;;30827:66;30886:4;30879:5;30875:16;30869:23;-1:-1:-1;;;;;28920:36:39;;28825:137;30827:66;-1:-1:-1;;;;;2817:31:39;30944:4;30935:14;;2805:44;30982:16;;;30975:4;30966:14;;30959:40;31022:51;30986:6;31059:4;31048:16;;31022:51;:::i;:::-;31008:65;;31116:4;31109:5;31105:16;31099:23;31131:53;31178:4;31173:3;31169:14;31162:4;31151:9;31147:20;4571:13;4564:21;4552:34;;4501:91;31131:53;31228:1;31224:17;;;31221:1;31210:32;31253:4;31244:14;;2707:33;31268:62;31324:4;31319:3;31315:14;31308:4;31296:9;31292:2;31288:18;31284:29;4571:13;4564:21;4552:34;;4501:91;31268:62;;31374:3;31366:6;31362:16;31355:4;31350:3;31346:14;31339:40;31402:70;31465:6;31458:4;31451:5;31447:16;31402:70;:::i;:::-;31388:84;;31481:68;31541:6;31536:3;31532:16;31525:4;31518:5;31514:16;30294:12;;30338:1;30327:24;;;30315:37;;30392:2;30388:18;;;-1:-1:-1;;;;;30384:44:39;30377:4;30368:14;;30361:68;30425:1;30479:16;;;30473:23;30459:38;;;30445:12;;30438:60;30209:295;31582:915;31651:3;31689:5;31683:12;31716:6;31711:3;31704:19;31748:4;31743:3;31739:14;31732:21;;31772:5;31769:1;31762:16;31814:4;31811:1;31801:18;31837:1;31847:625;31861:6;31858:1;31855:13;31847:625;;;31959:13;;32008:1;31997:24;;;31985:37;;32066:2;32062:18;;;-1:-1:-1;;;;;32058:44:39;;;32051:4;32042:14;;32035:68;32159:3;32155:19;;;32176:4;32151:30;;;32144:38;32137:46;32123:12;;;32116:68;;;;32242:3;32238:19;;;;32234:30;32227:38;32220:46;32213:4;32204:14;;32197:70;32099:1;32313:14;;;32307:21;32303:47;;;32296:4;32287:14;;32280:71;32090:3;32378:14;;;;32457:4;32445:17;;;;31876:9;31847:625;;32502:1014;32576:3;32614:5;32608:12;32641:6;32636:3;32629:19;32673:4;32668:3;32664:14;32657:21;;32697:5;32694:1;32687:16;32739:4;32736:1;32726:18;32762:1;32772:719;32786:6;32783:1;32780:13;32772:719;;;32853:1;32890:6;32884:13;32936:9;32933:1;32922:24;32917:3;32910:37;33005:9;33001:2;32997:18;32994:1;32983:33;32976:4;32971:3;32967:14;32960:57;33074:9;33069:3;33065:19;33062:1;33051:34;33046:2;33041:3;33037:12;33030:56;33145:9;33140:3;33136:19;33133:1;33122:34;33115:4;33110:3;33106:14;33099:58;;33207:1;33199:6;33195:14;33189:21;33223:54;33272:3;33267;33263:13;33256:4;33243:11;33239:22;4571:13;4564:21;4552:34;;4501:91;33223:54;33317:1;33313:19;-1:-1:-1;;;;;33309:45:39;33365:4;33356:14;;2805:44;-1:-1:-1;33407:3:39;33398:13;;;;33476:4;33464:17;;;;;32808:1;32801:9;32772:719;;33521:1091;33592:3;33630:5;33624:12;33657:6;33652:3;33645:19;33689:4;33684:3;33680:14;33673:21;;33713:5;33710:1;33703:16;33755:4;33752:1;33742:18;33778:1;33788:799;33802:6;33799:1;33796:13;33788:799;;;33869:1;33906:6;33900:13;33952:9;33949:1;33938:24;33933:3;33926:37;34021:9;34017:2;34013:18;34010:1;33999:33;33992:4;33987:3;33983:14;33976:57;34090:9;34085:3;34081:19;34078:1;34067:34;34062:2;34057:3;34053:12;34046:56;;34152:1;34144:6;34140:14;34134:21;34225:1;34221;34216:3;34212:11;34208:19;34195:11;34191:37;34184:4;34179:3;34175:14;34168:61;34242:64;34301:3;34296;34292:13;34285:4;34271:11;34266:3;34262:21;34258:32;4571:13;4564:21;4552:34;;4501:91;34242:64;-1:-1:-1;;34399:4:39;34387:17;;34381:24;-1:-1:-1;;;;;28920:36:39;34461:3;34452:13;;2805:44;34502:4;34493:14;;;;34572:4;34560:17;;;;33824:1;33817:9;33788:799;;34617:1416;34844:4;34836:6;34832:17;34821:9;34814:36;34886:2;34881;34870:9;34866:18;34859:30;34925:6;34920:2;34909:9;34905:18;34898:34;34795:4;34955:66;35016:3;35005:9;35001:19;34993:6;34955:66;:::i;:::-;35065:4;35053:17;;35047:24;35108:1;35097:24;;;35138:2;35123:18;;2707:33;35151:67;35213:3;35202:9;35198:19;35191:4;35179:9;35175:2;35171:18;35167:29;4571:13;4564:21;4552:34;;4501:91;35151:67;35227;35289:3;35278:9;35274:19;35267:4;35255:9;35251:2;35247:18;35243:29;4571:13;4564:21;4552:34;;4501:91;35227:67;35303;35365:3;35354:9;35350:19;35343:4;35331:9;35327:2;35323:18;35319:29;4571:13;4564:21;4552:34;;4501:91;35303:67;-1:-1:-1;35411:22:39;;;-1:-1:-1;;35407:36:39;35401:3;35386:19;;35379:65;35467:71;35415:6;35524:4;35512:17;;35467:71;:::i;:::-;35579:22;;;-1:-1:-1;;35575:36:39;35569:3;35554:19;;35547:65;35453:85;-1:-1:-1;35635:76:39;35453:85;35697:4;35685:17;;35635:76;:::i;:::-;35755:22;;;-1:-1:-1;;35751:36:39;35742:6;35727:22;;35720:68;35621:90;-1:-1:-1;35811:73:39;35621:90;35870:4;35858:17;;35811:73;:::i;:::-;35925:22;;;-1:-1:-1;;35921:36:39;35915:3;35900:19;;35893:65;35797:87;-1:-1:-1;35975:52:39;35797:87;36013:4;36001:17;;35975:52;:::i;36446:967::-;36980:4;36972:6;36968:17;36957:9;36950:36;37022:3;37017:2;37006:9;37002:18;36995:31;36931:4;37049:73;37117:3;37106:9;37102:19;37094:6;37049:73;:::i;:::-;37170:9;37162:6;37158:22;37153:2;37142:9;37138:18;37131:50;37204:65;37262:6;37254;37204:65;:::i;:::-;37190:79;;37317:9;37309:6;37305:22;37300:2;37289:9;37285:18;37278:50;37345:62;37400:6;37392;37345:62;:::i;38938:338::-;39195:4;39183:17;;39165:36;;39152:3;39137:19;;39210:60;39266:2;39251:18;;39243:6;30294:12;;30338:1;30327:24;;;30315:37;;30392:2;30388:18;;;-1:-1:-1;;;;;30384:44:39;30377:4;30368:14;;30361:68;30425:1;30479:16;;;30473:23;30459:38;;;30445:12;;30438:60;30209:295;41535:255;41655:19;;41694:2;41686:11;;41683:101;;;-1:-1:-1;;41755:2:39;41751:12;;;41748:1;41744:20;41740:33;41729:45;41535:255;;;;:::o;42398:347::-;42600:2;42582:21;;;42639:2;42619:18;;;42612:30;42678:25;42673:2;42658:18;;42651:53;42736:2;42721:18;;42398:347::o;43287:138::-;43366:13;;43388:31;43366:13;43388:31;:::i;:::-;43287:138;;;:::o;43430:251::-;43500:6;43553:2;43541:9;43532:7;43528:23;43524:32;43521:52;;;43569:1;43566;43559:12;43521:52;43601:9;43595:16;43620:31;43645:5;43620:31;:::i;43686:127::-;43747:10;43742:3;43738:20;43735:1;43728:31;43778:4;43775:1;43768:15;43802:4;43799:1;43792:15;43818:127;43879:10;43874:3;43870:20;43867:1;43860:31;43910:4;43907:1;43900:15;43934:4;43931:1;43924:15;43950:125;44015:9;;;44036:10;;;44033:36;;;44049:18;;:::i;44440:128::-;44507:9;;;44528:11;;;44525:37;;;44542:18;;:::i;44781:301::-;44910:3;44948:6;44942:13;44994:6;44987:4;44979:6;44975:17;44970:3;44964:37;45056:1;45020:16;;45045:13;;;-1:-1:-1;45020:16:39;44781:301;-1:-1:-1;44781:301:39:o;45443:134::-;45520:13;;45542:29;45520:13;45542:29;:::i;45582:514::-;45636:5;45689:3;45682:4;45674:6;45670:17;45666:27;45656:55;;45707:1;45704;45697:12;45656:55;45740:6;45734:13;45779:4;45771:6;45767:17;45808:1;45829:52;45845:35;45873:6;45845:35;:::i;45829:52::-;45818:63;;45906:6;45897:7;45890:23;45946:3;45937:6;45932:3;45928:16;45925:25;45922:45;;;45963:1;45960;45953:12;45922:45;46007:6;46002:3;45995:4;45986:7;45982:18;45976:38;46063:1;46034:20;;;46056:4;46030:31;46023:42;;;;-1:-1:-1;46038:7:39;45582:514;-1:-1:-1;;;45582:514:39:o;46101:164::-;46177:13;;46226;;46219:21;46209:32;;46199:60;;46255:1;46252;46245:12;46270:2123;46343:5;46396:3;46389:4;46381:6;46377:17;46373:27;46363:55;;46414:1;46411;46404:12;46363:55;46447:6;46441:13;46474:64;46490:47;46530:6;46490:47;:::i;46474:64::-;46562:3;46586:6;46581:3;46574:19;46618:4;46613:3;46609:14;46602:21;;46679:4;46669:6;46666:1;46662:14;46654:6;46650:27;46646:38;46632:52;;46707:3;46699:6;46696:15;46693:35;;;46724:1;46721;46714:12;46693:35;46760:4;46752:6;46748:17;46774:1588;46790:6;46785:3;46782:15;46774:1588;;;46871:3;46865:10;-1:-1:-1;;;;;46894:11:39;46891:35;46888:55;;;46939:1;46936;46929:12;46888:55;46966:24;;47038:4;47014:12;;;-1:-1:-1;;47010:26:39;47006:37;47003:57;;;47056:1;47053;47046:12;47003:57;47086:23;;:::i;:::-;47176:4;47168:13;;47162:20;47195:22;;47260:4;47252:13;;47246:20;-1:-1:-1;;;;;47282:32:39;;47279:52;;;47327:1;47324;47317:12;47279:52;47377:4;47366:8;47362:2;47358:17;47354:28;47344:38;;;47416:4;47411:2;47406:3;47402:12;47398:23;47395:43;;;47434:1;47431;47424:12;47395:43;47466:23;;:::i;:::-;47518:30;47545:2;47518:30;:::i;:::-;47509:7;47502:47;47591:4;47587:2;47583:13;47577:20;47610:33;47635:7;47610:33;:::i;:::-;47676:4;47663:18;;47656:35;47734:4;47726:13;;47720:20;-1:-1:-1;;;;;47756:32:39;;47753:52;;;47801:1;47798;47791:12;47753:52;47845;47893:3;47882:8;47878:2;47874:17;47845:52;:::i;:::-;47838:4;47829:7;47825:18;47818:80;;47941:2;47937;47933:11;47927:18;-1:-1:-1;;;;;47964:8:39;47961:32;47958:52;;;48006:1;48003;47996:12;47958:52;48048;48096:3;48085:8;48081:2;48077:17;48048:52;:::i;:::-;48043:2;48034:7;48030:16;48023:78;;48143:3;48139:2;48135:12;48129:19;48114:34;;48161:33;48186:7;48161:33;:::i;:::-;48227:3;48214:17;;48207:34;;;;48272:4;48261:16;;;48254:33;;;;48300:18;;48338:14;;;;46807;46774:1588;;48398:762;48462:5;48510:4;48498:9;48493:3;48489:19;48485:30;48482:50;;;48528:1;48525;48518:12;48482:50;48581:2;48575:9;48623:4;48611:17;;-1:-1:-1;;;;;48643:34:39;;48679:22;;;48640:62;48637:88;;;48705:18;;:::i;:::-;48745:10;48741:2;48734:22;;48774:6;48765:15;;48810:9;48804:16;48829:31;48852:7;48829:31;:::i;:::-;48869:23;;48937:2;48922:18;;48916:25;48950:33;48916:25;48950:33;:::i;:::-;49011:2;48999:15;;48992:32;49069:2;49054:18;;49048:25;49082:31;49048:25;49082:31;:::i;:::-;49141:2;49129:15;;;;49122:32;48398:762;;-1:-1:-1;;48398:762:39:o;49165:1418::-;49234:5;49282:6;49270:9;49265:3;49261:19;49257:32;49254:52;;;49302:1;49299;49292:12;49254:52;49324:23;;:::i;:::-;49315:32;;49376:9;49370:16;-1:-1:-1;;;;;49401:6:39;49398:30;49395:50;;;49441:1;49438;49431:12;49395:50;49468:57;49521:3;49512:6;49501:9;49497:22;49468:57;:::i;:::-;49461:5;49454:72;;49572:2;49561:9;49557:18;49551:25;-1:-1:-1;;;;;49591:8:39;49588:32;49585:52;;;49633:1;49630;49623:12;49585:52;49669:59;49724:3;49713:8;49702:9;49698:24;49669:59;:::i;:::-;49664:2;49657:5;49653:14;49646:83;;49761:49;49806:2;49795:9;49791:18;49761:49;:::i;:::-;49756:2;49749:5;49745:14;49738:73;49857:2;49846:9;49842:18;49836:25;-1:-1:-1;;;;;49876:8:39;49873:32;49870:52;;;49918:1;49915;49908:12;49870:52;49954:59;50009:3;49998:8;49987:9;49983:24;49954:59;:::i;:::-;49949:2;49942:5;49938:14;49931:83;;50047:47;50089:3;50078:9;50074:19;50047:47;:::i;:::-;50041:3;50034:5;50030:15;50023:72;50128:48;50171:3;50160:9;50156:19;50128:48;:::i;:::-;50122:3;50115:5;50111:15;50104:73;50210:47;50252:3;50241:9;50237:19;50210:47;:::i;:::-;50204:3;50197:5;50193:15;50186:72;50304:3;50293:9;50289:19;50283:26;-1:-1:-1;;;;;50324:8:39;50321:32;50318:52;;;50366:1;50363;50356:12;50318:52;50403:78;50477:3;50466:8;50455:9;50451:24;50403:78;:::i;:::-;50397:3;50390:5;50386:15;50379:103;;50515:61;50572:3;50566;50555:9;50551:19;50515:61;:::i;:::-;50509:3;50502:5;50498:15;50491:86;49165:1418;;;;:::o;50588:1329::-;50661:5;50714:3;50707:4;50699:6;50695:17;50691:27;50681:55;;50732:1;50729;50722:12;50681:55;50765:6;50759:13;50792:64;50808:47;50848:6;50808:47;:::i;50792:64::-;50880:3;50904:6;50899:3;50892:19;50936:4;50931:3;50927:14;50920:21;;51000:4;50992;50984:6;50980:17;50972:6;50968:30;50964:41;50950:55;;51028:3;51020:6;51017:15;51014:35;;;51045:1;51042;51035:12;51014:35;51081:4;51073:6;51069:17;51095:791;51111:6;51106:3;51103:15;51095:791;;;51189:4;51183:3;51178;51174:13;51170:24;51167:44;;;51207:1;51204;51197:12;51167:44;51237:23;;:::i;:::-;51294:3;51288:10;51311:31;51334:7;51311:31;:::i;:::-;51355:22;;51420:4;51411:14;;51405:21;51439:33;51405:21;51439:33;:::i;:::-;51503:4;51492:16;;51485:33;51554:40;51590:2;51581:12;;51554:40;:::i;:::-;51549:2;51542:5;51538:14;51531:64;51631:40;51667:2;51662:3;51658:12;51631:40;:::i;:::-;51626:2;51619:5;51615:14;51608:64;51715:3;51710;51706:13;51700:20;51733:33;51758:7;51733:33;:::i;:::-;51797:3;51786:15;;51779:32;51824:18;;51871:4;51862:14;;;;51137:4;51128:14;51095:791;;51922:1527;52000:5;52053:3;52046:4;52038:6;52034:17;52030:27;52020:55;;52071:1;52068;52061:12;52020:55;52104:6;52098:13;52131:64;52147:47;52187:6;52147:47;:::i;52131:64::-;52219:3;52243:6;52238:3;52231:19;52275:4;52270:3;52266:14;52259:21;;52339:4;52331;52323:6;52319:17;52311:6;52307:30;52303:41;52289:55;;52367:3;52359:6;52356:15;52353:35;;;52384:1;52381;52374:12;52353:35;52420:4;52412:6;52408:17;52434:984;52450:6;52445:3;52442:15;52434:984;;;52528:4;52522:3;52517;52513:13;52509:24;52506:44;;;52546:1;52543;52536:12;52506:44;52576:23;;:::i;:::-;52633:3;52627:10;52650:31;52673:7;52650:31;:::i;:::-;52694:22;;52759:4;52750:14;;52744:21;52778:31;52744:21;52778:31;:::i;:::-;52840:4;52829:16;;52822:33;52898:2;52889:12;;52883:19;52915:31;52883:19;52915:31;:::i;:::-;52977:2;52966:14;;52959:31;53033:2;53024:12;;53018:19;53050:31;53018:19;53050:31;:::i;:::-;53112:2;53101:14;;53094:31;53162:41;53198:3;53189:13;;53162:41;:::i;:::-;53156:3;53149:5;53145:15;53138:66;53247:3;53242;53238:13;53232:20;53265:33;53290:7;53265:33;:::i;:::-;53329:3;53318:15;;53311:32;53356:18;;53403:4;53394:14;;;;52476:4;52467:14;52434:984;;53454:1526;53529:5;53582:3;53575:4;53567:6;53563:17;53559:27;53549:55;;53600:1;53597;53590:12;53549:55;53633:6;53627:13;53660:64;53676:47;53716:6;53676:47;:::i;53660:64::-;53748:3;53772:6;53767:3;53760:19;53804:4;53799:3;53795:14;53788:21;;53868:4;53860;53852:6;53848:17;53840:6;53836:30;53832:41;53818:55;;53896:3;53888:6;53885:15;53882:35;;;53913:1;53910;53903:12;53882:35;53949:4;53941:6;53937:17;53963:986;53979:6;53974:3;53971:15;53963:986;;;54057:4;54051:3;54046;54042:13;54038:24;54035:44;;;54075:1;54072;54065:12;54035:44;54105:23;;:::i;:::-;54162:3;54156:10;54179:31;54202:7;54179:31;:::i;:::-;54223:22;;54288:4;54279:14;;54273:21;54307:31;54273:21;54307:31;:::i;:::-;54369:4;54358:16;;54351:33;54427:2;54418:12;;54412:19;54444:31;54412:19;54444:31;:::i;:::-;54506:2;54495:14;;54488:31;54562:2;54553:12;;54547:19;54579:33;54547:19;54579:33;:::i;:::-;54643:2;54632:14;;54625:31;54693:41;54729:3;54720:13;;54693:41;:::i;:::-;54687:3;54680:5;54676:15;54669:66;54778:3;54773;54769:13;54763:20;54796:33;54821:7;54796:33;:::i;:::-;54860:3;54849:15;;54842:32;54887:18;;54934:4;54925:14;;;;54005:4;53996:14;53963:986;;54985:1910;55089:6;55097;55150:2;55138:9;55129:7;55125:23;55121:32;55118:52;;;55166:1;55163;55156:12;55118:52;55198:9;55192:16;55217:29;55240:5;55217:29;:::i;:::-;55314:2;55299:18;;55293:25;55265:5;;-1:-1:-1;;;;;;55330:30:39;;55327:50;;;55373:1;55370;55363:12;55327:50;55396:22;;55452:6;55434:16;;;55430:29;55427:49;;;55472:1;55469;55462:12;55427:49;55500:23;;:::i;:::-;55554:2;55548:9;-1:-1:-1;;;;;55572:8:39;55569:32;55566:52;;;55614:1;55611;55604:12;55566:52;55643:68;55703:7;55692:8;55688:2;55684:17;55643:68;:::i;:::-;55634:7;55627:85;;55746:40;55782:2;55778;55774:11;55746:40;:::i;:::-;55741:2;55732:7;55728:16;55721:66;55821:39;55856:2;55852;55848:11;55821:39;:::i;:::-;55816:2;55807:7;55803:16;55796:65;55895:39;55930:2;55926;55922:11;55895:39;:::i;:::-;55890:2;55881:7;55877:16;55870:65;55970:40;56005:3;56001:2;55997:12;55970:40;:::i;:::-;55964:3;55955:7;55951:17;55944:67;56050:3;56046:2;56042:12;56036:19;-1:-1:-1;;;;;56070:8:39;56067:32;56064:52;;;56112:1;56109;56102:12;56064:52;56151:75;56218:7;56207:8;56203:2;56199:17;56151:75;:::i;:::-;56145:3;56136:7;56132:17;56125:102;;56266:3;56262:2;56258:12;56252:19;-1:-1:-1;;;;;56286:8:39;56283:32;56280:52;;;56328:1;56325;56318:12;56280:52;56367:80;56439:7;56428:8;56424:2;56420:17;56367:80;:::i;:::-;56361:3;56352:7;56348:17;56341:107;;56487:3;56483:2;56479:12;56473:19;-1:-1:-1;;;;;56507:8:39;56504:32;56501:52;;;56549:1;56546;56539:12;56501:52;56588:77;56657:7;56646:8;56642:2;56638:17;56588:77;:::i;:::-;56582:3;56573:7;56569:17;56562:104;;56705:3;56701:2;56697:12;56691:19;-1:-1:-1;;;;;56725:8:39;56722:32;56719:52;;;56767:1;56764;56757:12;56719:52;56806:56;56854:7;56843:8;56839:2;56835:17;56806:56;:::i;:::-;56800:3;56791:7;56787:17;56780:83;;56882:7;56872:17;;;;54985:1910;;;;;:::o;59301:247::-;59369:6;59422:2;59410:9;59401:7;59397:23;59393:32;59390:52;;;59438:1;59435;59428:12;59390:52;59470:9;59464:16;59489:29;59512:5;59489:29;:::i;61419:326::-;61493:6;61501;61554:2;61542:9;61533:7;61529:23;61525:32;61522:52;;;61570:1;61567;61560:12;61522:52;61602:9;61596:16;61621:29;61644:5;61621:29;:::i;:::-;61669:5;-1:-1:-1;61693:46:39;61735:2;61720:18;;61693:46;:::i;:::-;61683:56;;61419:326;;;;;:::o;63330:273::-;63398:6;63451:2;63439:9;63430:7;63426:23;63422:32;63419:52;;;63467:1;63464;63457:12;63419:52;63499:9;63493:16;63549:4;63542:5;63538:16;63531:5;63528:27;63518:55;;63569:1;63566;63559:12;66817:409;66892:6;66900;66953:2;66941:9;66932:7;66928:23;66924:32;66921:52;;;66969:1;66966;66959:12;66921:52;67001:9;66995:16;67020:29;67043:5;67020:29;:::i;:::-;67068:5;67058:15;;;67118:2;67107:9;67103:18;67097:25;67167:7;67164:1;67153:22;67144:7;67141:35;67131:63;;67190:1;67187;67180:12;68046:1096;68301:6;68309;68317;68325;68378:3;68366:9;68357:7;68353:23;68349:33;68346:53;;;68395:1;68392;68385:12;68346:53;68427:9;68421:16;68446:29;68469:5;68446:29;:::i;:::-;68543:2;68528:18;;68522:25;68494:5;;-1:-1:-1;;;;;;68559:30:39;;68556:50;;;68602:1;68599;68592:12;68556:50;68625:80;68697:7;68688:6;68677:9;68673:22;68625:80;:::i;:::-;68615:90;;;68751:2;68740:9;68736:18;68730:25;-1:-1:-1;;;;;68770:8:39;68767:32;68764:52;;;68812:1;68809;68802:12;68764:52;68835:87;68914:7;68903:8;68892:9;68888:24;68835:87;:::i;:::-;68825:97;;;68968:2;68957:9;68953:18;68947:25;-1:-1:-1;;;;;68987:8:39;68984:32;68981:52;;;69029:1;69026;69019:12;68981:52;69052:84;69128:7;69117:8;69106:9;69102:24;69052:84;:::i;:::-;69042:94;;;68046:1096;;;;;;;:::o;69549:372::-;69650:6;69658;69711:3;69699:9;69690:7;69686:23;69682:33;69679:53;;;69728:1;69725;69718:12;69679:53;69760:9;69754:16;69779:29;69802:5;69779:29;:::i;:::-;69827:5;-1:-1:-1;69851:64:39;69907:7;69902:2;69887:18;;69851:64;:::i;71768:230::-;71838:6;71891:2;71879:9;71870:7;71866:23;71862:32;71859:52;;;71907:1;71904;71897:12;71859:52;-1:-1:-1;71952:16:39;;71768:230;-1:-1:-1;71768:230:39:o;72794:297::-;72912:12;;72959:4;72948:16;;;72942:23;;72912:12;72977:16;;72974:111;;;-1:-1:-1;;73051:4:39;73047:17;;;;73044:1;73040:25;73036:38;73025:50;;72794:297;-1:-1:-1;72794:297:39:o;75279:237::-;75317:7;75394:1;75391;75380:16;75376:1;75373;75362:16;75358:39;75431:11;75428:1;75417:26;75406:37;;75474:11;75465:7;75462:24;75452:58;;75490:18;;:::i;75881:202::-;75948:6;76001:2;75989:9;75980:7;75976:23;75972:32;75969:52;;;76017:1;76014;76007:12;75969:52;76040:37;76067:9;76040:37;:::i;76088:280::-;76157:6;76210:2;76198:9;76189:7;76185:23;76181:32;76178:52;;;76226:1;76223;76216:12;76178:52;76258:9;76252:16;76308:10;76301:5;76297:22;76290:5;76287:33;76277:61;;76334:1;76331;76324:12;76373:410;-1:-1:-1;;;;;;76566:33:39;;;76554:46;;76637:2;76633:15;;;;-1:-1:-1;;76629:45:39;76625:1;76616:11;;76609:66;76582:3;76709:16;76705:43;;;76700:2;76691:12;;76684:65;76774:2;76765:12;;76373:410::o;76788:225::-;76934:2;76923:9;76916:21;76897:4;76954:53;77003:2;76992:9;76988:18;76980:6;76954:53;:::i;79357:220::-;79506:2;79495:9;79488:21;79469:4;79526:45;79567:2;79556:9;79552:18;79544:6;79526:45;:::i;84393:518::-;-1:-1:-1;;;;;;84612:33:39;;;84600:46;;84683:2;84679:15;;;;-1:-1:-1;;;;;;84675:53:39;84671:1;84662:11;;84655:74;84628:3;84763:16;;;84759:43;;84754:2;84745:12;;84738:65;84837:16;;84833:43;;;84828:2;84819:12;;84812:65;84902:2;84893:12;;84393:518::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "_transferAsHTS(address,address,uint256)": "2fc98c7d",
        "_update(address,address,uint256)": "0bb3bfa8",
        "associateToken(address,address)": "49146bde",
        "associateTokens(address,address[])": "2e63879b",
        "burnToken(address,int64,int64[])": "d6910d06",
        "dissociateToken(address,address)": "099794e8",
        "dissociateTokens(address,address[])": "78b63918",
        "getAccountId(address)": "e0b490f7",
        "getApproved(address,uint256)": "098f2366",
        "getFungibleTokenInfo(address)": "3f28a19b",
        "getNonFungibleTokenInfo(address,int64)": "287e1da8",
        "getTokenCustomFees(address)": "ae7611a0",
        "getTokenDefaultFreezeStatus(address)": "a7daa18d",
        "getTokenDefaultKycStatus(address)": "335e04c1",
        "getTokenExpiryInfo(address)": "d614cdb8",
        "getTokenInfo(address)": "1f69565f",
        "getTokenKey(address,uint256)": "3c4dd32e",
        "getTokenType(address)": "93272baf",
        "isApprovedForAll(address,address,address)": "f49f40db",
        "isToken(address)": "19f37361",
        "mintToken(address,int64,bytes[])": "e0f4059a",
        "transferToken(address,address,address,int64)": "eca36917",
        "transferTokens(address,address[],int64[])": "82bba493"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_transferAsHTS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"associateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"associateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"\",\"type\":\"int64[]\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"dissociateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"dissociateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"accountId\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int32\",\"name\":\"decimals\",\"type\":\"int32\"}],\"internalType\":\"struct IHederaTokenService.FungibleTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"getNonFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"ownerId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"creationTime\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"spenderId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.NonFungibleTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultFreezeStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultKycStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenExpiryInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"getTokenKey\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"}],\"name\":\"transferToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accountId\",\"type\":\"address[]\"},{\"internalType\":\"int64[]\",\"name\":\"amount\",\"type\":\"int64[]\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"associateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"associateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be associated with the provided tokens\",\"tokens\":\"The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"dissociateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"dissociateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be dissociated from the provided tokens\",\"tokens\":\"The tokens to be dissociated from the provided account.\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getAccountId(address)\":{\"details\":\"Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties.\"},\"getApproved(address,uint256)\":{\"params\":{\"serialNumber\":\"The NFT to find the approved address for\",\"token\":\"The Hedera NFT token address to check approval\"},\"returns\":{\"approved\":\"The approved address for this NFT, or the zero address if there is none\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getFungibleTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"FungibleTokenInfo info for `token`\"}},\"getNonFungibleTokenInfo(address,int64)\":{\"params\":{\"serialNumber\":\"The NFT serialNumber to check\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"NonFungibleTokenInfo info for `token` `serialNumber`\"}},\"getTokenCustomFees(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"Set of fixed fees for `token`\",\"_2\":\"Set of fractional fees for `token`\",\"_3\":\"Set of royalty fees for `token`\"}},\"getTokenDefaultFreezeStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default freeze status is frozen.\"}},\"getTokenDefaultKycStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default kyc status is KycNotApplicable and false if Revoked.\"}},\"getTokenExpiryInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"Expiry info for `token`\"}},\"getTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"TokenInfo info for `token`\"}},\"getTokenKey(address,uint256)\":{\"params\":{\"keyType\":\"The keyType of the desired KeyValue\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"KeyValue info for key of type `keyType`\"}},\"getTokenType(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\"}},\"isApprovedForAll(address,address,address)\":{\"params\":{\"operator\":\"The address that acts on behalf of the owner\",\"owner\":\"The address that owns the NFTs\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `operator` is an approved operator for `owner`, false otherwise\"}},\"isToken(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if valid token found for the given address\"}},\"transferToken(address,address,address,int64)\":{\"params\":{\"amount\":\"Non-negative value to send. a negative value will result in a failure.\",\"recipient\":\"The receiver of the transaction\",\"sender\":\"The sender for the transaction\",\"token\":\"The token to transfer to/from\"}},\"transferTokens(address,address[],int64[])\":{\"params\":{\"accountId\":\"account to do a transfer to/from\",\"amount\":\"The amount from the accountId at the same index\",\"token\":\"The ID of the token as a solidity address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"associateToken(address,address)\":{\"notice\":\"Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\"},\"associateTokens(address,address[])\":{\"notice\":\"Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens.\"},\"dissociateToken(address,address)\":{\"notice\":\"Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\"},\"dissociateTokens(address,address[])\":{\"notice\":\"Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed.\"},\"getApproved(address,uint256)\":{\"notice\":\"Get the approved address for a single NFT Only Applicable to NFT Tokens\"},\"getFungibleTokenInfo(address)\":{\"notice\":\"Query fungible token info\"},\"getNonFungibleTokenInfo(address,int64)\":{\"notice\":\"Query non fungible token info\"},\"getTokenCustomFees(address)\":{\"notice\":\"Query token custom fees\"},\"getTokenDefaultFreezeStatus(address)\":{\"notice\":\"Query token default freeze status\"},\"getTokenDefaultKycStatus(address)\":{\"notice\":\"Query token default kyc status\"},\"getTokenExpiryInfo(address)\":{\"notice\":\"Query token expiry info\"},\"getTokenInfo(address)\":{\"notice\":\"Query token info\"},\"getTokenKey(address,uint256)\":{\"notice\":\"Query token KeyValue\"},\"getTokenType(address)\":{\"notice\":\"Query to return the token type for a given address\"},\"isApprovedForAll(address,address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address Only Applicable to NFT Tokens\"},\"isToken(address)\":{\"notice\":\"Query if valid token found for the given address\"},\"transferToken(address,address,address,int64)\":{\"notice\":\"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)\"},\"transferTokens(address,address[],int64[])\":{\"notice\":\"Initiates a Fungible Token Transfer\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HtsSystemContract.sol\":\"HtsSystemContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":surl/=lib/surl/\"]},\"sources\":{\"contracts/HtsSystemContract.sol\":{\"keccak256\":\"0xa8ba0251aa53db712a75d089aa7b8ffad8777ef115caf1348182274d4c1c096b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://03339205005abfe5ec101ded788ca64dcb690cc2b41d05ef117272a2ce3ea662\",\"dweb:/ipfs/QmPaY22UmWh8Q91BFXhaM69d75hf9jRo7G2tYVUSz78cev\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x77993e2d90d6b91d30b8721a52364902d823dd5d1020500071c4ecd7f847a00e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://776be938a4f20b2b40e95a5d58f330454d21077894659a674ac8bda378561598\",\"dweb:/ipfs/QmToUenT2jKjiJLCozN3xQp2esRVbRceyS8KVMqcd9j29W\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0x7b4a961afb96ff6326f4d2985f20edf7aa10b3ba1b68c502a0cdcd84ba26e767\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://322d92f6a244dd8a9818d5be6e4e17c6dd048a033449dd79b43229c7077da06d\",\"dweb:/ipfs/QmdFyC7EU8iGiyFzh77YsUpp6eysV8ijyLUKWsDPVKq7yG\"]},\"contracts/IHRC719.sol\":{\"keccak256\":\"0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d\",\"dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD\"]},\"contracts/IHederaTokenService.sol\":{\"keccak256\":\"0x9483e9d8baabf226234da1cdabc36a5ad00eb6e58be49e968cff3ac556e3d8c3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://59c4d8b889bafe06f4ca40c76eb483a097354aa526bda42e3ad7ac8c40487668\",\"dweb:/ipfs/QmZ2J5fxCM2P3BoQoemBB9XS7fNQYmm3vge4FLf5ctFGqm\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]}},\"version\":1}",
    "metadata": {
        "compiler": { "version": "0.8.28+commit.7893614a" },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "approved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ApprovalForAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                { "inputs": [], "stateMutability": "nonpayable", "type": "fallback" },
                {
                    "inputs": [
                        { "internalType": "address", "name": "from", "type": "address" },
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "amount", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "_transferAsHTS"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "from", "type": "address" },
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "amount", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "_update"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address", "name": "token", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "associateToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address[]", "name": "tokens", "type": "address[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "associateTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "int64[]", "name": "", "type": "int64[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address", "name": "token", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "dissociateToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address[]", "name": "tokens", "type": "address[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "dissociateTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAccountId",
                    "outputs": [{ "internalType": "uint32", "name": "accountId", "type": "uint32" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "serialNumber", "type": "uint256" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getApproved",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "address", "name": "approved", "type": "address" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getFungibleTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.FungibleTokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.TokenInfo",
                                    "name": "tokenInfo",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IHederaTokenService.HederaToken",
                                            "name": "token",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "string",
                                                    "name": "name",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "symbol",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "treasury",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "memo",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "tokenSupplyType",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maxSupply",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "freezeDefault",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                                    "name": "tokenKeys",
                                                    "type": "tuple[]",
                                                    "components": [
                                                        {
                                                            "internalType": "uint256",
                                                            "name": "keyType",
                                                            "type": "uint256"
                                                        },
                                                        {
                                                            "internalType": "struct IHederaTokenService.KeyValue",
                                                            "name": "key",
                                                            "type": "tuple",
                                                            "components": [
                                                                {
                                                                    "internalType": "bool",
                                                                    "name": "inheritAccountKey",
                                                                    "type": "bool"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "contractId",
                                                                    "type": "address"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ed25519",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ECDSA_secp256k1",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "delegatableContractId",
                                                                    "type": "address"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.Expiry",
                                                    "name": "expiry",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "int64",
                                                            "name": "second",
                                                            "type": "int64"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "autoRenewAccount",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "int64",
                                                            "name": "autoRenewPeriod",
                                                            "type": "int64"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "totalSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "deleted",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "defaultKycStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "pauseStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FixedFee[]",
                                            "name": "fixedFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useCurrentTokenForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                                            "name": "fractionalFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "minimumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maximumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "netOfTransfers",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                            "name": "royaltyFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "ledgerId",
                                            "type": "string"
                                        }
                                    ]
                                },
                                { "internalType": "int32", "name": "decimals", "type": "int32" }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "serialNumber", "type": "int64" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getNonFungibleTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.TokenInfo",
                                    "name": "tokenInfo",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IHederaTokenService.HederaToken",
                                            "name": "token",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "string",
                                                    "name": "name",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "symbol",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "treasury",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "memo",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "tokenSupplyType",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maxSupply",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "freezeDefault",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                                    "name": "tokenKeys",
                                                    "type": "tuple[]",
                                                    "components": [
                                                        {
                                                            "internalType": "uint256",
                                                            "name": "keyType",
                                                            "type": "uint256"
                                                        },
                                                        {
                                                            "internalType": "struct IHederaTokenService.KeyValue",
                                                            "name": "key",
                                                            "type": "tuple",
                                                            "components": [
                                                                {
                                                                    "internalType": "bool",
                                                                    "name": "inheritAccountKey",
                                                                    "type": "bool"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "contractId",
                                                                    "type": "address"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ed25519",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ECDSA_secp256k1",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "delegatableContractId",
                                                                    "type": "address"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.Expiry",
                                                    "name": "expiry",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "int64",
                                                            "name": "second",
                                                            "type": "int64"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "autoRenewAccount",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "int64",
                                                            "name": "autoRenewPeriod",
                                                            "type": "int64"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "totalSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "deleted",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "defaultKycStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "pauseStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FixedFee[]",
                                            "name": "fixedFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useCurrentTokenForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                                            "name": "fractionalFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "minimumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maximumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "netOfTransfers",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                            "name": "royaltyFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "ledgerId",
                                            "type": "string"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "int64",
                                    "name": "serialNumber",
                                    "type": "int64"
                                },
                                { "internalType": "address", "name": "ownerId", "type": "address" },
                                {
                                    "internalType": "int64",
                                    "name": "creationTime",
                                    "type": "int64"
                                },
                                { "internalType": "bytes", "name": "metadata", "type": "bytes" },
                                {
                                    "internalType": "address",
                                    "name": "spenderId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenCustomFees",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                {
                                    "internalType": "int64",
                                    "name": "minimumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "maximumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "netOfTransfers",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenDefaultFreezeStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenDefaultKycStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenExpiryInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.Expiry",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                { "internalType": "int64", "name": "second", "type": "int64" },
                                {
                                    "internalType": "address",
                                    "name": "autoRenewAccount",
                                    "type": "address"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "autoRenewPeriod",
                                    "type": "int64"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "name": "token",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "string",
                                            "name": "name",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "symbol",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "treasury",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "memo",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "tokenSupplyType",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maxSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "freezeDefault",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "uint256",
                                                    "name": "keyType",
                                                    "type": "uint256"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "bool",
                                                            "name": "inheritAccountKey",
                                                            "type": "bool"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "contractId",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ed25519",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "delegatableContractId",
                                                            "type": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "name": "expiry",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "second",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "autoRenewAccount",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "internalType": "int64", "name": "totalSupply", "type": "int64" },
                                { "internalType": "bool", "name": "deleted", "type": "bool" },
                                {
                                    "internalType": "bool",
                                    "name": "defaultKycStatus",
                                    "type": "bool"
                                },
                                { "internalType": "bool", "name": "pauseStatus", "type": "bool" },
                                {
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "minimumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maximumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "netOfTransfers",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                { "internalType": "string", "name": "ledgerId", "type": "string" }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "keyType", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenKey",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.KeyValue",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "inheritAccountKey",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "contractId",
                                    "type": "address"
                                },
                                { "internalType": "bytes", "name": "ed25519", "type": "bytes" },
                                {
                                    "internalType": "bytes",
                                    "name": "ECDSA_secp256k1",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatableContractId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenType",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "int32", "name": "", "type": "int32" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "owner", "type": "address" },
                        { "internalType": "address", "name": "operator", "type": "address" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isApprovedForAll",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "isToken",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "bytes[]", "name": "", "type": "bytes[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" },
                        { "internalType": "int64[]", "name": "serialNumbers", "type": "int64[]" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "sender", "type": "address" },
                        { "internalType": "address", "name": "recipient", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address[]", "name": "accountId", "type": "address[]" },
                        { "internalType": "int64[]", "name": "amount", "type": "int64[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "associateToken(address,address)": {
                        "params": {
                            "account": "The account to be associated with the provided token",
                            "token": "The token to be associated with the provided account"
                        }
                    },
                    "associateTokens(address,address[])": {
                        "params": {
                            "account": "The account to be associated with the provided tokens",
                            "tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "dissociateToken(address,address)": {
                        "params": {
                            "account": "The account to be associated with the provided token",
                            "token": "The token to be associated with the provided account"
                        }
                    },
                    "dissociateTokens(address,address[])": {
                        "params": {
                            "account": "The account to be dissociated from the provided tokens",
                            "tokens": "The tokens to be dissociated from the provided account."
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getAccountId(address)": {
                        "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
                    },
                    "getApproved(address,uint256)": {
                        "params": {
                            "serialNumber": "The NFT to find the approved address for",
                            "token": "The Hedera NFT token address to check approval"
                        },
                        "returns": {
                            "approved": "The approved address for this NFT, or the zero address if there is none",
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getFungibleTokenInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "FungibleTokenInfo info for `token`"
                        }
                    },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "params": {
                            "serialNumber": "The NFT serialNumber to check",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                        }
                    },
                    "getTokenCustomFees(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "Set of fixed fees for `token`",
                            "_2": "Set of fractional fees for `token`",
                            "_3": "Set of royalty fees for `token`"
                        }
                    },
                    "getTokenDefaultFreezeStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default freeze status is frozen."
                        }
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                        }
                    },
                    "getTokenExpiryInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenInfo": "Expiry info for `token`"
                        }
                    },
                    "getTokenInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenInfo": "TokenInfo info for `token`"
                        }
                    },
                    "getTokenKey(address,uint256)": {
                        "params": {
                            "keyType": "The keyType of the desired KeyValue",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "KeyValue info for key of type `keyType`"
                        }
                    },
                    "getTokenType(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                        }
                    },
                    "isApprovedForAll(address,address,address)": {
                        "params": {
                            "operator": "The address that acts on behalf of the owner",
                            "owner": "The address that owns the NFTs",
                            "token": "The Hedera NFT token address to approve"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                        }
                    },
                    "isToken(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if valid token found for the given address"
                        }
                    },
                    "transferToken(address,address,address,int64)": {
                        "params": {
                            "amount": "Non-negative value to send. a negative value will result in a failure.",
                            "recipient": "The receiver of the transaction",
                            "sender": "The sender for the transaction",
                            "token": "The token to transfer to/from"
                        }
                    },
                    "transferTokens(address,address[],int64[])": {
                        "params": {
                            "accountId": "account to do a transfer to/from",
                            "amount": "The amount from the accountId at the same index",
                            "token": "The ID of the token as a solidity address"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "associateToken(address,address)": {
                        "notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
                    },
                    "associateTokens(address,address[])": {
                        "notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
                    },
                    "dissociateToken(address,address)": {
                        "notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
                    },
                    "dissociateTokens(address,address[])": {
                        "notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
                    },
                    "getApproved(address,uint256)": {
                        "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
                    },
                    "getFungibleTokenInfo(address)": { "notice": "Query fungible token info" },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "notice": "Query non fungible token info"
                    },
                    "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
                    "getTokenDefaultFreezeStatus(address)": {
                        "notice": "Query token default freeze status"
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "notice": "Query token default kyc status"
                    },
                    "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
                    "getTokenInfo(address)": { "notice": "Query token info" },
                    "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
                    "getTokenType(address)": {
                        "notice": "Query to return the token type for a given address"
                    },
                    "isApprovedForAll(address,address,address)": {
                        "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
                    },
                    "isToken(address)": {
                        "notice": "Query if valid token found for the given address"
                    },
                    "transferToken(address,address,address,int64)": {
                        "notice": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"
                    },
                    "transferTokens(address,address[],int64[])": {
                        "notice": "Initiates a Fungible Token Transfer"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/",
                "forge-std/=lib/forge-std/src/",
                "solidity-stringutils/=lib/surl/lib/solidity-stringutils/",
                "surl/=lib/surl/"
            ],
            "optimizer": { "enabled": true, "runs": 200 },
            "metadata": { "bytecodeHash": "ipfs" },
            "compilationTarget": { "contracts/HtsSystemContract.sol": "HtsSystemContract" },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "contracts/HtsSystemContract.sol": {
                "keccak256": "0xa8ba0251aa53db712a75d089aa7b8ffad8777ef115caf1348182274d4c1c096b",
                "urls": [
                    "bzz-raw://03339205005abfe5ec101ded788ca64dcb690cc2b41d05ef117272a2ce3ea662",
                    "dweb:/ipfs/QmPaY22UmWh8Q91BFXhaM69d75hf9jRo7G2tYVUSz78cev"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC20.sol": {
                "keccak256": "0x77993e2d90d6b91d30b8721a52364902d823dd5d1020500071c4ecd7f847a00e",
                "urls": [
                    "bzz-raw://776be938a4f20b2b40e95a5d58f330454d21077894659a674ac8bda378561598",
                    "dweb:/ipfs/QmToUenT2jKjiJLCozN3xQp2esRVbRceyS8KVMqcd9j29W"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC721.sol": {
                "keccak256": "0x7b4a961afb96ff6326f4d2985f20edf7aa10b3ba1b68c502a0cdcd84ba26e767",
                "urls": [
                    "bzz-raw://322d92f6a244dd8a9818d5be6e4e17c6dd048a033449dd79b43229c7077da06d",
                    "dweb:/ipfs/QmdFyC7EU8iGiyFzh77YsUpp6eysV8ijyLUKWsDPVKq7yG"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHRC719.sol": {
                "keccak256": "0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd",
                "urls": [
                    "bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d",
                    "dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHederaTokenService.sol": {
                "keccak256": "0x9483e9d8baabf226234da1cdabc36a5ad00eb6e58be49e968cff3ac556e3d8c3",
                "urls": [
                    "bzz-raw://59c4d8b889bafe06f4ca40c76eb483a097354aa526bda42e3ad7ac8c40487668",
                    "dweb:/ipfs/QmZ2J5fxCM2P3BoQoemBB9XS7fNQYmm3vge4FLf5ctFGqm"
                ],
                "license": "Apache-2.0"
            },
            "lib/forge-std/src/interfaces/IERC165.sol": {
                "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
                "urls": [
                    "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
                    "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 93,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "tokenType",
                "offset": 0,
                "slot": "0",
                "type": "t_string_storage"
            },
            {
                "astId": 95,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "name",
                "offset": 0,
                "slot": "1",
                "type": "t_string_storage"
            },
            {
                "astId": 97,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "symbol",
                "offset": 0,
                "slot": "2",
                "type": "t_string_storage"
            },
            {
                "astId": 99,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "decimals",
                "offset": 0,
                "slot": "3",
                "type": "t_uint8"
            },
            {
                "astId": 101,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "totalSupply",
                "offset": 0,
                "slot": "4",
                "type": "t_uint256"
            },
            {
                "astId": 104,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "_tokenInfo",
                "offset": 0,
                "slot": "5",
                "type": "t_struct(TokenInfo)6749_storage"
            }
        ],
        "types": {
            "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
            "t_array(t_struct(FixedFee)6791_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FixedFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FixedFee)6791_storage"
            },
            "t_array(t_struct(FractionalFee)6805_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FractionalFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FractionalFee)6805_storage"
            },
            "t_array(t_struct(RoyaltyFee)6819_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.RoyaltyFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(RoyaltyFee)6819_storage"
            },
            "t_array(t_struct(TokenKey)6690_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.TokenKey[]",
                "numberOfBytes": "32",
                "base": "t_struct(TokenKey)6690_storage"
            },
            "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
            "t_bytes_storage": { "encoding": "bytes", "label": "bytes", "numberOfBytes": "32" },
            "t_int64": { "encoding": "inplace", "label": "int64", "numberOfBytes": "8" },
            "t_string_storage": { "encoding": "bytes", "label": "string", "numberOfBytes": "32" },
            "t_struct(Expiry)6671_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.Expiry",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6666,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "second",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6668,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewAccount",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6670,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewPeriod",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_int64"
                    }
                ]
            },
            "t_struct(FixedFee)6791_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FixedFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6782,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6784,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6786,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 28,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6788,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useCurrentTokenForPayment",
                        "offset": 29,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6790,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(FractionalFee)6805_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FractionalFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6794,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6796,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6798,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "minimumAmount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6800,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maximumAmount",
                        "offset": 24,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6802,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "netOfTransfers",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6804,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 1,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(HederaToken)6713_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.HederaToken",
                "numberOfBytes": "256",
                "members": [
                    {
                        "astId": 6693,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "name",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6695,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "symbol",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6697,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "treasury",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    },
                    {
                        "astId": 6699,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "memo",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6701,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenSupplyType",
                        "offset": 0,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6703,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maxSupply",
                        "offset": 1,
                        "slot": "4",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6705,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "freezeDefault",
                        "offset": 9,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6709,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenKeys",
                        "offset": 0,
                        "slot": "5",
                        "type": "t_array(t_struct(TokenKey)6690_storage)dyn_storage"
                    },
                    {
                        "astId": 6712,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "expiry",
                        "offset": 0,
                        "slot": "6",
                        "type": "t_struct(Expiry)6671_storage"
                    }
                ]
            },
            "t_struct(KeyValue)6683_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.KeyValue",
                "numberOfBytes": "128",
                "members": [
                    {
                        "astId": 6674,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "inheritAccountKey",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6676,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "contractId",
                        "offset": 1,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6678,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ed25519",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 6680,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ECDSA_secp256k1",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 6682,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "delegatableContractId",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(RoyaltyFee)6819_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.RoyaltyFee",
                "numberOfBytes": "96",
                "members": [
                    {
                        "astId": 6808,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6810,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6812,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6814,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    },
                    {
                        "astId": 6816,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 20,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6818,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(TokenInfo)6749_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenInfo",
                "numberOfBytes": "416",
                "members": [
                    {
                        "astId": 6718,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "token",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_struct(HederaToken)6713_storage"
                    },
                    {
                        "astId": 6721,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "totalSupply",
                        "offset": 0,
                        "slot": "8",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6724,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "deleted",
                        "offset": 8,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6727,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "defaultKycStatus",
                        "offset": 9,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6730,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "pauseStatus",
                        "offset": 10,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6735,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fixedFees",
                        "offset": 0,
                        "slot": "9",
                        "type": "t_array(t_struct(FixedFee)6791_storage)dyn_storage"
                    },
                    {
                        "astId": 6740,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fractionalFees",
                        "offset": 0,
                        "slot": "10",
                        "type": "t_array(t_struct(FractionalFee)6805_storage)dyn_storage"
                    },
                    {
                        "astId": 6745,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "royaltyFees",
                        "offset": 0,
                        "slot": "11",
                        "type": "t_array(t_struct(RoyaltyFee)6819_storage)dyn_storage"
                    },
                    {
                        "astId": 6748,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ledgerId",
                        "offset": 0,
                        "slot": "12",
                        "type": "t_string_storage"
                    }
                ]
            },
            "t_struct(TokenKey)6690_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenKey",
                "numberOfBytes": "160",
                "members": [
                    {
                        "astId": 6686,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "keyType",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 6689,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "key",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_struct(KeyValue)6683_storage"
                    }
                ]
            },
            "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" },
            "t_uint8": { "encoding": "inplace", "label": "uint8", "numberOfBytes": "1" }
        }
    },
    "userdoc": {
        "version": 1,
        "kind": "user",
        "methods": {
            "associateToken(address,address)": {
                "notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
            },
            "associateTokens(address,address[])": {
                "notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
            },
            "dissociateToken(address,address)": {
                "notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
            },
            "dissociateTokens(address,address[])": {
                "notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
            },
            "getApproved(address,uint256)": {
                "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
            },
            "getFungibleTokenInfo(address)": { "notice": "Query fungible token info" },
            "getNonFungibleTokenInfo(address,int64)": { "notice": "Query non fungible token info" },
            "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
            "getTokenDefaultFreezeStatus(address)": {
                "notice": "Query token default freeze status"
            },
            "getTokenDefaultKycStatus(address)": { "notice": "Query token default kyc status" },
            "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
            "getTokenInfo(address)": { "notice": "Query token info" },
            "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
            "getTokenType(address)": {
                "notice": "Query to return the token type for a given address"
            },
            "isApprovedForAll(address,address,address)": {
                "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
            },
            "isToken(address)": { "notice": "Query if valid token found for the given address" },
            "transferToken(address,address,address,int64)": {
                "notice": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"
            },
            "transferTokens(address,address[],int64[])": {
                "notice": "Initiates a Fungible Token Transfer"
            }
        }
    },
    "devdoc": {
        "version": 1,
        "kind": "dev",
        "methods": {
            "associateToken(address,address)": {
                "params": {
                    "account": "The account to be associated with the provided token",
                    "token": "The token to be associated with the provided account"
                }
            },
            "associateTokens(address,address[])": {
                "params": {
                    "account": "The account to be associated with the provided tokens",
                    "tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "dissociateToken(address,address)": {
                "params": {
                    "account": "The account to be associated with the provided token",
                    "token": "The token to be associated with the provided account"
                }
            },
            "dissociateTokens(address,address[])": {
                "params": {
                    "account": "The account to be dissociated from the provided tokens",
                    "tokens": "The tokens to be dissociated from the provided account."
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "getAccountId(address)": {
                "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
            },
            "getApproved(address,uint256)": {
                "params": {
                    "serialNumber": "The NFT to find the approved address for",
                    "token": "The Hedera NFT token address to check approval"
                },
                "returns": {
                    "approved": "The approved address for this NFT, or the zero address if there is none",
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "getFungibleTokenInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "FungibleTokenInfo info for `token`"
                }
            },
            "getNonFungibleTokenInfo(address,int64)": {
                "params": {
                    "serialNumber": "The NFT serialNumber to check",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                }
            },
            "getTokenCustomFees(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "Set of fixed fees for `token`",
                    "_2": "Set of fractional fees for `token`",
                    "_3": "Set of royalty fees for `token`"
                }
            },
            "getTokenDefaultFreezeStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default freeze status is frozen."
                }
            },
            "getTokenDefaultKycStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                }
            },
            "getTokenExpiryInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenInfo": "Expiry info for `token`"
                }
            },
            "getTokenInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenInfo": "TokenInfo info for `token`"
                }
            },
            "getTokenKey(address,uint256)": {
                "params": {
                    "keyType": "The keyType of the desired KeyValue",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "KeyValue info for key of type `keyType`"
                }
            },
            "getTokenType(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                }
            },
            "isApprovedForAll(address,address,address)": {
                "params": {
                    "operator": "The address that acts on behalf of the owner",
                    "owner": "The address that owns the NFTs",
                    "token": "The Hedera NFT token address to approve"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                }
            },
            "isToken(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if valid token found for the given address"
                }
            },
            "transferToken(address,address,address,int64)": {
                "params": {
                    "amount": "Non-negative value to send. a negative value will result in a failure.",
                    "recipient": "The receiver of the transaction",
                    "sender": "The sender for the transaction",
                    "token": "The token to transfer to/from"
                }
            },
            "transferTokens(address,address[],int64[])": {
                "params": {
                    "accountId": "account to do a transfer to/from",
                    "amount": "The amount from the accountId at the same index",
                    "token": "The ID of the token as a solidity address"
                }
            }
        },
        "events": {
            "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
            },
            "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
            }
        }
    },
    "id": 1
}
