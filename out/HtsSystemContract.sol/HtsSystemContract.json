{
    "abi": [
        { "type": "fallback", "stateMutability": "nonpayable" },
        {
            "type": "function",
            "name": "_update",
            "inputs": [
                { "name": "from", "type": "address", "internalType": "address" },
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "associateToken",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "token", "type": "address", "internalType": "address" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "associateTokens",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "tokens", "type": "address[]", "internalType": "address[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "burnToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int64[]", "internalType": "int64[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "dissociateToken",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "token", "type": "address", "internalType": "address" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "dissociateTokens",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "tokens", "type": "address[]", "internalType": "address[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getAccountId",
            "inputs": [{ "name": "account", "type": "address", "internalType": "address" }],
            "outputs": [{ "name": "accountId", "type": "uint32", "internalType": "uint32" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getApproved",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "approved", "type": "address", "internalType": "address" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getFungibleTokenInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.FungibleTokenInfo",
                    "components": [
                        {
                            "name": "tokenInfo",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "components": [
                                {
                                    "name": "token",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "components": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "symbol",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "treasury",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "memo",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "tokenSupplyType",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "maxSupply",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "freezeDefault",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "components": [
                                                {
                                                    "name": "keyType",
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                {
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "components": [
                                                        {
                                                            "name": "inheritAccountKey",
                                                            "type": "bool",
                                                            "internalType": "bool"
                                                        },
                                                        {
                                                            "name": "contractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        },
                                                        {
                                                            "name": "ed25519",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "delegatableContractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "expiry",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "components": [
                                                {
                                                    "name": "second",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                },
                                                {
                                                    "name": "autoRenewAccount",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                                { "name": "deleted", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "defaultKycStatus",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "components": [
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "minimumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "maximumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "netOfTransfers",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                { "name": "ledgerId", "type": "string", "internalType": "string" }
                            ]
                        },
                        { "name": "decimals", "type": "int32", "internalType": "int32" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getNonFungibleTokenInfo",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "int64", "internalType": "int64" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                    "components": [
                        {
                            "name": "tokenInfo",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "components": [
                                {
                                    "name": "token",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "components": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "symbol",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "treasury",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "memo",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "tokenSupplyType",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "maxSupply",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "freezeDefault",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "components": [
                                                {
                                                    "name": "keyType",
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                {
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "components": [
                                                        {
                                                            "name": "inheritAccountKey",
                                                            "type": "bool",
                                                            "internalType": "bool"
                                                        },
                                                        {
                                                            "name": "contractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        },
                                                        {
                                                            "name": "ed25519",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "delegatableContractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "expiry",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "components": [
                                                {
                                                    "name": "second",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                },
                                                {
                                                    "name": "autoRenewAccount",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                                { "name": "deleted", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "defaultKycStatus",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "components": [
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "minimumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "maximumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "netOfTransfers",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                { "name": "ledgerId", "type": "string", "internalType": "string" }
                            ]
                        },
                        { "name": "serialNumber", "type": "int64", "internalType": "int64" },
                        { "name": "ownerId", "type": "address", "internalType": "address" },
                        { "name": "creationTime", "type": "int64", "internalType": "int64" },
                        { "name": "metadata", "type": "bytes", "internalType": "bytes" },
                        { "name": "spenderId", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenCustomFees",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FixedFee[]",
                    "components": [
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        {
                            "name": "useCurrentTokenForPayment",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "minimumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "maximumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "netOfTransfers", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenDefaultFreezeStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenDefaultKycStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenExpiryInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.Expiry",
                    "components": [
                        { "name": "second", "type": "int64", "internalType": "int64" },
                        {
                            "name": "autoRenewAccount",
                            "type": "address",
                            "internalType": "address"
                        },
                        { "name": "autoRenewPeriod", "type": "int64", "internalType": "int64" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.TokenInfo",
                    "components": [
                        {
                            "name": "token",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "components": [
                                { "name": "name", "type": "string", "internalType": "string" },
                                { "name": "symbol", "type": "string", "internalType": "string" },
                                {
                                    "name": "treasury",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                { "name": "memo", "type": "string", "internalType": "string" },
                                {
                                    "name": "tokenSupplyType",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "maxSupply", "type": "int64", "internalType": "int64" },
                                { "name": "freezeDefault", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "components": [
                                        {
                                            "name": "keyType",
                                            "type": "uint256",
                                            "internalType": "uint256"
                                        },
                                        {
                                            "name": "key",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "components": [
                                                {
                                                    "name": "inheritAccountKey",
                                                    "type": "bool",
                                                    "internalType": "bool"
                                                },
                                                {
                                                    "name": "contractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "ed25519",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "delegatableContractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "expiry",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "components": [
                                        {
                                            "name": "second",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "autoRenewAccount",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "autoRenewPeriod",
                                            "type": "int64",
                                            "internalType": "int64"
                                        }
                                    ]
                                }
                            ]
                        },
                        { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                        { "name": "deleted", "type": "bool", "internalType": "bool" },
                        { "name": "defaultKycStatus", "type": "bool", "internalType": "bool" },
                        { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                        {
                            "name": "fixedFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "components": [
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "fractionalFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                {
                                    "name": "minimumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "maximumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "netOfTransfers",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "royaltyFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        { "name": "ledgerId", "type": "string", "internalType": "string" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenKey",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "keyType", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.KeyValue",
                    "components": [
                        { "name": "inheritAccountKey", "type": "bool", "internalType": "bool" },
                        { "name": "contractId", "type": "address", "internalType": "address" },
                        { "name": "ed25519", "type": "bytes", "internalType": "bytes" },
                        { "name": "ECDSA_secp256k1", "type": "bytes", "internalType": "bytes" },
                        {
                            "name": "delegatableContractId",
                            "type": "address",
                            "internalType": "address"
                        }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenType",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int32", "internalType": "int32" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isApprovedForAll",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "owner", "type": "address", "internalType": "address" },
                { "name": "operator", "type": "address", "internalType": "address" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isToken",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bytes[]", "internalType": "bytes[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" },
                { "name": "serialNumbers", "type": "int64[]", "internalType": "int64[]" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ApprovalForAll",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        }
    ],
    "bytecode": {
        "object": "0x6080604052348015600e575f5ffd5b50615f1c8061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061012a575f3560e01c806349146bde116100ab578063d614cdb81161006f578063d614cdb81461044d578063d6910d061461046e578063e0b490f71461049b578063e0f4059a146104c3578063f49f40db146104e55761012a565b806349146bde146103c157806378b63918146103d457806393272baf146103e7578063a7daa18d14610417578063ae7611a01461042a5761012a565b8063287e1da8116100f2578063287e1da8146103385780632e63879b14610359578063335e04c11461036c5780633c4dd32e1461037f5780633f28a19b146103a05761012a565b8063098f236614610275578063099794e8146102af5780630bb3bfa8146102d557806319f37361146102ea5780631f69565f14610317575b5f366060601c8210156101845760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a206e6f7420656e6f7567682063616c6c6461746100000060448201526064015b60405180910390fd5b5f61019260048236816142ac565b61019b916142d3565b60e01c905063618dc65e81146101f35760405162461bcd60e51b815260206004820152601e60248201527f66616c6c6261636b3a20756e737570706f727465642073656c6563746f720000604482015260640161017b565b5f6102026018600436846142ac565b61020b9161430b565b60601c905030811461025f5760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a20746f6b656e206973206e6f742063616c6c6572000000604482015260640161017b565b6102676104f8565b805195506020019350505050f35b610288610283366004614358565b610dd8565b6040805160079390930b83526001600160a01b039091166020830152015b60405180910390f35b6102c26102bd366004614382565b610ec6565b60405160079190910b81526020016102a6565b6102e86102e33660046143b9565b610f50565b005b6102fd6102f83660046143f7565b61102e565b6040805160079390930b83529015156020830152016102a6565b61032a6103253660046143f7565b6110ef565b6040516102a6929190614879565b61034b6103463660046148a2565b6111e3565b6040516102a69291906148ce565b6102c2610367366004614a54565b61146a565b6102fd61037a3660046143f7565b611745565b61039261038d366004614358565b611841565b6040516102a6929190614b07565b6103b36103ae3660046143f7565b611a20565b6040516102a6929190614b22565b6102c26103cf366004614382565b611c0b565b6102c26103e2366004614a54565b611c8b565b6103fa6103f53660046143f7565b611f5f565b6040805160079390930b835260039190910b6020830152016102a6565b6102fd6104253660046143f7565b61203f565b61043d6104383660046143f7565b6120fa565b6040516102a69493929190614b5f565b61046061045b3660046143f7565b6121f9565b6040516102a6929190614ba0565b61048161047c366004614bdc565b6122fd565b60408051600793840b81529190920b6020820152016102a6565b6104ae6104a93660046143f7565b612624565b60405163ffffffff90911681526020016102a6565b6104d66104d1366004614cc1565b61269e565b6040516102a693929190614dd6565b6102fd6104f3366004614e33565b6129db565b60605f610509601c601836846142ac565b610512916142d3565b905060408051808201825260098152681393d517d193d5539160ba1b602090910152517f7bafae6429a8b3ef0db181af7c5834a6f2b1af33146a1a9ae02e833d27f2431b90610562905f90614f21565b6040518091039020036105c15760405162461bcd60e51b815260206004820152602160248201527f7265646972656374466f72546f6b656e3a20746f6b656e206e6f7420666f756e6044820152601960fa1b606482015260840161017b565b610166193301610c9f5763e096a9a160e01b6001600160e01b031982160161066857601c36101561063e5760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e496e666f3a204e6f7420656e6f7567682063616c6c6461746044820152606160f81b606482015260840161017b565b601660056040516020016106539291906152e4565b60405160208183030381529060405291505090565b63028c4f7360e51b6001600160e01b03198216016106fc57601c3610156106e15760405162461bcd60e51b815260206004820152602760248201527f676574546f6b656e437573746f6d466565733a204e6f7420656e6f7567682063604482015266616c6c6461746160c81b606482015260840161017b565b60405161065390601690600e90600f906010906020016153c1565b63cca1fb3f60e01b6001600160e01b03198216016107a257601c36101561077b5760405162461bcd60e51b815260206004820152602d60248201527f676574546f6b656e44656661756c744b79635374617475733a204e6f7420656e60448201526c6f7567682063616c6c6461746160981b606482015260840161017b565b600d546040805160166020820152600160481b90920460ff16151590820152606001610653565b6358255e7360e01b6001600160e01b031982160161084b57601c3610156108245760405162461bcd60e51b815260206004820152603060248201527f676574546f6b656e44656661756c74467265657a655374617475733a204e6f7460448201526f20656e6f7567682063616c6c6461746160801b606482015260840161017b565b6009546040805160166020820152600160481b90920460ff16151590820152606001610653565b63053d664960e31b6001600160e01b03198216016108d957601c3610156108c45760405162461bcd60e51b815260206004820152602760248201527f676574546f6b656e457870697279496e666f3a204e6f7420656e6f7567682063604482015266616c6c6461746160c81b606482015260840161017b565b60405161065390601690600b90602001615402565b635b75ca1160e11b6001600160e01b03198216016109a057603036101561094e5760405162461bcd60e51b815260206004820152602360248201527f6173736f6369617465546f6b656e3a204e6f7420656e6f7567682063616c6c6460448201526261746160e81b606482015260840161017b565b5f61095d603c602836846142ac565b6109669161430b565b60601c90505f61097582612ad4565b600181556040805160166020820152919250015b604051602081830303815290604052935050505090565b631ecd0d6360e31b6001600160e01b0319821601610a53576030361015610a155760405162461bcd60e51b8152602060048201526024808201527f646973736f6369617465546f6b656e3a204e6f7420656e6f7567682063616c6c6044820152636461746160e01b606482015260840161017b565b5f610a24603c602836846142ac565b610a2d9161430b565b60601c90505f610a3c82612ad4565b5f8155604080516016602082015291925001610989565b636cd8d45160e01b6001600160e01b0319821601610bb357601c361015610ac65760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e547970653a204e6f7420656e6f7567682063616c6c6461746044820152606160f81b606482015260840161017b565b7f20081d23699eb901ca16307080f9b35e7967740755a921f749a9e037b0875c755f604051602001610af89190614f21565b6040516020818303038152906040528051906020012003610b2e5760408051601660208201525f91810191909152606001610653565b7f6c58a12b113a1ee77f554495d8bd48a419af104bca196099cdecc39fcb8989f05f604051602001610b609190614f21565b6040516020818303038152906040528051906020012003610b97576040805160166020820152600191810191909152606001610653565b60408051601660208201525f1991810191909152606001610653565b631e89880b60e31b6001600160e01b0319821601610c9f57607c361015610c1c5760405162461bcd60e51b815260206004820152601b60248201527f7570646174653a204e6f7420656e6f7567682063616c6c646174610000000000604482015260640161017b565b5f610c2b603c602836846142ac565b610c349161430b565b60601c90505f610c48605c604836846142ac565b610c519161430b565b60601c90505f610c65607c605c36846142ac565b610c6e9161543e565b9050610c7b838383610f50565b60408051600160208201520160405160208183030381529060405294505050505090565b604080518082018252600f81526e232aa723a4a12622afa1a7a6a6a7a760891b602090910152517f20081d23699eb901ca16307080f9b35e7967740755a921f749a9e037b0875c7590610cf3905f90614f21565b604051809103902003610d0f57610d0981612b84565b91505090565b60408051808201825260138152724e4f4e5f46554e4749424c455f554e4951554560681b602090910152517f6c58a12b113a1ee77f554495d8bd48a419af104bca196099cdecc39fcb8989f090610d67905f90614f21565b604051809103902003610d7d57610d09816130ba565b60405162461bcd60e51b815260206004820152602a60248201527f7265646972656374466f72546f6b656e3a20746f6b656e2074797065206e6f74604482015269081cdd5c1c1bdc9d195960b21b606482015260840161017b565b5f803061016714610dfb5760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b038416610e515760405162461bcd60e51b815260206004820152601a60248201527f676574417070726f7665643a20696e76616c696420746f6b656e000000000000604482015260640161017b565b60405163020604bf60e21b8152600481018490526016906001600160a01b0386169063081812fc90602401602060405180830381865afa158015610e97573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ebb91906154a2565b909590945092505050565b5f3061016714610ee85760405162461bcd60e51b815260040161017b9061545b565b6040805160018082528183019092525f916020808301908036833701905050905082815f81518110610f1c57610f1c6154bd565b60200260200101906001600160a01b031690816001600160a01b031681525050610f468482611c8b565b9150505b92915050565b6001600160a01b038316610f7a578060045f828254610f6f91906154e5565b90915550610fdf9050565b5f610f848461368c565b805490915082811015610fd95760405162461bcd60e51b815260206004820152601f60248201527f5f7472616e736665723a20696e73756666696369656e742062616c616e636500604482015260640161017b565b82900390555b6001600160a01b038216611009578060045f828254610ffe91906154f8565b909155506110299050565b5f6110138361368c565b80549091505f61102384836154e5565b90925550505b505050565b6040516001600160a01b03821660248201525f908190819060440160408051601f198184030181529181526020820180516001600160e01b03166393272baf60e01b179052519091505f9081906001600160a01b0387169061109190859061550b565b5f604051808303815f865af19150503d805f81146110ca576040519150601f19603f3d011682016040523d82523d5f602084013e6110cf565b606091505b509150915060168280156110e357505f8251115b94509450505050915091565b5f6110f8614161565b30610167146111195760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b03831661116f5760405162461bcd60e51b815260206004820152601b60248201527f676574546f6b656e496e666f3a20696e76616c696420746f6b656e0000000000604482015260640161017b565b604051631f69565f60e01b81526001600160a01b0384166004820181905290631f69565f906024015f604051808303815f875af11580156111b2573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111d99190810190615afe565b9094909350915050565b5f6111ec614213565b306101671461120d5760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0384166112725760405162461bcd60e51b815260206004820152602660248201527f6765744e6f6e46756e6769626c65546f6b656e496e666f3a20696e76616c6964604482015265103a37b5b2b760d11b606482015260840161017b565b604051631f69565f60e01b81526001600160a01b038516600482018190525f91829190631f69565f906024015f604051808303815f875af11580156112b9573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526112e09190810190615afe565b915091508160070b6016146113515760405162461bcd60e51b815260206004820152603160248201527f6765744e6f6e46756e6769626c65546f6b656e496e666f3a206661696c656420604482015270746f2067657420746f6b656e206461746160781b606482015260840161017b565b611359614213565b818152600786900b602082015260405163020604bf60e21b81526001600160401b03871660048201526001600160a01b0388169063081812fc90602401602060405180830381865afa1580156113b1573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113d591906154a2565b6001600160a01b0390811660a08301526040516331a9108f60e11b81526001600160401b038816600482015290881690636352211e90602401602060405180830381865afa158015611429573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061144d91906154a2565b6001600160a01b03166040820152919350909150505b9250929050565b5f306101671461148c5760405162461bcd60e51b815260040161017b9061545b565b5f8251116114dc5760405162461bcd60e51b815260206004820152601f60248201527f6173736f6369617465546f6b656e733a206d697373696e6720746f6b656e7300604482015260640161017b565b6001600160a01b038316331461158f5760405162461bcd60e51b815260206004820152606660248201527f6173736f6369617465546f6b656e733a204d757374206265207369676e65642060448201527f6279207468652070726f7669646564204163636f756e742773206b6579206f7260648201527f2063616c6c65642066726f6d20746865206163636f756e747320636f6e7472616084820152656374206b657960d01b60a482015260c40161017b565b5f5b825181101561173b575f6001600160a01b03168382815181106115b6576115b66154bd565b60200260200101516001600160a01b0316036116145760405162461bcd60e51b815260206004820152601e60248201527f6173736f6369617465546f6b656e733a20696e76616c696420746f6b656e0000604482015260640161017b565b5f838281518110611627576116276154bd565b60200260200101516001600160a01b03166349146bde86868581518110611650576116506154bd565b60200260200101516040518363ffffffff1660e01b815260040161168a9291906001600160a01b0392831681529116602082015260400190565b6020604051808303815f875af11580156116a6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116ca9190615c6d565b90508060070b6016146117325760405162461bcd60e51b815260206004820152602a60248201527f6173736f6369617465546f6b656e733a204661696c656420746f206173736f6360448201526934b0ba32903a37b5b2b760b11b606482015260840161017b565b50600101611591565b5060169392505050565b5f8030610167146117685760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0383166117d05760405162461bcd60e51b815260206004820152602960248201527f676574546f6b656e44656661756c744b79635374617475733a20696e76616c6960448201526864206164647265737360b81b606482015260840161017b565b60405163335e04c160e01b81526001600160a01b038416600482018190529063335e04c1906024015b60408051808303815f875af1158015611814573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118389190615c88565b91509150915091565b5f61184a61424d565b306101671461186b5760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0384166118c15760405162461bcd60e51b815260206004820152601a60248201527f676574546f6b656e4b65793a20696e76616c696420746f6b656e000000000000604482015260640161017b565b604051631f69565f60e01b81526001600160a01b038516600482018190525f91829190631f69565f906024015f604051808303815f875af1158015611908573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261192f9190810190615afe565b915091508160070b6016146119945760405162461bcd60e51b815260206004820152602560248201527f676574546f6b656e4b65793a206661696c656420746f2067657420746f6b656e604482015264206461746160d81b606482015260840161017b565b5f5b815160e0015151811015611a095785825f015160e0015182815181106119be576119be6154bd565b60200260200101515f015103611a01576016825f015160e0015182815181106119e9576119e96154bd565b60200260200101516020015194509450505050611463565b600101611996565b50611a1261424d565b601697909650945050505050565b5f611a2961428d565b3061016714611a4a5760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b038316611aac5760405162461bcd60e51b815260206004820152602360248201527f67657446756e6769626c65546f6b656e496e666f3a20696e76616c696420746f60448201526235b2b760e91b606482015260840161017b565b604051631f69565f60e01b81526001600160a01b038416600482018190525f91829190631f69565f906024015f604051808303815f875af1158015611af3573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611b1a9190810190615afe565b915091508160070b601614611b885760405162461bcd60e51b815260206004820152602e60248201527f67657446756e6769626c65546f6b656e496e666f3a206661696c656420746f2060448201526d67657420746f6b656e206461746160901b606482015260840161017b565b611b9061428d565b81815f0181905250856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bd4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611bf89190615cbb565b5f0b602082015291935090915050915091565b5f3061016714611c2d5760405162461bcd60e51b815260040161017b9061545b565b6040805160018082528183019092525f916020808301908036833701905050905082815f81518110611c6157611c616154bd565b60200260200101906001600160a01b031690816001600160a01b031681525050610f46848261146a565b5f3061016714611cad5760405162461bcd60e51b815260040161017b9061545b565b5f825111611cfd5760405162461bcd60e51b815260206004820181905260248201527f646973736f6369617465546f6b656e733a206d697373696e6720746f6b656e73604482015260640161017b565b6001600160a01b0383163314611db15760405162461bcd60e51b815260206004820152606760248201527f646973736f6369617465546f6b656e733a204d757374206265207369676e656460448201527f206279207468652070726f7669646564204163636f756e742773206b6579206f60648201527f722063616c6c65642066726f6d20746865206163636f756e747320636f6e7472608482015266616374206b657960c81b60a482015260c40161017b565b5f5b825181101561173b575f6001600160a01b0316838281518110611dd857611dd86154bd565b60200260200101516001600160a01b031603611e365760405162461bcd60e51b815260206004820152601f60248201527f646973736f6369617465546f6b656e733a20696e76616c696420746f6b656e00604482015260640161017b565b5f838281518110611e4957611e496154bd565b60200260200101516001600160a01b031663099794e886868581518110611e7257611e726154bd565b60200260200101516040518363ffffffff1660e01b8152600401611eac9291906001600160a01b0392831681529116602082015260400190565b6020604051808303815f875af1158015611ec8573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611eec9190615c6d565b90508060070b601614611f565760405162461bcd60e51b815260206004820152602c60248201527f646973736f6369617465546f6b656e733a204661696c656420746f206469737360448201526b37b1b4b0ba32903a37b5b2b760a11b606482015260840161017b565b50600101611db3565b5f803061016714611f825760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b038316611fd85760405162461bcd60e51b815260206004820152601d60248201527f676574546f6b656e547970653a20696e76616c69642061646472657373000000604482015260640161017b565b6040516393272baf60e01b81526001600160a01b03841660048201819052906393272baf9060240160408051808303815f875af115801561201b573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118389190615cdb565b5f8030610167146120625760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0383166120cd5760405162461bcd60e51b815260206004820152602c60248201527f676574546f6b656e44656661756c74467265657a655374617475733a20696e7660448201526b616c6964206164647265737360a01b606482015260840161017b565b60405163a7daa18d60e01b81526001600160a01b038416600482018190529063a7daa18d906024016117f9565b5f6060808030610167146121205760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0385166121805760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e437573746f6d466565733a20696e76616c696420746f6b656044820152603760f91b606482015260840161017b565b604051630573b08d60e51b81526001600160a01b038616600482018190529063ae7611a0906024015f604051808303815f875af11580156121c3573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526121ea9190810190615d0e565b93509350935093509193509193565b604080516060810182525f8082526020820181905291810182905230610167146122355760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0383166122955760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e457870697279496e666f3a20696e76616c696420746f6b656044820152603760f91b606482015260840161017b565b604051631ac299b760e31b81526001600160a01b038416600482018190529063d614cdb8906024016080604051808303815f875af11580156122d9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111d99190615dad565b5f8030610167146123205760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0385166123765760405162461bcd60e51b815260206004820152601860248201527f6275726e546f6b656e3a20696e76616c696420746f6b656e0000000000000000604482015260640161017b565b5f8460070b136123c85760405162461bcd60e51b815260206004820152601960248201527f6275726e546f6b656e3a20696e76616c696420616d6f756e7400000000000000604482015260640161017b565b604051631f69565f60e01b81526001600160a01b038616600482018190525f91829190631f69565f906024015f604051808303815f875af115801561240f573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526124369190810190615afe565b915091508160070b6016146124995760405162461bcd60e51b815260206004820152602360248201527f6275726e546f6b656e3a206661696c656420746f2067657420746f6b656e20696044820152626e666f60e81b606482015260840161017b565b8051604001516001600160a01b0381166124f55760405162461bcd60e51b815260206004820152601a60248201527f6275726e546f6b656e3a20696e76616c6964206163636f756e74000000000000604482015260640161017b565b60405163017677f560e31b81526001600160a01b0382811660048301525f60248301526001600160401b0389166044830152891690630bb3bfa8906064015f604051808303815f87803b15801561254a575f5ffd5b505af115801561255c573d5f5f3e3d5ffd5b5050505060169450876001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125a0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125c49190615dd8565b93505f8460070b12156126195760405162461bcd60e51b815260206004820152601f60248201527f6275726e546f6b656e3a20696e76616c696420746f74616c20737570706c7900604482015260640161017b565b505050935093915050565b5f30610167146126465760405162461bcd60e51b815260040161017b9061545b565b6040805163e0b490f760e01b602082018190525f602483018190526001600160601b0319606087901b16602c8401529092909182910160405160208183030381529060405261269490615def565b5495945050505050565b5f80606030610167146126c35760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0386166127195760405162461bcd60e51b815260206004820152601860248201527f6d696e74546f6b656e3a20696e76616c696420746f6b656e0000000000000000604482015260640161017b565b5f8560070b1361276b5760405162461bcd60e51b815260206004820152601960248201527f6d696e74546f6b656e3a20696e76616c696420616d6f756e7400000000000000604482015260640161017b565b604051631f69565f60e01b81526001600160a01b038716600482018190525f91829190631f69565f906024015f604051808303815f875af11580156127b2573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526127d99190810190615afe565b915091508160070b60161461283c5760405162461bcd60e51b815260206004820152602360248201527f6d696e74546f6b656e3a206661696c656420746f2067657420746f6b656e20696044820152626e666f60e81b606482015260840161017b565b8051604001516001600160a01b0381166128985760405162461bcd60e51b815260206004820152601a60248201527f6d696e74546f6b656e3a20696e76616c6964206163636f756e74000000000000604482015260640161017b565b60405163017677f560e31b81525f60048201526001600160a01b0382811660248301526001600160401b038a1660448301528a1690630bb3bfa8906064015f604051808303815f87803b1580156128ed575f5ffd5b505af11580156128ff573d5f5f3e3d5ffd5b5050505060169550886001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612943573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129679190615dd8565b604080515f808252602082019092529196505093505f8560070b12156129cf5760405162461bcd60e51b815260206004820152601f60248201527f6d696e74546f6b656e3a20696e76616c696420746f74616c20737570706c7900604482015260640161017b565b50505093509350939050565b5f8030610167146129fe5760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b038516612a545760405162461bcd60e51b815260206004820152601f60248201527f6973417070726f766564466f72416c6c3a20696e76616c696420746f6b656e00604482015260640161017b565b60405163e985e9c560e01b81526001600160a01b03858116600483015284811660248301526016919087169063e985e9c590604401602060405180830381865afa158015612aa4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ac89190615e12565b91509150935093915050565b60405163e0b490f760e01b81526001600160a01b03821660048201525f90634d8fdd6d60e01b90829081906101679063e0b490f7906024015b602060405180830381865afa158015612b28573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612b4c9190615e2b565b9050828282604051602001612b6393929190615e4e565b604051602081830303815290604052612b7b90615def565b95945050505050565b606063f90221fd60e01b6001600160e01b0319831601612bc6576001604051602001612bb09190615e83565b6040516020818303038152906040529050919050565b63cec31a9960e01b6001600160e01b0319831601612bf5576003546040805160ff909216602083015201612bb0565b63e7e9f22360e01b6001600160e01b0319831601612c2257600454604051602001612bb091815260200190565b636a2764bf60e01b6001600160e01b0319831601612c4c576002604051602001612bb09190615e83565b638f5f7dcf60e01b6001600160e01b0319831601612d0457603c361015612cb55760405162461bcd60e51b815260206004820152601e60248201527f62616c616e63654f663a204e6f7420656e6f7567682063616c6c646174610000604482015260640161017b565b5f612cc4603c602836846142ac565b612ccd9161430b565b60601c9050612cdb816136c9565b604051602001612ced91815260200190565b604051602081830303815290604052915050919050565b6356fa634560e01b6001600160e01b0319831601612dd657605c361015612d6d5760405162461bcd60e51b815260206004820152601d60248201527f7472616e736665723a204e6f7420656e6f7567682063616c6c64617461000000604482015260640161017b565b5f612d7c603c602836846142ac565b612d859161430b565b60601c90505f612d99605c603c36846142ac565b612da29161543e565b905033612db08184846136dc565b6040805160016020820152015b6040516020818303038152906040529350505050919050565b63dc478d2360e01b6001600160e01b0319831601612ed057607c361015612e3f5760405162461bcd60e51b815260206004820152601e60248201527f7472616e73666572463a204e6f7420656e6f7567682063616c6c646174610000604482015260640161017b565b5f612e4e603c602836846142ac565b612e579161430b565b60601c90505f612e6b605c604836846142ac565b612e749161430b565b60601c90505f612e88607c605c36846142ac565b612e919161543e565b905033612e9f8482846137d3565b612eaa8484846136dc565b604080516001602082015201604051602081830303815290604052945050505050919050565b63114e896160e11b6001600160e01b0319831601612fa757605c361015612f395760405162461bcd60e51b815260206004820152601e60248201527f616c6c6f77616e63653a204e6f7420656e6f7567682063616c6c646174610000604482015260640161017b565b5f612f48603c602836846142ac565b612f519161430b565b60601c90505f612f65605c604836846142ac565b612f6e9161430b565b60601c9050612f7d828261384b565b604051602001612f8f91815260200190565b60405160208183030381529060405292505050919050565b63f6a1584d60e01b6001600160e01b03198316016130b157605c3610156130105760405162461bcd60e51b815260206004820152601c60248201527f617070726f76653a204e6f7420656e6f7567682063616c6c6461746100000000604482015260640161017b565b5f61301f603c602836846142ac565b6130289161430b565b60601c90505f61303c605c603c36846142ac565b6130459161543e565b905033613053818484613860565b826001600160a01b0316816001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161309891815260200190565b60405180910390a3604080516001602082015201612dbd565b610f4a82613920565b606063f90221fd60e01b6001600160e01b03198316016130e6576001604051602001612bb09190615e83565b636a2764bf60e01b6001600160e01b0319831601613110576002604051602001612bb09190615e83565b633784a92360e01b6001600160e01b03198316016131ac57603c3610156131795760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e5552493a204e6f7420656e6f7567682063616c6c64617461000000604482015260640161017b565b5f613188603c601c36846142ac565b6131919161543e565b905061319c81613a1c565b604051602001612ced9190615e95565b63e7e9f22360e01b6001600160e01b03198316016131d957600454604051602001612bb091815260200190565b638f5f7dcf60e01b6001600160e01b031983160161324257603c361015612cb55760405162461bcd60e51b815260206004820152601e60248201527f62616c616e63654f663a204e6f7420656e6f7567682063616c6c646174610000604482015260640161017b565b634e56ef7160e11b6001600160e01b03198316016132e857603c3610156132ab5760405162461bcd60e51b815260206004820152601c60248201527f6f776e65724f663a204e6f7420656e6f7567682063616c6c6461746100000000604482015260640161017b565b5f6132ba603c601c36846142ac565b6132c39161543e565b90506132ce81613abf565b604080516001600160a01b03909216602083015201612ced565b63dc478d2360e01b6001600160e01b03198316016133ba57607c36101561335b5760405162461bcd60e51b815260206004820152602160248201527f7472616e7366657246726f6d3a204e6f7420656e6f7567682063616c6c6461746044820152606160f81b606482015260840161017b565b5f61336a603c602836846142ac565b6133739161430b565b60601c90505f613387605c604836846142ac565b6133909161430b565b60601c90505f6133a4607c605c36846142ac565b6133ad9161543e565b9050612db0838383613aca565b63f6a1584d60e01b6001600160e01b031983160161347757605c3610156134235760405162461bcd60e51b815260206004820152601c60248201527f617070726f76653a204e6f7420656e6f7567682063616c6c6461746100000000604482015260640161017b565b5f613432603c602836846142ac565b61343b9161430b565b60601c90505f61344f605c603c36846142ac565b6134589161543e565b905061346682826001613cc3565b604080516001602082015201612f8f565b635dd34b9b60e01b6001600160e01b031983160161353357605c3610156134ef5760405162461bcd60e51b815260206004820152602660248201527f736574417070726f76616c466f72416c6c3a204e6f7420656e6f7567682063616044820152656c6c6461746160d01b606482015260840161017b565b5f6134fe603c602836846142ac565b6135079161430b565b60601c90505f61351b605c603c36846142ac565b6135249161543e565b60011490506134668282613dbf565b633df9fb4160e21b6001600160e01b03198316016135bf57603c36101561359c5760405162461bcd60e51b815260206004820181905260248201527f676574417070726f7665643a204e6f7420656e6f7567682063616c6c64617461604482015260640161017b565b5f6135ab603c601c36846142ac565b6135b49161543e565b90506132ce81613ea7565b63167a163b60e01b6001600160e01b03198316016130b157605c3610156136365760405162461bcd60e51b815260206004820152602560248201527f6973417070726f766564466f72416c6c3a204e6f7420656e6f7567682063616c6044820152646c6461746160d81b606482015260840161017b565b5f613645603c602836846142ac565b61364e9161430b565b60601c90505f613662605c604836846142ac565b61366b9161430b565b60601c905061367a8282613eb2565b60408051911515602083015201612f8f565b60405163e0b490f760e01b81526001600160a01b03821660048201525f906370a0823160e01b90829081906101679063e0b490f790602401612b0d565b5f5f6136d48361368c565b549392505050565b6001600160a01b0383166137285760405162461bcd60e51b8152602060048201526013602482015272343a399d1034b73b30b634b21039b2b73232b960691b604482015260640161017b565b6001600160a01b0382166137765760405162461bcd60e51b8152602060048201526015602482015274343a399d1034b73b30b634b2103932b1b2b4bb32b960591b604482015260640161017b565b613781838383610f50565b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516137c691815260200190565b60405180910390a3505050565b5f6137de848461384b565b90505f19811461384557818110156138385760405162461bcd60e51b815260206004820152601d60248201527f5f7370656e64416c6c6f77616e63653a20696e73756666696369656e74000000604482015260640161017b565b6138458484848403613860565b50505050565b5f5f6138578484613ebe565b54949350505050565b6001600160a01b0383166138b65760405162461bcd60e51b815260206004820152601760248201527f5f617070726f76653a20696e76616c6964206f776e6572000000000000000000604482015260640161017b565b6001600160a01b03821661390c5760405162461bcd60e51b815260206004820152601960248201527f5f617070726f76653a20696e76616c6964207370656e64657200000000000000604482015260640161017b565b5f6139178484613ebe565b91909155505050565b6060637ac5590d60e11b6001600160e01b0319831601613960575f61394433612ad4565b9050600181556001604051602001612ced911515815260200190565b63051b6f4160e51b6001600160e01b0319831601613999575f61398233612ad4565b5f8155604080516001602082015291925001612ced565b63b270229360e01b6001600160e01b03198316016139d4575f6139bb33612ad4565b8054604080518215156020820152929350909101612f8f565b60405162461bcd60e51b815260206004820152601f60248201527f7265646972656374466f72546f6b656e3a206e6f7420737570706f7274656400604482015260640161017b565b60605f613a2883613fde565b90505f819050808054613a3a90614e7b565b80601f0160208091040260200160405190810160405280929190818152602001828054613a6690614e7b565b8015613ab15780601f10613a8857610100808354040283529160200191613ab1565b820191905f5260205f20905b815481529060010190602001808311613a9457829003601f168201915b505050505092505050919050565b5f5f6136d483614020565b6001600160a01b038316613b165760405162461bcd60e51b8152602060048201526013602482015272343a399d1034b73b30b634b21039b2b73232b960691b604482015260640161017b565b6001600160a01b038216613b645760405162461bcd60e51b8152602060048201526015602482015274343a399d1034b73b30b634b2103932b1b2b4bb32b960591b604482015260640161017b565b5f613b6e82614020565b80549091506001600160a01b0380821690861614613bce5760405162461bcd60e51b815260206004820152601860248201527f6874733a2073656e646572206973206e6f74206f776e65720000000000000000604482015260640161017b565b336001600160a01b03861614613c4b57613be783613ea7565b6001600160a01b0316336001600160a01b03161480613c0b5750613c0b8533613eb2565b613c4b5760405162461bcd60e51b81526020600482015260116024820152701a1d1cce881d5b985d5d1a1bdc9a5e9959607a1b604482015260640161017b565b5f613c5584614042565b90505f81555f613c658787614064565b90505f8155858455856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef87604051613cb291815260200190565b60405180910390a350505050505050565b5f613ccd83613abf565b9050336001600160a01b0382161480613cf6575033613ceb84613ea7565b6001600160a01b0316145b80613d065750613d068133613eb2565b613d4b5760405162461bcd60e51b815260206004820152601660248201527517d85c1c1c9bdd994e881d5b985d5d1a1bdc9a5e995960521b604482015260640161017b565b5f613d5584614042565b90505f83613d63575f613d65565b855b9050808255856001600160a01b0316836001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051613daf91815260200190565b60405180910390a3505050505050565b336001600160a01b03831615801590613dea5750806001600160a01b0316836001600160a01b031614155b613e425760405162461bcd60e51b815260206004820152602360248201527f736574417070726f76616c466f72416c6c3a20696e76616c6964206f706572616044820152623a37b960e91b606482015260840161017b565b5f613e4d8285614064565b9050828155836001600160a01b0316826001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3185604051613e99911515815260200190565b60405180910390a350505050565b5f5f6136d483614042565b5f5f6138578484614064565b60405163e0b490f760e01b81526001600160a01b03831660048201525f90636eb1769f60e11b90829081906101679063e0b490f790602401602060405180830381865afa158015613f11573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613f359190615e2b565b60405163e0b490f760e01b81526001600160a01b03871660048201529091505f906101679063e0b490f790602401602060405180830381865afa158015613f7e573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613fa29190615e2b565b905083838284604051602001613fbb9493929190615ea7565b604051602081830303815290604052613fd390615def565b979650505050505050565b6040515f9063c87b56dd60e01b90829061400090839083908790602001615e4e565b60405160208183030381529060405261401890615def565b949350505050565b6040515f906331a9108f60e11b90829061400090839083908790602001615e4e565b6040515f9063020604bf60e21b90829061400090839083908790602001615e4e565b60405163e0b490f760e01b81526001600160a01b03831660048201525f9063e985e9c560e01b90829081906101679063e0b490f790602401602060405180830381865afa1580156140b7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906140db9190615e2b565b60405163e0b490f760e01b81526001600160a01b03871660048201529091505f906101679063e0b490f790602401602060405180830381865afa158015614124573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906141489190615e2b565b905083838383604051602001613fbb9493929190615ea7565b60408051610240810182526060610120820181815261014083018290525f610160840181905261018084018390526101a084018190526101c084018190526101e08401819052610200840183905284519283018552808352602083018190529382019390935261022082015290819081526020015f60070b81526020015f151581526020015f151581526020015f15158152602001606081526020016060815260200160608152602001606081525090565b6040518060c00160405280614226614161565b81525f60208201819052604082018190526060808301829052608083015260a09091015290565b6040518060a001604052805f151581526020015f6001600160a01b0316815260200160608152602001606081526020015f6001600160a01b031681525090565b60405180604001604052806142a0614161565b81525f60209091015290565b5f5f858511156142ba575f5ffd5b838611156142c6575f5ffd5b5050820193919092039150565b80356001600160e01b03198116906004841015614304576001600160e01b0319600485900360031b81901b82161691505b5092915050565b80356001600160601b03198116906014841015614304576001600160601b031960149490940360031b84901b1690921692915050565b6001600160a01b0381168114614355575f5ffd5b50565b5f5f60408385031215614369575f5ffd5b823561437481614341565b946020939093013593505050565b5f5f60408385031215614393575f5ffd5b823561439e81614341565b915060208301356143ae81614341565b809150509250929050565b5f5f5f606084860312156143cb575f5ffd5b83356143d681614341565b925060208401356143e681614341565b929592945050506040919091013590565b5f60208284031215614407575f5ffd5b813561441281614341565b9392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b80511515825260018060a01b0360208201511660208301525f604082015160a0604085015261447960a0850182614419565b9050606083015184820360608601526144928282614419565b6080948501516001600160a01b03169590940194909452509092915050565b5f82825180855260208501945060208160051b830101602085015f5b8381101561451657601f1985840301885281518051845260208101519050604060208501526144ff6040850182614447565b6020998a01999094509290920191506001016144cd565b50909695505050505050565b5f81516101608452614538610160850182614419565b9050602083015184820360208601526145518282614419565b915050604083015161456e60408601826001600160a01b03169052565b50606083015184820360608601526145868282614419565b915050608083015161459c608086018215159052565b5060a08301516145b160a086018260070b9052565b5060c08301516145c560c086018215159052565b5060e083015184820360e08601526145dd82826144b1565b9150506101008301516146186101008601828051600790810b83526020808301516001600160a01b031690840152604091820151900b910152565b509392505050565b5f8151808452602084019350602083015f5b82811015614690578151805160070b87526020808201516001600160a01b03908116828a01526040808401511515908a01526060808401511515908a0152608092830151169188019190915260a09096019590910190600101614632565b5093949350505050565b5f8151808452602084019350602083015f5b828110156146905781515f815160070b8852602082015160070b6020890152604082015160070b6040890152606082015160070b606089015260808201511515608089015260018060a01b0360a08301511660a089015260c08801905080975050506020820191506001810190506146ac565b5f8151808452602084019350602083015f5b828110156146905781515f815160070b8852602082015160070b6020890152604082015160070b604089015260018060a01b03606083015116606089015260808201511515608089015260018060a01b0360a08301511660a089015260c0880190508097505050602082019150600181019050614731565b5f815161012084526147bf610120850182614522565b905060208301516147d5602086018260070b9052565b5060408301516147e9604086018215159052565b5060608301516147fd606086018215159052565b506080830151614811608086018215159052565b5060a083015184820360a08601526148298282614620565b91505060c083015184820360c0860152614843828261469a565b91505060e083015184820360e086015261485d828261471f565b915050610100830151848203610100860152612b7b8282614419565b8260070b8152604060208201525f61401860408301846147a9565b8060070b8114614355575f5ffd5b5f5f604083850312156148b3575f5ffd5b82356148be81614341565b915060208301356143ae81614894565b8260070b8152604060208201525f825160c060408401526148f36101008401826147a9565b9050602084015160070b606084015260018060a01b036040850151166080840152606084015160070b60a08401526080840151603f198483030160c085015261493c8282614419565b60a095909501516001600160a01b031660e0949094019390935250919392505050565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b03811182821017156149955761499561495f565b60405290565b60405160a081016001600160401b03811182821017156149955761499561495f565b60405161012081016001600160401b03811182821017156149955761499561495f565b60405160c081016001600160401b03811182821017156149955761499561495f565b604051601f8201601f191681016001600160401b0381118282101715614a2a57614a2a61495f565b604052919050565b5f6001600160401b03821115614a4a57614a4a61495f565b5060051b60200190565b5f5f60408385031215614a65575f5ffd5b8235614a7081614341565b915060208301356001600160401b03811115614a8a575f5ffd5b8301601f81018513614a9a575f5ffd5b8035614aad614aa882614a32565b614a02565b8082825260208201915060208360051b850101925087831115614ace575f5ffd5b6020840193505b82841015614af9578335614ae881614341565b825260209384019390910190614ad5565b809450505050509250929050565b8260070b8152604060208201525f6140186040830184614447565b8260070b8152604060208201525f8251604080840152614b4560808401826147a9565b9050602084015160030b6060840152809150509392505050565b8460070b8152608060208201525f614b7a6080830186614620565b8281036040840152614b8c818661469a565b90508281036060840152613fd3818561471f565b600783900b81526080810161441260208301848051600790810b83526020808301516001600160a01b031690840152604091820151900b910152565b5f5f5f60608486031215614bee575f5ffd5b8335614bf981614341565b92506020840135614c0981614894565b915060408401356001600160401b03811115614c23575f5ffd5b8401601f81018613614c33575f5ffd5b8035614c41614aa882614a32565b8082825260208201915060208360051b850101925088831115614c62575f5ffd5b6020840193505b82841015614c8d578335614c7c81614894565b825260209384019390910190614c69565b809450505050509250925092565b5f6001600160401b03821115614cb357614cb361495f565b50601f01601f191660200190565b5f5f5f60608486031215614cd3575f5ffd5b8335614cde81614341565b92506020840135614cee81614894565b915060408401356001600160401b03811115614d08575f5ffd5b8401601f81018613614d18575f5ffd5b8035614d26614aa882614a32565b8082825260208201915060208360051b850101925088831115614d47575f5ffd5b602084015b83811015614dc75780356001600160401b03811115614d69575f5ffd5b8501603f81018b13614d79575f5ffd5b6020810135614d8a614aa882614c9b565b8181526040838301018d1015614d9e575f5ffd5b816040840160208301375f60208383010152808652505050602083019250602081019050614d4c565b50809450505050509250925092565b5f606082018560070b83528460070b6020840152606060408401528084518083526080850191506020860192505f5b81811015614e2657835160070b835260209384019390920191600101614e05565b5090979650505050505050565b5f5f5f60608486031215614e45575f5ffd5b8335614e5081614341565b92506020840135614e6081614341565b91506040840135614e7081614341565b809150509250925092565b600181811c90821680614e8f57607f821691505b602082108103614ead57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f8154614ebf81614e7b565b600182168015614ed65760018114614eeb57614f18565b60ff1983168652811515820286019350614f18565b845f5260205f205f5b83811015614f1057815488820152600190910190602001614ef4565b505081860193505b50505092915050565b5f6144128284614eb3565b5f8154614f3881614e7b565b808552600182168015614f525760018114614f6e57614f18565b60ff1983166020870152602082151560051b8701019350614f18565b845f5260205f205f5b83811015614f995781546020828a010152600182019150602081019050614f77565b870160200194505050505092915050565b5f82825480855260208501945060208160051b830101845f5260205f205f5b8381101561451657848303601f1901885281548352604060208401819052600183015460ff811615159185019190915260081c6001600160a01b0316606084015260a0608084015261502160e0840160028401614f2c565b838103603f190160a085015261503a8160038501614f2c565b60048401546001600160a01b031660c095909501949094525060209790970196600590910190600101614fc9565b61016082525f61507c610160840183614f2c565b83810360208501526150918160018501614f2c565b90506150a760028401546001600160a01b031690565b6001600160a01b0316604085015283810360608501526150ca8160038501614f2c565b905060048301546150e26080860160ff831615159052565b600881901c60070b60a086015261510360c0860160ff8360481c1615159052565b5083810360e08501526151198160058501614faa565b90506144126101008501600685018054600781810b8452604091821c6001600160a01b0316602085015260019092015490910b910152565b5f8154808452602084019350825f5260205f205f5b82811015614690578154600781900b8752604081811c6001600160a01b0390811660208a015260e083901c60ff9081161515928a019290925260e89290921c1615156060880152600180840154909116608088015260a09096019560029092019101615166565b5f8154808452602084019350825f5260205f205f5b82811015614690575f82548060070b88528060401c60070b60208901528060801c60070b60408901528060c01d60070b606089015250600183015461522e6080890160ff831615159052565b60081c6001600160a01b031660a08801525060c090950194600291909101906001016151e2565b5f8154808452602084019350825f5260205f205f5b82811015614690575f82548060070b88528060401c60070b60208901528060801c60070b604089015250600183015460018060a01b03811660608901526152bb6080890160ff8360a01c1615159052565b505060028201546001600160a01b031660a087015260c09095019460039091019060010161526a565b60ff831681526040602082015261012060408201525f615308610160830184615068565b6008840154600781900b606085015261532b6080850160ff8360401c1615159052565b61533f60a0850160ff8360481c1615159052565b61535360c0850160ff8360501c1615159052565b50828103603f190160e084015261536d8160098601615151565b838103603f1901610100850152905061538981600a86016151cd565b838103603f190161012085015290506153a581600b8601615255565b838103603f19016101408501529050612b7b81600c8601614f2c565b60ff85168152608060208201525f6153dc6080830186615151565b82810360408401526153ee81866151cd565b90508281036060840152613fd38185615255565b60ff831681526080810161441260208301848054600781810b8452604091821c6001600160a01b0316602085015260019092015490910b910152565b80356020831015610f4a575f19602084900360031b1b1692915050565b60208082526017908201527f68747343616c6c3a2064656c6567617465642063616c6c000000000000000000604082015260600190565b805161549d81614341565b919050565b5f602082840312156154b2575f5ffd5b815161441281614341565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b80820180821115610f4a57610f4a6154d1565b81810381811115610f4a57610f4a6154d1565b5f82518060208501845e5f920191825250919050565b805161549d81614894565b5f82601f83011261553b575f5ffd5b8151602083015f61554e614aa884614c9b565b9050828152858383011115615561575f5ffd5b8282602083015e5f92810160200192909252509392505050565b8051801515811461549d575f5ffd5b5f82601f830112615599575f5ffd5b81516155a7614aa882614a32565b8082825260208201915060208360051b8601019250858311156155c8575f5ffd5b602085015b838110156156e55780516001600160401b038111156155ea575f5ffd5b86016040818903601f190112156155ff575f5ffd5b615607614973565b6020820151815260408201516001600160401b03811115615626575f5ffd5b60208184010192505060a0828a03121561563e575f5ffd5b61564661499b565b61564f8361557b565b8152602083015161565f81614341565b602082015260408301516001600160401b0381111561567c575f5ffd5b6156888b82860161552c565b60408301525060608301516001600160401b038111156156a6575f5ffd5b6156b28b82860161552c565b606083015250608083015192506156c883614341565b6080810192909252602081810192909252845292830192016155cd565b5095945050505050565b5f606082840312156156ff575f5ffd5b604051606081016001600160401b03811182821017156157215761572161495f565b8060405250809150825161573481614894565b8152602083015161574481614341565b6020820152604083015161575781614894565b6040919091015292915050565b5f6101608284031215615775575f5ffd5b61577d6149bd565b905081516001600160401b03811115615794575f5ffd5b6157a08482850161552c565b82525060208201516001600160401b038111156157bb575f5ffd5b6157c78482850161552c565b6020830152506157d960408301615492565b604082015260608201516001600160401b038111156157f6575f5ffd5b6158028482850161552c565b6060830152506158146080830161557b565b608082015261582560a08301615521565b60a082015261583660c0830161557b565b60c082015260e08201516001600160401b03811115615853575f5ffd5b61585f8482850161558a565b60e0830152506158738361010084016156ef565b61010082015292915050565b5f82601f83011261588e575f5ffd5b815161589c614aa882614a32565b80828252602082019150602060a084028601019250858311156158bd575f5ffd5b602085015b838110156156e55760a081880312156158d9575f5ffd5b6158e161499b565b81516158ec81614894565b815260208201516158fc81614341565b602082015261590d6040830161557b565b604082015261591e6060830161557b565b6060820152608082015161593181614341565b6080820152835260209092019160a0016158c2565b5f82601f830112615955575f5ffd5b8151615963614aa882614a32565b80828252602082019150602060c08402860101925085831115615984575f5ffd5b602085015b838110156156e55760c081880312156159a0575f5ffd5b6159a86149e0565b81516159b381614894565b815260208201516159c381614894565b602082015260408201516159d681614894565b604082015260608201516159e981614894565b60608201526159fa6080830161557b565b608082015260a0820151615a0d81614341565b60a0820152835260209092019160c001615989565b5f82601f830112615a31575f5ffd5b8151615a3f614aa882614a32565b80828252602082019150602060c08402860101925085831115615a60575f5ffd5b602085015b838110156156e55760c08188031215615a7c575f5ffd5b615a846149e0565b8151615a8f81614894565b81526020820151615a9f81614894565b60208201526040820151615ab281614894565b60408201526060820151615ac581614341565b6060820152615ad66080830161557b565b608082015260a0820151615ae981614341565b60a0820152835260209092019160c001615a65565b5f5f60408385031215615b0f575f5ffd5b8251615b1a81614894565b60208401519092506001600160401b03811115615b35575f5ffd5b83016101208186031215615b47575f5ffd5b615b4f6149bd565b81516001600160401b03811115615b64575f5ffd5b615b7087828501615764565b825250615b7f60208301615521565b6020820152615b906040830161557b565b6040820152615ba16060830161557b565b6060820152615bb26080830161557b565b608082015260a08201516001600160401b03811115615bcf575f5ffd5b615bdb8782850161587f565b60a08301525060c08201516001600160401b03811115615bf9575f5ffd5b615c0587828501615946565b60c08301525060e08201516001600160401b03811115615c23575f5ffd5b615c2f87828501615a22565b60e0830152506101008201516001600160401b03811115615c4e575f5ffd5b615c5a8782850161552c565b6101008301525080925050509250929050565b5f60208284031215615c7d575f5ffd5b815161441281614894565b5f5f60408385031215615c99575f5ffd5b8251615ca481614894565b9150615cb26020840161557b565b90509250929050565b5f60208284031215615ccb575f5ffd5b815160ff81168114614412575f5ffd5b5f5f60408385031215615cec575f5ffd5b8251615cf781614894565b8092505060208301518060030b81146143ae575f5ffd5b5f5f5f5f60808587031215615d21575f5ffd5b8451615d2c81614894565b60208601519094506001600160401b03811115615d47575f5ffd5b615d538782880161587f565b93505060408501516001600160401b03811115615d6e575f5ffd5b615d7a87828801615946565b92505060608501516001600160401b03811115615d95575f5ffd5b615da187828801615a22565b91505092959194509250565b5f5f60808385031215615dbe575f5ffd5b8251615dc981614894565b9150615cb284602085016156ef565b5f60208284031215615de8575f5ffd5b5051919050565b80516020808301519190811015614ead575f1960209190910360031b1b16919050565b5f60208284031215615e22575f5ffd5b6144128261557b565b5f60208284031215615e3b575f5ffd5b815163ffffffff81168114614412575f5ffd5b6001600160e01b0319938416815260409290921b67ffffffffffffffff1916600483015260e01b909116601c82015260200190565b602081525f6144126020830184614f2c565b602081525f6144126020830184614419565b6001600160e01b0319948516815260609390931b6001600160601b031916600484015260e091821b84166018840152901b909116601c8201526020019056fea2646970667358221220a4b1d5745b55a2795bafc818e44b32f2dff5b79488ae27cc41a80f730e03d9d564736f6c634300081c0033",
        "sourceMap": "320:31588:1:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561000f575f5ffd5b506004361061012a575f3560e01c806349146bde116100ab578063d614cdb81161006f578063d614cdb81461044d578063d6910d061461046e578063e0b490f71461049b578063e0f4059a146104c3578063f49f40db146104e55761012a565b806349146bde146103c157806378b63918146103d457806393272baf146103e7578063a7daa18d14610417578063ae7611a01461042a5761012a565b8063287e1da8116100f2578063287e1da8146103385780632e63879b14610359578063335e04c11461036c5780633c4dd32e1461037f5780633f28a19b146103a05761012a565b8063098f236614610275578063099794e8146102af5780630bb3bfa8146102d557806319f37361146102ea5780631f69565f14610317575b5f366060601c8210156101845760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a206e6f7420656e6f7567682063616c6c6461746100000060448201526064015b60405180910390fd5b5f61019260048236816142ac565b61019b916142d3565b60e01c905063618dc65e81146101f35760405162461bcd60e51b815260206004820152601e60248201527f66616c6c6261636b3a20756e737570706f727465642073656c6563746f720000604482015260640161017b565b5f6102026018600436846142ac565b61020b9161430b565b60601c905030811461025f5760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a20746f6b656e206973206e6f742063616c6c6572000000604482015260640161017b565b6102676104f8565b805195506020019350505050f35b610288610283366004614358565b610dd8565b6040805160079390930b83526001600160a01b039091166020830152015b60405180910390f35b6102c26102bd366004614382565b610ec6565b60405160079190910b81526020016102a6565b6102e86102e33660046143b9565b610f50565b005b6102fd6102f83660046143f7565b61102e565b6040805160079390930b83529015156020830152016102a6565b61032a6103253660046143f7565b6110ef565b6040516102a6929190614879565b61034b6103463660046148a2565b6111e3565b6040516102a69291906148ce565b6102c2610367366004614a54565b61146a565b6102fd61037a3660046143f7565b611745565b61039261038d366004614358565b611841565b6040516102a6929190614b07565b6103b36103ae3660046143f7565b611a20565b6040516102a6929190614b22565b6102c26103cf366004614382565b611c0b565b6102c26103e2366004614a54565b611c8b565b6103fa6103f53660046143f7565b611f5f565b6040805160079390930b835260039190910b6020830152016102a6565b6102fd6104253660046143f7565b61203f565b61043d6104383660046143f7565b6120fa565b6040516102a69493929190614b5f565b61046061045b3660046143f7565b6121f9565b6040516102a6929190614ba0565b61048161047c366004614bdc565b6122fd565b60408051600793840b81529190920b6020820152016102a6565b6104ae6104a93660046143f7565b612624565b60405163ffffffff90911681526020016102a6565b6104d66104d1366004614cc1565b61269e565b6040516102a693929190614dd6565b6102fd6104f3366004614e33565b6129db565b60605f610509601c601836846142ac565b610512916142d3565b905060408051808201825260098152681393d517d193d5539160ba1b602090910152517f7bafae6429a8b3ef0db181af7c5834a6f2b1af33146a1a9ae02e833d27f2431b90610562905f90614f21565b6040518091039020036105c15760405162461bcd60e51b815260206004820152602160248201527f7265646972656374466f72546f6b656e3a20746f6b656e206e6f7420666f756e6044820152601960fa1b606482015260840161017b565b610166193301610c9f5763e096a9a160e01b6001600160e01b031982160161066857601c36101561063e5760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e496e666f3a204e6f7420656e6f7567682063616c6c6461746044820152606160f81b606482015260840161017b565b601660056040516020016106539291906152e4565b60405160208183030381529060405291505090565b63028c4f7360e51b6001600160e01b03198216016106fc57601c3610156106e15760405162461bcd60e51b815260206004820152602760248201527f676574546f6b656e437573746f6d466565733a204e6f7420656e6f7567682063604482015266616c6c6461746160c81b606482015260840161017b565b60405161065390601690600e90600f906010906020016153c1565b63cca1fb3f60e01b6001600160e01b03198216016107a257601c36101561077b5760405162461bcd60e51b815260206004820152602d60248201527f676574546f6b656e44656661756c744b79635374617475733a204e6f7420656e60448201526c6f7567682063616c6c6461746160981b606482015260840161017b565b600d546040805160166020820152600160481b90920460ff16151590820152606001610653565b6358255e7360e01b6001600160e01b031982160161084b57601c3610156108245760405162461bcd60e51b815260206004820152603060248201527f676574546f6b656e44656661756c74467265657a655374617475733a204e6f7460448201526f20656e6f7567682063616c6c6461746160801b606482015260840161017b565b6009546040805160166020820152600160481b90920460ff16151590820152606001610653565b63053d664960e31b6001600160e01b03198216016108d957601c3610156108c45760405162461bcd60e51b815260206004820152602760248201527f676574546f6b656e457870697279496e666f3a204e6f7420656e6f7567682063604482015266616c6c6461746160c81b606482015260840161017b565b60405161065390601690600b90602001615402565b635b75ca1160e11b6001600160e01b03198216016109a057603036101561094e5760405162461bcd60e51b815260206004820152602360248201527f6173736f6369617465546f6b656e3a204e6f7420656e6f7567682063616c6c6460448201526261746160e81b606482015260840161017b565b5f61095d603c602836846142ac565b6109669161430b565b60601c90505f61097582612ad4565b600181556040805160166020820152919250015b604051602081830303815290604052935050505090565b631ecd0d6360e31b6001600160e01b0319821601610a53576030361015610a155760405162461bcd60e51b8152602060048201526024808201527f646973736f6369617465546f6b656e3a204e6f7420656e6f7567682063616c6c6044820152636461746160e01b606482015260840161017b565b5f610a24603c602836846142ac565b610a2d9161430b565b60601c90505f610a3c82612ad4565b5f8155604080516016602082015291925001610989565b636cd8d45160e01b6001600160e01b0319821601610bb357601c361015610ac65760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e547970653a204e6f7420656e6f7567682063616c6c6461746044820152606160f81b606482015260840161017b565b7f20081d23699eb901ca16307080f9b35e7967740755a921f749a9e037b0875c755f604051602001610af89190614f21565b6040516020818303038152906040528051906020012003610b2e5760408051601660208201525f91810191909152606001610653565b7f6c58a12b113a1ee77f554495d8bd48a419af104bca196099cdecc39fcb8989f05f604051602001610b609190614f21565b6040516020818303038152906040528051906020012003610b97576040805160166020820152600191810191909152606001610653565b60408051601660208201525f1991810191909152606001610653565b631e89880b60e31b6001600160e01b0319821601610c9f57607c361015610c1c5760405162461bcd60e51b815260206004820152601b60248201527f7570646174653a204e6f7420656e6f7567682063616c6c646174610000000000604482015260640161017b565b5f610c2b603c602836846142ac565b610c349161430b565b60601c90505f610c48605c604836846142ac565b610c519161430b565b60601c90505f610c65607c605c36846142ac565b610c6e9161543e565b9050610c7b838383610f50565b60408051600160208201520160405160208183030381529060405294505050505090565b604080518082018252600f81526e232aa723a4a12622afa1a7a6a6a7a760891b602090910152517f20081d23699eb901ca16307080f9b35e7967740755a921f749a9e037b0875c7590610cf3905f90614f21565b604051809103902003610d0f57610d0981612b84565b91505090565b60408051808201825260138152724e4f4e5f46554e4749424c455f554e4951554560681b602090910152517f6c58a12b113a1ee77f554495d8bd48a419af104bca196099cdecc39fcb8989f090610d67905f90614f21565b604051809103902003610d7d57610d09816130ba565b60405162461bcd60e51b815260206004820152602a60248201527f7265646972656374466f72546f6b656e3a20746f6b656e2074797065206e6f74604482015269081cdd5c1c1bdc9d195960b21b606482015260840161017b565b5f803061016714610dfb5760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b038416610e515760405162461bcd60e51b815260206004820152601a60248201527f676574417070726f7665643a20696e76616c696420746f6b656e000000000000604482015260640161017b565b60405163020604bf60e21b8152600481018490526016906001600160a01b0386169063081812fc90602401602060405180830381865afa158015610e97573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ebb91906154a2565b909590945092505050565b5f3061016714610ee85760405162461bcd60e51b815260040161017b9061545b565b6040805160018082528183019092525f916020808301908036833701905050905082815f81518110610f1c57610f1c6154bd565b60200260200101906001600160a01b031690816001600160a01b031681525050610f468482611c8b565b9150505b92915050565b6001600160a01b038316610f7a578060045f828254610f6f91906154e5565b90915550610fdf9050565b5f610f848461368c565b805490915082811015610fd95760405162461bcd60e51b815260206004820152601f60248201527f5f7472616e736665723a20696e73756666696369656e742062616c616e636500604482015260640161017b565b82900390555b6001600160a01b038216611009578060045f828254610ffe91906154f8565b909155506110299050565b5f6110138361368c565b80549091505f61102384836154e5565b90925550505b505050565b6040516001600160a01b03821660248201525f908190819060440160408051601f198184030181529181526020820180516001600160e01b03166393272baf60e01b179052519091505f9081906001600160a01b0387169061109190859061550b565b5f604051808303815f865af19150503d805f81146110ca576040519150601f19603f3d011682016040523d82523d5f602084013e6110cf565b606091505b509150915060168280156110e357505f8251115b94509450505050915091565b5f6110f8614161565b30610167146111195760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b03831661116f5760405162461bcd60e51b815260206004820152601b60248201527f676574546f6b656e496e666f3a20696e76616c696420746f6b656e0000000000604482015260640161017b565b604051631f69565f60e01b81526001600160a01b0384166004820181905290631f69565f906024015f604051808303815f875af11580156111b2573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111d99190810190615afe565b9094909350915050565b5f6111ec614213565b306101671461120d5760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0384166112725760405162461bcd60e51b815260206004820152602660248201527f6765744e6f6e46756e6769626c65546f6b656e496e666f3a20696e76616c6964604482015265103a37b5b2b760d11b606482015260840161017b565b604051631f69565f60e01b81526001600160a01b038516600482018190525f91829190631f69565f906024015f604051808303815f875af11580156112b9573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526112e09190810190615afe565b915091508160070b6016146113515760405162461bcd60e51b815260206004820152603160248201527f6765744e6f6e46756e6769626c65546f6b656e496e666f3a206661696c656420604482015270746f2067657420746f6b656e206461746160781b606482015260840161017b565b611359614213565b818152600786900b602082015260405163020604bf60e21b81526001600160401b03871660048201526001600160a01b0388169063081812fc90602401602060405180830381865afa1580156113b1573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113d591906154a2565b6001600160a01b0390811660a08301526040516331a9108f60e11b81526001600160401b038816600482015290881690636352211e90602401602060405180830381865afa158015611429573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061144d91906154a2565b6001600160a01b03166040820152919350909150505b9250929050565b5f306101671461148c5760405162461bcd60e51b815260040161017b9061545b565b5f8251116114dc5760405162461bcd60e51b815260206004820152601f60248201527f6173736f6369617465546f6b656e733a206d697373696e6720746f6b656e7300604482015260640161017b565b6001600160a01b038316331461158f5760405162461bcd60e51b815260206004820152606660248201527f6173736f6369617465546f6b656e733a204d757374206265207369676e65642060448201527f6279207468652070726f7669646564204163636f756e742773206b6579206f7260648201527f2063616c6c65642066726f6d20746865206163636f756e747320636f6e7472616084820152656374206b657960d01b60a482015260c40161017b565b5f5b825181101561173b575f6001600160a01b03168382815181106115b6576115b66154bd565b60200260200101516001600160a01b0316036116145760405162461bcd60e51b815260206004820152601e60248201527f6173736f6369617465546f6b656e733a20696e76616c696420746f6b656e0000604482015260640161017b565b5f838281518110611627576116276154bd565b60200260200101516001600160a01b03166349146bde86868581518110611650576116506154bd565b60200260200101516040518363ffffffff1660e01b815260040161168a9291906001600160a01b0392831681529116602082015260400190565b6020604051808303815f875af11580156116a6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116ca9190615c6d565b90508060070b6016146117325760405162461bcd60e51b815260206004820152602a60248201527f6173736f6369617465546f6b656e733a204661696c656420746f206173736f6360448201526934b0ba32903a37b5b2b760b11b606482015260840161017b565b50600101611591565b5060169392505050565b5f8030610167146117685760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0383166117d05760405162461bcd60e51b815260206004820152602960248201527f676574546f6b656e44656661756c744b79635374617475733a20696e76616c6960448201526864206164647265737360b81b606482015260840161017b565b60405163335e04c160e01b81526001600160a01b038416600482018190529063335e04c1906024015b60408051808303815f875af1158015611814573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118389190615c88565b91509150915091565b5f61184a61424d565b306101671461186b5760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0384166118c15760405162461bcd60e51b815260206004820152601a60248201527f676574546f6b656e4b65793a20696e76616c696420746f6b656e000000000000604482015260640161017b565b604051631f69565f60e01b81526001600160a01b038516600482018190525f91829190631f69565f906024015f604051808303815f875af1158015611908573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261192f9190810190615afe565b915091508160070b6016146119945760405162461bcd60e51b815260206004820152602560248201527f676574546f6b656e4b65793a206661696c656420746f2067657420746f6b656e604482015264206461746160d81b606482015260840161017b565b5f5b815160e0015151811015611a095785825f015160e0015182815181106119be576119be6154bd565b60200260200101515f015103611a01576016825f015160e0015182815181106119e9576119e96154bd565b60200260200101516020015194509450505050611463565b600101611996565b50611a1261424d565b601697909650945050505050565b5f611a2961428d565b3061016714611a4a5760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b038316611aac5760405162461bcd60e51b815260206004820152602360248201527f67657446756e6769626c65546f6b656e496e666f3a20696e76616c696420746f60448201526235b2b760e91b606482015260840161017b565b604051631f69565f60e01b81526001600160a01b038416600482018190525f91829190631f69565f906024015f604051808303815f875af1158015611af3573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611b1a9190810190615afe565b915091508160070b601614611b885760405162461bcd60e51b815260206004820152602e60248201527f67657446756e6769626c65546f6b656e496e666f3a206661696c656420746f2060448201526d67657420746f6b656e206461746160901b606482015260840161017b565b611b9061428d565b81815f0181905250856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bd4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611bf89190615cbb565b5f0b602082015291935090915050915091565b5f3061016714611c2d5760405162461bcd60e51b815260040161017b9061545b565b6040805160018082528183019092525f916020808301908036833701905050905082815f81518110611c6157611c616154bd565b60200260200101906001600160a01b031690816001600160a01b031681525050610f46848261146a565b5f3061016714611cad5760405162461bcd60e51b815260040161017b9061545b565b5f825111611cfd5760405162461bcd60e51b815260206004820181905260248201527f646973736f6369617465546f6b656e733a206d697373696e6720746f6b656e73604482015260640161017b565b6001600160a01b0383163314611db15760405162461bcd60e51b815260206004820152606760248201527f646973736f6369617465546f6b656e733a204d757374206265207369676e656460448201527f206279207468652070726f7669646564204163636f756e742773206b6579206f60648201527f722063616c6c65642066726f6d20746865206163636f756e747320636f6e7472608482015266616374206b657960c81b60a482015260c40161017b565b5f5b825181101561173b575f6001600160a01b0316838281518110611dd857611dd86154bd565b60200260200101516001600160a01b031603611e365760405162461bcd60e51b815260206004820152601f60248201527f646973736f6369617465546f6b656e733a20696e76616c696420746f6b656e00604482015260640161017b565b5f838281518110611e4957611e496154bd565b60200260200101516001600160a01b031663099794e886868581518110611e7257611e726154bd565b60200260200101516040518363ffffffff1660e01b8152600401611eac9291906001600160a01b0392831681529116602082015260400190565b6020604051808303815f875af1158015611ec8573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611eec9190615c6d565b90508060070b601614611f565760405162461bcd60e51b815260206004820152602c60248201527f646973736f6369617465546f6b656e733a204661696c656420746f206469737360448201526b37b1b4b0ba32903a37b5b2b760a11b606482015260840161017b565b50600101611db3565b5f803061016714611f825760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b038316611fd85760405162461bcd60e51b815260206004820152601d60248201527f676574546f6b656e547970653a20696e76616c69642061646472657373000000604482015260640161017b565b6040516393272baf60e01b81526001600160a01b03841660048201819052906393272baf9060240160408051808303815f875af115801561201b573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118389190615cdb565b5f8030610167146120625760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0383166120cd5760405162461bcd60e51b815260206004820152602c60248201527f676574546f6b656e44656661756c74467265657a655374617475733a20696e7660448201526b616c6964206164647265737360a01b606482015260840161017b565b60405163a7daa18d60e01b81526001600160a01b038416600482018190529063a7daa18d906024016117f9565b5f6060808030610167146121205760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0385166121805760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e437573746f6d466565733a20696e76616c696420746f6b656044820152603760f91b606482015260840161017b565b604051630573b08d60e51b81526001600160a01b038616600482018190529063ae7611a0906024015f604051808303815f875af11580156121c3573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526121ea9190810190615d0e565b93509350935093509193509193565b604080516060810182525f8082526020820181905291810182905230610167146122355760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0383166122955760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e457870697279496e666f3a20696e76616c696420746f6b656044820152603760f91b606482015260840161017b565b604051631ac299b760e31b81526001600160a01b038416600482018190529063d614cdb8906024016080604051808303815f875af11580156122d9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111d99190615dad565b5f8030610167146123205760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0385166123765760405162461bcd60e51b815260206004820152601860248201527f6275726e546f6b656e3a20696e76616c696420746f6b656e0000000000000000604482015260640161017b565b5f8460070b136123c85760405162461bcd60e51b815260206004820152601960248201527f6275726e546f6b656e3a20696e76616c696420616d6f756e7400000000000000604482015260640161017b565b604051631f69565f60e01b81526001600160a01b038616600482018190525f91829190631f69565f906024015f604051808303815f875af115801561240f573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526124369190810190615afe565b915091508160070b6016146124995760405162461bcd60e51b815260206004820152602360248201527f6275726e546f6b656e3a206661696c656420746f2067657420746f6b656e20696044820152626e666f60e81b606482015260840161017b565b8051604001516001600160a01b0381166124f55760405162461bcd60e51b815260206004820152601a60248201527f6275726e546f6b656e3a20696e76616c6964206163636f756e74000000000000604482015260640161017b565b60405163017677f560e31b81526001600160a01b0382811660048301525f60248301526001600160401b0389166044830152891690630bb3bfa8906064015f604051808303815f87803b15801561254a575f5ffd5b505af115801561255c573d5f5f3e3d5ffd5b5050505060169450876001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125a0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125c49190615dd8565b93505f8460070b12156126195760405162461bcd60e51b815260206004820152601f60248201527f6275726e546f6b656e3a20696e76616c696420746f74616c20737570706c7900604482015260640161017b565b505050935093915050565b5f30610167146126465760405162461bcd60e51b815260040161017b9061545b565b6040805163e0b490f760e01b602082018190525f602483018190526001600160601b0319606087901b16602c8401529092909182910160405160208183030381529060405261269490615def565b5495945050505050565b5f80606030610167146126c35760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b0386166127195760405162461bcd60e51b815260206004820152601860248201527f6d696e74546f6b656e3a20696e76616c696420746f6b656e0000000000000000604482015260640161017b565b5f8560070b1361276b5760405162461bcd60e51b815260206004820152601960248201527f6d696e74546f6b656e3a20696e76616c696420616d6f756e7400000000000000604482015260640161017b565b604051631f69565f60e01b81526001600160a01b038716600482018190525f91829190631f69565f906024015f604051808303815f875af11580156127b2573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526127d99190810190615afe565b915091508160070b60161461283c5760405162461bcd60e51b815260206004820152602360248201527f6d696e74546f6b656e3a206661696c656420746f2067657420746f6b656e20696044820152626e666f60e81b606482015260840161017b565b8051604001516001600160a01b0381166128985760405162461bcd60e51b815260206004820152601a60248201527f6d696e74546f6b656e3a20696e76616c6964206163636f756e74000000000000604482015260640161017b565b60405163017677f560e31b81525f60048201526001600160a01b0382811660248301526001600160401b038a1660448301528a1690630bb3bfa8906064015f604051808303815f87803b1580156128ed575f5ffd5b505af11580156128ff573d5f5f3e3d5ffd5b5050505060169550886001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612943573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129679190615dd8565b604080515f808252602082019092529196505093505f8560070b12156129cf5760405162461bcd60e51b815260206004820152601f60248201527f6d696e74546f6b656e3a20696e76616c696420746f74616c20737570706c7900604482015260640161017b565b50505093509350939050565b5f8030610167146129fe5760405162461bcd60e51b815260040161017b9061545b565b6001600160a01b038516612a545760405162461bcd60e51b815260206004820152601f60248201527f6973417070726f766564466f72416c6c3a20696e76616c696420746f6b656e00604482015260640161017b565b60405163e985e9c560e01b81526001600160a01b03858116600483015284811660248301526016919087169063e985e9c590604401602060405180830381865afa158015612aa4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ac89190615e12565b91509150935093915050565b60405163e0b490f760e01b81526001600160a01b03821660048201525f90634d8fdd6d60e01b90829081906101679063e0b490f7906024015b602060405180830381865afa158015612b28573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612b4c9190615e2b565b9050828282604051602001612b6393929190615e4e565b604051602081830303815290604052612b7b90615def565b95945050505050565b606063f90221fd60e01b6001600160e01b0319831601612bc6576001604051602001612bb09190615e83565b6040516020818303038152906040529050919050565b63cec31a9960e01b6001600160e01b0319831601612bf5576003546040805160ff909216602083015201612bb0565b63e7e9f22360e01b6001600160e01b0319831601612c2257600454604051602001612bb091815260200190565b636a2764bf60e01b6001600160e01b0319831601612c4c576002604051602001612bb09190615e83565b638f5f7dcf60e01b6001600160e01b0319831601612d0457603c361015612cb55760405162461bcd60e51b815260206004820152601e60248201527f62616c616e63654f663a204e6f7420656e6f7567682063616c6c646174610000604482015260640161017b565b5f612cc4603c602836846142ac565b612ccd9161430b565b60601c9050612cdb816136c9565b604051602001612ced91815260200190565b604051602081830303815290604052915050919050565b6356fa634560e01b6001600160e01b0319831601612dd657605c361015612d6d5760405162461bcd60e51b815260206004820152601d60248201527f7472616e736665723a204e6f7420656e6f7567682063616c6c64617461000000604482015260640161017b565b5f612d7c603c602836846142ac565b612d859161430b565b60601c90505f612d99605c603c36846142ac565b612da29161543e565b905033612db08184846136dc565b6040805160016020820152015b6040516020818303038152906040529350505050919050565b63dc478d2360e01b6001600160e01b0319831601612ed057607c361015612e3f5760405162461bcd60e51b815260206004820152601e60248201527f7472616e73666572463a204e6f7420656e6f7567682063616c6c646174610000604482015260640161017b565b5f612e4e603c602836846142ac565b612e579161430b565b60601c90505f612e6b605c604836846142ac565b612e749161430b565b60601c90505f612e88607c605c36846142ac565b612e919161543e565b905033612e9f8482846137d3565b612eaa8484846136dc565b604080516001602082015201604051602081830303815290604052945050505050919050565b63114e896160e11b6001600160e01b0319831601612fa757605c361015612f395760405162461bcd60e51b815260206004820152601e60248201527f616c6c6f77616e63653a204e6f7420656e6f7567682063616c6c646174610000604482015260640161017b565b5f612f48603c602836846142ac565b612f519161430b565b60601c90505f612f65605c604836846142ac565b612f6e9161430b565b60601c9050612f7d828261384b565b604051602001612f8f91815260200190565b60405160208183030381529060405292505050919050565b63f6a1584d60e01b6001600160e01b03198316016130b157605c3610156130105760405162461bcd60e51b815260206004820152601c60248201527f617070726f76653a204e6f7420656e6f7567682063616c6c6461746100000000604482015260640161017b565b5f61301f603c602836846142ac565b6130289161430b565b60601c90505f61303c605c603c36846142ac565b6130459161543e565b905033613053818484613860565b826001600160a01b0316816001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161309891815260200190565b60405180910390a3604080516001602082015201612dbd565b610f4a82613920565b606063f90221fd60e01b6001600160e01b03198316016130e6576001604051602001612bb09190615e83565b636a2764bf60e01b6001600160e01b0319831601613110576002604051602001612bb09190615e83565b633784a92360e01b6001600160e01b03198316016131ac57603c3610156131795760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e5552493a204e6f7420656e6f7567682063616c6c64617461000000604482015260640161017b565b5f613188603c601c36846142ac565b6131919161543e565b905061319c81613a1c565b604051602001612ced9190615e95565b63e7e9f22360e01b6001600160e01b03198316016131d957600454604051602001612bb091815260200190565b638f5f7dcf60e01b6001600160e01b031983160161324257603c361015612cb55760405162461bcd60e51b815260206004820152601e60248201527f62616c616e63654f663a204e6f7420656e6f7567682063616c6c646174610000604482015260640161017b565b634e56ef7160e11b6001600160e01b03198316016132e857603c3610156132ab5760405162461bcd60e51b815260206004820152601c60248201527f6f776e65724f663a204e6f7420656e6f7567682063616c6c6461746100000000604482015260640161017b565b5f6132ba603c601c36846142ac565b6132c39161543e565b90506132ce81613abf565b604080516001600160a01b03909216602083015201612ced565b63dc478d2360e01b6001600160e01b03198316016133ba57607c36101561335b5760405162461bcd60e51b815260206004820152602160248201527f7472616e7366657246726f6d3a204e6f7420656e6f7567682063616c6c6461746044820152606160f81b606482015260840161017b565b5f61336a603c602836846142ac565b6133739161430b565b60601c90505f613387605c604836846142ac565b6133909161430b565b60601c90505f6133a4607c605c36846142ac565b6133ad9161543e565b9050612db0838383613aca565b63f6a1584d60e01b6001600160e01b031983160161347757605c3610156134235760405162461bcd60e51b815260206004820152601c60248201527f617070726f76653a204e6f7420656e6f7567682063616c6c6461746100000000604482015260640161017b565b5f613432603c602836846142ac565b61343b9161430b565b60601c90505f61344f605c603c36846142ac565b6134589161543e565b905061346682826001613cc3565b604080516001602082015201612f8f565b635dd34b9b60e01b6001600160e01b031983160161353357605c3610156134ef5760405162461bcd60e51b815260206004820152602660248201527f736574417070726f76616c466f72416c6c3a204e6f7420656e6f7567682063616044820152656c6c6461746160d01b606482015260840161017b565b5f6134fe603c602836846142ac565b6135079161430b565b60601c90505f61351b605c603c36846142ac565b6135249161543e565b60011490506134668282613dbf565b633df9fb4160e21b6001600160e01b03198316016135bf57603c36101561359c5760405162461bcd60e51b815260206004820181905260248201527f676574417070726f7665643a204e6f7420656e6f7567682063616c6c64617461604482015260640161017b565b5f6135ab603c601c36846142ac565b6135b49161543e565b90506132ce81613ea7565b63167a163b60e01b6001600160e01b03198316016130b157605c3610156136365760405162461bcd60e51b815260206004820152602560248201527f6973417070726f766564466f72416c6c3a204e6f7420656e6f7567682063616c6044820152646c6461746160d81b606482015260840161017b565b5f613645603c602836846142ac565b61364e9161430b565b60601c90505f613662605c604836846142ac565b61366b9161430b565b60601c905061367a8282613eb2565b60408051911515602083015201612f8f565b60405163e0b490f760e01b81526001600160a01b03821660048201525f906370a0823160e01b90829081906101679063e0b490f790602401612b0d565b5f5f6136d48361368c565b549392505050565b6001600160a01b0383166137285760405162461bcd60e51b8152602060048201526013602482015272343a399d1034b73b30b634b21039b2b73232b960691b604482015260640161017b565b6001600160a01b0382166137765760405162461bcd60e51b8152602060048201526015602482015274343a399d1034b73b30b634b2103932b1b2b4bb32b960591b604482015260640161017b565b613781838383610f50565b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516137c691815260200190565b60405180910390a3505050565b5f6137de848461384b565b90505f19811461384557818110156138385760405162461bcd60e51b815260206004820152601d60248201527f5f7370656e64416c6c6f77616e63653a20696e73756666696369656e74000000604482015260640161017b565b6138458484848403613860565b50505050565b5f5f6138578484613ebe565b54949350505050565b6001600160a01b0383166138b65760405162461bcd60e51b815260206004820152601760248201527f5f617070726f76653a20696e76616c6964206f776e6572000000000000000000604482015260640161017b565b6001600160a01b03821661390c5760405162461bcd60e51b815260206004820152601960248201527f5f617070726f76653a20696e76616c6964207370656e64657200000000000000604482015260640161017b565b5f6139178484613ebe565b91909155505050565b6060637ac5590d60e11b6001600160e01b0319831601613960575f61394433612ad4565b9050600181556001604051602001612ced911515815260200190565b63051b6f4160e51b6001600160e01b0319831601613999575f61398233612ad4565b5f8155604080516001602082015291925001612ced565b63b270229360e01b6001600160e01b03198316016139d4575f6139bb33612ad4565b8054604080518215156020820152929350909101612f8f565b60405162461bcd60e51b815260206004820152601f60248201527f7265646972656374466f72546f6b656e3a206e6f7420737570706f7274656400604482015260640161017b565b60605f613a2883613fde565b90505f819050808054613a3a90614e7b565b80601f0160208091040260200160405190810160405280929190818152602001828054613a6690614e7b565b8015613ab15780601f10613a8857610100808354040283529160200191613ab1565b820191905f5260205f20905b815481529060010190602001808311613a9457829003601f168201915b505050505092505050919050565b5f5f6136d483614020565b6001600160a01b038316613b165760405162461bcd60e51b8152602060048201526013602482015272343a399d1034b73b30b634b21039b2b73232b960691b604482015260640161017b565b6001600160a01b038216613b645760405162461bcd60e51b8152602060048201526015602482015274343a399d1034b73b30b634b2103932b1b2b4bb32b960591b604482015260640161017b565b5f613b6e82614020565b80549091506001600160a01b0380821690861614613bce5760405162461bcd60e51b815260206004820152601860248201527f6874733a2073656e646572206973206e6f74206f776e65720000000000000000604482015260640161017b565b336001600160a01b03861614613c4b57613be783613ea7565b6001600160a01b0316336001600160a01b03161480613c0b5750613c0b8533613eb2565b613c4b5760405162461bcd60e51b81526020600482015260116024820152701a1d1cce881d5b985d5d1a1bdc9a5e9959607a1b604482015260640161017b565b5f613c5584614042565b90505f81555f613c658787614064565b90505f8155858455856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef87604051613cb291815260200190565b60405180910390a350505050505050565b5f613ccd83613abf565b9050336001600160a01b0382161480613cf6575033613ceb84613ea7565b6001600160a01b0316145b80613d065750613d068133613eb2565b613d4b5760405162461bcd60e51b815260206004820152601660248201527517d85c1c1c9bdd994e881d5b985d5d1a1bdc9a5e995960521b604482015260640161017b565b5f613d5584614042565b90505f83613d63575f613d65565b855b9050808255856001600160a01b0316836001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051613daf91815260200190565b60405180910390a3505050505050565b336001600160a01b03831615801590613dea5750806001600160a01b0316836001600160a01b031614155b613e425760405162461bcd60e51b815260206004820152602360248201527f736574417070726f76616c466f72416c6c3a20696e76616c6964206f706572616044820152623a37b960e91b606482015260840161017b565b5f613e4d8285614064565b9050828155836001600160a01b0316826001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3185604051613e99911515815260200190565b60405180910390a350505050565b5f5f6136d483614042565b5f5f6138578484614064565b60405163e0b490f760e01b81526001600160a01b03831660048201525f90636eb1769f60e11b90829081906101679063e0b490f790602401602060405180830381865afa158015613f11573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613f359190615e2b565b60405163e0b490f760e01b81526001600160a01b03871660048201529091505f906101679063e0b490f790602401602060405180830381865afa158015613f7e573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613fa29190615e2b565b905083838284604051602001613fbb9493929190615ea7565b604051602081830303815290604052613fd390615def565b979650505050505050565b6040515f9063c87b56dd60e01b90829061400090839083908790602001615e4e565b60405160208183030381529060405261401890615def565b949350505050565b6040515f906331a9108f60e11b90829061400090839083908790602001615e4e565b6040515f9063020604bf60e21b90829061400090839083908790602001615e4e565b60405163e0b490f760e01b81526001600160a01b03831660048201525f9063e985e9c560e01b90829081906101679063e0b490f790602401602060405180830381865afa1580156140b7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906140db9190615e2b565b60405163e0b490f760e01b81526001600160a01b03871660048201529091505f906101679063e0b490f790602401602060405180830381865afa158015614124573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906141489190615e2b565b905083838383604051602001613fbb9493929190615ea7565b60408051610240810182526060610120820181815261014083018290525f610160840181905261018084018390526101a084018190526101c084018190526101e08401819052610200840183905284519283018552808352602083018190529382019390935261022082015290819081526020015f60070b81526020015f151581526020015f151581526020015f15158152602001606081526020016060815260200160608152602001606081525090565b6040518060c00160405280614226614161565b81525f60208201819052604082018190526060808301829052608083015260a09091015290565b6040518060a001604052805f151581526020015f6001600160a01b0316815260200160608152602001606081526020015f6001600160a01b031681525090565b60405180604001604052806142a0614161565b81525f60209091015290565b5f5f858511156142ba575f5ffd5b838611156142c6575f5ffd5b5050820193919092039150565b80356001600160e01b03198116906004841015614304576001600160e01b0319600485900360031b81901b82161691505b5092915050565b80356001600160601b03198116906014841015614304576001600160601b031960149490940360031b84901b1690921692915050565b6001600160a01b0381168114614355575f5ffd5b50565b5f5f60408385031215614369575f5ffd5b823561437481614341565b946020939093013593505050565b5f5f60408385031215614393575f5ffd5b823561439e81614341565b915060208301356143ae81614341565b809150509250929050565b5f5f5f606084860312156143cb575f5ffd5b83356143d681614341565b925060208401356143e681614341565b929592945050506040919091013590565b5f60208284031215614407575f5ffd5b813561441281614341565b9392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b80511515825260018060a01b0360208201511660208301525f604082015160a0604085015261447960a0850182614419565b9050606083015184820360608601526144928282614419565b6080948501516001600160a01b03169590940194909452509092915050565b5f82825180855260208501945060208160051b830101602085015f5b8381101561451657601f1985840301885281518051845260208101519050604060208501526144ff6040850182614447565b6020998a01999094509290920191506001016144cd565b50909695505050505050565b5f81516101608452614538610160850182614419565b9050602083015184820360208601526145518282614419565b915050604083015161456e60408601826001600160a01b03169052565b50606083015184820360608601526145868282614419565b915050608083015161459c608086018215159052565b5060a08301516145b160a086018260070b9052565b5060c08301516145c560c086018215159052565b5060e083015184820360e08601526145dd82826144b1565b9150506101008301516146186101008601828051600790810b83526020808301516001600160a01b031690840152604091820151900b910152565b509392505050565b5f8151808452602084019350602083015f5b82811015614690578151805160070b87526020808201516001600160a01b03908116828a01526040808401511515908a01526060808401511515908a0152608092830151169188019190915260a09096019590910190600101614632565b5093949350505050565b5f8151808452602084019350602083015f5b828110156146905781515f815160070b8852602082015160070b6020890152604082015160070b6040890152606082015160070b606089015260808201511515608089015260018060a01b0360a08301511660a089015260c08801905080975050506020820191506001810190506146ac565b5f8151808452602084019350602083015f5b828110156146905781515f815160070b8852602082015160070b6020890152604082015160070b604089015260018060a01b03606083015116606089015260808201511515608089015260018060a01b0360a08301511660a089015260c0880190508097505050602082019150600181019050614731565b5f815161012084526147bf610120850182614522565b905060208301516147d5602086018260070b9052565b5060408301516147e9604086018215159052565b5060608301516147fd606086018215159052565b506080830151614811608086018215159052565b5060a083015184820360a08601526148298282614620565b91505060c083015184820360c0860152614843828261469a565b91505060e083015184820360e086015261485d828261471f565b915050610100830151848203610100860152612b7b8282614419565b8260070b8152604060208201525f61401860408301846147a9565b8060070b8114614355575f5ffd5b5f5f604083850312156148b3575f5ffd5b82356148be81614341565b915060208301356143ae81614894565b8260070b8152604060208201525f825160c060408401526148f36101008401826147a9565b9050602084015160070b606084015260018060a01b036040850151166080840152606084015160070b60a08401526080840151603f198483030160c085015261493c8282614419565b60a095909501516001600160a01b031660e0949094019390935250919392505050565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b03811182821017156149955761499561495f565b60405290565b60405160a081016001600160401b03811182821017156149955761499561495f565b60405161012081016001600160401b03811182821017156149955761499561495f565b60405160c081016001600160401b03811182821017156149955761499561495f565b604051601f8201601f191681016001600160401b0381118282101715614a2a57614a2a61495f565b604052919050565b5f6001600160401b03821115614a4a57614a4a61495f565b5060051b60200190565b5f5f60408385031215614a65575f5ffd5b8235614a7081614341565b915060208301356001600160401b03811115614a8a575f5ffd5b8301601f81018513614a9a575f5ffd5b8035614aad614aa882614a32565b614a02565b8082825260208201915060208360051b850101925087831115614ace575f5ffd5b6020840193505b82841015614af9578335614ae881614341565b825260209384019390910190614ad5565b809450505050509250929050565b8260070b8152604060208201525f6140186040830184614447565b8260070b8152604060208201525f8251604080840152614b4560808401826147a9565b9050602084015160030b6060840152809150509392505050565b8460070b8152608060208201525f614b7a6080830186614620565b8281036040840152614b8c818661469a565b90508281036060840152613fd3818561471f565b600783900b81526080810161441260208301848051600790810b83526020808301516001600160a01b031690840152604091820151900b910152565b5f5f5f60608486031215614bee575f5ffd5b8335614bf981614341565b92506020840135614c0981614894565b915060408401356001600160401b03811115614c23575f5ffd5b8401601f81018613614c33575f5ffd5b8035614c41614aa882614a32565b8082825260208201915060208360051b850101925088831115614c62575f5ffd5b6020840193505b82841015614c8d578335614c7c81614894565b825260209384019390910190614c69565b809450505050509250925092565b5f6001600160401b03821115614cb357614cb361495f565b50601f01601f191660200190565b5f5f5f60608486031215614cd3575f5ffd5b8335614cde81614341565b92506020840135614cee81614894565b915060408401356001600160401b03811115614d08575f5ffd5b8401601f81018613614d18575f5ffd5b8035614d26614aa882614a32565b8082825260208201915060208360051b850101925088831115614d47575f5ffd5b602084015b83811015614dc75780356001600160401b03811115614d69575f5ffd5b8501603f81018b13614d79575f5ffd5b6020810135614d8a614aa882614c9b565b8181526040838301018d1015614d9e575f5ffd5b816040840160208301375f60208383010152808652505050602083019250602081019050614d4c565b50809450505050509250925092565b5f606082018560070b83528460070b6020840152606060408401528084518083526080850191506020860192505f5b81811015614e2657835160070b835260209384019390920191600101614e05565b5090979650505050505050565b5f5f5f60608486031215614e45575f5ffd5b8335614e5081614341565b92506020840135614e6081614341565b91506040840135614e7081614341565b809150509250925092565b600181811c90821680614e8f57607f821691505b602082108103614ead57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f8154614ebf81614e7b565b600182168015614ed65760018114614eeb57614f18565b60ff1983168652811515820286019350614f18565b845f5260205f205f5b83811015614f1057815488820152600190910190602001614ef4565b505081860193505b50505092915050565b5f6144128284614eb3565b5f8154614f3881614e7b565b808552600182168015614f525760018114614f6e57614f18565b60ff1983166020870152602082151560051b8701019350614f18565b845f5260205f205f5b83811015614f995781546020828a010152600182019150602081019050614f77565b870160200194505050505092915050565b5f82825480855260208501945060208160051b830101845f5260205f205f5b8381101561451657848303601f1901885281548352604060208401819052600183015460ff811615159185019190915260081c6001600160a01b0316606084015260a0608084015261502160e0840160028401614f2c565b838103603f190160a085015261503a8160038501614f2c565b60048401546001600160a01b031660c095909501949094525060209790970196600590910190600101614fc9565b61016082525f61507c610160840183614f2c565b83810360208501526150918160018501614f2c565b90506150a760028401546001600160a01b031690565b6001600160a01b0316604085015283810360608501526150ca8160038501614f2c565b905060048301546150e26080860160ff831615159052565b600881901c60070b60a086015261510360c0860160ff8360481c1615159052565b5083810360e08501526151198160058501614faa565b90506144126101008501600685018054600781810b8452604091821c6001600160a01b0316602085015260019092015490910b910152565b5f8154808452602084019350825f5260205f205f5b82811015614690578154600781900b8752604081811c6001600160a01b0390811660208a015260e083901c60ff9081161515928a019290925260e89290921c1615156060880152600180840154909116608088015260a09096019560029092019101615166565b5f8154808452602084019350825f5260205f205f5b82811015614690575f82548060070b88528060401c60070b60208901528060801c60070b60408901528060c01d60070b606089015250600183015461522e6080890160ff831615159052565b60081c6001600160a01b031660a08801525060c090950194600291909101906001016151e2565b5f8154808452602084019350825f5260205f205f5b82811015614690575f82548060070b88528060401c60070b60208901528060801c60070b604089015250600183015460018060a01b03811660608901526152bb6080890160ff8360a01c1615159052565b505060028201546001600160a01b031660a087015260c09095019460039091019060010161526a565b60ff831681526040602082015261012060408201525f615308610160830184615068565b6008840154600781900b606085015261532b6080850160ff8360401c1615159052565b61533f60a0850160ff8360481c1615159052565b61535360c0850160ff8360501c1615159052565b50828103603f190160e084015261536d8160098601615151565b838103603f1901610100850152905061538981600a86016151cd565b838103603f190161012085015290506153a581600b8601615255565b838103603f19016101408501529050612b7b81600c8601614f2c565b60ff85168152608060208201525f6153dc6080830186615151565b82810360408401526153ee81866151cd565b90508281036060840152613fd38185615255565b60ff831681526080810161441260208301848054600781810b8452604091821c6001600160a01b0316602085015260019092015490910b910152565b80356020831015610f4a575f19602084900360031b1b1692915050565b60208082526017908201527f68747343616c6c3a2064656c6567617465642063616c6c000000000000000000604082015260600190565b805161549d81614341565b919050565b5f602082840312156154b2575f5ffd5b815161441281614341565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b80820180821115610f4a57610f4a6154d1565b81810381811115610f4a57610f4a6154d1565b5f82518060208501845e5f920191825250919050565b805161549d81614894565b5f82601f83011261553b575f5ffd5b8151602083015f61554e614aa884614c9b565b9050828152858383011115615561575f5ffd5b8282602083015e5f92810160200192909252509392505050565b8051801515811461549d575f5ffd5b5f82601f830112615599575f5ffd5b81516155a7614aa882614a32565b8082825260208201915060208360051b8601019250858311156155c8575f5ffd5b602085015b838110156156e55780516001600160401b038111156155ea575f5ffd5b86016040818903601f190112156155ff575f5ffd5b615607614973565b6020820151815260408201516001600160401b03811115615626575f5ffd5b60208184010192505060a0828a03121561563e575f5ffd5b61564661499b565b61564f8361557b565b8152602083015161565f81614341565b602082015260408301516001600160401b0381111561567c575f5ffd5b6156888b82860161552c565b60408301525060608301516001600160401b038111156156a6575f5ffd5b6156b28b82860161552c565b606083015250608083015192506156c883614341565b6080810192909252602081810192909252845292830192016155cd565b5095945050505050565b5f606082840312156156ff575f5ffd5b604051606081016001600160401b03811182821017156157215761572161495f565b8060405250809150825161573481614894565b8152602083015161574481614341565b6020820152604083015161575781614894565b6040919091015292915050565b5f6101608284031215615775575f5ffd5b61577d6149bd565b905081516001600160401b03811115615794575f5ffd5b6157a08482850161552c565b82525060208201516001600160401b038111156157bb575f5ffd5b6157c78482850161552c565b6020830152506157d960408301615492565b604082015260608201516001600160401b038111156157f6575f5ffd5b6158028482850161552c565b6060830152506158146080830161557b565b608082015261582560a08301615521565b60a082015261583660c0830161557b565b60c082015260e08201516001600160401b03811115615853575f5ffd5b61585f8482850161558a565b60e0830152506158738361010084016156ef565b61010082015292915050565b5f82601f83011261588e575f5ffd5b815161589c614aa882614a32565b80828252602082019150602060a084028601019250858311156158bd575f5ffd5b602085015b838110156156e55760a081880312156158d9575f5ffd5b6158e161499b565b81516158ec81614894565b815260208201516158fc81614341565b602082015261590d6040830161557b565b604082015261591e6060830161557b565b6060820152608082015161593181614341565b6080820152835260209092019160a0016158c2565b5f82601f830112615955575f5ffd5b8151615963614aa882614a32565b80828252602082019150602060c08402860101925085831115615984575f5ffd5b602085015b838110156156e55760c081880312156159a0575f5ffd5b6159a86149e0565b81516159b381614894565b815260208201516159c381614894565b602082015260408201516159d681614894565b604082015260608201516159e981614894565b60608201526159fa6080830161557b565b608082015260a0820151615a0d81614341565b60a0820152835260209092019160c001615989565b5f82601f830112615a31575f5ffd5b8151615a3f614aa882614a32565b80828252602082019150602060c08402860101925085831115615a60575f5ffd5b602085015b838110156156e55760c08188031215615a7c575f5ffd5b615a846149e0565b8151615a8f81614894565b81526020820151615a9f81614894565b60208201526040820151615ab281614894565b60408201526060820151615ac581614341565b6060820152615ad66080830161557b565b608082015260a0820151615ae981614341565b60a0820152835260209092019160c001615a65565b5f5f60408385031215615b0f575f5ffd5b8251615b1a81614894565b60208401519092506001600160401b03811115615b35575f5ffd5b83016101208186031215615b47575f5ffd5b615b4f6149bd565b81516001600160401b03811115615b64575f5ffd5b615b7087828501615764565b825250615b7f60208301615521565b6020820152615b906040830161557b565b6040820152615ba16060830161557b565b6060820152615bb26080830161557b565b608082015260a08201516001600160401b03811115615bcf575f5ffd5b615bdb8782850161587f565b60a08301525060c08201516001600160401b03811115615bf9575f5ffd5b615c0587828501615946565b60c08301525060e08201516001600160401b03811115615c23575f5ffd5b615c2f87828501615a22565b60e0830152506101008201516001600160401b03811115615c4e575f5ffd5b615c5a8782850161552c565b6101008301525080925050509250929050565b5f60208284031215615c7d575f5ffd5b815161441281614894565b5f5f60408385031215615c99575f5ffd5b8251615ca481614894565b9150615cb26020840161557b565b90509250929050565b5f60208284031215615ccb575f5ffd5b815160ff81168114614412575f5ffd5b5f5f60408385031215615cec575f5ffd5b8251615cf781614894565b8092505060208301518060030b81146143ae575f5ffd5b5f5f5f5f60808587031215615d21575f5ffd5b8451615d2c81614894565b60208601519094506001600160401b03811115615d47575f5ffd5b615d538782880161587f565b93505060408501516001600160401b03811115615d6e575f5ffd5b615d7a87828801615946565b92505060608501516001600160401b03811115615d95575f5ffd5b615da187828801615a22565b91505092959194509250565b5f5f60808385031215615dbe575f5ffd5b8251615dc981614894565b9150615cb284602085016156ef565b5f60208284031215615de8575f5ffd5b5051919050565b80516020808301519190811015614ead575f1960209190910360031b1b16919050565b5f60208284031215615e22575f5ffd5b6144128261557b565b5f60208284031215615e3b575f5ffd5b815163ffffffff81168114614412575f5ffd5b6001600160e01b0319938416815260409290921b67ffffffffffffffff1916600483015260e01b909116601c82015260200190565b602081525f6144126020830184614f2c565b602081525f6144126020830184614419565b6001600160e01b0319948516815260609390931b6001600160601b031916600484015260e091821b84166018840152901b909116601c8201526020019056fea2646970667358221220a4b1d5745b55a2795bafc818e44b32f2dff5b79488ae27cc41a80f730e03d9d564736f6c634300081c0033",
        "sourceMap": "320:31588:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13118:12;13551:2;13532:21;;;13524:63;;;;-1:-1:-1;;;13524:63:1;;216:2:39;13524:63:1;;;198:21:39;255:2;235:18;;;228:30;294:31;274:18;;;267:59;343:18;;13524:63:1;;;;;;;;;13598:24;13639:13;13650:1;13598:24;13639:8;13598:24;13639:13;:::i;:::-;13632:21;;;:::i;:::-;13625:29;;;-1:-1:-1;13692:10:1;13672:30;;13664:73;;;;-1:-1:-1;;;13664:73:1;;1253:2:39;13664:73:1;;;1235:21:39;1292:2;1272:18;;;1265:30;1331:32;1311:18;;;1304:60;1381:18;;13664:73:1;1051:354:39;13664:73:1;13748:13;13780:14;13791:2;13789:1;13780:8;13748:13;13780:14;:::i;:::-;13772:23;;;:::i;:::-;13764:32;;;-1:-1:-1;13831:4:1;13814:22;;13806:64;;;;-1:-1:-1;;;13806:64:1;;1991:2:39;13806:64:1;;;1973:21:39;2030:2;2010:18;;;2003:30;2069:31;2049:18;;;2042:59;2118:18;;13806:64:1;1789:353:39;13806:64:1;14049:20;:18;:20::i;:::-;320:31588;;;-1:-1:-1;320:31588:1;;;-1:-1:-1;;;;320:31588:1;5862:300;;;;;;:::i;:::-;;:::i;:::-;;;;3059:1:39;3048:21;;;;3030:40;;-1:-1:-1;;;;;3106:32:39;;;3101:2;3086:18;;3079:60;3003:18;5862:300:1;;;;;;;;5324:239;;;;;;:::i;:::-;;:::i;:::-;;;3714:1:39;3703:21;;;;3685:40;;3673:2;3658:18;5324:239:1;3543:188:39;29124:962:1;;;;;;:::i;:::-;;:::i;:::-;;8200:284;;;;;;:::i;:::-;;:::i;:::-;;;;4790:1:39;4779:21;;;;4761:40;;4844:14;;4837:22;4832:2;4817:18;;4810:50;4734:18;8200:284:1;4597:269:39;1638:272:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1916:1028::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3568:746::-;;;;;;:::i;:::-;;:::i;7059:253::-;;;;;;:::i;:::-;;:::i;7318:652::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2950:612::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5081:237::-;;;;;;:::i;:::-;;:::i;4320:755::-;;;;;;:::i;:::-;;:::i;7976:218::-;;;;;;:::i;:::-;;:::i;:::-;;;;17983:1:39;17972:21;;;;17954:40;;18041:1;18030:21;;;;18025:2;18010:18;;18003:49;17927:18;7976:218:1;17788:270:39;6480:262:1;;;;;;:::i;:::-;;:::i;6748:305::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;5569:287::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;9498:924::-;;;;;;:::i;:::-;;:::i;:::-;;;;20788:1:39;20777:21;;;20759:40;;20835:21;;;;20830:2;20815:18;;20808:49;20732:18;9498:924:1;20593:270:39;1329:303:1;;;;;;:::i;:::-;;:::i;:::-;;;21042:10:39;21030:23;;;21012:42;;21000:2;20985:18;1329:303:1;20868:192:39;8490:1002:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;6168:306::-;;;;;;:::i;:::-;;:::i;14178:3875::-;14234:12;14258:15;14283;14295:2;14292;14283:8;14258:15;14283;:::i;:::-;14276:23;;;:::i;:::-;14258:41;;14382:18;;;;;;;;;;;-1:-1:-1;;;14382:18:1;;;;;14341:27;14372:29;;14341:27;;-1:-1:-1;;14341:27:1;:::i;:::-;;;;;;;;:60;14337:134;;14417:43;;-1:-1:-1;;;14417:43:1;;25825:2:39;14417:43:1;;;25807:21:39;25864:2;25844:18;;;25837:30;25903:34;25883:18;;;25876:62;-1:-1:-1;;;25954:18:39;;;25947:31;25995:19;;14417:43:1;25623:397:39;14337:134:1;-1:-1:-1;;14532:10:1;:25;14528:2997;;-1:-1:-1;;;;;;;;;14577:38:1;;;14573:195;;14662:2;14643:8;:21;;14635:67;;;;-1:-1:-1;;;14635:67:1;;26227:2:39;14635:67:1;;;26209:21:39;26266:2;26246:18;;;26239:30;26305:34;26285:18;;;26278:62;-1:-1:-1;;;26356:18:39;;;26349:31;26397:19;;14635:67:1;26025:397:39;14635:67:1;14738:2;14742:10;14727:26;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14720:33;;;14178:3875;:::o;14573:195::-;-1:-1:-1;;;;;;;;;14785:44:1;;;14781:268;;14876:2;14857:8;:21;;14849:73;;;;-1:-1:-1;;;14849:73:1;;34586:2:39;14849:73:1;;;34568:21:39;34625:2;34605:18;;;34598:30;34664:34;34644:18;;;34637:62;-1:-1:-1;;;34715:18:39;;;34708:37;34762:19;;14849:73:1;34384:403:39;14849:73:1;14947:87;;;;14958:2;;14962:20;;14984:25;;15011:22;;14947:87;;;:::i;14781:268::-;-1:-1:-1;;;;;;;;;15066:50:1;;;15062:236;;15163:2;15144:8;:21;;15136:79;;;;-1:-1:-1;;;15136:79:1;;35966:2:39;15136:79:1;;;35948:21:39;36005:2;35985:18;;;35978:30;36044:34;36024:18;;;36017:62;-1:-1:-1;;;36095:18:39;;;36088:43;36148:19;;15136:79:1;35764:409:39;15136:79:1;15255:27;;15240:43;;;15251:2;15240:43;;;36353:36:39;-1:-1:-1;;;15255:27:1;;;;;36432:14:39;36425:22;36405:18;;;36398:50;36326:18;;15240:43:1;36178:276:39;15062:236:1;-1:-1:-1;;;;;;;;;15315:53:1;;;15311:245;;15415:2;15396:8;:21;;15388:82;;;;-1:-1:-1;;;15388:82:1;;36661:2:39;15388:82:1;;;36643:21:39;36700:2;36680:18;;;36673:30;36739:34;36719:18;;;36712:62;-1:-1:-1;;;36790:18:39;;;36783:46;36846:19;;15388:82:1;36459:412:39;15388:82:1;15510:30;;15495:46;;;15506:2;15495:46;;;36353:36:39;-1:-1:-1;;;15510:30:1;;;;;36432:14:39;36425:22;36405:18;;;36398:50;36326:18;;15495:46:1;36178:276:39;15311:245:1;-1:-1:-1;;;;;;;;;15573:44:1;;;15569:220;;15664:2;15645:8;:21;;15637:73;;;;-1:-1:-1;;;15637:73:1;;37078:2:39;15637:73:1;;;37060:21:39;37117:2;37097:18;;;37090:30;37156:34;37136:18;;;37129:62;-1:-1:-1;;;37207:18:39;;;37200:37;37254:19;;15637:73:1;36876:403:39;15637:73:1;15735:39;;;;15746:2;;15750:23;;15735:39;;;:::i;15569:220::-;-1:-1:-1;;;;;;;;;15806:40:1;;;15802:363;;15893:2;15874:8;:21;;15866:69;;;;-1:-1:-1;;;15866:69:1;;37829:2:39;15866:69:1;;;37811:21:39;37868:2;37848:18;;;37841:30;37907:34;37887:18;;;37880:62;-1:-1:-1;;;37958:18:39;;;37951:33;38001:19;;15866:69:1;37627:399:39;15866:69:1;15953:15;15987;15999:2;15996;15987:8;15953:15;15987;:::i;:::-;15979:24;;;:::i;:::-;15971:33;;15953:51;;16022:12;16037:26;16055:7;16037:17;:26::i;:::-;16105:4;16092:18;;16136:14;;;16147:2;16136:14;;;38184:36:39;16022:41:1;;-1:-1:-1;38157:18:39;16136:14:1;;;;;;;;;;;;;16129:21;;;;;14178:3875;:::o;15802:363::-;-1:-1:-1;;;;;;;;;16182:41:1;;;16178:366;;16270:2;16251:8;:21;;16243:70;;;;-1:-1:-1;;;16243:70:1;;38433:2:39;16243:70:1;;;38415:21:39;38472:2;38452:18;;;38445:30;38511:34;38491:18;;;38484:62;-1:-1:-1;;;38562:18:39;;;38555:34;38606:19;;16243:70:1;38231:400:39;16243:70:1;16331:15;16365;16377:2;16374;16365:8;16331:15;16365;:::i;:::-;16357:24;;;:::i;:::-;16349:33;;16331:51;;16400:12;16415:26;16433:7;16415:17;:26::i;:::-;16483:5;16470:19;;16515:14;;;16526:2;16515:14;;;38184:36:39;16400:41:1;;-1:-1:-1;38157:18:39;16515:14:1;38031:195:39;16178:366:1;-1:-1:-1;;;;;;;;;16561:38:1;;;16557:528;;16646:2;16627:8;:21;;16619:67;;;;-1:-1:-1;;;16619:67:1;;38838:2:39;16619:67:1;;;38820:21:39;38877:2;38857:18;;;38850:30;38916:34;38896:18;;;38889:62;-1:-1:-1;;;38967:18:39;;;38960:31;39008:19;;16619:67:1;38636:397:39;16619:67:1;16750:28;16735:9;16718:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;16708:38;;;;;;:70;16704:148;;16809:24;;;16820:2;16809:24;;;39420:36:39;16830:1:1;39472:18:39;;;39465:49;;;;39393:18;;16809:24:1;39243:277:39;16704:148:1;16915:32;16900:9;16883:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;16873:38;;;;;;:74;16869:152;;16978:24;;;16989:2;16978:24;;;39420:36:39;16999:1:1;39472:18:39;;;39465:49;;;;39393:18;;16978:24:1;39243:277:39;16869:152:1;17045:25;;;17056:2;17045:25;;;39420:36:39;-1:-1:-1;;39472:18:39;;;39465:49;;;;39393:18;;17045:25:1;39243:277:39;16557:528:1;-1:-1:-1;;;;;;;;;17102:33:1;;;17098:417;;17182:3;17163:8;:22;;17155:62;;;;-1:-1:-1;;;17155:62:1;;39727:2:39;17155:62:1;;;39709:21:39;39766:2;39746:18;;;39739:30;39805:29;39785:18;;;39778:57;39852:18;;17155:62:1;39525:351:39;17155:62:1;17235:12;17266:15;17278:2;17275;17266:8;17235:12;17266:15;:::i;:::-;17258:24;;;:::i;:::-;17250:33;;;-1:-1:-1;17301:10:1;17330:15;17342:2;17339;17330:8;17301:10;17330:15;:::i;:::-;17322:24;;;:::i;:::-;17314:33;;;-1:-1:-1;17365:14:1;17398:16;17410:3;17407:2;17398:8;17365:14;17398:16;:::i;:::-;17390:25;;;:::i;:::-;17382:34;-1:-1:-1;17434:25:1;17442:4;17448:2;17382:34;17434:7;:25::i;:::-;17484:16;;;17495:4;17484:16;;;40281:41:39;40254:18;17484:16:1;;;;;;;;;;;;17477:23;;;;;;14178:3875;:::o;17098:417::-;17663:24;;;;;;;;;;;-1:-1:-1;;;17663:24:1;;;;;17622:27;17653:35;;17622:27;;-1:-1:-1;;17622:27:1;:::i;:::-;;;;;;;;:66;17618:131;;17711:27;17729:8;17711:17;:27::i;:::-;17704:34;;;14178:3875;:::o;17618:131::-;17892:28;;;;;;;;;;;-1:-1:-1;;;17892:28:1;;;;;17851:27;17882:39;;17851:27;;-1:-1:-1;;17851:27:1;:::i;:::-;;;;;;;;:70;17847:136;;17944:28;17963:8;17944:18;:28::i;17847:136::-;17993:53;;-1:-1:-1;;;17993:53:1;;40535:2:39;17993:53:1;;;40517:21:39;40574:2;40554:18;;;40547:30;40613:34;40593:18;;;40586:62;-1:-1:-1;;;40664:18:39;;;40657:40;40714:19;;17993:53:1;40333:406:39;5862:300:1;5959:18;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6015:19:1;::::1;6007:58;;;::::0;-1:-1:-1;;;6007:58:1;;41298:2:39;6007:58:1::1;::::0;::::1;41280:21:39::0;41337:2;41317:18;;;41310:30;41376:28;41356:18;;;41349:56;41422:18;;6007:58:1::1;41096:350:39::0;6007:58:1::1;6114:40;::::0;-1:-1:-1;;;6114:40:1;;::::1;::::0;::::1;41597:25:39::0;;;6109:2:1::1;::::0;-1:-1:-1;;;;;6114:26:1;::::1;::::0;::::1;::::0;41570:18:39;;6114:40:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6075:80:::0;;;;-1:-1:-1;5862:300:1;-1:-1:-1;;;5862:300:1:o;5324:239::-;5407:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;5463:16:::1;::::0;;5477:1:::1;5463:16:::0;;;;;::::1;::::0;;;5437:23:::1;::::0;5463:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;5463:16:1::1;5437:42;;5501:5;5489:6;5496:1;5489:9;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1::0;;;;;5489:17:1::1;;;-1:-1:-1::0;;;;;5489:17:1::1;;;::::0;::::1;5523:33;5540:7;5549:6;5523:16;:33::i;:::-;5516:40;;;904:1;5324:239:::0;;;;:::o;29124:962::-;-1:-1:-1;;;;;29204:18:1;;29200:376;;29253:6;29238:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;29200:376:1;;-1:-1:-1;29200:376:1;;29290:16;29309:20;29324:4;29309:14;:20::i;:::-;29402:15;;29290:39;;-1:-1:-1;29440:21:1;;;;29432:65;;;;-1:-1:-1;;;29432:65:1;;42628:2:39;29432:65:1;;;42610:21:39;42667:2;42647:18;;;42640:30;42706:33;42686:18;;;42679:61;42757:18;;29432:65:1;42426:355:39;29432:65:1;29539:24;;;29522:42;;29200:376;-1:-1:-1;;;;;29590:16:1;;29586:494;;29637:6;29622:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;29586:494:1;;-1:-1:-1;29586:494:1;;29674:14;29691:18;29706:2;29691:14;:18::i;:::-;29778:13;;29674:35;;-1:-1:-1;29723:17:1;29997:18;30009:6;29778:13;29997:18;:::i;:::-;30040:28;;;-1:-1:-1;;29586:494:1;29124:962;;;:::o;8200:284::-;8296:55;;-1:-1:-1;;;;;43083:32:39;;8296:55:1;;;43065:51:39;8250:5:1;;;;;;43038:18:39;;8296:55:1;;;-1:-1:-1;;8296:55:1;;;;;;;;;;;;;;-1:-1:-1;;;;;8296:55:1;-1:-1:-1;;;8296:55:1;;;8403:19;8296:55;;-1:-1:-1;;;;;;;;;;8403:10:1;;;:19;;8296:55;;8403:19;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8361:61;;;;8440:2;8444:7;:32;;;;;8475:1;8455:10;:17;:21;8444:32;8432:45;;;;;;;8200:284;;;:::o;1638:272::-;1701:18;1721:26;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1767:19:1;::::1;1759:59;;;::::0;-1:-1:-1;;;1759:59:1;;43635:2:39;1759:59:1::1;::::0;::::1;43617:21:39::0;43674:2;43654:18;;;43647:30;43713:29;43693:18;;;43686:57;43760:18;;1759:59:1::1;43433:351:39::0;1759:59:1::1;1857:46;::::0;-1:-1:-1;;;1857:46:1;;-1:-1:-1;;;;;1857:39:1;::::1;:46;::::0;::::1;43065:51:39::0;;;1857:39:1;::::1;::::0;43038:18:39;;1857:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1857:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1829:74:::0;;;;-1:-1:-1;1638:272:1;-1:-1:-1;;1638:272:1:o;1916:1028::-;2026:5;2033:27;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2080:19:1;::::1;2072:70;;;::::0;-1:-1:-1;;;2072:70:1;;55448:2:39;2072:70:1::1;::::0;::::1;55430:21:39::0;55487:2;55467:18;;;55460:30;55526:34;55506:18;;;55499:62;-1:-1:-1;;;55577:18:39;;;55570:36;55623:19;;2072:70:1::1;55246:402:39::0;2072:70:1::1;2204:46;::::0;-1:-1:-1;;;2204:46:1;;-1:-1:-1;;;;;2204:39:1;::::1;:46;::::0;::::1;43065:51:39::0;;;2154:18:1::1;::::0;;;2204:39;::::1;::::0;43038:18:39;;2204:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2204:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;2153:97;;;;2268:12;:18;;2284:2;2268:18;2260:80;;;::::0;-1:-1:-1;;;2260:80:1;;55855:2:39;2260:80:1::1;::::0;::::1;55837:21:39::0;55894:2;55874:18;;;55867:30;55933:34;55913:18;;;55906:62;-1:-1:-1;;;55984:18:39;;;55977:47;56041:19;;2260:80:1::1;55653:413:39::0;2260:80:1::1;2350:48;;:::i;:::-;2408:42:::0;;;2460:48:::1;::::0;;::::1;:33;::::0;::::1;:48:::0;2551:57:::1;::::0;-1:-1:-1;;;2551:57:1;;-1:-1:-1;;;;;2578:29:1;::::1;2551:57;::::0;::::1;41597:25:39::0;-1:-1:-1;;;;;2551:26:1;::::1;::::0;::::1;::::0;41570:18:39;;2551:57:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2518:90:1;;::::1;:30;::::0;::::1;:90:::0;2649:53:::1;::::0;-1:-1:-1;;;2649:53:1;;-1:-1:-1;;;;;2672:29:1;::::1;2649:53;::::0;::::1;41597:25:39::0;2649:22:1;;::::1;::::0;::::1;::::0;41570:18:39;;2649:53:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2618:84:1::1;:28;::::0;::::1;:84:::0;2902:12;;-1:-1:-1;2618:20:1;;-1:-1:-1;;904:1:1::1;1916:1028:::0;;;;;:::o;3568:746::-;3659:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;3713:1:::1;3697:6;:13;:17;3689:61;;;::::0;-1:-1:-1;;;3689:61:1;;56273:2:39;3689:61:1::1;::::0;::::1;56255:21:39::0;56312:2;56292:18;;;56285:30;56351:33;56331:18;;;56324:61;56402:18;;3689:61:1::1;56071:355:39::0;3689:61:1::1;-1:-1:-1::0;;;;;3768:21:1;::::1;3779:10;3768:21;3760:136;;;::::0;-1:-1:-1;;;3760:136:1;;56633:2:39;3760:136:1::1;::::0;::::1;56615:21:39::0;56672:3;56652:18;;;56645:31;56712:34;56692:18;;;56685:62;56783:34;56763:18;;;56756:62;56855:34;56834:19;;;56827:63;-1:-1:-1;;;56906:19:39;;;56899:37;56953:19;;3760:136:1::1;56431:547:39::0;3760:136:1::1;3911:9;3906:344;3930:6;:13;3926:1;:17;3906:344;;;3993:1;-1:-1:-1::0;;;;;3972:23:1::1;:6;3979:1;3972:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;3972:23:1::1;::::0;3964:66:::1;;;::::0;-1:-1:-1;;;3964:66:1;;57185:2:39;3964:66:1::1;::::0;::::1;57167:21:39::0;57224:2;57204:18;;;57197:30;57263:32;57243:18;;;57236:60;57313:18;;3964:66:1::1;56983:354:39::0;3964:66:1::1;4044:29;4096:6;4103:1;4096:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4076:45:1::1;;4122:7;4131:6;4138:1;4131:9;;;;;;;;:::i;:::-;;;;;;;4076:65;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;57534:32:39;;;57516:51;;57603:32;;57598:2;57583:18;;57576:60;57504:2;57489:18;;57342:300;4076:65:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4044:97;;4163:23;:29;;4190:2;4163:29;4155:84;;;::::0;-1:-1:-1;;;4155:84:1;;58101:2:39;4155:84:1::1;::::0;::::1;58083:21:39::0;58140:2;58120:18;;;58113:30;58179:34;58159:18;;;58152:62;-1:-1:-1;;;58230:18:39;;;58223:40;58280:19;;4155:84:1::1;57899:406:39::0;4155:84:1::1;-1:-1:-1::0;3945:3:1::1;;3906:344;;;-1:-1:-1::0;4274:2:1::1;::::0;3568:746;-1:-1:-1;;;3568:746:1:o;7059:253::-;7134:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7165:19:1;::::1;7157:73;;;::::0;-1:-1:-1;;;7157:73:1;;58512:2:39;7157:73:1::1;::::0;::::1;58494:21:39::0;58551:2;58531:18;;;58524:30;58590:34;58570:18;;;58563:62;-1:-1:-1;;;58641:18:39;;;58634:39;58690:19;;7157:73:1::1;58310:405:39::0;7157:73:1::1;7247:58;::::0;-1:-1:-1;;;7247:58:1;;-1:-1:-1;;;;;7247:51:1;::::1;:58;::::0;::::1;43065:51:39::0;;;7247::1;::::1;::::0;43038:18:39;;7247:58:1::1;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7240:65;;;;7059:253:::0;;;:::o;7318:652::-;7394:5;7401:15;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7436:19:1;::::1;7428:58;;;::::0;-1:-1:-1;;;7428:58:1;;59253:2:39;7428:58:1::1;::::0;::::1;59235:21:39::0;59292:2;59272:18;;;59265:30;59331:28;59311:18;;;59304:56;59377:18;;7428:58:1::1;59051:350:39::0;7428:58:1::1;7547:46;::::0;-1:-1:-1;;;7547:46:1;;-1:-1:-1;;;;;7547:39:1;::::1;:46;::::0;::::1;43065:51:39::0;;;7497:18:1::1;::::0;;;7547:39;::::1;::::0;43038:18:39;;7547:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;7547:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;7496:97;;;;7611:12;:18;;7627:2;7611:18;7603:68;;;::::0;-1:-1:-1;;;7603:68:1;;59608:2:39;7603:68:1::1;::::0;::::1;59590:21:39::0;59647:2;59627:18;;;59620:30;59686:34;59666:18;;;59659:62;-1:-1:-1;;;59737:18:39;;;59730:35;59782:19;;7603:68:1::1;59406:401:39::0;7603:68:1::1;7686:9;7681:218;7705:15:::0;;:25:::1;;::::0;:32;7701:36;::::1;7681:218;;;7802:7;7762:9;:15;;;:25;;;7788:1;7762:28;;;;;;;;:::i;:::-;;;;;;;:36;;;:47:::0;7758:131:::1;;7837:2;7841:9;:15;;;:25;;;7867:1;7841:28;;;;;;;;:::i;:::-;;;;;;;:32;;;7829:45;;;;;;;;;7758:131;7739:3;;7681:218;;;;7908:24;;:::i;:::-;7950:2;::::0;7954:8;;-1:-1:-1;7318:652:1;-1:-1:-1;;;;;7318:652:1:o;2950:612::-;3021:5;3028:24;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;3072:19:1;::::1;3064:67;;;::::0;-1:-1:-1;;;3064:67:1;;60014:2:39;3064:67:1::1;::::0;::::1;59996:21:39::0;60053:2;60033:18;;;60026:30;60092:34;60072:18;;;60065:62;-1:-1:-1;;;60143:18:39;;;60136:33;60186:19;;3064:67:1::1;59812:399:39::0;3064:67:1::1;3193:46;::::0;-1:-1:-1;;;3193:46:1;;-1:-1:-1;;;;;3193:39:1;::::1;:46;::::0;::::1;43065:51:39::0;;;3143:18:1::1;::::0;;;3193:39;::::1;::::0;43038:18:39;;3193:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;3193:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;3142:97;;;;3257:12;:18;;3273:2;3257:18;3249:77;;;::::0;-1:-1:-1;;;3249:77:1;;60418:2:39;3249:77:1::1;::::0;::::1;60400:21:39::0;60457:2;60437:18;;;60430:30;60496:34;60476:18;;;60469:62;-1:-1:-1;;;60547:18:39;;;60540:44;60601:19;;3249:77:1::1;60216:410:39::0;3249:77:1::1;3336:42;;:::i;:::-;3418:9;3388:17;:27;;:39;;;;3485:5;-1:-1:-1::0;;;;;3478:22:1::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3467:37;;3437:26;::::0;::::1;:67:::0;3523:12;;-1:-1:-1;3437:17:1;;-1:-1:-1;;2950:612:1;;;:::o;5081:237::-;5163:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;5219:16:::1;::::0;;5233:1:::1;5219:16:::0;;;;;::::1;::::0;;;5193:23:::1;::::0;5219:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;5219:16:1::1;5193:42;;5257:5;5245:6;5252:1;5245:9;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1::0;;;;;5245:17:1::1;;;-1:-1:-1::0;;;;;5245:17:1::1;;;::::0;::::1;5279:32;5295:7;5304:6;5279:15;:32::i;4320:755::-:0;4412:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;4466:1:::1;4450:6;:13;:17;4442:62;;;::::0;-1:-1:-1;;;4442:62:1;;61111:2:39;4442:62:1::1;::::0;::::1;61093:21:39::0;;;61130:18;;;61123:30;61189:34;61169:18;;;61162:62;61241:18;;4442:62:1::1;60909:356:39::0;4442:62:1::1;-1:-1:-1::0;;;;;4522:21:1;::::1;4533:10;4522:21;4514:137;;;::::0;-1:-1:-1;;;4514:137:1;;61472:2:39;4514:137:1::1;::::0;::::1;61454:21:39::0;61511:3;61491:18;;;61484:31;61551:34;61531:18;;;61524:62;61622:34;61602:18;;;61595:62;61694:34;61673:19;;;61666:63;-1:-1:-1;;;61745:19:39;;;61738:38;61793:19;;4514:137:1::1;61270:548:39::0;4514:137:1::1;4666:9;4661:350;4685:6;:13;4681:1;:17;4661:350;;;4748:1;-1:-1:-1::0;;;;;4727:23:1::1;:6;4734:1;4727:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4727:23:1::1;::::0;4719:67:::1;;;::::0;-1:-1:-1;;;4719:67:1;;62025:2:39;4719:67:1::1;::::0;::::1;62007:21:39::0;62064:2;62044:18;;;62037:30;62103:33;62083:18;;;62076:61;62154:18;;4719:67:1::1;61823:355:39::0;4719:67:1::1;4800:30;4853:6;4860:1;4853:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4833:46:1::1;;4880:7;4889:6;4896:1;4889:9;;;;;;;;:::i;:::-;;;;;;;4833:66;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;57534:32:39;;;57516:51;;57603:32;;57598:2;57583:18;;57576:60;57504:2;57489:18;;57342:300;4833:66:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4800:99;;4921:24;:30;;4949:2;4921:30;4913:87;;;::::0;-1:-1:-1;;;4913:87:1;;62385:2:39;4913:87:1::1;::::0;::::1;62367:21:39::0;62424:2;62404:18;;;62397:30;62463:34;62443:18;;;62436:62;-1:-1:-1;;;62514:18:39;;;62507:42;62566:19;;4913:87:1::1;62183:408:39::0;4913:87:1::1;-1:-1:-1::0;4700:3:1::1;;4661:350;;7976:218:::0;8039:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;8071:19:1;::::1;8063:61;;;::::0;-1:-1:-1;;;8063:61:1;;62798:2:39;8063:61:1::1;::::0;::::1;62780:21:39::0;62837:2;62817:18;;;62810:30;62876:31;62856:18;;;62849:59;62925:18;;8063:61:1::1;62596:353:39::0;8063:61:1::1;8141:46;::::0;-1:-1:-1;;;8141:46:1;;-1:-1:-1;;;;;8141:39:1;::::1;:46;::::0;::::1;43065:51:39::0;;;8141:39:1;::::1;::::0;43038:18:39;;8141:46:1::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6480:262::-:0;6558:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6589:19:1;::::1;6581:76;;;::::0;-1:-1:-1;;;6581:76:1;;63570:2:39;6581:76:1::1;::::0;::::1;63552:21:39::0;63609:2;63589:18;;;63582:30;63648:34;63628:18;;;63621:62;-1:-1:-1;;;63699:18:39;;;63692:42;63751:19;;6581:76:1::1;63368:408:39::0;6581:76:1::1;6674:61;::::0;-1:-1:-1;;;6674:61:1;;-1:-1:-1;;;;;6674:54:1;::::1;:61;::::0;::::1;43065:51:39::0;;;6674:54:1;::::1;::::0;43038:18:39;;6674:61:1::1;42919:203:39::0;6748:305:1;6831:5;6838:17;;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6920:19:1;::::1;6912:65;;;::::0;-1:-1:-1;;;6912:65:1;;63983:2:39;6912:65:1::1;::::0;::::1;63965:21:39::0;64022:2;64002:18;;;63995:30;64061:34;64041:18;;;64034:62;-1:-1:-1;;;64112:18:39;;;64105:31;64153:19;;6912:65:1::1;63781:397:39::0;6912:65:1::1;6994:52;::::0;-1:-1:-1;;;6994:52:1;;-1:-1:-1;;;;;6994:45:1;::::1;:52;::::0;::::1;43065:51:39::0;;;6994:45:1;::::1;::::0;43038:18:39;;6994:52:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;6994:52:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;6987:59;;;;;;;;6748:305:::0;;;;;:::o;5569:287::-;-1:-1:-1;;;;;;;;5638:18:1;-1:-1:-1;;;;;;;;;;;;;;;846:4:1;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;5701:19:1;::::1;5693:65;;;::::0;-1:-1:-1;;;5693:65:1;;65486:2:39;5693:65:1::1;::::0;::::1;65468:21:39::0;65525:2;65505:18;;;65498:30;65564:34;65544:18;;;65537:62;-1:-1:-1;;;65615:18:39;;;65608:31;65656:19;;5693:65:1::1;65284:397:39::0;5693:65:1::1;5797:52;::::0;-1:-1:-1;;;5797:52:1;;-1:-1:-1;;;;;5797:45:1;::::1;:52;::::0;::::1;43065:51:39::0;;;5797:45:1;::::1;::::0;43038:18:39;;5797:52:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9498:924::-:0;9597:18;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;9670:19:1;::::1;9662:56;;;::::0;-1:-1:-1;;;9662:56:1;;66265:2:39;9662:56:1::1;::::0;::::1;66247:21:39::0;66304:2;66284:18;;;66277:30;66343:26;66323:18;;;66316:54;66387:18;;9662:56:1::1;66063:348:39::0;9662:56:1::1;9745:1;9736:6;:10;;;9728:48;;;::::0;-1:-1:-1;;;9728:48:1;;66618:2:39;9728:48:1::1;::::0;::::1;66600:21:39::0;66657:2;66637:18;;;66630:30;66696:27;66676:18;;;66669:55;66741:18;;9728:48:1::1;66416:349:39::0;9728:48:1::1;9847:46;::::0;-1:-1:-1;;;9847:46:1;;-1:-1:-1;;;;;9847:39:1;::::1;:46;::::0;::::1;43065:51:39::0;;;9788:27:1::1;::::0;;;9847:39;::::1;::::0;43038:18:39;;9847:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;9847:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;9787:106;;;;9911:21;:27;;9936:2;9911:27;9903:75;;;::::0;-1:-1:-1;;;9903:75:1;;66972:2:39;9903:75:1::1;::::0;::::1;66954:21:39::0;67011:2;66991:18;;;66984:30;67050:34;67030:18;;;67023:62;-1:-1:-1;;;67101:18:39;;;67094:33;67144:19;;9903:75:1::1;66770:399:39::0;9903:75:1::1;10015:15:::0;;:24:::1;;::::0;-1:-1:-1;;;;;10057:29:1;::::1;10049:68;;;::::0;-1:-1:-1;;;10049:68:1;;67376:2:39;10049:68:1::1;::::0;::::1;67358:21:39::0;67415:2;67395:18;;;67388:30;67454:28;67434:18;;;67427:56;67500:18;;10049:68:1::1;67174:350:39::0;10049:68:1::1;10128:86;::::0;-1:-1:-1;;;10128:86:1;;-1:-1:-1;;;;;67749:32:39;;;10128:86:1::1;::::0;::::1;67731:51:39::0;10186:1:1::1;67798:18:39::0;;;67791:60;-1:-1:-1;;;;;10190:23:1;::::1;67867:18:39::0;;;67860:34;10128:32:1;::::1;::::0;::::1;::::0;67704:18:39;;10128:86:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10240:2;10225:17;;10320:5;-1:-1:-1::0;;;;;10313:25:1::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10283:59;;10378:1;10360:14;:19;;;;10352:63;;;::::0;-1:-1:-1;;;10352:63:1;;68342:2:39;10352:63:1::1;::::0;::::1;68324:21:39::0;68381:2;68361:18;;;68354:30;68420:33;68400:18;;;68393:61;68471:18;;10352:63:1::1;68140:355:39::0;10352:63:1::1;9652:770;;;9498:924:::0;;;;;;:::o;1329:303::-;1407:16;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;1538:40:::1;::::0;;-1:-1:-1;;;1538:40:1::1;::::0;::::1;68681:46:39::0;;;1435:15:1::1;68743:11:39::0;;;68736:72;;;-1:-1:-1;;;;;;68846:2:39;68842:15;;;68838:53;68824:12;;;68817:75;1453:26:1;;1435:15;;;;68908:12:39;1538:40:1::1;;;;;;;;;;;;1530:49;;;:::i;:::-;1613:11:::0;;1329:303;-1:-1:-1;;;;;1329:303:1:o;8490:1002::-;8589:18;;8647:28;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;8700:19:1;::::1;8692:56;;;::::0;-1:-1:-1;;;8692:56:1;;69435:2:39;8692:56:1::1;::::0;::::1;69417:21:39::0;69474:2;69454:18;;;69447:30;69513:26;69493:18;;;69486:54;69557:18;;8692:56:1::1;69233:348:39::0;8692:56:1::1;8775:1;8766:6;:10;;;8758:48;;;::::0;-1:-1:-1;;;8758:48:1;;69788:2:39;8758:48:1::1;::::0;::::1;69770:21:39::0;69827:2;69807:18;;;69800:30;69866:27;69846:18;;;69839:55;69911:18;;8758:48:1::1;69586:349:39::0;8758:48:1::1;8877:46;::::0;-1:-1:-1;;;8877:46:1;;-1:-1:-1;;;;;8877:39:1;::::1;:46;::::0;::::1;43065:51:39::0;;;8818:27:1::1;::::0;;;8877:39;::::1;::::0;43038:18:39;;8877:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;8877:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;8817:106;;;;8941:21;:27;;8966:2;8941:27;8933:75;;;::::0;-1:-1:-1;;;8933:75:1;;70142:2:39;8933:75:1::1;::::0;::::1;70124:21:39::0;70181:2;70161:18;;;70154:30;70220:34;70200:18;;;70193:62;-1:-1:-1;;;70271:18:39;;;70264:33;70314:19;;8933:75:1::1;69940:399:39::0;8933:75:1::1;9045:15:::0;;:24:::1;;::::0;-1:-1:-1;;;;;9087:29:1;::::1;9079:68;;;::::0;-1:-1:-1;;;9079:68:1;;70546:2:39;9079:68:1::1;::::0;::::1;70528:21:39::0;70585:2;70565:18;;;70558:30;70624:28;70604:18;;;70597:56;70670:18;;9079:68:1::1;70344:350:39::0;9079:68:1::1;9158:86;::::0;-1:-1:-1;;;9158:86:1;;9199:1:::1;9158:86;::::0;::::1;67731:51:39::0;-1:-1:-1;;;;;67818:32:39;;;67798:18;;;67791:60;-1:-1:-1;;;;;9220:23:1;::::1;67867:18:39::0;;;67860:34;9158:32:1;::::1;::::0;::::1;::::0;67704:18:39;;9158:86:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9270:2;9255:17;;9350:5;-1:-1:-1::0;;;;;9343:25:1::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9398:14;::::0;;9410:1:::1;9398:14:::0;;;::::1;::::0;::::1;::::0;;;9313:59;;-1:-1:-1;9398:14:1::1;9382:30;;9448:1;9430:14;:19;;;;9422:63;;;::::0;-1:-1:-1;;;9422:63:1;;70901:2:39;9422:63:1::1;::::0;::::1;70883:21:39::0;70940:2;70920:18;;;70913:30;70979:33;70959:18;;;70952:61;71030:18;;9422:63:1::1;70699:355:39::0;9422:63:1::1;8682:810;;;8490:1002:::0;;;;;;;:::o;6168:306::-;6303:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6334:19:1;::::1;6326:63;;;::::0;-1:-1:-1;;;6326:63:1;;71261:2:39;6326:63:1::1;::::0;::::1;71243:21:39::0;71300:2;71280:18;;;71273:30;71339:33;71319:18;;;71312:61;71390:18;;6326:63:1::1;71059:355:39::0;6326:63:1::1;6418:48;::::0;-1:-1:-1;;;6418:48:1;;-1:-1:-1;;;;;57534:32:39;;;6418:48:1::1;::::0;::::1;57516:51:39::0;57603:32;;;57583:18;;;57576:60;6413:2:1::1;::::0;6418:31;;::::1;::::0;::::1;::::0;57489:18:39;;6418:48:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6399:68;;;;6168:306:::0;;;;;;:::o;25073:319::-;25265:52;;-1:-1:-1;;;25265:52:1;;-1:-1:-1;;;;;43083:32:39;;25265:52:1;;;43065:51:39;25143:7:1;;-1:-1:-1;;;25180:29:1;25143:7;;;;311:5;;25265:43;;43038:18:39;;25265:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25246:71;;25359:8;25369:3;25374:9;25342:42;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;25334:51;;;:::i;:::-;25327:58;25073:319;-1:-1:-1;;;;;25073:319:1:o;18059:2453::-;18120:12;-1:-1:-1;;;;;;;;;18148:32:1;;;18144:86;;18214:4;18203:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;18196:23;;18059:2453;;;:::o;18144:86::-;-1:-1:-1;;;;;;;;;18243:36:1;;;18239:94;;18313:8;;18302:20;;;18313:8;;;;18302:20;;;38184:36:39;38157:18;18302:20:1;38031:195:39;18239:94:1;-1:-1:-1;;;;;;;;;18346:39:1;;;18342:100;;18419:11;;18408:23;;;;;;41597:25:39;;41585:2;41570:18;;41451:177;18342:100:1;-1:-1:-1;;;;;;;;;18455:34:1;;;18451:90;;18523:6;18512:18;;;;;;;;:::i;18451:90::-;-1:-1:-1;;;;;;;;;18554:37:1;;;18550:251;;18634:2;18615:8;:21;;18607:64;;;;-1:-1:-1;;;18607:64:1;;72947:2:39;18607:64:1;;;72929:21:39;72986:2;72966:18;;;72959:30;73025:32;73005:18;;;72998:60;73075:18;;18607:64:1;72745:354:39;18607:64:1;18686:15;18720;18732:2;18729;18720:8;18686:15;18720;:::i;:::-;18712:24;;;:::i;:::-;18704:33;;18686:51;;18769:20;18781:7;18769:11;:20::i;:::-;18758:32;;;;;;41597:25:39;;41585:2;41570:18;;41451:177;18758:32:1;;;;;;;;;;;;;18751:39;;;18059:2453;;;:::o;18550:251::-;-1:-1:-1;;;;;;;;;18814:36:1;;;18810:374;;18893:2;18874:8;:21;;18866:63;;;;-1:-1:-1;;;18866:63:1;;73306:2:39;18866:63:1;;;73288:21:39;73345:2;73325:18;;;73318:30;73384:31;73364:18;;;73357:59;73433:18;;18866:63:1;73104:353:39;18866:63:1;18944:10;18973:15;18985:2;18982;18973:8;18944:10;18973:15;:::i;:::-;18965:24;;;:::i;:::-;18957:33;;;-1:-1:-1;19004:14:1;19037:15;19049:2;19046;19037:8;19004:14;19037:15;:::i;:::-;19029:24;;;:::i;:::-;19021:33;-1:-1:-1;19084:10:1;19108:28;19084:10;19125:2;19021:33;19108:9;:28::i;:::-;19157:16;;;19168:4;19157:16;;;40281:41:39;40254:18;19157:16:1;;;;;;;;;;;;;19150:23;;;;;18059:2453;;;:::o;18810:374::-;-1:-1:-1;;;;;;;;;19197:40:1;;;19193:497;;19280:3;19261:8;:22;;19253:65;;;;-1:-1:-1;;;19253:65:1;;73664:2:39;19253:65:1;;;73646:21:39;73703:2;73683:18;;;73676:30;73742:32;73722:18;;;73715:60;73792:18;;19253:65:1;73462:354:39;19253:65:1;19333:12;19364:15;19376:2;19373;19364:8;19333:12;19364:15;:::i;:::-;19356:24;;;:::i;:::-;19348:33;;;-1:-1:-1;19395:10:1;19424:15;19436:2;19433;19424:8;19395:10;19424:15;:::i;:::-;19416:24;;;:::i;:::-;19408:33;;;-1:-1:-1;19455:14:1;19488:16;19500:3;19497:2;19488:8;19455:14;19488:16;:::i;:::-;19480:25;;;:::i;:::-;19472:34;-1:-1:-1;19538:10:1;19563:38;19579:4;19538:10;19472:34;19563:15;:38::i;:::-;19615:27;19625:4;19631:2;19635:6;19615:9;:27::i;:::-;19663:16;;;19674:4;19663:16;;;40281:41:39;40254:18;19663:16:1;;;;;;;;;;;;19656:23;;;;;;18059:2453;;;:::o;19193:497::-;-1:-1:-1;;;;;;;;;19703:37:1;;;19699:321;;19783:2;19764:8;:21;;19756:64;;;;-1:-1:-1;;;19756:64:1;;74023:2:39;19756:64:1;;;74005:21:39;74062:2;74042:18;;;74035:30;74101:32;74081:18;;;74074:60;74151:18;;19756:64:1;73821:354:39;19756:64:1;19835:13;19867:15;19879:2;19876;19867:8;19835:13;19867:15;:::i;:::-;19859:24;;;:::i;:::-;19851:33;;;-1:-1:-1;19898:15:1;19932;19944:2;19941;19932:8;19898:15;19932;:::i;:::-;19924:24;;;:::i;:::-;19916:33;;19898:51;;19981:27;19993:5;20000:7;19981:11;:27::i;:::-;19970:39;;;;;;41597:25:39;;41585:2;41570:18;;41451:177;19970:39:1;;;;;;;;;;;;;19963:46;;;;18059:2453;;;:::o;19699:321::-;-1:-1:-1;;;;;;;;;20033:35:1;;;20029:432;;20111:2;20092:8;:21;;20084:62;;;;-1:-1:-1;;;20084:62:1;;74382:2:39;20084:62:1;;;74364:21:39;74421:2;74401:18;;;74394:30;74460;74440:18;;;74433:58;74508:18;;20084:62:1;74180:352:39;20084:62:1;20161:15;20195;20207:2;20204;20195:8;20161:15;20195;:::i;:::-;20187:24;;;:::i;:::-;20179:33;;;-1:-1:-1;20226:14:1;20259:15;20271:2;20268;20259:8;20226:14;20259:15;:::i;:::-;20251:24;;;:::i;:::-;20243:33;-1:-1:-1;20306:10:1;20330:32;20306:10;20346:7;20243:33;20330:8;:32::i;:::-;20397:7;-1:-1:-1;;;;;20381:32:1;20390:5;-1:-1:-1;;;;;20381:32:1;;20406:6;20381:32;;;;41597:25:39;;41585:2;41570:18;;41451:177;20381:32:1;;;;;;;;20434:16;;;20445:4;20434:16;;;40281:41:39;40254:18;20434:16:1;40141:187:39;20029:432:1;20477:28;20496:8;20477:18;:28::i;20518:2981::-;20580:12;-1:-1:-1;;;;;;;;;20608:33:1;;;20604:87;;20675:4;20664:16;;;;;;;;:::i;20604:87::-;-1:-1:-1;;;;;;;;;20704:35:1;;;20700:91;;20773:6;20762:18;;;;;;;;:::i;20700:91::-;-1:-1:-1;;;;;;;;;20804:37:1;;;20800:250;;20884:2;20865:8;:21;;20857:63;;;;-1:-1:-1;;;20857:63:1;;74739:2:39;20857:63:1;;;74721:21:39;74778:2;74758:18;;;74751:30;74817:31;74797:18;;;74790:59;74866:18;;20857:63:1;74537:353:39;20857:63:1;20934:16;20969:15;20981:2;20978;20969:8;20934:16;20969:15;:::i;:::-;20961:24;;;:::i;:::-;20953:33;-1:-1:-1;21018:20:1;20953:33;21018:10;:20::i;:::-;21007:32;;;;;;;;:::i;20800:250::-;-1:-1:-1;;;;;;;;;21063:40:1;;;21059:101;;21137:11;;21126:23;;;;;;41597:25:39;;41585:2;41570:18;;41451:177;21059:101:1;-1:-1:-1;;;;;;;;;21173:38:1;;;21169:247;;21254:2;21235:8;:21;;21227:64;;;;-1:-1:-1;;;21227:64:1;;72947:2:39;21227:64:1;;;72929:21:39;72986:2;72966:18;;;72959:30;73025:32;73005:18;;;72998:60;73075:18;;21227:64:1;72745:354:39;21169:247:1;-1:-1:-1;;;;;;;;;21429:36:1;;;21425:247;;21508:2;21489:8;:21;;21481:62;;;;-1:-1:-1;;;21481:62:1;;75322:2:39;21481:62:1;;;75304:21:39;75361:2;75341:18;;;75334:30;75400;75380:18;;;75373:58;75448:18;;21481:62:1;75120:352:39;21481:62:1;21557:16;21592:15;21604:2;21601;21592:8;21557:16;21592:15;:::i;:::-;21584:24;;;:::i;:::-;21576:33;-1:-1:-1;21641:19:1;21576:33;21641:9;:19::i;:::-;21630:31;;;-1:-1:-1;;;;;43083:32:39;;;21630:31:1;;;43065:51:39;43038:18;21630:31:1;42919:203:39;21425:247:1;-1:-1:-1;;;;;;;;;21685:41:1;;;21681:412;;21769:3;21750:8;:22;;21742:68;;;;-1:-1:-1;;;21742:68:1;;75679:2:39;21742:68:1;;;75661:21:39;75718:2;75698:18;;;75691:30;75757:34;75737:18;;;75730:62;-1:-1:-1;;;75808:18:39;;;75801:31;75849:19;;21742:68:1;75477:397:39;21742:68:1;21824:12;21855:15;21867:2;21864;21855:8;21824:12;21855:15;:::i;:::-;21847:24;;;:::i;:::-;21839:33;;;-1:-1:-1;21886:10:1;21915:15;21927:2;21924;21915:8;21886:10;21915:15;:::i;:::-;21907:24;;;:::i;:::-;21899:33;;;-1:-1:-1;21946:16:1;21981;21993:3;21990:2;21981:8;21946:16;21981;:::i;:::-;21973:25;;;:::i;:::-;21965:34;-1:-1:-1;22013:32:1;22026:4;22032:2;21965:34;22013:12;:32::i;21681:412::-;-1:-1:-1;;;;;;;;;22106:36:1;;;22102:344;;22185:2;22166:8;:21;;22158:62;;;;-1:-1:-1;;;22158:62:1;;74382:2:39;22158:62:1;;;74364:21:39;74421:2;74401:18;;;74394:30;74460;74440:18;;;74433:58;74508:18;;22158:62:1;74180:352:39;22158:62:1;22234:15;22268;22280:2;22277;22268:8;22234:15;22268;:::i;:::-;22260:24;;;:::i;:::-;22252:33;;;-1:-1:-1;22299:16:1;22334:15;22346:2;22343;22334:8;22299:16;22334:15;:::i;:::-;22326:24;;;:::i;:::-;22318:33;-1:-1:-1;22365:33:1;22374:7;22318:33;22393:4;22365:8;:33::i;:::-;22419:16;;;22430:4;22419:16;;;40281:41:39;40254:18;22419:16:1;40141:187:39;22102:344:1;-1:-1:-1;;;;;;;;;22459:46:1;;;22455:372;;22548:2;22529:8;:21;;22521:72;;;;-1:-1:-1;;;22521:72:1;;76081:2:39;22521:72:1;;;76063:21:39;76120:2;76100:18;;;76093:30;76159:34;76139:18;;;76132:62;-1:-1:-1;;;76210:18:39;;;76203:36;76256:19;;22521:72:1;75879:402:39;22521:72:1;22607:16;22642:15;22654:2;22651;22642:8;22607:16;22642:15;:::i;:::-;22634:24;;;:::i;:::-;22626:33;;;-1:-1:-1;22673:13:1;22705:15;22717:2;22714;22705:8;22673:13;22705:15;:::i;:::-;22697:24;;;:::i;:::-;22726:1;22689:38;;-1:-1:-1;22741:38:1;22760:8;22689:38;22741:18;:38::i;22455:372::-;-1:-1:-1;;;;;;;;;22840:40:1;;;22836:259;;22923:2;22904:8;:21;;22896:66;;;;-1:-1:-1;;;22896:66:1;;76488:2:39;22896:66:1;;;76470:21:39;;;76507:18;;;76500:30;76566:34;76546:18;;;76539:62;76618:18;;22896:66:1;76286:356:39;22896:66:1;22976:16;23011:15;23023:2;23020;23011:8;22976:16;23011:15;:::i;:::-;23003:24;;;:::i;:::-;22995:33;-1:-1:-1;23060:23:1;22995:33;23060:13;:23::i;22836:259::-;-1:-1:-1;;;;;;;;;23108:45:1;;;23104:344;;23196:2;23177:8;:21;;23169:71;;;;-1:-1:-1;;;23169:71:1;;76849:2:39;23169:71:1;;;76831:21:39;76888:2;76868:18;;;76861:30;76927:34;76907:18;;;76900:62;-1:-1:-1;;;76978:18:39;;;76971:35;77023:19;;23169:71:1;76647:401:39;23169:71:1;23254:13;23286:15;23298:2;23295;23286:8;23254:13;23286:15;:::i;:::-;23278:24;;;:::i;:::-;23270:33;;;-1:-1:-1;23317:16:1;23352:15;23364:2;23361;23352:8;23317:16;23352:15;:::i;:::-;23344:24;;;:::i;:::-;23336:33;;23317:52;;23401:35;23420:5;23427:8;23401:18;:35::i;:::-;23390:47;;;40306:14:39;;40299:22;23390:47:1;;;40281:41:39;40254:18;23390:47:1;40141:187:39;24336:312:1;24521:52;;-1:-1:-1;;;24521:52:1;;-1:-1:-1;;;;;43083:32:39;;24521:52:1;;;43065:51:39;24403:7:1;;-1:-1:-1;;;24440:25:1;24403:7;;;;311:5;;24521:43;;43038:18:39;;24521:52:1;42919:203:39;26545:169:1;26600:14;26626:12;26641:23;26656:7;26641:14;:23::i;:::-;26695:11;;26545:169;-1:-1:-1;;;26545:169:1:o;27746:272::-;-1:-1:-1;;;;;27833:18:1;;27825:50;;;;-1:-1:-1;;;27825:50:1;;77255:2:39;27825:50:1;;;77237:21:39;77294:2;77274:18;;;77267:30;-1:-1:-1;;;77313:18:39;;;77306:49;77372:18;;27825:50:1;77053:343:39;27825:50:1;-1:-1:-1;;;;;27893:16:1;;27885:50;;;;-1:-1:-1;;;27885:50:1;;77603:2:39;27885:50:1;;;77585:21:39;77642:2;77622:18;;;77615:30;-1:-1:-1;;;77661:18:39;;;77654:51;77722:18;;27885:50:1;77401:345:39;27885:50:1;27945:25;27953:4;27959:2;27963:6;27945:7;:25::i;:::-;28000:2;-1:-1:-1;;;;;27985:26:1;27994:4;-1:-1:-1;;;;;27985:26:1;;28004:6;27985:26;;;;41597:25:39;;41585:2;41570:18;;41451:177;27985:26:1;;;;;;;;27746:272;;;:::o;31120:404::-;31211:24;31238:27;31250:5;31257:7;31238:11;:27::i;:::-;31211:54;;-1:-1:-1;;31279:16:1;:37;31275:243;;31360:6;31340:16;:26;;31332:68;;;;-1:-1:-1;;;31332:68:1;;77953:2:39;31332:68:1;;;77935:21:39;77992:2;77972:18;;;77965:30;78031:31;78011:18;;;78004:59;78080:18;;31332:68:1;77751:353:39;31332:68:1;31442:51;31451:5;31458:7;31486:6;31467:16;:25;31442:8;:51::i;:::-;31201:323;31120:404;;;:::o;26720:191::-;26790:14;26816:12;26831:30;26846:5;26853:7;26831:14;:30::i;:::-;26892:11;;26720:191;-1:-1:-1;;;;26720:191:1:o;30092:330::-;-1:-1:-1;;;;;30184:19:1;;30176:55;;;;-1:-1:-1;;;30176:55:1;;78311:2:39;30176:55:1;;;78293:21:39;78350:2;78330:18;;;78323:30;78389:25;78369:18;;;78362:53;78432:18;;30176:55:1;78109:347:39;30176:55:1;-1:-1:-1;;;;;30249:21:1;;30241:59;;;;-1:-1:-1;;;30241:59:1;;78663:2:39;30241:59:1;;;78645:21:39;78702:2;78682:18;;;78675:30;78741:27;78721:18;;;78714:55;78786:18;;30241:59:1;78461:349:39;30241:59:1;30310:21;30334:30;30349:5;30356:7;30334:14;:30::i;:::-;30385:29;;;;-1:-1:-1;;;30092:330:1:o;23505:769::-;23567:12;-1:-1:-1;;;;;;;;;23595:38:1;;;23591:194;;23649:12;23664:29;23682:10;23664:17;:29::i;:::-;23649:44;;23731:4;23725;23718:18;23769:4;23758:16;;;;;;40306:14:39;40299:22;40281:41;;40269:2;40254:18;;40141:187;23591:194:1;-1:-1:-1;;;;;;;;;23798:39:1;;;23794:196;;23853:12;23868:29;23886:10;23868:17;:29::i;:::-;23935:5;23922:19;;23963:16;;;23974:4;23963:16;;;40281:41:39;23853:44:1;;-1:-1:-1;40254:18:39;23963:16:1;40141:187:39;23794:196:1;-1:-1:-1;;;;;;;;;24003:41:1;;;23999:218;;24060:12;24075:29;24093:10;24075:17;:29::i;:::-;24158:11;;24191:15;;;40306:14:39;;40299:22;24191:15:1;;;40281:41:39;24158:11:1;;-1:-1:-1;24158:11:1;;40254:18:39;24191:15:1;40141:187:39;23999:218:1;24226:41;;-1:-1:-1;;;24226:41:1;;79017:2:39;24226:41:1;;;78999:21:39;79056:2;79036:18;;;79029:30;79095:33;79075:18;;;79068:61;79146:18;;24226:41:1;78815:355:39;26917:225:1;26972:17;27001:12;27016:31;27037:8;27016:13;:31::i;:::-;27001:46;;27057:19;27110:4;27097:17;;27131:4;27125:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26991:151;;26917:225;;;:::o;27148:173::-;27202:13;27227:12;27242:30;27262:8;27242:12;:30::i;28024:1094::-;-1:-1:-1;;;;;28116:18:1;;28108:50;;;;-1:-1:-1;;;28108:50:1;;77255:2:39;28108:50:1;;;77237:21:39;77294:2;77274:18;;;77267:30;-1:-1:-1;;;77313:18:39;;;77306:49;77372:18;;28108:50:1;77053:343:39;28108:50:1;-1:-1:-1;;;;;28176:16:1;;28168:50;;;;-1:-1:-1;;;28168:50:1;;77603:2:39;28168:50:1;;;77585:21:39;77642:2;77622:18;;;77615:30;-1:-1:-1;;;77661:18:39;;;77654:51;77722:18;;28168:50:1;77401:345:39;28168:50:1;28286:12;28301:30;28321:8;28301:12;:30::i;:::-;28384:11;;28286:45;;-1:-1:-1;;;;;;28414:13:1;;;;;;;28406:50;;;;-1:-1:-1;;;28406:50:1;;79377:2:39;28406:50:1;;;79359:21:39;79416:2;79396:18;;;79389:30;79455:26;79435:18;;;79428:54;79499:18;;28406:50:1;79175:348:39;28406:50:1;28546:10;-1:-1:-1;;;;;28546:18:1;;;28542:156;;28602:23;28616:8;28602:13;:23::i;:::-;-1:-1:-1;;;;;28588:37:1;:10;-1:-1:-1;;;;;28588:37:1;;:77;;;;28629:36;28648:4;28654:10;28629:18;:36::i;:::-;28580:107;;;;-1:-1:-1;;;28580:107:1;;79730:2:39;28580:107:1;;;79712:21:39;79769:2;79749:18;;;79742:30;-1:-1:-1;;;79788:18:39;;;79781:47;79845:18;;28580:107:1;79528:341:39;28580:107:1;28734:20;28757:34;28781:8;28757:16;:34::i;:::-;28734:57;;28833:1;28819:12;28812:23;28881:28;28912:31;28934:4;28940:2;28912:21;:31::i;:::-;28881:62;;28993:5;28971:20;28964:35;29064:2;29058:4;29051:16;29098:2;-1:-1:-1;;;;;29083:28:1;29092:4;-1:-1:-1;;;;;29083:28:1;;29102:8;29083:28;;;;41597:25:39;;41585:2;41570:18;;41451:177;29083:28:1;;;;;;;;28098:1020;;;;28024:1094;;;:::o;30428:567::-;30585:13;30601:19;30611:8;30601:9;:19::i;:::-;30585:35;-1:-1:-1;30638:10:1;-1:-1:-1;;;;;30638:19:1;;;;:60;;-1:-1:-1;30688:10:1;30661:23;30675:8;30661:13;:23::i;:::-;-1:-1:-1;;;;;30661:37:1;;30638:60;:101;;;;30702:37;30721:5;30728:10;30702:18;:37::i;:::-;30630:136;;;;-1:-1:-1;;;30630:136:1;;80076:2:39;30630:136:1;;;80058:21:39;80115:2;80095:18;;;80088:30;-1:-1:-1;;;80134:18:39;;;80127:52;80196:18;;30630:136:1;79874:346:39;30630:136:1;30777:12;30792:34;30816:8;30792:16;:34::i;:::-;30777:49;;30836:19;30858:10;:33;;30889:1;30858:33;;;30871:7;30858:33;30836:55;;30925:11;30919:4;30912:25;30970:7;-1:-1:-1;;;;;30954:34:1;30963:5;-1:-1:-1;;;;;30954:34:1;;30979:8;30954:34;;;;41597:25:39;;41585:2;41570:18;;41451:177;30954:34:1;;;;;;;;30506:489;;;30428:567;;;:::o;31530:376::-;31625:10;-1:-1:-1;;;;;31653:22:1;;;;;;:43;;;31691:5;-1:-1:-1;;;;;31679:17:1;:8;-1:-1:-1;;;;;31679:17:1;;;31653:43;31645:91;;;;-1:-1:-1;;;31645:91:1;;80427:2:39;31645:91:1;;;80409:21:39;80466:2;80446:18;;;80439:30;80505:34;80485:18;;;80478:62;-1:-1:-1;;;80556:18:39;;;80549:33;80599:19;;31645:91:1;80225:399:39;31645:91:1;31746:12;31761:38;31783:5;31790:8;31761:21;:38::i;:::-;31746:53;;31833:8;31827:4;31820:22;31880:8;-1:-1:-1;;;;;31858:41:1;31873:5;-1:-1:-1;;;;;31858:41:1;;31890:8;31858:41;;;;40306:14:39;40299:22;40281:41;;40269:2;40254:18;;40141:187;31858:41:1;;;;;;;;31599:307;;31530:376;;:::o;27327:187::-;27385:16;27413:12;27428:34;27452:8;27428:16;:34::i;27520:220::-;27598:19;27629:12;27644:38;27666:5;27673:8;27644:21;:38::i;24654:413::-;24852:50;;-1:-1:-1;;;24852:50:1;;-1:-1:-1;;;;;43083:32:39;;24852:50:1;;;43065:51:39;24736:7:1;;-1:-1:-1;;;24773:25:1;24736:7;;;;311:5;;24852:43;;43038:18:39;;24852:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24931:52;;-1:-1:-1;;;24931:52:1;;-1:-1:-1;;;;;43083:32:39;;24931:52:1;;;43065:51:39;24835:67:1;;-1:-1:-1;24912:16:1;;311:5;;24931:43;;43038:18:39;;24931:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24912:71;;25025:8;25035:3;25040:9;25051:7;25008:51;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;25000:60;;;:::i;:::-;24993:67;24654:413;-1:-1:-1;;;;;;;24654:413:1:o;25398:229::-;25578:41;;25464:7;;-1:-1:-1;;;25501:25:1;25464:7;;25578:41;;25501:25;;25464:7;;25610:8;;25578:41;;;:::i;:::-;;;;;;;;;;;;;25570:50;;;:::i;:::-;25563:57;25398:229;-1:-1:-1;;;;25398:229:1:o;25633:227::-;25811:41;;25698:7;;-1:-1:-1;;;25735:24:1;25698:7;;25811:41;;25735:24;;25698:7;;25843:8;;25811:41;;;:::i;25866:235::-;26052:41;;25935:7;;-1:-1:-1;;;25972:28:1;25935:7;;26052:41;;25972:28;;25935:7;;26084:8;;26052:41;;;:::i;26107:432::-;26321:50;;-1:-1:-1;;;26321:50:1;;-1:-1:-1;;;;;43083:32:39;;26321:50:1;;;43065:51:39;26197:7:1;;-1:-1:-1;;;26234:33:1;26197:7;;;;311:5;;26321:43;;43038:18:39;;26321:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26401:53;;-1:-1:-1;;;26401:53:1;;-1:-1:-1;;;;;43083:32:39;;26401:53:1;;;43065:51:39;26304:67:1;;-1:-1:-1;26381:17:1;;311:5;;26401:43;;43038:18:39;;26401:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26381:73;;26496:8;26506:3;26511:7;26520:10;26479:52;;;;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;372:331:39:-;477:9;488;530:8;518:10;515:24;512:44;;;552:1;549;542:12;512:44;581:6;571:8;568:20;565:40;;;601:1;598;591:12;565:40;-1:-1:-1;;627:23:39;;;672:25;;;;;-1:-1:-1;372:331:39:o;708:338::-;828:19;;-1:-1:-1;;;;;;865:29:39;;;914:1;906:10;;903:137;;;-1:-1:-1;;;;;;975:1:39;971:11;;;968:1;964:19;960:46;;;952:55;;948:82;;-1:-1:-1;903:137:39;;708:338;;;;:::o;1410:374::-;1531:19;;-1:-1:-1;;;;;;1568:40:39;;;1628:2;1620:11;;1617:161;;;-1:-1:-1;;;;;;1690:2:39;1686:12;;;;1683:1;1679:20;1675:58;;;1667:67;1663:105;;;;1410:374;-1:-1:-1;;1410:374:39:o;2147:131::-;-1:-1:-1;;;;;2222:31:39;;2212:42;;2202:70;;2268:1;2265;2258:12;2202:70;2147:131;:::o;2283:367::-;2351:6;2359;2412:2;2400:9;2391:7;2387:23;2383:32;2380:52;;;2428:1;2425;2418:12;2380:52;2467:9;2454:23;2486:31;2511:5;2486:31;:::i;:::-;2536:5;2614:2;2599:18;;;;2586:32;;-1:-1:-1;;;2283:367:39:o;3150:388::-;3218:6;3226;3279:2;3267:9;3258:7;3254:23;3250:32;3247:52;;;3295:1;3292;3285:12;3247:52;3334:9;3321:23;3353:31;3378:5;3353:31;:::i;:::-;3403:5;-1:-1:-1;3460:2:39;3445:18;;3432:32;3473:33;3432:32;3473:33;:::i;:::-;3525:7;3515:17;;;3150:388;;;;;:::o;3736:508::-;3813:6;3821;3829;3882:2;3870:9;3861:7;3857:23;3853:32;3850:52;;;3898:1;3895;3888:12;3850:52;3937:9;3924:23;3956:31;3981:5;3956:31;:::i;:::-;4006:5;-1:-1:-1;4063:2:39;4048:18;;4035:32;4076:33;4035:32;4076:33;:::i;:::-;3736:508;;4128:7;;-1:-1:-1;;;4208:2:39;4193:18;;;;4180:32;;3736:508::o;4249:247::-;4308:6;4361:2;4349:9;4340:7;4336:23;4332:32;4329:52;;;4377:1;4374;4367:12;4329:52;4416:9;4403:23;4435:31;4460:5;4435:31;:::i;:::-;4485:5;4249:247;-1:-1:-1;;;4249:247:39:o;4871:289::-;4913:3;4951:5;4945:12;4978:6;4973:3;4966:19;5034:6;5027:4;5020:5;5016:16;5009:4;5004:3;5000:14;4994:47;5086:1;5079:4;5070:6;5065:3;5061:16;5057:27;5050:38;5149:4;5142:2;5138:7;5133:2;5125:6;5121:15;5117:29;5112:3;5108:39;5104:50;5097:57;;;4871:289;;;;:::o;5165:622::-;5266:5;5260:12;5253:20;5246:28;5241:3;5234:41;5353:1;5349;5344:3;5340:11;5336:19;5328:4;5321:5;5317:16;5311:23;5307:49;5300:4;5295:3;5291:14;5284:73;5216:3;5403:4;5396:5;5392:16;5386:23;5441:4;5434;5429:3;5425:14;5418:28;5467:47;5508:4;5503:3;5499:14;5485:12;5467:47;:::i;:::-;5455:59;;5562:4;5555:5;5551:16;5545:23;5610:3;5604:4;5600:14;5593:4;5588:3;5584:14;5577:38;5638:39;5672:4;5656:14;5638:39;:::i;:::-;5730:4;5719:16;;;5713:23;-1:-1:-1;;;;;5709:49:39;5693:14;;;;5686:73;;;;-1:-1:-1;5624:53:39;;5165:622;-1:-1:-1;;5165:622:39:o;5792:774::-;5853:3;5884;5916:5;5910:12;5943:6;5938:3;5931:19;5975:4;5970:3;5966:14;5959:21;;6033:4;6023:6;6020:1;6016:14;6009:5;6005:26;6001:37;6072:4;6065:5;6061:16;6095:1;6105:435;6119:6;6116:1;6113:13;6105:435;;;6206:2;6202:7;6194:5;6188:4;6184:16;6180:30;6175:3;6168:43;6240:6;6234:13;6279:2;6273:9;6267:4;6260:23;6330:4;6326:2;6322:13;6316:20;6296:40;;6373:4;6366;6360;6356:15;6349:29;6399:57;6450:4;6444;6440:15;6426:12;6399:57;:::i;:::-;6491:4;6516:14;;;;6391:65;;-1:-1:-1;6479:17:39;;;;;-1:-1:-1;6141:1:39;6134:9;6105:435;;;-1:-1:-1;6556:4:39;;5792:774;-1:-1:-1;;;;;;5792:774:39:o;6835:1313::-;6889:3;6933:5;6927:12;6960:6;6955:3;6948:19;6988:49;7029:6;7024:3;7020:16;7006:12;6988:49;:::i;:::-;6976:61;;7085:4;7078:5;7074:16;7068:23;7133:3;7127:4;7123:14;7116:4;7111:3;7107:14;7100:38;7161:39;7195:4;7179:14;7161:39;:::i;:::-;7147:53;;;7248:4;7241:5;7237:16;7231:23;7263:50;7307:4;7302:3;7298:14;7282;-1:-1:-1;;;;;2817:31:39;2805:44;;2751:104;7263:50;;7361:4;7354:5;7350:16;7344:23;7411:3;7403:6;7399:16;7392:4;7387:3;7383:14;7376:40;7439:41;7473:6;7457:14;7439:41;:::i;:::-;7425:55;;;7528:4;7521:5;7517:16;7511:23;7543:47;7584:4;7579:3;7575:14;7559;4571:13;4564:21;4552:34;;4501:91;7543:47;;7638:4;7631:5;7627:16;7621:23;7653:48;7695:4;7690:3;7686:14;7670;2730:1;2719:20;2707:33;;2655:91;7653:48;;7749:4;7742:5;7738:16;7732:23;7764:47;7805:4;7800:3;7796:14;7780;4571:13;4564:21;4552:34;;4501:91;7764:47;;7859:4;7852:5;7848:16;7842:23;7909:3;7901:6;7897:16;7890:4;7885:3;7881:14;7874:40;7937:60;7990:6;7974:14;7937:60;:::i;:::-;7923:74;;;8045:6;8038:5;8034:18;8028:25;8062:58;8112:6;8107:3;8103:16;8087:14;6657:12;;6654:1;6643:27;;;6631:40;;6724:4;6713:16;;;6707:23;-1:-1:-1;;;;;6703:49:39;6687:14;;;6680:73;6816:4;6805:16;;;6799:23;6785:38;;6769:14;;6762:62;6571:259;8062:58;-1:-1:-1;8136:6:39;6835:1313;-1:-1:-1;;;6835:1313:39:o;8153:856::-;8214:3;8252:5;8246:12;8279:6;8274:3;8267:19;8311:4;8306:3;8302:14;8295:21;;8350:4;8343:5;8339:16;8373:1;8383:601;8397:6;8394:1;8391:13;8383:601;;;8456:13;;8540:9;;8537:1;8526:24;8514:37;;8605:4;8597:13;;;8591:20;-1:-1:-1;;;;;8587:46:39;;;8571:14;;;8564:70;8698:4;8690:13;;;8684:20;8677:28;8670:36;8654:14;;;8647:60;8771:4;8763:13;;;8757:20;8750:28;8743:36;8727:14;;;8720:60;8834:4;8826:13;;;8820:20;8816:46;8800:14;;;8793:70;;;;8621:3;8890:14;;;;8957:17;;;;8630:1;8412:9;8383:601;;;-1:-1:-1;9000:3:39;;8153:856;-1:-1:-1;;;;8153:856:39:o;9014:921::-;9080:3;9118:5;9112:12;9145:6;9140:3;9133:19;9177:4;9172:3;9168:14;9161:21;;9216:4;9209:5;9205:16;9239:1;9249:661;9263:6;9260:1;9257:13;9249:661;;;9328:6;9322:13;9366:1;9412:2;9406:9;9403:1;9392:24;9387:3;9380:37;9481:4;9477:2;9473:13;9467:20;9464:1;9453:35;9446:4;9441:3;9437:14;9430:59;9553:4;9549:2;9545:13;9539:20;9536:1;9525:35;9518:4;9513:3;9509:14;9502:59;9625:4;9621:2;9617:13;9611:20;9608:1;9597:35;9590:4;9585:3;9581:14;9574:59;9697:4;9693:2;9689:13;9683:20;9676:28;9669:36;9662:4;9657:3;9653:14;9646:60;9785:1;9781;9776:3;9772:11;9768:19;9760:4;9756:2;9752:13;9746:20;9742:46;9735:4;9730:3;9726:14;9719:70;9825:4;9820:3;9816:14;9802:28;;9850:10;9843:17;;;;9895:4;9887:6;9883:17;9873:27;;9285:1;9282;9278:9;9273:14;;9249:661;;9940:929;10003:3;10041:5;10035:12;10068:6;10063:3;10056:19;10100:4;10095:3;10091:14;10084:21;;10139:4;10132:5;10128:16;10162:1;10172:672;10186:6;10183:1;10180:13;10172:672;;;10251:6;10245:13;10289:1;10335:2;10329:9;10326:1;10315:24;10310:3;10303:37;10404:4;10400:2;10396:13;10390:20;10387:1;10376:35;10369:4;10364:3;10360:14;10353:59;10476:4;10472:2;10468:13;10462:20;10459:1;10448:35;10441:4;10436:3;10432:14;10425:59;10563:1;10559;10554:3;10550:11;10546:19;10538:4;10534:2;10530:13;10524:20;10520:46;10513:4;10508:3;10504:14;10497:70;10631:4;10627:2;10623:13;10617:20;10610:28;10603:36;10596:4;10591:3;10587:14;10580:60;10719:1;10715;10710:3;10706:11;10702:19;10694:4;10690:2;10686:13;10680:20;10676:46;10669:4;10664:3;10660:14;10653:70;10759:4;10754:3;10750:14;10736:28;;10784:10;10777:17;;;;10829:4;10821:6;10817:17;10807:27;;10208:1;10205;10201:9;10196:14;;10172:672;;10874:1384;10926:3;10970:5;10964:12;10997:6;10992:3;10985:19;11025:61;11078:6;11073:3;11069:16;11055:12;11025:61;:::i;:::-;11013:73;;11134:4;11127:5;11123:16;11117:23;11149:48;11191:4;11186:3;11182:14;11166;2730:1;2719:20;2707:33;;2655:91;11149:48;;11245:4;11238:5;11234:16;11228:23;11260:47;11301:4;11296:3;11292:14;11276;4571:13;4564:21;4552:34;;4501:91;11260:47;;11355:4;11348:5;11344:16;11338:23;11370:47;11411:4;11406:3;11402:14;11386;4571:13;4564:21;4552:34;;4501:91;11370:47;;11465:4;11458:5;11454:16;11448:23;11480:47;11521:4;11516:3;11512:14;11496;4571:13;4564:21;4552:34;;4501:91;11480:47;;11575:4;11568:5;11564:16;11558:23;11623:3;11617:4;11613:14;11606:4;11601:3;11597:14;11590:38;11651:58;11704:4;11688:14;11651:58;:::i;:::-;11637:72;;;11757:4;11750:5;11746:16;11740:23;11807:3;11799:6;11795:16;11788:4;11783:3;11779:14;11772:40;11835:65;11893:6;11877:14;11835:65;:::i;:::-;11821:79;;;11948:4;11941:5;11937:16;11931:23;11998:3;11990:6;11986:16;11979:4;11974:3;11970:14;11963:40;12026:62;12081:6;12065:14;12026:62;:::i;:::-;12012:76;;;12136:6;12129:5;12125:18;12119:25;12190:3;12182:6;12178:16;12169:6;12164:3;12160:16;12153:42;12211:41;12245:6;12229:14;12211:41;:::i;12263:346::-;12484:6;12481:1;12470:21;12459:9;12452:40;12528:2;12523;12512:9;12508:18;12501:30;12433:4;12548:55;12599:2;12588:9;12584:18;12576:6;12548:55;:::i;12614:118::-;12701:5;12698:1;12687:20;12680:5;12677:31;12667:59;;12722:1;12719;12712:12;12737:384;12803:6;12811;12864:2;12852:9;12843:7;12839:23;12835:32;12832:52;;;12880:1;12877;12870:12;12832:52;12919:9;12906:23;12938:31;12963:5;12938:31;:::i;:::-;12988:5;-1:-1:-1;13045:2:39;13030:18;;13017:32;13058:31;13017:32;13058:31;:::i;13126:1002::-;13369:6;13366:1;13355:21;13344:9;13337:40;13413:2;13408;13397:9;13393:18;13386:30;13318:4;13451:6;13445:13;13494:4;13489:2;13478:9;13474:18;13467:32;13522:62;13579:3;13568:9;13564:19;13550:12;13522:62;:::i;:::-;13508:76;;13652:2;13644:6;13640:15;13634:22;13631:1;13620:37;13615:2;13604:9;13600:18;13593:65;13740:1;13736;13731:3;13727:11;13723:19;13717:2;13709:6;13705:15;13699:22;13695:48;13689:3;13678:9;13674:19;13667:77;13813:2;13805:6;13801:15;13795:22;13792:1;13781:37;13775:3;13764:9;13760:19;13753:66;13868:3;13860:6;13856:16;13850:23;13943:2;13939:7;13927:9;13919:6;13915:22;13911:36;13904:4;13893:9;13889:20;13882:66;13971:41;14005:6;13989:14;13971:41;:::i;:::-;14086:3;14059:16;;;;14053:23;-1:-1:-1;;;;;14049:49:39;14043:3;14028:19;;;;14021:78;;;;-1:-1:-1;13957:55:39;;13126:1002;-1:-1:-1;;;13126:1002:39:o;14133:127::-;14194:10;14189:3;14185:20;14182:1;14175:31;14225:4;14222:1;14215:15;14249:4;14246:1;14239:15;14265:258;14338:4;14332:11;;;14370:17;;-1:-1:-1;;;;;14402:34:39;;14438:22;;;14399:62;14396:88;;;14464:18;;:::i;:::-;14500:4;14493:24;14265:258;:::o;14528:254::-;14601:2;14595:9;14643:4;14631:17;;-1:-1:-1;;;;;14663:34:39;;14699:22;;;14660:62;14657:88;;;14725:18;;:::i;14787:256::-;14860:2;14854:9;14902:6;14890:19;;-1:-1:-1;;;;;14924:34:39;;14960:22;;;14921:62;14918:88;;;14986:18;;:::i;15048:254::-;15121:2;15115:9;15163:4;15151:17;;-1:-1:-1;;;;;15183:34:39;;15219:22;;;15180:62;15177:88;;;15245:18;;:::i;15307:275::-;15378:2;15372:9;15443:2;15424:13;;-1:-1:-1;;15420:27:39;15408:40;;-1:-1:-1;;;;;15463:34:39;;15499:22;;;15460:62;15457:88;;;15525:18;;:::i;:::-;15561:2;15554:22;15307:275;;-1:-1:-1;15307:275:39:o;15587:183::-;15647:4;-1:-1:-1;;;;;15672:6:39;15669:30;15666:56;;;15702:18;;:::i;:::-;-1:-1:-1;15747:1:39;15743:14;15759:4;15739:25;;15587:183::o;15775:1102::-;15868:6;15876;15929:2;15917:9;15908:7;15904:23;15900:32;15897:52;;;15945:1;15942;15935:12;15897:52;15984:9;15971:23;16003:31;16028:5;16003:31;:::i;:::-;16053:5;-1:-1:-1;16109:2:39;16094:18;;16081:32;-1:-1:-1;;;;;16125:30:39;;16122:50;;;16168:1;16165;16158:12;16122:50;16191:22;;16244:4;16236:13;;16232:27;-1:-1:-1;16222:55:39;;16273:1;16270;16263:12;16222:55;16313:2;16300:16;16336:64;16352:47;16392:6;16352:47;:::i;:::-;16336:64;:::i;:::-;16422:3;16446:6;16441:3;16434:19;16478:2;16473:3;16469:12;16462:19;;16533:2;16523:6;16520:1;16516:14;16512:2;16508:23;16504:32;16490:46;;16559:7;16551:6;16548:19;16545:39;;;16580:1;16577;16570:12;16545:39;16612:2;16608;16604:11;16593:22;;16624:223;16640:6;16635:3;16632:15;16624:223;;;16722:3;16709:17;16739:33;16764:7;16739:33;:::i;:::-;16785:20;;16834:2;16657:12;;;;16825;;;;16624:223;;;16866:5;16856:15;;;;;;15775:1102;;;;;:::o;16882:343::-;17101:6;17098:1;17087:21;17076:9;17069:40;17145:2;17140;17129:9;17125:18;17118:30;17050:4;17165:54;17215:2;17204:9;17200:18;17192:6;17165:54;:::i;17230:553::-;17467:6;17464:1;17453:21;17442:9;17435:40;17511:2;17506;17495:9;17491:18;17484:30;17416:4;17549:6;17543:13;17592:2;17587;17576:9;17572:18;17565:30;17618:62;17675:3;17664:9;17660:19;17646:12;17618:62;:::i;:::-;17604:76;;17748:2;17740:6;17736:15;17730:22;17727:1;17716:37;17711:2;17700:9;17696:18;17689:65;17771:6;17763:14;;;17230:553;;;;;:::o;18063:954::-;18606:6;18603:1;18592:21;18581:9;18574:40;18650:3;18645:2;18634:9;18630:18;18623:31;18555:4;18677:65;18737:3;18726:9;18722:19;18714:6;18677:65;:::i;:::-;18790:9;18782:6;18778:22;18773:2;18762:9;18758:18;18751:50;18824:57;18874:6;18866;18824:57;:::i;:::-;18810:71;;18929:9;18921:6;18917:22;18912:2;18901:9;18897:18;18890:50;18957:54;19004:6;18996;18957:54;:::i;19022:326::-;19270:1;19259:21;;;19241:40;;19228:3;19213:19;;19290:52;19338:2;19323:18;;19315:6;6657:12;;6654:1;6643:27;;;6631:40;;6724:4;6713:16;;;6707:23;-1:-1:-1;;;;;6703:49:39;6687:14;;;6680:73;6816:4;6805:16;;;6799:23;6785:38;;6769:14;;6762:62;6571:259;19353:1235;19451:6;19459;19467;19520:2;19508:9;19499:7;19495:23;19491:32;19488:52;;;19536:1;19533;19526:12;19488:52;19575:9;19562:23;19594:31;19619:5;19594:31;:::i;:::-;19644:5;-1:-1:-1;19701:2:39;19686:18;;19673:32;19714:31;19673:32;19714:31;:::i;:::-;19764:7;-1:-1:-1;19822:2:39;19807:18;;19794:32;-1:-1:-1;;;;;19838:30:39;;19835:50;;;19881:1;19878;19871:12;19835:50;19904:22;;19957:4;19949:13;;19945:27;-1:-1:-1;19935:55:39;;19986:1;19983;19976:12;19935:55;20026:2;20013:16;20049:64;20065:47;20105:6;20065:47;:::i;20049:64::-;20135:3;20159:6;20154:3;20147:19;20191:2;20186:3;20182:12;20175:19;;20246:2;20236:6;20233:1;20229:14;20225:2;20221:23;20217:32;20203:46;;20272:7;20264:6;20261:19;20258:39;;;20293:1;20290;20283:12;20258:39;20325:2;20321;20317:11;20306:22;;20337:221;20353:6;20348:3;20345:15;20337:221;;;20435:3;20422:17;20452:31;20475:7;20452:31;:::i;:::-;20496:20;;20545:2;20370:12;;;;20536;;;;20337:221;;;20577:5;20567:15;;;;;;19353:1235;;;;;:::o;21065:186::-;21113:4;-1:-1:-1;;;;;21138:6:39;21135:30;21132:56;;;21168:18;;:::i;:::-;-1:-1:-1;21234:2:39;21213:15;-1:-1:-1;;21209:29:39;21240:4;21205:40;;21065:186::o;21256:1759::-;21365:6;21373;21381;21434:2;21422:9;21413:7;21409:23;21405:32;21402:52;;;21450:1;21447;21440:12;21402:52;21489:9;21476:23;21508:31;21533:5;21508:31;:::i;:::-;21558:5;-1:-1:-1;21615:2:39;21600:18;;21587:32;21628:31;21587:32;21628:31;:::i;:::-;21678:7;-1:-1:-1;21736:2:39;21721:18;;21708:32;-1:-1:-1;;;;;21752:30:39;;21749:50;;;21795:1;21792;21785:12;21749:50;21818:22;;21871:4;21863:13;;21859:27;-1:-1:-1;21849:55:39;;21900:1;21897;21890:12;21849:55;21940:2;21927:16;21963:64;21979:47;22019:6;21979:47;:::i;21963:64::-;22049:3;22073:6;22068:3;22061:19;22105:2;22100:3;22096:12;22089:19;;22160:2;22150:6;22147:1;22143:14;22139:2;22135:23;22131:32;22117:46;;22186:7;22178:6;22175:19;22172:39;;;22207:1;22204;22197:12;22172:39;22239:2;22235;22231:11;22251:734;22267:6;22262:3;22259:15;22251:734;;;22353:3;22340:17;-1:-1:-1;;;;;22376:11:39;22373:35;22370:55;;;22421:1;22418;22411:12;22370:55;22448:20;;22503:2;22495:11;;22491:25;-1:-1:-1;22481:53:39;;22530:1;22527;22520:12;22481:53;22584:2;22580;22576:11;22563:25;22616:54;22632:37;22660:8;22632:37;:::i;22616:54::-;22683:25;;;22727:35;22735:17;;;22727:35;22724:48;-1:-1:-1;22721:68:39;;;22785:1;22782;22775:12;22721:68;22846:8;22841:2;22837;22833:11;22828:2;22819:7;22815:16;22802:53;22908:1;22903:2;22892:8;22883:7;22879:22;22875:31;22868:42;22935:7;22930:3;22923:20;;;;22972:2;22967:3;22963:12;22956:19;;22293:2;22288:3;22284:12;22277:19;;22251:734;;;22255:3;23004:5;22994:15;;;;;;21256:1759;;;;;:::o;23020:787::-;23206:4;23254:2;23243:9;23239:18;23298:6;23295:1;23284:21;23273:9;23266:40;23356:6;23353:1;23342:21;23337:2;23326:9;23322:18;23315:49;23400:2;23395;23384:9;23380:18;23373:30;23423:6;23458;23452:13;23489:6;23481;23474:22;23527:3;23516:9;23512:19;23505:26;;23566:2;23558:6;23554:15;23540:29;;23587:1;23597:184;23611:6;23608:1;23605:13;23597:184;;;23686:13;;23683:1;23672:28;23660:41;;23730:2;23756:15;;;;23721:12;;;;23633:1;23626:9;23597:184;;;-1:-1:-1;23798:3:39;;23020:787;-1:-1:-1;;;;;;;23020:787:39:o;23812:529::-;23889:6;23897;23905;23958:2;23946:9;23937:7;23933:23;23929:32;23926:52;;;23974:1;23971;23964:12;23926:52;24013:9;24000:23;24032:31;24057:5;24032:31;:::i;:::-;24082:5;-1:-1:-1;24139:2:39;24124:18;;24111:32;24152:33;24111:32;24152:33;:::i;:::-;24204:7;-1:-1:-1;24263:2:39;24248:18;;24235:32;24276:33;24235:32;24276:33;:::i;:::-;24328:7;24318:17;;;23812:529;;;;;:::o;24346:380::-;24425:1;24421:12;;;;24468;;;24489:61;;24543:4;24535:6;24531:17;24521:27;;24489:61;24596:2;24588:6;24585:14;24565:18;24562:38;24559:161;;24642:10;24637:3;24633:20;24630:1;24623:31;24677:4;24674:1;24667:15;24705:4;24702:1;24695:15;24559:161;;24346:380;;;:::o;24731:680::-;24784:3;24825:5;24819:12;24854:36;24880:9;24854:36;:::i;:::-;24921:1;24906:17;;24932:133;;;;25079:1;25074:331;;;;24899:506;;24932:133;-1:-1:-1;;24965:24:39;;24953:37;;25038:14;;25031:22;25019:35;;25010:45;;;-1:-1:-1;24932:133:39;;25074:331;25105:5;25102:1;25095:16;25152:4;25149:1;25139:18;25179:1;25193:166;25207:6;25204:1;25201:13;25193:166;;;25287:14;;25274:11;;;25267:35;25343:1;25330:15;;;;25229:4;25222:12;25193:166;;;25197:3;;25388:6;25383:3;25379:16;25372:23;;24899:506;;;;24731:680;;;;:::o;25416:202::-;25546:3;25571:41;25608:3;25600:6;25571:41;:::i;26427:739::-;26477:3;26518:5;26512:12;26547:36;26573:9;26547:36;:::i;:::-;26592:19;;;26642:1;26627:17;;26653:150;;;;26817:1;26812:348;;;;26620:540;;26653:150;26716:3;26712:8;26701:9;26697:24;26690:4;26685:3;26681:14;26674:48;26788:4;26776:6;26769:14;26762:22;26759:1;26755:30;26750:3;26746:40;26742:51;26735:58;;26653:150;;26812:348;26843:5;26840:1;26833:16;26890:4;26887:1;26877:18;26917:1;26931:177;26945:6;26942:1;26939:13;26931:177;;;27042:7;27036:14;27029:4;27025:1;27020:3;27016:11;27012:22;27005:46;27092:1;27083:7;27079:15;27068:26;;26967:4;26964:1;26960:12;26955:17;;26931:177;;;27132:11;;27145:4;27128:22;;-1:-1:-1;;26620:540:39;;;26427:739;;;;:::o;27313:1237::-;27382:3;27413;27445:5;27439:12;27472:6;27467:3;27460:19;27504:4;27499:3;27495:14;27488:21;;27562:4;27552:6;27549:1;27545:14;27538:5;27534:26;27530:37;27586:5;27583:1;27576:16;27628:4;27625:1;27615:18;27651:1;27661:863;27675:6;27672:1;27669:13;27661:863;;;27740:16;;;-1:-1:-1;;27736:30:39;27724:43;;27793:13;;27780:27;;27844:4;27837;27827:15;;27820:29;;;27897:1;27885:14;;27879:21;27966:4;27951:20;;27944:28;27937:36;27920:15;;;27913:61;;;;28019:1;28015:17;-1:-1:-1;;;;;28011:43:39;28004:4;27994:15;;27987:68;28042:3;28085:4;28075:15;;28068:29;28124:60;28179:3;28169:14;;28162:4;28150:17;;28124:60;:::i;:::-;28225:17;;;-1:-1:-1;;28221:31:39;28214:4;28204:15;;28197:56;28280:52;28229:6;28318:4;28306:17;;28280:52;:::i;:::-;28390:1;28378:14;;28372:21;-1:-1:-1;;;;;28368:47:39;28362:3;28352:14;;;;28345:71;;;;-1:-1:-1;28509:4:39;28500:14;;;;;28478:1;28466:14;;;;28412:1;27690:9;27661:863;;28855:1068;28947:6;28942:3;28935:19;28917:3;28975:50;29017:6;29012:3;29008:16;29001:5;28975:50;:::i;:::-;29067:3;29061:4;29057:14;29050:4;29045:3;29041:14;29034:38;29095:49;29139:4;29132;29125:5;29121:16;29095:49;:::i;:::-;29081:63;;29173:66;29232:4;29225:5;29221:16;29215:23;-1:-1:-1;;;;;27266:36:39;;27171:137;29173:66;-1:-1:-1;;;;;2817:31:39;29290:4;29281:14;;2805:44;29328:16;;;29321:4;29312:14;;29305:40;29368:51;29332:6;29405:4;29394:16;;29368:51;:::i;:::-;29354:65;;29462:4;29455:5;29451:16;29445:23;29477:53;29524:4;29519:3;29515:14;29508:4;29497:9;29493:20;4571:13;4564:21;4552:34;;4501:91;29477:53;29574:1;29570:17;;;29567:1;29556:32;29599:4;29590:14;;2707:33;29614:62;29670:4;29665:3;29661:14;29654:4;29642:9;29638:2;29634:18;29630:29;4571:13;4564:21;4552:34;;4501:91;29614:62;;29720:3;29712:6;29708:16;29701:4;29696:3;29692:14;29685:40;29748:70;29811:6;29804:4;29797:5;29793:16;29748:70;:::i;:::-;29734:84;;29827:68;29887:6;29882:3;29878:16;29871:4;29864:5;29860:16;28640:12;;28684:1;28673:24;;;28661:37;;28738:2;28734:18;;;-1:-1:-1;;;;;28730:44:39;28723:4;28714:14;;28707:68;28771:1;28825:16;;;28819:23;28805:38;;;28791:12;;28784:60;28555:295;29928:915;29997:3;30035:5;30029:12;30062:6;30057:3;30050:19;30094:4;30089:3;30085:14;30078:21;;30118:5;30115:1;30108:16;30160:4;30157:1;30147:18;30183:1;30193:625;30207:6;30204:1;30201:13;30193:625;;;30305:13;;30354:1;30343:24;;;30331:37;;30412:2;30408:18;;;-1:-1:-1;;;;;30404:44:39;;;30397:4;30388:14;;30381:68;30505:3;30501:19;;;30522:4;30497:30;;;30490:38;30483:46;30469:12;;;30462:68;;;;30588:3;30584:19;;;;30580:30;30573:38;30566:46;30559:4;30550:14;;30543:70;30445:1;30659:14;;;30653:21;30649:47;;;30642:4;30633:14;;30626:71;30436:3;30724:14;;;;30803:4;30791:17;;;;30222:9;30193:625;;30848:1014;30922:3;30960:5;30954:12;30987:6;30982:3;30975:19;31019:4;31014:3;31010:14;31003:21;;31043:5;31040:1;31033:16;31085:4;31082:1;31072:18;31108:1;31118:719;31132:6;31129:1;31126:13;31118:719;;;31199:1;31236:6;31230:13;31282:9;31279:1;31268:24;31263:3;31256:37;31351:9;31347:2;31343:18;31340:1;31329:33;31322:4;31317:3;31313:14;31306:57;31420:9;31415:3;31411:19;31408:1;31397:34;31392:2;31387:3;31383:12;31376:56;31491:9;31486:3;31482:19;31479:1;31468:34;31461:4;31456:3;31452:14;31445:58;;31553:1;31545:6;31541:14;31535:21;31569:54;31618:3;31613;31609:13;31602:4;31589:11;31585:22;4571:13;4564:21;4552:34;;4501:91;31569:54;31663:1;31659:19;-1:-1:-1;;;;;31655:45:39;31711:4;31702:14;;2805:44;-1:-1:-1;31753:3:39;31744:13;;;;31822:4;31810:17;;;;;31154:1;31147:9;31118:719;;31867:1091;31938:3;31976:5;31970:12;32003:6;31998:3;31991:19;32035:4;32030:3;32026:14;32019:21;;32059:5;32056:1;32049:16;32101:4;32098:1;32088:18;32124:1;32134:799;32148:6;32145:1;32142:13;32134:799;;;32215:1;32252:6;32246:13;32298:9;32295:1;32284:24;32279:3;32272:37;32367:9;32363:2;32359:18;32356:1;32345:33;32338:4;32333:3;32329:14;32322:57;32436:9;32431:3;32427:19;32424:1;32413:34;32408:2;32403:3;32399:12;32392:56;;32498:1;32490:6;32486:14;32480:21;32571:1;32567;32562:3;32558:11;32554:19;32541:11;32537:37;32530:4;32525:3;32521:14;32514:61;32588:64;32647:3;32642;32638:13;32631:4;32617:11;32612:3;32608:21;32604:32;4571:13;4564:21;4552:34;;4501:91;32588:64;-1:-1:-1;;32745:4:39;32733:17;;32727:24;-1:-1:-1;;;;;27266:36:39;32807:3;32798:13;;2805:44;32848:4;32839:14;;;;32918:4;32906:17;;;;32170:1;32163:9;32134:799;;32963:1416;33190:4;33182:6;33178:17;33167:9;33160:36;33232:2;33227;33216:9;33212:18;33205:30;33271:6;33266:2;33255:9;33251:18;33244:34;33141:4;33301:66;33362:3;33351:9;33347:19;33339:6;33301:66;:::i;:::-;33411:4;33399:17;;33393:24;33454:1;33443:24;;;33484:2;33469:18;;2707:33;33497:67;33559:3;33548:9;33544:19;33537:4;33525:9;33521:2;33517:18;33513:29;4571:13;4564:21;4552:34;;4501:91;33497:67;33573;33635:3;33624:9;33620:19;33613:4;33601:9;33597:2;33593:18;33589:29;4571:13;4564:21;4552:34;;4501:91;33573:67;33649;33711:3;33700:9;33696:19;33689:4;33677:9;33673:2;33669:18;33665:29;4571:13;4564:21;4552:34;;4501:91;33649:67;-1:-1:-1;33757:22:39;;;-1:-1:-1;;33753:36:39;33747:3;33732:19;;33725:65;33813:71;33761:6;33870:4;33858:17;;33813:71;:::i;:::-;33925:22;;;-1:-1:-1;;33921:36:39;33915:3;33900:19;;33893:65;33799:85;-1:-1:-1;33981:76:39;33799:85;34043:4;34031:17;;33981:76;:::i;:::-;34101:22;;;-1:-1:-1;;34097:36:39;34088:6;34073:22;;34066:68;33967:90;-1:-1:-1;34157:73:39;33967:90;34216:4;34204:17;;34157:73;:::i;:::-;34271:22;;;-1:-1:-1;;34267:36:39;34261:3;34246:19;;34239:65;34143:87;-1:-1:-1;34321:52:39;34143:87;34359:4;34347:17;;34321:52;:::i;34792:967::-;35326:4;35318:6;35314:17;35303:9;35296:36;35368:3;35363:2;35352:9;35348:18;35341:31;35277:4;35395:73;35463:3;35452:9;35448:19;35440:6;35395:73;:::i;:::-;35516:9;35508:6;35504:22;35499:2;35488:9;35484:18;35477:50;35550:65;35608:6;35600;35550:65;:::i;:::-;35536:79;;35663:9;35655:6;35651:22;35646:2;35635:9;35631:18;35624:50;35691:62;35746:6;35738;35691:62;:::i;37284:338::-;37541:4;37529:17;;37511:36;;37498:3;37483:19;;37556:60;37612:2;37597:18;;37589:6;28640:12;;28684:1;28673:24;;;28661:37;;28738:2;28734:18;;;-1:-1:-1;;;;;28730:44:39;28723:4;28714:14;;28707:68;28771:1;28825:16;;;28819:23;28805:38;;;28791:12;;28784:60;28555:295;39881:255;40001:19;;40040:2;40032:11;;40029:101;;;-1:-1:-1;;40101:2:39;40097:12;;;40094:1;40090:20;40086:33;40075:45;39881:255;;;;:::o;40744:347::-;40946:2;40928:21;;;40985:2;40965:18;;;40958:30;41024:25;41019:2;41004:18;;40997:53;41082:2;41067:18;;40744:347::o;41633:138::-;41712:13;;41734:31;41712:13;41734:31;:::i;:::-;41633:138;;;:::o;41776:251::-;41846:6;41899:2;41887:9;41878:7;41874:23;41870:32;41867:52;;;41915:1;41912;41905:12;41867:52;41947:9;41941:16;41966:31;41991:5;41966:31;:::i;42032:127::-;42093:10;42088:3;42084:20;42081:1;42074:31;42124:4;42121:1;42114:15;42148:4;42145:1;42138:15;42164:127;42225:10;42220:3;42216:20;42213:1;42206:31;42256:4;42253:1;42246:15;42280:4;42277:1;42270:15;42296:125;42361:9;;;42382:10;;;42379:36;;;42395:18;;:::i;42786:128::-;42853:9;;;42874:11;;;42871:37;;;42888:18;;:::i;43127:301::-;43256:3;43294:6;43288:13;43340:6;43333:4;43325:6;43321:17;43316:3;43310:37;43402:1;43366:16;;43391:13;;;-1:-1:-1;43366:16:39;43127:301;-1:-1:-1;43127:301:39:o;43789:134::-;43866:13;;43888:29;43866:13;43888:29;:::i;43928:514::-;43982:5;44035:3;44028:4;44020:6;44016:17;44012:27;44002:55;;44053:1;44050;44043:12;44002:55;44086:6;44080:13;44125:4;44117:6;44113:17;44154:1;44175:52;44191:35;44219:6;44191:35;:::i;44175:52::-;44164:63;;44252:6;44243:7;44236:23;44292:3;44283:6;44278:3;44274:16;44271:25;44268:45;;;44309:1;44306;44299:12;44268:45;44353:6;44348:3;44341:4;44332:7;44328:18;44322:38;44409:1;44380:20;;;44402:4;44376:31;44369:42;;;;-1:-1:-1;44384:7:39;43928:514;-1:-1:-1;;;43928:514:39:o;44447:164::-;44523:13;;44572;;44565:21;44555:32;;44545:60;;44601:1;44598;44591:12;44616:2123;44689:5;44742:3;44735:4;44727:6;44723:17;44719:27;44709:55;;44760:1;44757;44750:12;44709:55;44793:6;44787:13;44820:64;44836:47;44876:6;44836:47;:::i;44820:64::-;44908:3;44932:6;44927:3;44920:19;44964:4;44959:3;44955:14;44948:21;;45025:4;45015:6;45012:1;45008:14;45000:6;44996:27;44992:38;44978:52;;45053:3;45045:6;45042:15;45039:35;;;45070:1;45067;45060:12;45039:35;45106:4;45098:6;45094:17;45120:1588;45136:6;45131:3;45128:15;45120:1588;;;45217:3;45211:10;-1:-1:-1;;;;;45240:11:39;45237:35;45234:55;;;45285:1;45282;45275:12;45234:55;45312:24;;45384:4;45360:12;;;-1:-1:-1;;45356:26:39;45352:37;45349:57;;;45402:1;45399;45392:12;45349:57;45432:23;;:::i;:::-;45522:4;45514:13;;45508:20;45541:22;;45606:4;45598:13;;45592:20;-1:-1:-1;;;;;45628:32:39;;45625:52;;;45673:1;45670;45663:12;45625:52;45723:4;45712:8;45708:2;45704:17;45700:28;45690:38;;;45762:4;45757:2;45752:3;45748:12;45744:23;45741:43;;;45780:1;45777;45770:12;45741:43;45812:23;;:::i;:::-;45864:30;45891:2;45864:30;:::i;:::-;45855:7;45848:47;45937:4;45933:2;45929:13;45923:20;45956:33;45981:7;45956:33;:::i;:::-;46022:4;46009:18;;46002:35;46080:4;46072:13;;46066:20;-1:-1:-1;;;;;46102:32:39;;46099:52;;;46147:1;46144;46137:12;46099:52;46191;46239:3;46228:8;46224:2;46220:17;46191:52;:::i;:::-;46184:4;46175:7;46171:18;46164:80;;46287:2;46283;46279:11;46273:18;-1:-1:-1;;;;;46310:8:39;46307:32;46304:52;;;46352:1;46349;46342:12;46304:52;46394;46442:3;46431:8;46427:2;46423:17;46394:52;:::i;:::-;46389:2;46380:7;46376:16;46369:78;;46489:3;46485:2;46481:12;46475:19;46460:34;;46507:33;46532:7;46507:33;:::i;:::-;46573:3;46560:17;;46553:34;;;;46618:4;46607:16;;;46600:33;;;;46646:18;;46684:14;;;;45153;45120:1588;;;-1:-1:-1;46726:7:39;44616:2123;-1:-1:-1;;;;;44616:2123:39:o;46744:762::-;46808:5;46856:4;46844:9;46839:3;46835:19;46831:30;46828:50;;;46874:1;46871;46864:12;46828:50;46927:2;46921:9;46969:4;46957:17;;-1:-1:-1;;;;;46989:34:39;;47025:22;;;46986:62;46983:88;;;47051:18;;:::i;:::-;47091:10;47087:2;47080:22;;47120:6;47111:15;;47156:9;47150:16;47175:31;47198:7;47175:31;:::i;:::-;47215:23;;47283:2;47268:18;;47262:25;47296:33;47262:25;47296:33;:::i;:::-;47357:2;47345:15;;47338:32;47415:2;47400:18;;47394:25;47428:31;47394:25;47428:31;:::i;:::-;47487:2;47475:15;;;;47468:32;46744:762;;-1:-1:-1;;46744:762:39:o;47511:1418::-;47580:5;47628:6;47616:9;47611:3;47607:19;47603:32;47600:52;;;47648:1;47645;47638:12;47600:52;47670:23;;:::i;:::-;47661:32;;47722:9;47716:16;-1:-1:-1;;;;;47747:6:39;47744:30;47741:50;;;47787:1;47784;47777:12;47741:50;47814:57;47867:3;47858:6;47847:9;47843:22;47814:57;:::i;:::-;47807:5;47800:72;;47918:2;47907:9;47903:18;47897:25;-1:-1:-1;;;;;47937:8:39;47934:32;47931:52;;;47979:1;47976;47969:12;47931:52;48015:59;48070:3;48059:8;48048:9;48044:24;48015:59;:::i;:::-;48010:2;48003:5;47999:14;47992:83;;48107:49;48152:2;48141:9;48137:18;48107:49;:::i;:::-;48102:2;48095:5;48091:14;48084:73;48203:2;48192:9;48188:18;48182:25;-1:-1:-1;;;;;48222:8:39;48219:32;48216:52;;;48264:1;48261;48254:12;48216:52;48300:59;48355:3;48344:8;48333:9;48329:24;48300:59;:::i;:::-;48295:2;48288:5;48284:14;48277:83;;48393:47;48435:3;48424:9;48420:19;48393:47;:::i;:::-;48387:3;48380:5;48376:15;48369:72;48474:48;48517:3;48506:9;48502:19;48474:48;:::i;:::-;48468:3;48461:5;48457:15;48450:73;48556:47;48598:3;48587:9;48583:19;48556:47;:::i;:::-;48550:3;48543:5;48539:15;48532:72;48650:3;48639:9;48635:19;48629:26;-1:-1:-1;;;;;48670:8:39;48667:32;48664:52;;;48712:1;48709;48702:12;48664:52;48749:78;48823:3;48812:8;48801:9;48797:24;48749:78;:::i;:::-;48743:3;48736:5;48732:15;48725:103;;48861:61;48918:3;48912;48901:9;48897:19;48861:61;:::i;:::-;48855:3;48848:5;48844:15;48837:86;47511:1418;;;;:::o;48934:1329::-;49007:5;49060:3;49053:4;49045:6;49041:17;49037:27;49027:55;;49078:1;49075;49068:12;49027:55;49111:6;49105:13;49138:64;49154:47;49194:6;49154:47;:::i;49138:64::-;49226:3;49250:6;49245:3;49238:19;49282:4;49277:3;49273:14;49266:21;;49346:4;49338;49330:6;49326:17;49318:6;49314:30;49310:41;49296:55;;49374:3;49366:6;49363:15;49360:35;;;49391:1;49388;49381:12;49360:35;49427:4;49419:6;49415:17;49441:791;49457:6;49452:3;49449:15;49441:791;;;49535:4;49529:3;49524;49520:13;49516:24;49513:44;;;49553:1;49550;49543:12;49513:44;49583:23;;:::i;:::-;49640:3;49634:10;49657:31;49680:7;49657:31;:::i;:::-;49701:22;;49766:4;49757:14;;49751:21;49785:33;49751:21;49785:33;:::i;:::-;49849:4;49838:16;;49831:33;49900:40;49936:2;49927:12;;49900:40;:::i;:::-;49895:2;49888:5;49884:14;49877:64;49977:40;50013:2;50008:3;50004:12;49977:40;:::i;:::-;49972:2;49965:5;49961:14;49954:64;50061:3;50056;50052:13;50046:20;50079:33;50104:7;50079:33;:::i;:::-;50143:3;50132:15;;50125:32;50170:18;;50217:4;50208:14;;;;49483:4;49474:14;49441:791;;50268:1527;50346:5;50399:3;50392:4;50384:6;50380:17;50376:27;50366:55;;50417:1;50414;50407:12;50366:55;50450:6;50444:13;50477:64;50493:47;50533:6;50493:47;:::i;50477:64::-;50565:3;50589:6;50584:3;50577:19;50621:4;50616:3;50612:14;50605:21;;50685:4;50677;50669:6;50665:17;50657:6;50653:30;50649:41;50635:55;;50713:3;50705:6;50702:15;50699:35;;;50730:1;50727;50720:12;50699:35;50766:4;50758:6;50754:17;50780:984;50796:6;50791:3;50788:15;50780:984;;;50874:4;50868:3;50863;50859:13;50855:24;50852:44;;;50892:1;50889;50882:12;50852:44;50922:23;;:::i;:::-;50979:3;50973:10;50996:31;51019:7;50996:31;:::i;:::-;51040:22;;51105:4;51096:14;;51090:21;51124:31;51090:21;51124:31;:::i;:::-;51186:4;51175:16;;51168:33;51244:2;51235:12;;51229:19;51261:31;51229:19;51261:31;:::i;:::-;51323:2;51312:14;;51305:31;51379:2;51370:12;;51364:19;51396:31;51364:19;51396:31;:::i;:::-;51458:2;51447:14;;51440:31;51508:41;51544:3;51535:13;;51508:41;:::i;:::-;51502:3;51495:5;51491:15;51484:66;51593:3;51588;51584:13;51578:20;51611:33;51636:7;51611:33;:::i;:::-;51675:3;51664:15;;51657:32;51702:18;;51749:4;51740:14;;;;50822:4;50813:14;50780:984;;51800:1526;51875:5;51928:3;51921:4;51913:6;51909:17;51905:27;51895:55;;51946:1;51943;51936:12;51895:55;51979:6;51973:13;52006:64;52022:47;52062:6;52022:47;:::i;52006:64::-;52094:3;52118:6;52113:3;52106:19;52150:4;52145:3;52141:14;52134:21;;52214:4;52206;52198:6;52194:17;52186:6;52182:30;52178:41;52164:55;;52242:3;52234:6;52231:15;52228:35;;;52259:1;52256;52249:12;52228:35;52295:4;52287:6;52283:17;52309:986;52325:6;52320:3;52317:15;52309:986;;;52403:4;52397:3;52392;52388:13;52384:24;52381:44;;;52421:1;52418;52411:12;52381:44;52451:23;;:::i;:::-;52508:3;52502:10;52525:31;52548:7;52525:31;:::i;:::-;52569:22;;52634:4;52625:14;;52619:21;52653:31;52619:21;52653:31;:::i;:::-;52715:4;52704:16;;52697:33;52773:2;52764:12;;52758:19;52790:31;52758:19;52790:31;:::i;:::-;52852:2;52841:14;;52834:31;52908:2;52899:12;;52893:19;52925:33;52893:19;52925:33;:::i;:::-;52989:2;52978:14;;52971:31;53039:41;53075:3;53066:13;;53039:41;:::i;:::-;53033:3;53026:5;53022:15;53015:66;53124:3;53119;53115:13;53109:20;53142:33;53167:7;53142:33;:::i;:::-;53206:3;53195:15;;53188:32;53233:18;;53280:4;53271:14;;;;52351:4;52342:14;52309:986;;53331:1910;53435:6;53443;53496:2;53484:9;53475:7;53471:23;53467:32;53464:52;;;53512:1;53509;53502:12;53464:52;53544:9;53538:16;53563:29;53586:5;53563:29;:::i;:::-;53660:2;53645:18;;53639:25;53611:5;;-1:-1:-1;;;;;;53676:30:39;;53673:50;;;53719:1;53716;53709:12;53673:50;53742:22;;53798:6;53780:16;;;53776:29;53773:49;;;53818:1;53815;53808:12;53773:49;53846:23;;:::i;:::-;53900:2;53894:9;-1:-1:-1;;;;;53918:8:39;53915:32;53912:52;;;53960:1;53957;53950:12;53912:52;53989:68;54049:7;54038:8;54034:2;54030:17;53989:68;:::i;:::-;53980:7;53973:85;;54092:40;54128:2;54124;54120:11;54092:40;:::i;:::-;54087:2;54078:7;54074:16;54067:66;54167:39;54202:2;54198;54194:11;54167:39;:::i;:::-;54162:2;54153:7;54149:16;54142:65;54241:39;54276:2;54272;54268:11;54241:39;:::i;:::-;54236:2;54227:7;54223:16;54216:65;54316:40;54351:3;54347:2;54343:12;54316:40;:::i;:::-;54310:3;54301:7;54297:17;54290:67;54396:3;54392:2;54388:12;54382:19;-1:-1:-1;;;;;54416:8:39;54413:32;54410:52;;;54458:1;54455;54448:12;54410:52;54497:75;54564:7;54553:8;54549:2;54545:17;54497:75;:::i;:::-;54491:3;54482:7;54478:17;54471:102;;54612:3;54608:2;54604:12;54598:19;-1:-1:-1;;;;;54632:8:39;54629:32;54626:52;;;54674:1;54671;54664:12;54626:52;54713:80;54785:7;54774:8;54770:2;54766:17;54713:80;:::i;:::-;54707:3;54698:7;54694:17;54687:107;;54833:3;54829:2;54825:12;54819:19;-1:-1:-1;;;;;54853:8:39;54850:32;54847:52;;;54895:1;54892;54885:12;54847:52;54934:77;55003:7;54992:8;54988:2;54984:17;54934:77;:::i;:::-;54928:3;54919:7;54915:17;54908:104;;55051:3;55047:2;55043:12;55037:19;-1:-1:-1;;;;;55071:8:39;55068:32;55065:52;;;55113:1;55110;55103:12;55065:52;55152:56;55200:7;55189:8;55185:2;55181:17;55152:56;:::i;:::-;55146:3;55137:7;55133:17;55126:83;;55228:7;55218:17;;;;53331:1910;;;;;:::o;57647:247::-;57715:6;57768:2;57756:9;57747:7;57743:23;57739:32;57736:52;;;57784:1;57781;57774:12;57736:52;57816:9;57810:16;57835:29;57858:5;57835:29;:::i;58720:326::-;58794:6;58802;58855:2;58843:9;58834:7;58830:23;58826:32;58823:52;;;58871:1;58868;58861:12;58823:52;58903:9;58897:16;58922:29;58945:5;58922:29;:::i;:::-;58970:5;-1:-1:-1;58994:46:39;59036:2;59021:18;;58994:46;:::i;:::-;58984:56;;58720:326;;;;;:::o;60631:273::-;60699:6;60752:2;60740:9;60731:7;60727:23;60723:32;60720:52;;;60768:1;60765;60758:12;60720:52;60800:9;60794:16;60850:4;60843:5;60839:16;60832:5;60829:27;60819:55;;60870:1;60867;60860:12;62954:409;63029:6;63037;63090:2;63078:9;63069:7;63065:23;63061:32;63058:52;;;63106:1;63103;63096:12;63058:52;63138:9;63132:16;63157:29;63180:5;63157:29;:::i;:::-;63205:5;63195:15;;;63255:2;63244:9;63240:18;63234:25;63304:7;63301:1;63290:22;63281:7;63278:35;63268:63;;63327:1;63324;63317:12;64183:1096;64438:6;64446;64454;64462;64515:3;64503:9;64494:7;64490:23;64486:33;64483:53;;;64532:1;64529;64522:12;64483:53;64564:9;64558:16;64583:29;64606:5;64583:29;:::i;:::-;64680:2;64665:18;;64659:25;64631:5;;-1:-1:-1;;;;;;64696:30:39;;64693:50;;;64739:1;64736;64729:12;64693:50;64762:80;64834:7;64825:6;64814:9;64810:22;64762:80;:::i;:::-;64752:90;;;64888:2;64877:9;64873:18;64867:25;-1:-1:-1;;;;;64907:8:39;64904:32;64901:52;;;64949:1;64946;64939:12;64901:52;64972:87;65051:7;65040:8;65029:9;65025:24;64972:87;:::i;:::-;64962:97;;;65105:2;65094:9;65090:18;65084:25;-1:-1:-1;;;;;65124:8:39;65121:32;65118:52;;;65166:1;65163;65156:12;65118:52;65189:84;65265:7;65254:8;65243:9;65239:24;65189:84;:::i;:::-;65179:94;;;64183:1096;;;;;;;:::o;65686:372::-;65787:6;65795;65848:3;65836:9;65827:7;65823:23;65819:33;65816:53;;;65865:1;65862;65855:12;65816:53;65897:9;65891:16;65916:29;65939:5;65916:29;:::i;:::-;65964:5;-1:-1:-1;65988:64:39;66044:7;66039:2;66024:18;;65988:64;:::i;67905:230::-;67975:6;68028:2;68016:9;68007:7;68003:23;67999:32;67996:52;;;68044:1;68041;68034:12;67996:52;-1:-1:-1;68089:16:39;;67905:230;-1:-1:-1;67905:230:39:o;68931:297::-;69049:12;;69096:4;69085:16;;;69079:23;;69049:12;69114:16;;69111:111;;;-1:-1:-1;;69188:4:39;69184:17;;;;69181:1;69177:25;69173:38;69162:50;;68931:297;-1:-1:-1;68931:297:39:o;71419:202::-;71486:6;71539:2;71527:9;71518:7;71514:23;71510:32;71507:52;;;71555:1;71552;71545:12;71507:52;71578:37;71605:9;71578:37;:::i;71626:280::-;71695:6;71748:2;71736:9;71727:7;71723:23;71719:32;71716:52;;;71764:1;71761;71754:12;71716:52;71796:9;71790:16;71846:10;71839:5;71835:22;71828:5;71825:33;71815:61;;71872:1;71869;71862:12;71911:410;-1:-1:-1;;;;;;72104:33:39;;;72092:46;;72175:2;72171:15;;;;-1:-1:-1;;72167:45:39;72163:1;72154:11;;72147:66;72120:3;72247:16;72243:43;;;72238:2;72229:12;;72222:65;72312:2;72303:12;;71911:410::o;72326:225::-;72472:2;72461:9;72454:21;72435:4;72492:53;72541:2;72530:9;72526:18;72518:6;72492:53;:::i;74895:220::-;75044:2;75033:9;75026:21;75007:4;75064:45;75105:2;75094:9;75090:18;75082:6;75064:45;:::i;80629:518::-;-1:-1:-1;;;;;;80848:33:39;;;80836:46;;80919:2;80915:15;;;;-1:-1:-1;;;;;;80911:53:39;80907:1;80898:11;;80891:74;80864:3;80999:16;;;80995:43;;80990:2;80981:12;;80974:65;81073:16;;81069:43;;;81064:2;81055:12;;81048:65;81138:2;81129:12;;80629:518::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "_update(address,address,uint256)": "0bb3bfa8",
        "associateToken(address,address)": "49146bde",
        "associateTokens(address,address[])": "2e63879b",
        "burnToken(address,int64,int64[])": "d6910d06",
        "dissociateToken(address,address)": "099794e8",
        "dissociateTokens(address,address[])": "78b63918",
        "getAccountId(address)": "e0b490f7",
        "getApproved(address,uint256)": "098f2366",
        "getFungibleTokenInfo(address)": "3f28a19b",
        "getNonFungibleTokenInfo(address,int64)": "287e1da8",
        "getTokenCustomFees(address)": "ae7611a0",
        "getTokenDefaultFreezeStatus(address)": "a7daa18d",
        "getTokenDefaultKycStatus(address)": "335e04c1",
        "getTokenExpiryInfo(address)": "d614cdb8",
        "getTokenInfo(address)": "1f69565f",
        "getTokenKey(address,uint256)": "3c4dd32e",
        "getTokenType(address)": "93272baf",
        "isApprovedForAll(address,address,address)": "f49f40db",
        "isToken(address)": "19f37361",
        "mintToken(address,int64,bytes[])": "e0f4059a"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"associateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"associateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"\",\"type\":\"int64[]\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"dissociateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"dissociateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"accountId\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int32\",\"name\":\"decimals\",\"type\":\"int32\"}],\"internalType\":\"struct IHederaTokenService.FungibleTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"getNonFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"ownerId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"creationTime\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"spenderId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.NonFungibleTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultFreezeStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultKycStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenExpiryInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"getTokenKey\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"associateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"associateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be associated with the provided tokens\",\"tokens\":\"The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"dissociateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"dissociateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be dissociated from the provided tokens\",\"tokens\":\"The tokens to be dissociated from the provided account.\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getAccountId(address)\":{\"details\":\"Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties.\"},\"getApproved(address,uint256)\":{\"params\":{\"serialNumber\":\"The NFT to find the approved address for\",\"token\":\"The Hedera NFT token address to check approval\"},\"returns\":{\"approved\":\"The approved address for this NFT, or the zero address if there is none\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getFungibleTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"FungibleTokenInfo info for `token`\"}},\"getNonFungibleTokenInfo(address,int64)\":{\"params\":{\"serialNumber\":\"The NFT serialNumber to check\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"NonFungibleTokenInfo info for `token` `serialNumber`\"}},\"getTokenCustomFees(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"Set of fixed fees for `token`\",\"_2\":\"Set of fractional fees for `token`\",\"_3\":\"Set of royalty fees for `token`\"}},\"getTokenDefaultFreezeStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default freeze status is frozen.\"}},\"getTokenDefaultKycStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default kyc status is KycNotApplicable and false if Revoked.\"}},\"getTokenExpiryInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"Expiry info for `token`\"}},\"getTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"TokenInfo info for `token`\"}},\"getTokenKey(address,uint256)\":{\"params\":{\"keyType\":\"The keyType of the desired KeyValue\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"KeyValue info for key of type `keyType`\"}},\"getTokenType(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\"}},\"isApprovedForAll(address,address,address)\":{\"params\":{\"operator\":\"The address that acts on behalf of the owner\",\"owner\":\"The address that owns the NFTs\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `operator` is an approved operator for `owner`, false otherwise\"}},\"isToken(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if valid token found for the given address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"associateToken(address,address)\":{\"notice\":\"Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\"},\"associateTokens(address,address[])\":{\"notice\":\"Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens.\"},\"dissociateToken(address,address)\":{\"notice\":\"Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\"},\"dissociateTokens(address,address[])\":{\"notice\":\"Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed.\"},\"getApproved(address,uint256)\":{\"notice\":\"Get the approved address for a single NFT Only Applicable to NFT Tokens\"},\"getFungibleTokenInfo(address)\":{\"notice\":\"Query fungible token info\"},\"getNonFungibleTokenInfo(address,int64)\":{\"notice\":\"Query non fungible token info\"},\"getTokenCustomFees(address)\":{\"notice\":\"Query token custom fees\"},\"getTokenDefaultFreezeStatus(address)\":{\"notice\":\"Query token default freeze status\"},\"getTokenDefaultKycStatus(address)\":{\"notice\":\"Query token default kyc status\"},\"getTokenExpiryInfo(address)\":{\"notice\":\"Query token expiry info\"},\"getTokenInfo(address)\":{\"notice\":\"Query token info\"},\"getTokenKey(address,uint256)\":{\"notice\":\"Query token KeyValue\"},\"getTokenType(address)\":{\"notice\":\"Query to return the token type for a given address\"},\"isApprovedForAll(address,address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address Only Applicable to NFT Tokens\"},\"isToken(address)\":{\"notice\":\"Query if valid token found for the given address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HtsSystemContract.sol\":\"HtsSystemContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":surl/=lib/surl/\"]},\"sources\":{\"contracts/HtsSystemContract.sol\":{\"keccak256\":\"0x0a89a6f044ae204a08d7b7725aa11474cfef71a44fdd975466104544b59bcf17\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c14114b393fdcb2f91941116b97823d57c6cef6027d418ab9378bb10e6825bfe\",\"dweb:/ipfs/QmTM2sSbSx75BJV5c9vkmeUEFdhRXQmogLqVyJxZCHN6Jm\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x77993e2d90d6b91d30b8721a52364902d823dd5d1020500071c4ecd7f847a00e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://776be938a4f20b2b40e95a5d58f330454d21077894659a674ac8bda378561598\",\"dweb:/ipfs/QmToUenT2jKjiJLCozN3xQp2esRVbRceyS8KVMqcd9j29W\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0x7b4a961afb96ff6326f4d2985f20edf7aa10b3ba1b68c502a0cdcd84ba26e767\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://322d92f6a244dd8a9818d5be6e4e17c6dd048a033449dd79b43229c7077da06d\",\"dweb:/ipfs/QmdFyC7EU8iGiyFzh77YsUpp6eysV8ijyLUKWsDPVKq7yG\"]},\"contracts/IHRC719.sol\":{\"keccak256\":\"0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d\",\"dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD\"]},\"contracts/IHederaTokenService.sol\":{\"keccak256\":\"0x753e733f6c1921938f300e2a1d31f7fc09d598149c9991ffa91d99a4d26ca3f1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b68ea0df42ebc03fe33e2dc56b80f9d9dbfed1c0b528436423cf66de5a1e4a43\",\"dweb:/ipfs/QmXJbGG7nEH9fNDpxgXfUKE8aG7pcwPB72EbuYUgtSAGWY\"]}},\"version\":1}",
    "metadata": {
        "compiler": { "version": "0.8.28+commit.7893614a" },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "approved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ApprovalForAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                { "inputs": [], "stateMutability": "nonpayable", "type": "fallback" },
                {
                    "inputs": [
                        { "internalType": "address", "name": "from", "type": "address" },
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "amount", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "_update"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address", "name": "token", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "associateToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address[]", "name": "tokens", "type": "address[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "associateTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "int64[]", "name": "", "type": "int64[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address", "name": "token", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "dissociateToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address[]", "name": "tokens", "type": "address[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "dissociateTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAccountId",
                    "outputs": [{ "internalType": "uint32", "name": "accountId", "type": "uint32" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "serialNumber", "type": "uint256" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getApproved",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "address", "name": "approved", "type": "address" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getFungibleTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.FungibleTokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.TokenInfo",
                                    "name": "tokenInfo",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IHederaTokenService.HederaToken",
                                            "name": "token",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "string",
                                                    "name": "name",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "symbol",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "treasury",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "memo",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "tokenSupplyType",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maxSupply",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "freezeDefault",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                                    "name": "tokenKeys",
                                                    "type": "tuple[]",
                                                    "components": [
                                                        {
                                                            "internalType": "uint256",
                                                            "name": "keyType",
                                                            "type": "uint256"
                                                        },
                                                        {
                                                            "internalType": "struct IHederaTokenService.KeyValue",
                                                            "name": "key",
                                                            "type": "tuple",
                                                            "components": [
                                                                {
                                                                    "internalType": "bool",
                                                                    "name": "inheritAccountKey",
                                                                    "type": "bool"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "contractId",
                                                                    "type": "address"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ed25519",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ECDSA_secp256k1",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "delegatableContractId",
                                                                    "type": "address"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.Expiry",
                                                    "name": "expiry",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "int64",
                                                            "name": "second",
                                                            "type": "int64"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "autoRenewAccount",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "int64",
                                                            "name": "autoRenewPeriod",
                                                            "type": "int64"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "totalSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "deleted",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "defaultKycStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "pauseStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FixedFee[]",
                                            "name": "fixedFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useCurrentTokenForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                                            "name": "fractionalFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "minimumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maximumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "netOfTransfers",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                            "name": "royaltyFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "ledgerId",
                                            "type": "string"
                                        }
                                    ]
                                },
                                { "internalType": "int32", "name": "decimals", "type": "int32" }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "serialNumber", "type": "int64" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getNonFungibleTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.TokenInfo",
                                    "name": "tokenInfo",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IHederaTokenService.HederaToken",
                                            "name": "token",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "string",
                                                    "name": "name",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "symbol",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "treasury",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "memo",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "tokenSupplyType",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maxSupply",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "freezeDefault",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                                    "name": "tokenKeys",
                                                    "type": "tuple[]",
                                                    "components": [
                                                        {
                                                            "internalType": "uint256",
                                                            "name": "keyType",
                                                            "type": "uint256"
                                                        },
                                                        {
                                                            "internalType": "struct IHederaTokenService.KeyValue",
                                                            "name": "key",
                                                            "type": "tuple",
                                                            "components": [
                                                                {
                                                                    "internalType": "bool",
                                                                    "name": "inheritAccountKey",
                                                                    "type": "bool"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "contractId",
                                                                    "type": "address"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ed25519",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ECDSA_secp256k1",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "delegatableContractId",
                                                                    "type": "address"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.Expiry",
                                                    "name": "expiry",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "int64",
                                                            "name": "second",
                                                            "type": "int64"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "autoRenewAccount",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "int64",
                                                            "name": "autoRenewPeriod",
                                                            "type": "int64"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "totalSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "deleted",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "defaultKycStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "pauseStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FixedFee[]",
                                            "name": "fixedFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useCurrentTokenForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                                            "name": "fractionalFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "minimumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maximumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "netOfTransfers",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                            "name": "royaltyFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "ledgerId",
                                            "type": "string"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "int64",
                                    "name": "serialNumber",
                                    "type": "int64"
                                },
                                { "internalType": "address", "name": "ownerId", "type": "address" },
                                {
                                    "internalType": "int64",
                                    "name": "creationTime",
                                    "type": "int64"
                                },
                                { "internalType": "bytes", "name": "metadata", "type": "bytes" },
                                {
                                    "internalType": "address",
                                    "name": "spenderId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenCustomFees",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                {
                                    "internalType": "int64",
                                    "name": "minimumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "maximumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "netOfTransfers",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenDefaultFreezeStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenDefaultKycStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenExpiryInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.Expiry",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                { "internalType": "int64", "name": "second", "type": "int64" },
                                {
                                    "internalType": "address",
                                    "name": "autoRenewAccount",
                                    "type": "address"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "autoRenewPeriod",
                                    "type": "int64"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "name": "token",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "string",
                                            "name": "name",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "symbol",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "treasury",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "memo",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "tokenSupplyType",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maxSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "freezeDefault",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "uint256",
                                                    "name": "keyType",
                                                    "type": "uint256"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "bool",
                                                            "name": "inheritAccountKey",
                                                            "type": "bool"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "contractId",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ed25519",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "delegatableContractId",
                                                            "type": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "name": "expiry",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "second",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "autoRenewAccount",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "internalType": "int64", "name": "totalSupply", "type": "int64" },
                                { "internalType": "bool", "name": "deleted", "type": "bool" },
                                {
                                    "internalType": "bool",
                                    "name": "defaultKycStatus",
                                    "type": "bool"
                                },
                                { "internalType": "bool", "name": "pauseStatus", "type": "bool" },
                                {
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "minimumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maximumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "netOfTransfers",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                { "internalType": "string", "name": "ledgerId", "type": "string" }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "keyType", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenKey",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.KeyValue",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "inheritAccountKey",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "contractId",
                                    "type": "address"
                                },
                                { "internalType": "bytes", "name": "ed25519", "type": "bytes" },
                                {
                                    "internalType": "bytes",
                                    "name": "ECDSA_secp256k1",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatableContractId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenType",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "int32", "name": "", "type": "int32" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "owner", "type": "address" },
                        { "internalType": "address", "name": "operator", "type": "address" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isApprovedForAll",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "isToken",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "bytes[]", "name": "", "type": "bytes[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" },
                        { "internalType": "int64[]", "name": "serialNumbers", "type": "int64[]" }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "associateToken(address,address)": {
                        "params": {
                            "account": "The account to be associated with the provided token",
                            "token": "The token to be associated with the provided account"
                        }
                    },
                    "associateTokens(address,address[])": {
                        "params": {
                            "account": "The account to be associated with the provided tokens",
                            "tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "dissociateToken(address,address)": {
                        "params": {
                            "account": "The account to be associated with the provided token",
                            "token": "The token to be associated with the provided account"
                        }
                    },
                    "dissociateTokens(address,address[])": {
                        "params": {
                            "account": "The account to be dissociated from the provided tokens",
                            "tokens": "The tokens to be dissociated from the provided account."
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getAccountId(address)": {
                        "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
                    },
                    "getApproved(address,uint256)": {
                        "params": {
                            "serialNumber": "The NFT to find the approved address for",
                            "token": "The Hedera NFT token address to check approval"
                        },
                        "returns": {
                            "approved": "The approved address for this NFT, or the zero address if there is none",
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getFungibleTokenInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "FungibleTokenInfo info for `token`"
                        }
                    },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "params": {
                            "serialNumber": "The NFT serialNumber to check",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                        }
                    },
                    "getTokenCustomFees(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "Set of fixed fees for `token`",
                            "_2": "Set of fractional fees for `token`",
                            "_3": "Set of royalty fees for `token`"
                        }
                    },
                    "getTokenDefaultFreezeStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default freeze status is frozen."
                        }
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                        }
                    },
                    "getTokenExpiryInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenInfo": "Expiry info for `token`"
                        }
                    },
                    "getTokenInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenInfo": "TokenInfo info for `token`"
                        }
                    },
                    "getTokenKey(address,uint256)": {
                        "params": {
                            "keyType": "The keyType of the desired KeyValue",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "KeyValue info for key of type `keyType`"
                        }
                    },
                    "getTokenType(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                        }
                    },
                    "isApprovedForAll(address,address,address)": {
                        "params": {
                            "operator": "The address that acts on behalf of the owner",
                            "owner": "The address that owns the NFTs",
                            "token": "The Hedera NFT token address to approve"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                        }
                    },
                    "isToken(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if valid token found for the given address"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "associateToken(address,address)": {
                        "notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
                    },
                    "associateTokens(address,address[])": {
                        "notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
                    },
                    "dissociateToken(address,address)": {
                        "notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
                    },
                    "dissociateTokens(address,address[])": {
                        "notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
                    },
                    "getApproved(address,uint256)": {
                        "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
                    },
                    "getFungibleTokenInfo(address)": { "notice": "Query fungible token info" },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "notice": "Query non fungible token info"
                    },
                    "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
                    "getTokenDefaultFreezeStatus(address)": {
                        "notice": "Query token default freeze status"
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "notice": "Query token default kyc status"
                    },
                    "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
                    "getTokenInfo(address)": { "notice": "Query token info" },
                    "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
                    "getTokenType(address)": {
                        "notice": "Query to return the token type for a given address"
                    },
                    "isApprovedForAll(address,address,address)": {
                        "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
                    },
                    "isToken(address)": {
                        "notice": "Query if valid token found for the given address"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/",
                "forge-std/=lib/forge-std/src/",
                "solidity-stringutils/=lib/surl/lib/solidity-stringutils/",
                "surl/=lib/surl/"
            ],
            "optimizer": { "enabled": true, "runs": 200 },
            "metadata": { "bytecodeHash": "ipfs" },
            "compilationTarget": { "contracts/HtsSystemContract.sol": "HtsSystemContract" },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "contracts/HtsSystemContract.sol": {
                "keccak256": "0x0a89a6f044ae204a08d7b7725aa11474cfef71a44fdd975466104544b59bcf17",
                "urls": [
                    "bzz-raw://c14114b393fdcb2f91941116b97823d57c6cef6027d418ab9378bb10e6825bfe",
                    "dweb:/ipfs/QmTM2sSbSx75BJV5c9vkmeUEFdhRXQmogLqVyJxZCHN6Jm"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC20.sol": {
                "keccak256": "0x77993e2d90d6b91d30b8721a52364902d823dd5d1020500071c4ecd7f847a00e",
                "urls": [
                    "bzz-raw://776be938a4f20b2b40e95a5d58f330454d21077894659a674ac8bda378561598",
                    "dweb:/ipfs/QmToUenT2jKjiJLCozN3xQp2esRVbRceyS8KVMqcd9j29W"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC721.sol": {
                "keccak256": "0x7b4a961afb96ff6326f4d2985f20edf7aa10b3ba1b68c502a0cdcd84ba26e767",
                "urls": [
                    "bzz-raw://322d92f6a244dd8a9818d5be6e4e17c6dd048a033449dd79b43229c7077da06d",
                    "dweb:/ipfs/QmdFyC7EU8iGiyFzh77YsUpp6eysV8ijyLUKWsDPVKq7yG"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHRC719.sol": {
                "keccak256": "0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd",
                "urls": [
                    "bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d",
                    "dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHederaTokenService.sol": {
                "keccak256": "0x753e733f6c1921938f300e2a1d31f7fc09d598149c9991ffa91d99a4d26ca3f1",
                "urls": [
                    "bzz-raw://b68ea0df42ebc03fe33e2dc56b80f9d9dbfed1c0b528436423cf66de5a1e4a43",
                    "dweb:/ipfs/QmXJbGG7nEH9fNDpxgXfUKE8aG7pcwPB72EbuYUgtSAGWY"
                ],
                "license": "Apache-2.0"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 91,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "tokenType",
                "offset": 0,
                "slot": "0",
                "type": "t_string_storage"
            },
            {
                "astId": 93,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "name",
                "offset": 0,
                "slot": "1",
                "type": "t_string_storage"
            },
            {
                "astId": 95,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "symbol",
                "offset": 0,
                "slot": "2",
                "type": "t_string_storage"
            },
            {
                "astId": 97,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "decimals",
                "offset": 0,
                "slot": "3",
                "type": "t_uint8"
            },
            {
                "astId": 99,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "totalSupply",
                "offset": 0,
                "slot": "4",
                "type": "t_uint256"
            },
            {
                "astId": 102,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "_tokenInfo",
                "offset": 0,
                "slot": "5",
                "type": "t_struct(TokenInfo)6473_storage"
            }
        ],
        "types": {
            "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
            "t_array(t_struct(FixedFee)6515_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FixedFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FixedFee)6515_storage"
            },
            "t_array(t_struct(FractionalFee)6529_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FractionalFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FractionalFee)6529_storage"
            },
            "t_array(t_struct(RoyaltyFee)6543_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.RoyaltyFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(RoyaltyFee)6543_storage"
            },
            "t_array(t_struct(TokenKey)6414_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.TokenKey[]",
                "numberOfBytes": "32",
                "base": "t_struct(TokenKey)6414_storage"
            },
            "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
            "t_bytes_storage": { "encoding": "bytes", "label": "bytes", "numberOfBytes": "32" },
            "t_int64": { "encoding": "inplace", "label": "int64", "numberOfBytes": "8" },
            "t_string_storage": { "encoding": "bytes", "label": "string", "numberOfBytes": "32" },
            "t_struct(Expiry)6395_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.Expiry",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6390,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "second",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6392,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewAccount",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6394,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewPeriod",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_int64"
                    }
                ]
            },
            "t_struct(FixedFee)6515_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FixedFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6506,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6508,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6510,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 28,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6512,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useCurrentTokenForPayment",
                        "offset": 29,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6514,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(FractionalFee)6529_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FractionalFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6518,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6520,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6522,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "minimumAmount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6524,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maximumAmount",
                        "offset": 24,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6526,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "netOfTransfers",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6528,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 1,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(HederaToken)6437_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.HederaToken",
                "numberOfBytes": "256",
                "members": [
                    {
                        "astId": 6417,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "name",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6419,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "symbol",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6421,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "treasury",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    },
                    {
                        "astId": 6423,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "memo",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6425,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenSupplyType",
                        "offset": 0,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6427,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maxSupply",
                        "offset": 1,
                        "slot": "4",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6429,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "freezeDefault",
                        "offset": 9,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6433,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenKeys",
                        "offset": 0,
                        "slot": "5",
                        "type": "t_array(t_struct(TokenKey)6414_storage)dyn_storage"
                    },
                    {
                        "astId": 6436,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "expiry",
                        "offset": 0,
                        "slot": "6",
                        "type": "t_struct(Expiry)6395_storage"
                    }
                ]
            },
            "t_struct(KeyValue)6407_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.KeyValue",
                "numberOfBytes": "128",
                "members": [
                    {
                        "astId": 6398,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "inheritAccountKey",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6400,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "contractId",
                        "offset": 1,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6402,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ed25519",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 6404,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ECDSA_secp256k1",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 6406,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "delegatableContractId",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(RoyaltyFee)6543_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.RoyaltyFee",
                "numberOfBytes": "96",
                "members": [
                    {
                        "astId": 6532,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6534,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6536,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6538,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    },
                    {
                        "astId": 6540,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 20,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6542,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(TokenInfo)6473_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenInfo",
                "numberOfBytes": "416",
                "members": [
                    {
                        "astId": 6442,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "token",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_struct(HederaToken)6437_storage"
                    },
                    {
                        "astId": 6445,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "totalSupply",
                        "offset": 0,
                        "slot": "8",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6448,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "deleted",
                        "offset": 8,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6451,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "defaultKycStatus",
                        "offset": 9,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6454,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "pauseStatus",
                        "offset": 10,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6459,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fixedFees",
                        "offset": 0,
                        "slot": "9",
                        "type": "t_array(t_struct(FixedFee)6515_storage)dyn_storage"
                    },
                    {
                        "astId": 6464,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fractionalFees",
                        "offset": 0,
                        "slot": "10",
                        "type": "t_array(t_struct(FractionalFee)6529_storage)dyn_storage"
                    },
                    {
                        "astId": 6469,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "royaltyFees",
                        "offset": 0,
                        "slot": "11",
                        "type": "t_array(t_struct(RoyaltyFee)6543_storage)dyn_storage"
                    },
                    {
                        "astId": 6472,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ledgerId",
                        "offset": 0,
                        "slot": "12",
                        "type": "t_string_storage"
                    }
                ]
            },
            "t_struct(TokenKey)6414_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenKey",
                "numberOfBytes": "160",
                "members": [
                    {
                        "astId": 6410,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "keyType",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 6413,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "key",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_struct(KeyValue)6407_storage"
                    }
                ]
            },
            "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" },
            "t_uint8": { "encoding": "inplace", "label": "uint8", "numberOfBytes": "1" }
        }
    },
    "userdoc": {
        "version": 1,
        "kind": "user",
        "methods": {
            "associateToken(address,address)": {
                "notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
            },
            "associateTokens(address,address[])": {
                "notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
            },
            "dissociateToken(address,address)": {
                "notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
            },
            "dissociateTokens(address,address[])": {
                "notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
            },
            "getApproved(address,uint256)": {
                "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
            },
            "getFungibleTokenInfo(address)": { "notice": "Query fungible token info" },
            "getNonFungibleTokenInfo(address,int64)": { "notice": "Query non fungible token info" },
            "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
            "getTokenDefaultFreezeStatus(address)": {
                "notice": "Query token default freeze status"
            },
            "getTokenDefaultKycStatus(address)": { "notice": "Query token default kyc status" },
            "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
            "getTokenInfo(address)": { "notice": "Query token info" },
            "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
            "getTokenType(address)": {
                "notice": "Query to return the token type for a given address"
            },
            "isApprovedForAll(address,address,address)": {
                "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
            },
            "isToken(address)": { "notice": "Query if valid token found for the given address" }
        }
    },
    "devdoc": {
        "version": 1,
        "kind": "dev",
        "methods": {
            "associateToken(address,address)": {
                "params": {
                    "account": "The account to be associated with the provided token",
                    "token": "The token to be associated with the provided account"
                }
            },
            "associateTokens(address,address[])": {
                "params": {
                    "account": "The account to be associated with the provided tokens",
                    "tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "dissociateToken(address,address)": {
                "params": {
                    "account": "The account to be associated with the provided token",
                    "token": "The token to be associated with the provided account"
                }
            },
            "dissociateTokens(address,address[])": {
                "params": {
                    "account": "The account to be dissociated from the provided tokens",
                    "tokens": "The tokens to be dissociated from the provided account."
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "getAccountId(address)": {
                "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
            },
            "getApproved(address,uint256)": {
                "params": {
                    "serialNumber": "The NFT to find the approved address for",
                    "token": "The Hedera NFT token address to check approval"
                },
                "returns": {
                    "approved": "The approved address for this NFT, or the zero address if there is none",
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "getFungibleTokenInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "FungibleTokenInfo info for `token`"
                }
            },
            "getNonFungibleTokenInfo(address,int64)": {
                "params": {
                    "serialNumber": "The NFT serialNumber to check",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                }
            },
            "getTokenCustomFees(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "Set of fixed fees for `token`",
                    "_2": "Set of fractional fees for `token`",
                    "_3": "Set of royalty fees for `token`"
                }
            },
            "getTokenDefaultFreezeStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default freeze status is frozen."
                }
            },
            "getTokenDefaultKycStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                }
            },
            "getTokenExpiryInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenInfo": "Expiry info for `token`"
                }
            },
            "getTokenInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenInfo": "TokenInfo info for `token`"
                }
            },
            "getTokenKey(address,uint256)": {
                "params": {
                    "keyType": "The keyType of the desired KeyValue",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "KeyValue info for key of type `keyType`"
                }
            },
            "getTokenType(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                }
            },
            "isApprovedForAll(address,address,address)": {
                "params": {
                    "operator": "The address that acts on behalf of the owner",
                    "owner": "The address that owns the NFTs",
                    "token": "The Hedera NFT token address to approve"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                }
            },
            "isToken(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if valid token found for the given address"
                }
            }
        },
        "events": {
            "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
            },
            "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
            }
        }
    },
    "id": 1
}
