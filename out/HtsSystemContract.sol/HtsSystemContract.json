{
    "abi": [
        { "type": "fallback", "stateMutability": "nonpayable" },
        {
            "type": "function",
            "name": "_update",
            "inputs": [
                { "name": "from", "type": "address", "internalType": "address" },
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "associateToken",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "token", "type": "address", "internalType": "address" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "associateTokens",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "tokens", "type": "address[]", "internalType": "address[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "burnToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int64[]", "internalType": "int64[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "dissociateToken",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "token", "type": "address", "internalType": "address" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "dissociateTokens",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "tokens", "type": "address[]", "internalType": "address[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getAccountId",
            "inputs": [{ "name": "account", "type": "address", "internalType": "address" }],
            "outputs": [{ "name": "accountId", "type": "uint32", "internalType": "uint32" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getApproved",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "approved", "type": "address", "internalType": "address" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getFungibleTokenInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.FungibleTokenInfo",
                    "components": [
                        {
                            "name": "tokenInfo",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "components": [
                                {
                                    "name": "token",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "components": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "symbol",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "treasury",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "memo",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "tokenSupplyType",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "maxSupply",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "freezeDefault",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "components": [
                                                {
                                                    "name": "keyType",
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                {
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "components": [
                                                        {
                                                            "name": "inheritAccountKey",
                                                            "type": "bool",
                                                            "internalType": "bool"
                                                        },
                                                        {
                                                            "name": "contractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        },
                                                        {
                                                            "name": "ed25519",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "delegatableContractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "expiry",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "components": [
                                                {
                                                    "name": "second",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                },
                                                {
                                                    "name": "autoRenewAccount",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                                { "name": "deleted", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "defaultKycStatus",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "components": [
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "minimumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "maximumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "netOfTransfers",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                { "name": "ledgerId", "type": "string", "internalType": "string" }
                            ]
                        },
                        { "name": "decimals", "type": "int32", "internalType": "int32" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getNonFungibleTokenInfo",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "int64", "internalType": "int64" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                    "components": [
                        {
                            "name": "tokenInfo",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "components": [
                                {
                                    "name": "token",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "components": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "symbol",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "treasury",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "memo",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "tokenSupplyType",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "maxSupply",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "freezeDefault",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "components": [
                                                {
                                                    "name": "keyType",
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                {
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "components": [
                                                        {
                                                            "name": "inheritAccountKey",
                                                            "type": "bool",
                                                            "internalType": "bool"
                                                        },
                                                        {
                                                            "name": "contractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        },
                                                        {
                                                            "name": "ed25519",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "delegatableContractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "expiry",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "components": [
                                                {
                                                    "name": "second",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                },
                                                {
                                                    "name": "autoRenewAccount",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                                { "name": "deleted", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "defaultKycStatus",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "components": [
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "minimumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "maximumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "netOfTransfers",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                { "name": "ledgerId", "type": "string", "internalType": "string" }
                            ]
                        },
                        { "name": "serialNumber", "type": "int64", "internalType": "int64" },
                        { "name": "ownerId", "type": "address", "internalType": "address" },
                        { "name": "creationTime", "type": "int64", "internalType": "int64" },
                        { "name": "metadata", "type": "bytes", "internalType": "bytes" },
                        { "name": "spenderId", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenCustomFees",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FixedFee[]",
                    "components": [
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        {
                            "name": "useCurrentTokenForPayment",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "minimumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "maximumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "netOfTransfers", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenDefaultFreezeStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenDefaultKycStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenExpiryInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.Expiry",
                    "components": [
                        { "name": "second", "type": "int64", "internalType": "int64" },
                        {
                            "name": "autoRenewAccount",
                            "type": "address",
                            "internalType": "address"
                        },
                        { "name": "autoRenewPeriod", "type": "int64", "internalType": "int64" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.TokenInfo",
                    "components": [
                        {
                            "name": "token",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "components": [
                                { "name": "name", "type": "string", "internalType": "string" },
                                { "name": "symbol", "type": "string", "internalType": "string" },
                                {
                                    "name": "treasury",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                { "name": "memo", "type": "string", "internalType": "string" },
                                {
                                    "name": "tokenSupplyType",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "maxSupply", "type": "int64", "internalType": "int64" },
                                { "name": "freezeDefault", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "components": [
                                        {
                                            "name": "keyType",
                                            "type": "uint256",
                                            "internalType": "uint256"
                                        },
                                        {
                                            "name": "key",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "components": [
                                                {
                                                    "name": "inheritAccountKey",
                                                    "type": "bool",
                                                    "internalType": "bool"
                                                },
                                                {
                                                    "name": "contractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "ed25519",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "delegatableContractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "expiry",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "components": [
                                        {
                                            "name": "second",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "autoRenewAccount",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "autoRenewPeriod",
                                            "type": "int64",
                                            "internalType": "int64"
                                        }
                                    ]
                                }
                            ]
                        },
                        { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                        { "name": "deleted", "type": "bool", "internalType": "bool" },
                        { "name": "defaultKycStatus", "type": "bool", "internalType": "bool" },
                        { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                        {
                            "name": "fixedFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "components": [
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "fractionalFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                {
                                    "name": "minimumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "maximumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "netOfTransfers",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "royaltyFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        { "name": "ledgerId", "type": "string", "internalType": "string" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenKey",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "keyType", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.KeyValue",
                    "components": [
                        { "name": "inheritAccountKey", "type": "bool", "internalType": "bool" },
                        { "name": "contractId", "type": "address", "internalType": "address" },
                        { "name": "ed25519", "type": "bytes", "internalType": "bytes" },
                        { "name": "ECDSA_secp256k1", "type": "bytes", "internalType": "bytes" },
                        {
                            "name": "delegatableContractId",
                            "type": "address",
                            "internalType": "address"
                        }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenType",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int32", "internalType": "int32" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isApprovedForAll",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "owner", "type": "address", "internalType": "address" },
                { "name": "operator", "type": "address", "internalType": "address" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isToken",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bytes[]", "internalType": "bytes[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" },
                { "name": "serialNumbers", "type": "int64[]", "internalType": "int64[]" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ApprovalForAll",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "320:30792:1:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "320:30792:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13077:12;13510:2;13491:21;;;13483:63;;;;-1:-1:-1;;;13483:63:1;;216:2:39;13483:63:1;;;198:21:39;255:2;235:18;;;228:30;294:31;274:18;;;267:59;343:18;;13483:63:1;;;;;;;;;13557:24;13598:13;13609:1;13557:24;13598:8;13557:24;13598:13;:::i;:::-;13591:21;;;:::i;:::-;13584:29;;;-1:-1:-1;13651:10:1;13631:30;;13623:73;;;;-1:-1:-1;;;13623:73:1;;1253:2:39;13623:73:1;;;1235:21:39;1292:2;1272:18;;;1265:30;1331:32;1311:18;;;1304:60;1381:18;;13623:73:1;1051:354:39;13623:73:1;13707:13;13739:14;13750:2;13748:1;13739:8;13707:13;13739:14;:::i;:::-;13731:23;;;:::i;:::-;13723:32;;;-1:-1:-1;13790:4:1;13773:22;;13765:64;;;;-1:-1:-1;;;13765:64:1;;1991:2:39;13765:64:1;;;1973:21:39;2030:2;2010:18;;;2003:30;2069:31;2049:18;;;2042:59;2118:18;;13765:64:1;1789:353:39;13765:64:1;14008:20;:18;:20::i;:::-;320:30792;;;-1:-1:-1;320:30792:1;;;-1:-1:-1;;;;320:30792:1;5821:300;;;;;;:::i;:::-;;:::i;:::-;;;;3059:1:39;3048:21;;;;3030:40;;-1:-1:-1;;;;;3106:32:39;;;3101:2;3086:18;;3079:60;3003:18;5821:300:1;;;;;;;;5283:239;;;;;;:::i;:::-;;:::i;:::-;;;3714:1:39;3703:21;;;;3685:40;;3673:2;3658:18;5283:239:1;3543:188:39;28328:962:1;;;;;;:::i;:::-;;:::i;:::-;;8159:284;;;;;;:::i;:::-;;:::i;:::-;;;;4790:1:39;4779:21;;;;4761:40;;4844:14;;4837:22;4832:2;4817:18;;4810:50;4734:18;8159:284:1;4597:269:39;1638:272:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1916:1017::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3546:738::-;;;;;;:::i;:::-;;:::i;7018:253::-;;;;;;:::i;:::-;;:::i;7277:652::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2939:601::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5040:237::-;;;;;;:::i;:::-;;:::i;4290:744::-;;;;;;:::i;:::-;;:::i;7935:218::-;;;;;;:::i;:::-;;:::i;:::-;;;;17983:1:39;17972:21;;;;17954:40;;18041:1;18030:21;;;;18025:2;18010:18;;18003:49;17927:18;7935:218:1;17788:270:39;6439:262:1;;;;;;:::i;:::-;;:::i;6707:305::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;5528:287::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;9457:924::-;;;;;;:::i;:::-;;:::i;:::-;;;;20788:1:39;20777:21;;;20759:40;;20835:21;;;;20830:2;20815:18;;20808:49;20732:18;9457:924:1;20593:270:39;1329:303:1;;;;;;:::i;:::-;;:::i;:::-;;;21042:10:39;21030:23;;;21012:42;;21000:2;20985:18;1329:303:1;20868:192:39;8449:1002:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;6127:306::-;;;;;;:::i;:::-;;:::i;14137:3120::-;14193:12;14217:15;14242;14254:2;14251;14242:8;14217:15;14242;:::i;:::-;14235:23;;;:::i;:::-;14217:41;;14341:18;;;;;;;;;;;-1:-1:-1;;;14341:18:1;;;;;14300:27;14331:29;;14300:27;;-1:-1:-1;;14300:27:1;:::i;:::-;;;;;;;;:60;14296:134;;14376:43;;-1:-1:-1;;;14376:43:1;;25825:2:39;14376:43:1;;;25807:21:39;25864:2;25844:18;;;25837:30;25903:34;25883:18;;;25876:62;-1:-1:-1;;;25954:18:39;;;25947:31;25995:19;;14376:43:1;25623:397:39;14296:134:1;-1:-1:-1;;14491:10:1;:25;14487:2242;;-1:-1:-1;;;;;;;;;14536:38:1;;;14532:195;;14621:2;14602:8;:21;;14594:67;;;;-1:-1:-1;;;14594:67:1;;26227:2:39;14594:67:1;;;26209:21:39;26266:2;26246:18;;;26239:30;26305:34;26285:18;;;26278:62;-1:-1:-1;;;26356:18:39;;;26349:31;26397:19;;14594:67:1;26025:397:39;14594:67:1;14697:2;14701:10;14686:26;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14679:33;;;14137:3120;:::o;14532:195::-;-1:-1:-1;;;;;;;;;14744:44:1;;;14740:268;;14835:2;14816:8;:21;;14808:73;;;;-1:-1:-1;;;14808:73:1;;34589:2:39;14808:73:1;;;34571:21:39;34628:2;34608:18;;;34601:30;34667:34;34647:18;;;34640:62;-1:-1:-1;;;34718:18:39;;;34711:37;34765:19;;14808:73:1;34387:403:39;14808:73:1;14906:87;;;;14917:2;;14921:20;;14943:25;;14970:22;;14906:87;;;:::i;14740:268::-;-1:-1:-1;;;;;;;;;15025:50:1;;;15021:236;;15122:2;15103:8;:21;;15095:79;;;;-1:-1:-1;;;15095:79:1;;35969:2:39;15095:79:1;;;35951:21:39;36008:2;35988:18;;;35981:30;36047:34;36027:18;;;36020:62;-1:-1:-1;;;36098:18:39;;;36091:43;36151:19;;15095:79:1;35767:409:39;15095:79:1;15214:27;;15199:43;;;15210:2;15199:43;;;36356:36:39;-1:-1:-1;;;15214:27:1;;;;;36435:14:39;36428:22;36408:18;;;36401:50;36329:18;;15199:43:1;36181:276:39;15021:236:1;-1:-1:-1;;;;;;;;;15274:53:1;;;15270:245;;15374:2;15355:8;:21;;15347:82;;;;-1:-1:-1;;;15347:82:1;;36664:2:39;15347:82:1;;;36646:21:39;36703:2;36683:18;;;36676:30;36742:34;36722:18;;;36715:62;-1:-1:-1;;;36793:18:39;;;36786:46;36849:19;;15347:82:1;36462:412:39;15347:82:1;15469:30;;15454:46;;;15465:2;15454:46;;;36356:36:39;-1:-1:-1;;;15469:30:1;;;;;36435:14:39;36428:22;36408:18;;;36401:50;36329:18;;15454:46:1;36181:276:39;15270:245:1;-1:-1:-1;;;;;;;;;15532:44:1;;;15528:220;;15623:2;15604:8;:21;;15596:73;;;;-1:-1:-1;;;15596:73:1;;37081:2:39;15596:73:1;;;37063:21:39;37120:2;37100:18;;;37093:30;37159:34;37139:18;;;37132:62;-1:-1:-1;;;37210:18:39;;;37203:37;37257:19;;15596:73:1;36879:403:39;15596:73:1;15694:39;;;;15705:2;;15709:23;;15694:39;;;:::i;15528:220::-;-1:-1:-1;;;;;;;;;15765:38:1;;;15761:528;;15850:2;15831:8;:21;;15823:67;;;;-1:-1:-1;;;15823:67:1;;37832:2:39;15823:67:1;;;37814:21:39;37871:2;37851:18;;;37844:30;37910:34;37890:18;;;37883:62;-1:-1:-1;;;37961:18:39;;;37954:31;38002:19;;15823:67:1;37630:397:39;15823:67:1;15954:28;15939:9;15922:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;15912:38;;;;;;:70;15908:148;;16013:24;;;16024:2;16013:24;;;38414:36:39;16034:1:1;38466:18:39;;;38459:49;;;;38387:18;;16013:24:1;38237:277:39;15908:148:1;16119:32;16104:9;16087:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;16077:38;;;;;;:74;16073:152;;16182:24;;;16193:2;16182:24;;;38414:36:39;16203:1:1;38466:18:39;;;38459:49;;;;38387:18;;16182:24:1;38237:277:39;16073:152:1;16249:25;;;16260:2;16249:25;;;38414:36:39;-1:-1:-1;;38466:18:39;;;38459:49;;;;38387:18;;16249:25:1;38237:277:39;15761:528:1;-1:-1:-1;;;;;;;;;16306:33:1;;;16302:417;;16386:3;16367:8;:22;;16359:62;;;;-1:-1:-1;;;16359:62:1;;38721:2:39;16359:62:1;;;38703:21:39;38760:2;38740:18;;;38733:30;38799:29;38779:18;;;38772:57;38846:18;;16359:62:1;38519:351:39;16359:62:1;16439:12;16470:15;16482:2;16479;16470:8;16439:12;16470:15;:::i;:::-;16462:24;;;:::i;:::-;16454:33;;;-1:-1:-1;16505:10:1;16534:15;16546:2;16543;16534:8;16505:10;16534:15;:::i;:::-;16526:24;;;:::i;:::-;16518:33;;;-1:-1:-1;16569:14:1;16602:16;16614:3;16611:2;16602:8;16569:14;16602:16;:::i;:::-;16594:25;;;:::i;:::-;16586:34;-1:-1:-1;16638:25:1;16646:4;16652:2;16586:34;16638:7;:25::i;:::-;16688:16;;;16699:4;16688:16;;;39275:41:39;39248:18;16688:16:1;;;;;;;;;;;;16681:23;;;;;;14137:3120;:::o;16302:417::-;16867:24;;;;;;;;;;;-1:-1:-1;;;16867:24:1;;;;;16826:27;16857:35;;16826:27;;-1:-1:-1;;16826:27:1;:::i;:::-;;;;;;;;:66;16822:131;;16915:27;16933:8;16915:17;:27::i;:::-;16908:34;;;14137:3120;:::o;16822:131::-;17096:28;;;;;;;;;;;-1:-1:-1;;;17096:28:1;;;;;17055:27;17086:39;;17055:27;;-1:-1:-1;;17055:27:1;:::i;:::-;;;;;;;;:70;17051:136;;17148:28;17167:8;17148:18;:28::i;17051:136::-;17197:53;;-1:-1:-1;;;17197:53:1;;39529:2:39;17197:53:1;;;39511:21:39;39568:2;39548:18;;;39541:30;39607:34;39587:18;;;39580:62;-1:-1:-1;;;39658:18:39;;;39651:40;39708:19;;17197:53:1;39327:406:39;5821:300:1;5918:18;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;5974:19:1;::::1;5966:58;;;::::0;-1:-1:-1;;;5966:58:1;;40292:2:39;5966:58:1::1;::::0;::::1;40274:21:39::0;40331:2;40311:18;;;40304:30;40370:28;40350:18;;;40343:56;40416:18;;5966:58:1::1;40090:350:39::0;5966:58:1::1;6073:40;::::0;-1:-1:-1;;;6073:40:1;;::::1;::::0;::::1;40591:25:39::0;;;6068:2:1::1;::::0;-1:-1:-1;;;;;6073:26:1;::::1;::::0;::::1;::::0;40564:18:39;;6073:40:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6034:80:::0;;;;-1:-1:-1;5821:300:1;-1:-1:-1;;;5821:300:1:o;5283:239::-;5366:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;5422:16:::1;::::0;;5436:1:::1;5422:16:::0;;;;;::::1;::::0;;;5396:23:::1;::::0;5422:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;5422:16:1::1;5396:42;;5460:5;5448:6;5455:1;5448:9;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1::0;;;;;5448:17:1::1;;;-1:-1:-1::0;;;;;5448:17:1::1;;;::::0;::::1;5482:33;5499:7;5508:6;5482:16;:33::i;:::-;5475:40;;;904:1;5283:239:::0;;;;:::o;28328:962::-;-1:-1:-1;;;;;28408:18:1;;28404:376;;28457:6;28442:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;28404:376:1;;-1:-1:-1;28404:376:1;;28494:16;28513:20;28528:4;28513:14;:20::i;:::-;28606:15;;28494:39;;-1:-1:-1;28644:21:1;;;;28636:65;;;;-1:-1:-1;;;28636:65:1;;41622:2:39;28636:65:1;;;41604:21:39;41661:2;41641:18;;;41634:30;41700:33;41680:18;;;41673:61;41751:18;;28636:65:1;41420:355:39;28636:65:1;28743:24;;;28726:42;;28404:376;-1:-1:-1;;;;;28794:16:1;;28790:494;;28841:6;28826:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;28790:494:1;;-1:-1:-1;28790:494:1;;28878:14;28895:18;28910:2;28895:14;:18::i;:::-;28982:13;;28878:35;;-1:-1:-1;28927:17:1;29201:18;29213:6;28982:13;29201:18;:::i;:::-;29244:28;;;-1:-1:-1;;28790:494:1;28328:962;;;:::o;8159:284::-;8255:55;;-1:-1:-1;;;;;42077:32:39;;8255:55:1;;;42059:51:39;8209:5:1;;;;;;42032:18:39;;8255:55:1;;;-1:-1:-1;;8255:55:1;;;;;;;;;;;;;;-1:-1:-1;;;;;8255:55:1;-1:-1:-1;;;8255:55:1;;;8362:19;8255:55;;-1:-1:-1;;;;;;;;;;8362:10:1;;;:19;;8255:55;;8362:19;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8320:61;;;;8399:2;8403:7;:32;;;;;8434:1;8414:10;:17;:21;8403:32;8391:45;;;;;;;8159:284;;;:::o;1638:272::-;1701:18;1721:26;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1767:19:1;::::1;1759:59;;;::::0;-1:-1:-1;;;1759:59:1;;42629:2:39;1759:59:1::1;::::0;::::1;42611:21:39::0;42668:2;42648:18;;;42641:30;42707:29;42687:18;;;42680:57;42754:18;;1759:59:1::1;42427:351:39::0;1759:59:1::1;1857:46;::::0;-1:-1:-1;;;1857:46:1;;-1:-1:-1;;;;;1857:39:1;::::1;:46;::::0;::::1;42059:51:39::0;;;1857:39:1;::::1;::::0;42032:18:39;;1857:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1857:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1829:74:::0;;;;-1:-1:-1;1638:272:1;-1:-1:-1;;1638:272:1:o;1916:1017::-;2026:5;2033:27;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2080:19:1;::::1;2072:70;;;::::0;-1:-1:-1;;;2072:70:1;;54442:2:39;2072:70:1::1;::::0;::::1;54424:21:39::0;54481:2;54461:18;;;54454:30;54520:34;54500:18;;;54493:62;-1:-1:-1;;;54571:18:39;;;54564:36;54617:19;;2072:70:1::1;54240:402:39::0;2072:70:1::1;2204:46;::::0;-1:-1:-1;;;2204:46:1;;-1:-1:-1;;;;;2204:39:1;::::1;:46;::::0;::::1;42059:51:39::0;;;2154:18:1::1;::::0;;;2204:39;::::1;::::0;42032:18:39;;2204:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2204:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;2153:97;;;;2268:12;:17;;2284:1;2268:17;2260:79;;;::::0;-1:-1:-1;;;2260:79:1;;54849:2:39;2260:79:1::1;::::0;::::1;54831:21:39::0;54888:2;54868:18;;;54861:30;54927:34;54907:18;;;54900:62;-1:-1:-1;;;54978:18:39;;;54971:47;55035:19;;2260:79:1::1;54647:413:39::0;2260:79:1::1;2349:48;;:::i;:::-;2407:42:::0;;;2459:48:::1;::::0;;::::1;:33;::::0;::::1;:48:::0;2550:57:::1;::::0;-1:-1:-1;;;2550:57:1;;-1:-1:-1;;;;;2577:29:1;::::1;2550:57;::::0;::::1;40591:25:39::0;-1:-1:-1;;;;;2550:26:1;::::1;::::0;::::1;::::0;40564:18:39;;2550:57:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2517:90:1;;::::1;:30;::::0;::::1;:90:::0;2648:53:::1;::::0;-1:-1:-1;;;2648:53:1;;-1:-1:-1;;;;;2671:29:1;::::1;2648:53;::::0;::::1;40591:25:39::0;2648:22:1;;::::1;::::0;::::1;::::0;40564:18:39;;2648:53:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2617:84:1::1;:28;::::0;::::1;:84:::0;2901:2:::1;::::0;-1:-1:-1;2617:20:1;-1:-1:-1;;;904:1:1::1;1916:1017:::0;;;;;:::o;3546:738::-;3637:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;3691:1:::1;3675:6;:13;:17;3667:61;;;::::0;-1:-1:-1;;;3667:61:1;;55267:2:39;3667:61:1::1;::::0;::::1;55249:21:39::0;55306:2;55286:18;;;55279:30;55345:33;55325:18;;;55318:61;55396:18;;3667:61:1::1;55065:355:39::0;3667:61:1::1;-1:-1:-1::0;;;;;3746:21:1;::::1;3757:10;3746:21;3738:136;;;::::0;-1:-1:-1;;;3738:136:1;;55627:2:39;3738:136:1::1;::::0;::::1;55609:21:39::0;55666:3;55646:18;;;55639:31;55706:34;55686:18;;;55679:62;55777:34;55757:18;;;55750:62;55849:34;55828:19;;;55821:63;-1:-1:-1;;;55900:19:39;;;55893:37;55947:19;;3738:136:1::1;55425:547:39::0;3738:136:1::1;3889:9;3884:336;3908:6;:13;3904:1;:17;3884:336;;;3971:1;-1:-1:-1::0;;;;;3950:23:1::1;:6;3957:1;3950:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;3950:23:1::1;::::0;3942:66:::1;;;::::0;-1:-1:-1;;;3942:66:1;;56179:2:39;3942:66:1::1;::::0;::::1;56161:21:39::0;56218:2;56198:18;;;56191:30;56257:32;56237:18;;;56230:60;56307:18;;3942:66:1::1;55977:354:39::0;3942:66:1::1;4023:12;4041:6;4048:1;4041:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;4081:38:::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;4081:38:1::1;-1:-1:-1::0;;;4081:38:1::1;::::0;;4041:92;-1:-1:-1;;;;;4041:22:1;;::::1;::::0;:92:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4022:111;;;4155:7;4147:62;;;::::0;-1:-1:-1;;;4147:62:1;;56538:2:39;4147:62:1::1;::::0;::::1;56520:21:39::0;56577:2;56557:18;;;56550:30;56616:34;56596:18;;;56589:62;-1:-1:-1;;;56667:18:39;;;56660:40;56717:19;;4147:62:1::1;56336:406:39::0;4147:62:1::1;-1:-1:-1::0;3923:3:1::1;;3884:336;;;-1:-1:-1::0;4244:2:1::1;::::0;3546:738;-1:-1:-1;;;3546:738:1:o;7018:253::-;7093:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7124:19:1;::::1;7116:73;;;::::0;-1:-1:-1;;;7116:73:1;;56949:2:39;7116:73:1::1;::::0;::::1;56931:21:39::0;56988:2;56968:18;;;56961:30;57027:34;57007:18;;;57000:62;-1:-1:-1;;;57078:18:39;;;57071:39;57127:19;;7116:73:1::1;56747:405:39::0;7116:73:1::1;7206:58;::::0;-1:-1:-1;;;7206:58:1;;-1:-1:-1;;;;;7206:51:1;::::1;:58;::::0;::::1;42059:51:39::0;;;7206::1;::::1;::::0;42032:18:39;;7206:58:1::1;;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7199:65;;;;7018:253:::0;;;:::o;7277:652::-;7353:5;7360:15;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7395:19:1;::::1;7387:58;;;::::0;-1:-1:-1;;;7387:58:1;;57690:2:39;7387:58:1::1;::::0;::::1;57672:21:39::0;57729:2;57709:18;;;57702:30;57768:28;57748:18;;;57741:56;57814:18;;7387:58:1::1;57488:350:39::0;7387:58:1::1;7506:46;::::0;-1:-1:-1;;;7506:46:1;;-1:-1:-1;;;;;7506:39:1;::::1;:46;::::0;::::1;42059:51:39::0;;;7456:18:1::1;::::0;;;7506:39;::::1;::::0;42032:18:39;;7506:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;7506:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;7455:97;;;;7570:12;:18;;7586:2;7570:18;7562:68;;;::::0;-1:-1:-1;;;7562:68:1;;58045:2:39;7562:68:1::1;::::0;::::1;58027:21:39::0;58084:2;58064:18;;;58057:30;58123:34;58103:18;;;58096:62;-1:-1:-1;;;58174:18:39;;;58167:35;58219:19;;7562:68:1::1;57843:401:39::0;7562:68:1::1;7645:9;7640:218;7664:15:::0;;:25:::1;;::::0;:32;7660:36;::::1;7640:218;;;7761:7;7721:9;:15;;;:25;;;7747:1;7721:28;;;;;;;;:::i;:::-;;;;;;;:36;;;:47:::0;7717:131:::1;;7796:2;7800:9;:15;;;:25;;;7826:1;7800:28;;;;;;;;:::i;:::-;;;;;;;:32;;;7788:45;;;;;;;;;7717:131;7698:3;;7640:218;;;;7867:24;;:::i;:::-;7909:2;::::0;7913:8;;-1:-1:-1;7277:652:1;-1:-1:-1;;;;;7277:652:1:o;2939:601::-;3010:5;3017:24;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;3061:19:1;::::1;3053:67;;;::::0;-1:-1:-1;;;3053:67:1;;58451:2:39;3053:67:1::1;::::0;::::1;58433:21:39::0;58490:2;58470:18;;;58463:30;58529:34;58509:18;;;58502:62;-1:-1:-1;;;58580:18:39;;;58573:33;58623:19;;3053:67:1::1;58249:399:39::0;3053:67:1::1;3182:46;::::0;-1:-1:-1;;;3182:46:1;;-1:-1:-1;;;;;3182:39:1;::::1;:46;::::0;::::1;42059:51:39::0;;;3132:18:1::1;::::0;;;3182:39;::::1;::::0;42032:18:39;;3182:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;3182:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;3131:97;;;;3246:12;:17;;3262:1;3246:17;3238:76;;;::::0;-1:-1:-1;;;3238:76:1;;58855:2:39;3238:76:1::1;::::0;::::1;58837:21:39::0;58894:2;58874:18;;;58867:30;58933:34;58913:18;;;58906:62;-1:-1:-1;;;58984:18:39;;;58977:44;59038:19;;3238:76:1::1;58653:410:39::0;3238:76:1::1;3324:42;;:::i;:::-;3406:9;3376:17;:27;;:39;;;;3473:5;-1:-1:-1::0;;;;;3466:22:1::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3455:37;;3425:26;::::0;::::1;:67:::0;3511:2:::1;::::0;-1:-1:-1;3425:17:1;-1:-1:-1;;;2939:601:1;;;:::o;5040:237::-;5122:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;5178:16:::1;::::0;;5192:1:::1;5178:16:::0;;;;;::::1;::::0;;;5152:23:::1;::::0;5178:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;5178:16:1::1;5152:42;;5216:5;5204:6;5211:1;5204:9;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1::0;;;;;5204:17:1::1;;;-1:-1:-1::0;;;;;5204:17:1::1;;;::::0;::::1;5238:32;5254:7;5263:6;5238:15;:32::i;4290:744::-:0;4382:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;4436:1:::1;4420:6;:13;:17;4412:62;;;::::0;-1:-1:-1;;;4412:62:1;;59548:2:39;4412:62:1::1;::::0;::::1;59530:21:39::0;;;59567:18;;;59560:30;59626:34;59606:18;;;59599:62;59678:18;;4412:62:1::1;59346:356:39::0;4412:62:1::1;-1:-1:-1::0;;;;;4492:21:1;::::1;4503:10;4492:21;4484:137;;;::::0;-1:-1:-1;;;4484:137:1;;59909:2:39;4484:137:1::1;::::0;::::1;59891:21:39::0;59948:3;59928:18;;;59921:31;59988:34;59968:18;;;59961:62;60059:34;60039:18;;;60032:62;60131:34;60110:19;;;60103:63;-1:-1:-1;;;60182:19:39;;;60175:38;60230:19;;4484:137:1::1;59707:548:39::0;4484:137:1::1;4636:9;4631:339;4655:6;:13;4651:1;:17;4631:339;;;4718:1;-1:-1:-1::0;;;;;4697:23:1::1;:6;4704:1;4697:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4697:23:1::1;::::0;4689:67:::1;;;::::0;-1:-1:-1;;;4689:67:1;;60462:2:39;4689:67:1::1;::::0;::::1;60444:21:39::0;60501:2;60481:18;;;60474:30;60540:33;60520:18;;;60513:61;60591:18;;4689:67:1::1;60260:355:39::0;4689:67:1::1;4771:12;4789:6;4796:1;4789:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;4829:39:::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;4829:39:1::1;-1:-1:-1::0;;;4829:39:1::1;::::0;;4789:93;-1:-1:-1;;;;;4789:22:1;;::::1;::::0;:93:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4770:112;;;4904:7;4896:63;;;::::0;-1:-1:-1;;;4896:63:1;;60822:2:39;4896:63:1::1;::::0;::::1;60804:21:39::0;60861:2;60841:18;;;60834:30;60900:34;60880:18;;;60873:62;-1:-1:-1;;;60951:18:39;;;60944:41;61002:19;;4896:63:1::1;60620:407:39::0;4896:63:1::1;-1:-1:-1::0;4670:3:1::1;;4631:339;;7935:218:::0;7998:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;8030:19:1;::::1;8022:61;;;::::0;-1:-1:-1;;;8022:61:1;;61234:2:39;8022:61:1::1;::::0;::::1;61216:21:39::0;61273:2;61253:18;;;61246:30;61312:31;61292:18;;;61285:59;61361:18;;8022:61:1::1;61032:353:39::0;8022:61:1::1;8100:46;::::0;-1:-1:-1;;;8100:46:1;;-1:-1:-1;;;;;8100:39:1;::::1;:46;::::0;::::1;42059:51:39::0;;;8100:39:1;::::1;::::0;42032:18:39;;8100:46:1::1;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6439:262::-:0;6517:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6548:19:1;::::1;6540:76;;;::::0;-1:-1:-1;;;6540:76:1;;62006:2:39;6540:76:1::1;::::0;::::1;61988:21:39::0;62045:2;62025:18;;;62018:30;62084:34;62064:18;;;62057:62;-1:-1:-1;;;62135:18:39;;;62128:42;62187:19;;6540:76:1::1;61804:408:39::0;6540:76:1::1;6633:61;::::0;-1:-1:-1;;;6633:61:1;;-1:-1:-1;;;;;6633:54:1;::::1;:61;::::0;::::1;42059:51:39::0;;;6633:54:1;::::1;::::0;42032:18:39;;6633:61:1::1;41913:203:39::0;6707:305:1;6790:5;6797:17;;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6879:19:1;::::1;6871:65;;;::::0;-1:-1:-1;;;6871:65:1;;62419:2:39;6871:65:1::1;::::0;::::1;62401:21:39::0;62458:2;62438:18;;;62431:30;62497:34;62477:18;;;62470:62;-1:-1:-1;;;62548:18:39;;;62541:31;62589:19;;6871:65:1::1;62217:397:39::0;6871:65:1::1;6953:52;::::0;-1:-1:-1;;;6953:52:1;;-1:-1:-1;;;;;6953:45:1;::::1;:52;::::0;::::1;42059:51:39::0;;;6953:45:1;::::1;::::0;42032:18:39;;6953:52:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;6953:52:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;6946:59;;;;;;;;6707:305:::0;;;;;:::o;5528:287::-;-1:-1:-1;;;;;;;;5597:18:1;-1:-1:-1;;;;;;;;;;;;;;;846:4:1;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;5660:19:1;::::1;5652:65;;;::::0;-1:-1:-1;;;5652:65:1;;63922:2:39;5652:65:1::1;::::0;::::1;63904:21:39::0;63961:2;63941:18;;;63934:30;64000:34;63980:18;;;63973:62;-1:-1:-1;;;64051:18:39;;;64044:31;64092:19;;5652:65:1::1;63720:397:39::0;5652:65:1::1;5756:52;::::0;-1:-1:-1;;;5756:52:1;;-1:-1:-1;;;;;5756:45:1;::::1;:52;::::0;::::1;42059:51:39::0;;;5756:45:1;::::1;::::0;42032:18:39;;5756:52:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9457:924::-:0;9556:18;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;9629:19:1;::::1;9621:56;;;::::0;-1:-1:-1;;;9621:56:1;;64701:2:39;9621:56:1::1;::::0;::::1;64683:21:39::0;64740:2;64720:18;;;64713:30;64779:26;64759:18;;;64752:54;64823:18;;9621:56:1::1;64499:348:39::0;9621:56:1::1;9704:1;9695:6;:10;;;9687:48;;;::::0;-1:-1:-1;;;9687:48:1;;65054:2:39;9687:48:1::1;::::0;::::1;65036:21:39::0;65093:2;65073:18;;;65066:30;65132:27;65112:18;;;65105:55;65177:18;;9687:48:1::1;64852:349:39::0;9687:48:1::1;9806:46;::::0;-1:-1:-1;;;9806:46:1;;-1:-1:-1;;;;;9806:39:1;::::1;:46;::::0;::::1;42059:51:39::0;;;9747:27:1::1;::::0;;;9806:39;::::1;::::0;42032:18:39;;9806:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;9806:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;9746:106;;;;9870:21;:27;;9895:2;9870:27;9862:75;;;::::0;-1:-1:-1;;;9862:75:1;;65408:2:39;9862:75:1::1;::::0;::::1;65390:21:39::0;65447:2;65427:18;;;65420:30;65486:34;65466:18;;;65459:62;-1:-1:-1;;;65537:18:39;;;65530:33;65580:19;;9862:75:1::1;65206:399:39::0;9862:75:1::1;9974:15:::0;;:24:::1;;::::0;-1:-1:-1;;;;;10016:29:1;::::1;10008:68;;;::::0;-1:-1:-1;;;10008:68:1;;65812:2:39;10008:68:1::1;::::0;::::1;65794:21:39::0;65851:2;65831:18;;;65824:30;65890:28;65870:18;;;65863:56;65936:18;;10008:68:1::1;65610:350:39::0;10008:68:1::1;10087:86;::::0;-1:-1:-1;;;10087:86:1;;-1:-1:-1;;;;;66185:32:39;;;10087:86:1::1;::::0;::::1;66167:51:39::0;10145:1:1::1;66234:18:39::0;;;66227:60;-1:-1:-1;;;;;10149:23:1;::::1;66303:18:39::0;;;66296:34;10087:32:1;::::1;::::0;::::1;::::0;66140:18:39;;10087:86:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10199:2;10184:17;;10279:5;-1:-1:-1::0;;;;;10272:25:1::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10242:59;;10337:1;10319:14;:19;;;;10311:63;;;::::0;-1:-1:-1;;;10311:63:1;;66778:2:39;10311:63:1::1;::::0;::::1;66760:21:39::0;66817:2;66797:18;;;66790:30;66856:33;66836:18;;;66829:61;66907:18;;10311:63:1::1;66576:355:39::0;10311:63:1::1;9611:770;;;9457:924:::0;;;;;;:::o;1329:303::-;1407:16;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;1538:40:::1;::::0;;-1:-1:-1;;;1538:40:1::1;::::0;::::1;67117:46:39::0;;;1435:15:1::1;67179:11:39::0;;;67172:72;;;-1:-1:-1;;;;;;67282:2:39;67278:15;;;67274:53;67260:12;;;67253:75;1453:26:1;;1435:15;;;;67344:12:39;1538:40:1::1;;;;;;;;;;;;1530:49;;;:::i;:::-;1613:11:::0;;1329:303;-1:-1:-1;;;;;1329:303:1:o;8449:1002::-;8548:18;;8606:28;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;8659:19:1;::::1;8651:56;;;::::0;-1:-1:-1;;;8651:56:1;;67871:2:39;8651:56:1::1;::::0;::::1;67853:21:39::0;67910:2;67890:18;;;67883:30;67949:26;67929:18;;;67922:54;67993:18;;8651:56:1::1;67669:348:39::0;8651:56:1::1;8734:1;8725:6;:10;;;8717:48;;;::::0;-1:-1:-1;;;8717:48:1;;68224:2:39;8717:48:1::1;::::0;::::1;68206:21:39::0;68263:2;68243:18;;;68236:30;68302:27;68282:18;;;68275:55;68347:18;;8717:48:1::1;68022:349:39::0;8717:48:1::1;8836:46;::::0;-1:-1:-1;;;8836:46:1;;-1:-1:-1;;;;;8836:39:1;::::1;:46;::::0;::::1;42059:51:39::0;;;8777:27:1::1;::::0;;;8836:39;::::1;::::0;42032:18:39;;8836:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;8836:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;8776:106;;;;8900:21;:27;;8925:2;8900:27;8892:75;;;::::0;-1:-1:-1;;;8892:75:1;;68578:2:39;8892:75:1::1;::::0;::::1;68560:21:39::0;68617:2;68597:18;;;68590:30;68656:34;68636:18;;;68629:62;-1:-1:-1;;;68707:18:39;;;68700:33;68750:19;;8892:75:1::1;68376:399:39::0;8892:75:1::1;9004:15:::0;;:24:::1;;::::0;-1:-1:-1;;;;;9046:29:1;::::1;9038:68;;;::::0;-1:-1:-1;;;9038:68:1;;68982:2:39;9038:68:1::1;::::0;::::1;68964:21:39::0;69021:2;69001:18;;;68994:30;69060:28;69040:18;;;69033:56;69106:18;;9038:68:1::1;68780:350:39::0;9038:68:1::1;9117:86;::::0;-1:-1:-1;;;9117:86:1;;9158:1:::1;9117:86;::::0;::::1;66167:51:39::0;-1:-1:-1;;;;;66254:32:39;;;66234:18;;;66227:60;-1:-1:-1;;;;;9179:23:1;::::1;66303:18:39::0;;;66296:34;9117:32:1;::::1;::::0;::::1;::::0;66140:18:39;;9117:86:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9229:2;9214:17;;9309:5;-1:-1:-1::0;;;;;9302:25:1::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9357:14;::::0;;9369:1:::1;9357:14:::0;;;::::1;::::0;::::1;::::0;;;9272:59;;-1:-1:-1;9357:14:1::1;9341:30;;9407:1;9389:14;:19;;;;9381:63;;;::::0;-1:-1:-1;;;9381:63:1;;69337:2:39;9381:63:1::1;::::0;::::1;69319:21:39::0;69376:2;69356:18;;;69349:30;69415:33;69395:18;;;69388:61;69466:18;;9381:63:1::1;69135:355:39::0;9381:63:1::1;8641:810;;;8449:1002:::0;;;;;;;:::o;6127:306::-;6262:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6293:19:1;::::1;6285:63;;;::::0;-1:-1:-1;;;6285:63:1;;69697:2:39;6285:63:1::1;::::0;::::1;69679:21:39::0;69736:2;69716:18;;;69709:30;69775:33;69755:18;;;69748:61;69826:18;;6285:63:1::1;69495:355:39::0;6285:63:1::1;6377:48;::::0;-1:-1:-1;;;6377:48:1;;-1:-1:-1;;;;;70047:32:39;;;6377:48:1::1;::::0;::::1;70029:51:39::0;70116:32;;;70096:18;;;70089:60;6372:2:1::1;::::0;6377:31;;::::1;::::0;::::1;::::0;70002:18:39;;6377:48:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6358:68;;;;6127:306:::0;;;;;;:::o;17263:2453::-;17324:12;-1:-1:-1;;;;;;;;;17352:32:1;;;17348:86;;17418:4;17407:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;17400:23;;17263:2453;;;:::o;17348:86::-;-1:-1:-1;;;;;;;;;17447:36:1;;;17443:94;;17517:8;;17506:20;;;17517:8;;;;17506:20;;;70739:36:39;70712:18;17506:20:1;70597:184:39;17443:94:1;-1:-1:-1;;;;;;;;;17550:39:1;;;17546:100;;17623:11;;17612:23;;;;;;40591:25:39;;40579:2;40564:18;;40445:177;17546:100:1;-1:-1:-1;;;;;;;;;17659:34:1;;;17655:90;;17727:6;17716:18;;;;;;;;:::i;17655:90::-;-1:-1:-1;;;;;;;;;17758:37:1;;;17754:251;;17838:2;17819:8;:21;;17811:64;;;;-1:-1:-1;;;17811:64:1;;70988:2:39;17811:64:1;;;70970:21:39;71027:2;71007:18;;;71000:30;71066:32;71046:18;;;71039:60;71116:18;;17811:64:1;70786:354:39;17811:64:1;17890:15;17924;17936:2;17933;17924:8;17890:15;17924;:::i;:::-;17916:24;;;:::i;:::-;17908:33;;17890:51;;17973:20;17985:7;17973:11;:20::i;:::-;17962:32;;;;;;40591:25:39;;40579:2;40564:18;;40445:177;17962:32:1;;;;;;;;;;;;;17955:39;;;17263:2453;;;:::o;17754:251::-;-1:-1:-1;;;;;;;;;18018:36:1;;;18014:374;;18097:2;18078:8;:21;;18070:63;;;;-1:-1:-1;;;18070:63:1;;71347:2:39;18070:63:1;;;71329:21:39;71386:2;71366:18;;;71359:30;71425:31;71405:18;;;71398:59;71474:18;;18070:63:1;71145:353:39;18070:63:1;18148:10;18177:15;18189:2;18186;18177:8;18148:10;18177:15;:::i;:::-;18169:24;;;:::i;:::-;18161:33;;;-1:-1:-1;18208:14:1;18241:15;18253:2;18250;18241:8;18208:14;18241:15;:::i;:::-;18233:24;;;:::i;:::-;18225:33;-1:-1:-1;18288:10:1;18312:28;18288:10;18329:2;18225:33;18312:9;:28::i;:::-;18361:16;;;18372:4;18361:16;;;39275:41:39;39248:18;18361:16:1;;;;;;;;;;;;;18354:23;;;;;17263:2453;;;:::o;18014:374::-;-1:-1:-1;;;;;;;;;18401:40:1;;;18397:497;;18484:3;18465:8;:22;;18457:65;;;;-1:-1:-1;;;18457:65:1;;71705:2:39;18457:65:1;;;71687:21:39;71744:2;71724:18;;;71717:30;71783:32;71763:18;;;71756:60;71833:18;;18457:65:1;71503:354:39;18457:65:1;18537:12;18568:15;18580:2;18577;18568:8;18537:12;18568:15;:::i;:::-;18560:24;;;:::i;:::-;18552:33;;;-1:-1:-1;18599:10:1;18628:15;18640:2;18637;18628:8;18599:10;18628:15;:::i;:::-;18620:24;;;:::i;:::-;18612:33;;;-1:-1:-1;18659:14:1;18692:16;18704:3;18701:2;18692:8;18659:14;18692:16;:::i;:::-;18684:25;;;:::i;:::-;18676:34;-1:-1:-1;18742:10:1;18767:38;18783:4;18742:10;18676:34;18767:15;:38::i;:::-;18819:27;18829:4;18835:2;18839:6;18819:9;:27::i;:::-;18867:16;;;18878:4;18867:16;;;39275:41:39;39248:18;18867:16:1;;;;;;;;;;;;18860:23;;;;;;17263:2453;;;:::o;18397:497::-;-1:-1:-1;;;;;;;;;18907:37:1;;;18903:321;;18987:2;18968:8;:21;;18960:64;;;;-1:-1:-1;;;18960:64:1;;72064:2:39;18960:64:1;;;72046:21:39;72103:2;72083:18;;;72076:30;72142:32;72122:18;;;72115:60;72192:18;;18960:64:1;71862:354:39;18960:64:1;19039:13;19071:15;19083:2;19080;19071:8;19039:13;19071:15;:::i;:::-;19063:24;;;:::i;:::-;19055:33;;;-1:-1:-1;19102:15:1;19136;19148:2;19145;19136:8;19102:15;19136;:::i;:::-;19128:24;;;:::i;:::-;19120:33;;19102:51;;19185:27;19197:5;19204:7;19185:11;:27::i;:::-;19174:39;;;;;;40591:25:39;;40579:2;40564:18;;40445:177;19174:39:1;;;;;;;;;;;;;19167:46;;;;17263:2453;;;:::o;18903:321::-;-1:-1:-1;;;;;;;;;19237:35:1;;;19233:432;;19315:2;19296:8;:21;;19288:62;;;;-1:-1:-1;;;19288:62:1;;72423:2:39;19288:62:1;;;72405:21:39;72462:2;72442:18;;;72435:30;72501;72481:18;;;72474:58;72549:18;;19288:62:1;72221:352:39;19288:62:1;19365:15;19399;19411:2;19408;19399:8;19365:15;19399;:::i;:::-;19391:24;;;:::i;:::-;19383:33;;;-1:-1:-1;19430:14:1;19463:15;19475:2;19472;19463:8;19430:14;19463:15;:::i;:::-;19455:24;;;:::i;:::-;19447:33;-1:-1:-1;19510:10:1;19534:32;19510:10;19550:7;19447:33;19534:8;:32::i;:::-;19601:7;-1:-1:-1;;;;;19585:32:1;19594:5;-1:-1:-1;;;;;19585:32:1;;19610:6;19585:32;;;;40591:25:39;;40579:2;40564:18;;40445:177;19585:32:1;;;;;;;;19638:16;;;19649:4;19638:16;;;39275:41:39;39248:18;19638:16:1;39135:187:39;19233:432:1;19681:28;19700:8;19681:18;:28::i;19722:2981::-;19784:12;-1:-1:-1;;;;;;;;;19812:33:1;;;19808:87;;19879:4;19868:16;;;;;;;;:::i;19808:87::-;-1:-1:-1;;;;;;;;;19908:35:1;;;19904:91;;19977:6;19966:18;;;;;;;;:::i;19904:91::-;-1:-1:-1;;;;;;;;;20008:37:1;;;20004:250;;20088:2;20069:8;:21;;20061:63;;;;-1:-1:-1;;;20061:63:1;;72780:2:39;20061:63:1;;;72762:21:39;72819:2;72799:18;;;72792:30;72858:31;72838:18;;;72831:59;72907:18;;20061:63:1;72578:353:39;20061:63:1;20138:16;20173:15;20185:2;20182;20173:8;20138:16;20173:15;:::i;:::-;20165:24;;;:::i;:::-;20157:33;-1:-1:-1;20222:20:1;20157:33;20222:10;:20::i;:::-;20211:32;;;;;;;;:::i;20004:250::-;-1:-1:-1;;;;;;;;;20267:40:1;;;20263:101;;20341:11;;20330:23;;;;;;40591:25:39;;40579:2;40564:18;;40445:177;20263:101:1;-1:-1:-1;;;;;;;;;20377:38:1;;;20373:247;;20458:2;20439:8;:21;;20431:64;;;;-1:-1:-1;;;20431:64:1;;70988:2:39;20431:64:1;;;70970:21:39;71027:2;71007:18;;;71000:30;71066:32;71046:18;;;71039:60;71116:18;;20431:64:1;70786:354:39;20373:247:1;-1:-1:-1;;;;;;;;;20633:36:1;;;20629:247;;20712:2;20693:8;:21;;20685:62;;;;-1:-1:-1;;;20685:62:1;;73363:2:39;20685:62:1;;;73345:21:39;73402:2;73382:18;;;73375:30;73441;73421:18;;;73414:58;73489:18;;20685:62:1;73161:352:39;20685:62:1;20761:16;20796:15;20808:2;20805;20796:8;20761:16;20796:15;:::i;:::-;20788:24;;;:::i;:::-;20780:33;-1:-1:-1;20845:19:1;20780:33;20845:9;:19::i;:::-;20834:31;;;-1:-1:-1;;;;;42077:32:39;;;20834:31:1;;;42059:51:39;42032:18;20834:31:1;41913:203:39;20629:247:1;-1:-1:-1;;;;;;;;;20889:41:1;;;20885:412;;20973:3;20954:8;:22;;20946:68;;;;-1:-1:-1;;;20946:68:1;;73720:2:39;20946:68:1;;;73702:21:39;73759:2;73739:18;;;73732:30;73798:34;73778:18;;;73771:62;-1:-1:-1;;;73849:18:39;;;73842:31;73890:19;;20946:68:1;73518:397:39;20946:68:1;21028:12;21059:15;21071:2;21068;21059:8;21028:12;21059:15;:::i;:::-;21051:24;;;:::i;:::-;21043:33;;;-1:-1:-1;21090:10:1;21119:15;21131:2;21128;21119:8;21090:10;21119:15;:::i;:::-;21111:24;;;:::i;:::-;21103:33;;;-1:-1:-1;21150:16:1;21185;21197:3;21194:2;21185:8;21150:16;21185;:::i;:::-;21177:25;;;:::i;:::-;21169:34;-1:-1:-1;21217:32:1;21230:4;21236:2;21169:34;21217:12;:32::i;20885:412::-;-1:-1:-1;;;;;;;;;21310:36:1;;;21306:344;;21389:2;21370:8;:21;;21362:62;;;;-1:-1:-1;;;21362:62:1;;72423:2:39;21362:62:1;;;72405:21:39;72462:2;72442:18;;;72435:30;72501;72481:18;;;72474:58;72549:18;;21362:62:1;72221:352:39;21362:62:1;21438:15;21472;21484:2;21481;21472:8;21438:15;21472;:::i;:::-;21464:24;;;:::i;:::-;21456:33;;;-1:-1:-1;21503:16:1;21538:15;21550:2;21547;21538:8;21503:16;21538:15;:::i;:::-;21530:24;;;:::i;:::-;21522:33;-1:-1:-1;21569:33:1;21578:7;21522:33;21597:4;21569:8;:33::i;:::-;21623:16;;;21634:4;21623:16;;;39275:41:39;39248:18;21623:16:1;39135:187:39;21306:344:1;-1:-1:-1;;;;;;;;;21663:46:1;;;21659:372;;21752:2;21733:8;:21;;21725:72;;;;-1:-1:-1;;;21725:72:1;;74122:2:39;21725:72:1;;;74104:21:39;74161:2;74141:18;;;74134:30;74200:34;74180:18;;;74173:62;-1:-1:-1;;;74251:18:39;;;74244:36;74297:19;;21725:72:1;73920:402:39;21725:72:1;21811:16;21846:15;21858:2;21855;21846:8;21811:16;21846:15;:::i;:::-;21838:24;;;:::i;:::-;21830:33;;;-1:-1:-1;21877:13:1;21909:15;21921:2;21918;21909:8;21877:13;21909:15;:::i;:::-;21901:24;;;:::i;:::-;21930:1;21893:38;;-1:-1:-1;21945:38:1;21964:8;21893:38;21945:18;:38::i;21659:372::-;-1:-1:-1;;;;;;;;;22044:40:1;;;22040:259;;22127:2;22108:8;:21;;22100:66;;;;-1:-1:-1;;;22100:66:1;;74529:2:39;22100:66:1;;;74511:21:39;;;74548:18;;;74541:30;74607:34;74587:18;;;74580:62;74659:18;;22100:66:1;74327:356:39;22100:66:1;22180:16;22215:15;22227:2;22224;22215:8;22180:16;22215:15;:::i;:::-;22207:24;;;:::i;:::-;22199:33;-1:-1:-1;22264:23:1;22199:33;22264:13;:23::i;22040:259::-;-1:-1:-1;;;;;;;;;22312:45:1;;;22308:344;;22400:2;22381:8;:21;;22373:71;;;;-1:-1:-1;;;22373:71:1;;74890:2:39;22373:71:1;;;74872:21:39;74929:2;74909:18;;;74902:30;74968:34;74948:18;;;74941:62;-1:-1:-1;;;75019:18:39;;;75012:35;75064:19;;22373:71:1;74688:401:39;22373:71:1;22458:13;22490:15;22502:2;22499;22490:8;22458:13;22490:15;:::i;:::-;22482:24;;;:::i;:::-;22474:33;;;-1:-1:-1;22521:16:1;22556:15;22568:2;22565;22556:8;22521:16;22556:15;:::i;:::-;22548:24;;;:::i;:::-;22540:33;;22521:52;;22605:35;22624:5;22631:8;22605:18;:35::i;:::-;22594:47;;;39300:14:39;;39293:22;22594:47:1;;;39275:41:39;39248:18;22594:47:1;39135:187:39;23540:312:1;23725:52;;-1:-1:-1;;;23725:52:1;;-1:-1:-1;;;;;42077:32:39;;23725:52:1;;;42059:51:39;23607:7:1;;-1:-1:-1;;;23644:25:1;23607:7;;;;311:5;;23725:43;;42032:18:39;;23725:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23706:71;;23819:8;23829:3;23834:9;23802:42;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;23794:51;;;:::i;:::-;23787:58;23540:312;-1:-1:-1;;;;;23540:312:1:o;25749:169::-;25804:14;25830:12;25845:23;25860:7;25845:14;:23::i;:::-;25899:11;;25749:169;-1:-1:-1;;;25749:169:1:o;26950:272::-;-1:-1:-1;;;;;27037:18:1;;27029:50;;;;-1:-1:-1;;;27029:50:1;;75996:2:39;27029:50:1;;;75978:21:39;76035:2;76015:18;;;76008:30;-1:-1:-1;;;76054:18:39;;;76047:49;76113:18;;27029:50:1;75794:343:39;27029:50:1;-1:-1:-1;;;;;27097:16:1;;27089:50;;;;-1:-1:-1;;;27089:50:1;;76344:2:39;27089:50:1;;;76326:21:39;76383:2;76363:18;;;76356:30;-1:-1:-1;;;76402:18:39;;;76395:51;76463:18;;27089:50:1;76142:345:39;27089:50:1;27149:25;27157:4;27163:2;27167:6;27149:7;:25::i;:::-;27204:2;-1:-1:-1;;;;;27189:26:1;27198:4;-1:-1:-1;;;;;27189:26:1;;27208:6;27189:26;;;;40591:25:39;;40579:2;40564:18;;40445:177;27189:26:1;;;;;;;;26950:272;;;:::o;30324:404::-;30415:24;30442:27;30454:5;30461:7;30442:11;:27::i;:::-;30415:54;;-1:-1:-1;;30483:16:1;:37;30479:243;;30564:6;30544:16;:26;;30536:68;;;;-1:-1:-1;;;30536:68:1;;76694:2:39;30536:68:1;;;76676:21:39;76733:2;76713:18;;;76706:30;76772:31;76752:18;;;76745:59;76821:18;;30536:68:1;76492:353:39;30536:68:1;30646:51;30655:5;30662:7;30690:6;30671:16;:25;30646:8;:51::i;:::-;30405:323;30324:404;;;:::o;25924:191::-;25994:14;26020:12;26035:30;26050:5;26057:7;26035:14;:30::i;:::-;26096:11;;25924:191;-1:-1:-1;;;;25924:191:1:o;29296:330::-;-1:-1:-1;;;;;29388:19:1;;29380:55;;;;-1:-1:-1;;;29380:55:1;;77052:2:39;29380:55:1;;;77034:21:39;77091:2;77071:18;;;77064:30;77130:25;77110:18;;;77103:53;77173:18;;29380:55:1;76850:347:39;29380:55:1;-1:-1:-1;;;;;29453:21:1;;29445:59;;;;-1:-1:-1;;;29445:59:1;;77404:2:39;29445:59:1;;;77386:21:39;77443:2;77423:18;;;77416:30;77482:27;77462:18;;;77455:55;77527:18;;29445:59:1;77202:349:39;29445:59:1;29514:21;29538:30;29553:5;29560:7;29538:14;:30::i;:::-;29589:29;;;;-1:-1:-1;;;29296:330:1:o;22709:769::-;22771:12;-1:-1:-1;;;;;;;;;22799:38:1;;;22795:194;;22853:12;22868:29;22886:10;22868:17;:29::i;:::-;22853:44;;22935:4;22929;22922:18;22973:4;22962:16;;;;;;39300:14:39;39293:22;39275:41;;39263:2;39248:18;;39135:187;22795:194:1;-1:-1:-1;;;;;;;;;23002:39:1;;;22998:196;;23057:12;23072:29;23090:10;23072:17;:29::i;:::-;23139:5;23126:19;;23167:16;;;23178:4;23167:16;;;39275:41:39;23057:44:1;;-1:-1:-1;39248:18:39;23167:16:1;39135:187:39;22998:196:1;-1:-1:-1;;;;;;;;;23207:41:1;;;23203:218;;23264:12;23279:29;23297:10;23279:17;:29::i;:::-;23362:11;;23395:15;;;39300:14:39;;39293:22;23395:15:1;;;39275:41:39;23362:11:1;;-1:-1:-1;23362:11:1;;39248:18:39;23395:15:1;39135:187:39;23203:218:1;23430:41;;-1:-1:-1;;;23430:41:1;;77758:2:39;23430:41:1;;;77740:21:39;77797:2;77777:18;;;77770:30;77836:33;77816:18;;;77809:61;77887:18;;23430:41:1;77556:355:39;26121:225:1;26176:17;26205:12;26220:31;26241:8;26220:13;:31::i;:::-;26205:46;;26261:19;26314:4;26301:17;;26335:4;26329:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26195:151;;26121:225;;;:::o;26352:173::-;26406:13;26431:12;26446:30;26466:8;26446:12;:30::i;27228:1094::-;-1:-1:-1;;;;;27320:18:1;;27312:50;;;;-1:-1:-1;;;27312:50:1;;75996:2:39;27312:50:1;;;75978:21:39;76035:2;76015:18;;;76008:30;-1:-1:-1;;;76054:18:39;;;76047:49;76113:18;;27312:50:1;75794:343:39;27312:50:1;-1:-1:-1;;;;;27380:16:1;;27372:50;;;;-1:-1:-1;;;27372:50:1;;76344:2:39;27372:50:1;;;76326:21:39;76383:2;76363:18;;;76356:30;-1:-1:-1;;;76402:18:39;;;76395:51;76463:18;;27372:50:1;76142:345:39;27372:50:1;27490:12;27505:30;27525:8;27505:12;:30::i;:::-;27588:11;;27490:45;;-1:-1:-1;;;;;;27618:13:1;;;;;;;27610:50;;;;-1:-1:-1;;;27610:50:1;;78118:2:39;27610:50:1;;;78100:21:39;78157:2;78137:18;;;78130:30;78196:26;78176:18;;;78169:54;78240:18;;27610:50:1;77916:348:39;27610:50:1;27750:10;-1:-1:-1;;;;;27750:18:1;;;27746:156;;27806:23;27820:8;27806:13;:23::i;:::-;-1:-1:-1;;;;;27792:37:1;:10;-1:-1:-1;;;;;27792:37:1;;:77;;;;27833:36;27852:4;27858:10;27833:18;:36::i;:::-;27784:107;;;;-1:-1:-1;;;27784:107:1;;78471:2:39;27784:107:1;;;78453:21:39;78510:2;78490:18;;;78483:30;-1:-1:-1;;;78529:18:39;;;78522:47;78586:18;;27784:107:1;78269:341:39;27784:107:1;27938:20;27961:34;27985:8;27961:16;:34::i;:::-;27938:57;;28037:1;28023:12;28016:23;28085:28;28116:31;28138:4;28144:2;28116:21;:31::i;:::-;28085:62;;28197:5;28175:20;28168:35;28268:2;28262:4;28255:16;28302:2;-1:-1:-1;;;;;28287:28:1;28296:4;-1:-1:-1;;;;;28287:28:1;;28306:8;28287:28;;;;40591:25:39;;40579:2;40564:18;;40445:177;28287:28:1;;;;;;;;27302:1020;;;;27228:1094;;;:::o;29632:567::-;29789:13;29805:19;29815:8;29805:9;:19::i;:::-;29789:35;-1:-1:-1;29842:10:1;-1:-1:-1;;;;;29842:19:1;;;;:60;;-1:-1:-1;29892:10:1;29865:23;29879:8;29865:13;:23::i;:::-;-1:-1:-1;;;;;29865:37:1;;29842:60;:101;;;;29906:37;29925:5;29932:10;29906:18;:37::i;:::-;29834:136;;;;-1:-1:-1;;;29834:136:1;;78817:2:39;29834:136:1;;;78799:21:39;78856:2;78836:18;;;78829:30;-1:-1:-1;;;78875:18:39;;;78868:52;78937:18;;29834:136:1;78615:346:39;29834:136:1;29981:12;29996:34;30020:8;29996:16;:34::i;:::-;29981:49;;30040:19;30062:10;:33;;30093:1;30062:33;;;30075:7;30062:33;30040:55;;30129:11;30123:4;30116:25;30174:7;-1:-1:-1;;;;;30158:34:1;30167:5;-1:-1:-1;;;;;30158:34:1;;30183:8;30158:34;;;;40591:25:39;;40579:2;40564:18;;40445:177;30158:34:1;;;;;;;;29710:489;;;29632:567;;;:::o;30734:376::-;30829:10;-1:-1:-1;;;;;30857:22:1;;;;;;:43;;;30895:5;-1:-1:-1;;;;;30883:17:1;:8;-1:-1:-1;;;;;30883:17:1;;;30857:43;30849:91;;;;-1:-1:-1;;;30849:91:1;;79168:2:39;30849:91:1;;;79150:21:39;79207:2;79187:18;;;79180:30;79246:34;79226:18;;;79219:62;-1:-1:-1;;;79297:18:39;;;79290:33;79340:19;;30849:91:1;78966:399:39;30849:91:1;30950:12;30965:38;30987:5;30994:8;30965:21;:38::i;:::-;30950:53;;31037:8;31031:4;31024:22;31084:8;-1:-1:-1;;;;;31062:41:1;31077:5;-1:-1:-1;;;;;31062:41:1;;31094:8;31062:41;;;;39300:14:39;39293:22;39275:41;;39263:2;39248:18;;39135:187;31062:41:1;;;;;;;;30803:307;;30734:376;;:::o;26531:187::-;26589:16;26617:12;26632:34;26656:8;26632:16;:34::i;26724:220::-;26802:19;26833:12;26848:38;26870:5;26877:8;26848:21;:38::i;23858:413::-;24056:50;;-1:-1:-1;;;24056:50:1;;-1:-1:-1;;;;;42077:32:39;;24056:50:1;;;42059:51:39;23940:7:1;;-1:-1:-1;;;23977:25:1;23940:7;;;;311:5;;24056:43;;42032:18:39;;24056:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24135:52;;-1:-1:-1;;;24135:52:1;;-1:-1:-1;;;;;42077:32:39;;24135:52:1;;;42059:51:39;24039:67:1;;-1:-1:-1;24116:16:1;;311:5;;24135:43;;42032:18:39;;24135:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24116:71;;24229:8;24239:3;24244:9;24255:7;24212:51;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;24204:60;;;:::i;:::-;24197:67;23858:413;-1:-1:-1;;;;;;;23858:413:1:o;24277:319::-;24469:52;;-1:-1:-1;;;24469:52:1;;-1:-1:-1;;;;;42077:32:39;;24469:52:1;;;42059:51:39;24347:7:1;;-1:-1:-1;;;24384:29:1;24347:7;;;;311:5;;24469:43;;42032:18:39;;24469:52:1;41913:203:39;24602:229:1;24782:41;;24668:7;;-1:-1:-1;;;24705:25:1;24668:7;;24782:41;;24705:25;;24668:7;;24814:8;;24782:41;;;:::i;:::-;;;;;;;;;;;;;24774:50;;;:::i;:::-;24767:57;24602:229;-1:-1:-1;;;;24602:229:1:o;24837:227::-;25015:41;;24902:7;;-1:-1:-1;;;24939:24:1;24902:7;;25015:41;;24939:24;;24902:7;;25047:8;;25015:41;;;:::i;25070:235::-;25256:41;;25139:7;;-1:-1:-1;;;25176:28:1;25139:7;;25256:41;;25176:28;;25139:7;;25288:8;;25256:41;;;:::i;25311:432::-;25525:50;;-1:-1:-1;;;25525:50:1;;-1:-1:-1;;;;;42077:32:39;;25525:50:1;;;42059:51:39;25401:7:1;;-1:-1:-1;;;25438:33:1;25401:7;;;;311:5;;25525:43;;42032:18:39;;25525:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25605:53;;-1:-1:-1;;;25605:53:1;;-1:-1:-1;;;;;42077:32:39;;25605:53:1;;;42059:51:39;25508:67:1;;-1:-1:-1;25585:17:1;;311:5;;25605:43;;42032:18:39;;25605:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25585:73;;25700:8;25710:3;25715:7;25724:10;25683:52;;;;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;372:331:39:-;477:9;488;530:8;518:10;515:24;512:44;;;552:1;549;542:12;512:44;581:6;571:8;568:20;565:40;;;601:1;598;591:12;565:40;-1:-1:-1;;627:23:39;;;672:25;;;;;-1:-1:-1;372:331:39:o;708:338::-;828:19;;-1:-1:-1;;;;;;865:29:39;;;914:1;906:10;;903:137;;;-1:-1:-1;;;;;;975:1:39;971:11;;;968:1;964:19;960:46;;;952:55;;948:82;;-1:-1:-1;903:137:39;;708:338;;;;:::o;1410:374::-;1531:19;;-1:-1:-1;;;;;;1568:40:39;;;1628:2;1620:11;;1617:161;;;-1:-1:-1;;;;;;1690:2:39;1686:12;;;;1683:1;1679:20;1675:58;;;1667:67;1663:105;;;;1410:374;-1:-1:-1;;1410:374:39:o;2147:131::-;-1:-1:-1;;;;;2222:31:39;;2212:42;;2202:70;;2268:1;2265;2258:12;2202:70;2147:131;:::o;2283:367::-;2351:6;2359;2412:2;2400:9;2391:7;2387:23;2383:32;2380:52;;;2428:1;2425;2418:12;2380:52;2467:9;2454:23;2486:31;2511:5;2486:31;:::i;:::-;2536:5;2614:2;2599:18;;;;2586:32;;-1:-1:-1;;;2283:367:39:o;3150:388::-;3218:6;3226;3279:2;3267:9;3258:7;3254:23;3250:32;3247:52;;;3295:1;3292;3285:12;3247:52;3334:9;3321:23;3353:31;3378:5;3353:31;:::i;:::-;3403:5;-1:-1:-1;3460:2:39;3445:18;;3432:32;3473:33;3432:32;3473:33;:::i;:::-;3525:7;3515:17;;;3150:388;;;;;:::o;3736:508::-;3813:6;3821;3829;3882:2;3870:9;3861:7;3857:23;3853:32;3850:52;;;3898:1;3895;3888:12;3850:52;3937:9;3924:23;3956:31;3981:5;3956:31;:::i;:::-;4006:5;-1:-1:-1;4063:2:39;4048:18;;4035:32;4076:33;4035:32;4076:33;:::i;:::-;3736:508;;4128:7;;-1:-1:-1;;;4208:2:39;4193:18;;;;4180:32;;3736:508::o;4249:247::-;4308:6;4361:2;4349:9;4340:7;4336:23;4332:32;4329:52;;;4377:1;4374;4367:12;4329:52;4416:9;4403:23;4435:31;4460:5;4435:31;:::i;:::-;4485:5;4249:247;-1:-1:-1;;;4249:247:39:o;4871:289::-;4913:3;4951:5;4945:12;4978:6;4973:3;4966:19;5034:6;5027:4;5020:5;5016:16;5009:4;5004:3;5000:14;4994:47;5086:1;5079:4;5070:6;5065:3;5061:16;5057:27;5050:38;5149:4;5142:2;5138:7;5133:2;5125:6;5121:15;5117:29;5112:3;5108:39;5104:50;5097:57;;;4871:289;;;;:::o;5165:622::-;5266:5;5260:12;5253:20;5246:28;5241:3;5234:41;5353:1;5349;5344:3;5340:11;5336:19;5328:4;5321:5;5317:16;5311:23;5307:49;5300:4;5295:3;5291:14;5284:73;5216:3;5403:4;5396:5;5392:16;5386:23;5441:4;5434;5429:3;5425:14;5418:28;5467:47;5508:4;5503:3;5499:14;5485:12;5467:47;:::i;:::-;5455:59;;5562:4;5555:5;5551:16;5545:23;5610:3;5604:4;5600:14;5593:4;5588:3;5584:14;5577:38;5638:39;5672:4;5656:14;5638:39;:::i;:::-;5730:4;5719:16;;;5713:23;-1:-1:-1;;;;;5709:49:39;5693:14;;;;5686:73;;;;-1:-1:-1;5624:53:39;;5165:622;-1:-1:-1;;5165:622:39:o;5792:774::-;5853:3;5884;5916:5;5910:12;5943:6;5938:3;5931:19;5975:4;5970:3;5966:14;5959:21;;6033:4;6023:6;6020:1;6016:14;6009:5;6005:26;6001:37;6072:4;6065:5;6061:16;6095:1;6105:435;6119:6;6116:1;6113:13;6105:435;;;6206:2;6202:7;6194:5;6188:4;6184:16;6180:30;6175:3;6168:43;6240:6;6234:13;6279:2;6273:9;6267:4;6260:23;6330:4;6326:2;6322:13;6316:20;6296:40;;6373:4;6366;6360;6356:15;6349:29;6399:57;6450:4;6444;6440:15;6426:12;6399:57;:::i;:::-;6491:4;6516:14;;;;6391:65;;-1:-1:-1;6479:17:39;;;;;-1:-1:-1;6141:1:39;6134:9;6105:435;;;-1:-1:-1;6556:4:39;;5792:774;-1:-1:-1;;;;;;5792:774:39:o;6835:1313::-;6889:3;6933:5;6927:12;6960:6;6955:3;6948:19;6988:49;7029:6;7024:3;7020:16;7006:12;6988:49;:::i;:::-;6976:61;;7085:4;7078:5;7074:16;7068:23;7133:3;7127:4;7123:14;7116:4;7111:3;7107:14;7100:38;7161:39;7195:4;7179:14;7161:39;:::i;:::-;7147:53;;;7248:4;7241:5;7237:16;7231:23;7263:50;7307:4;7302:3;7298:14;7282;-1:-1:-1;;;;;2817:31:39;2805:44;;2751:104;7263:50;;7361:4;7354:5;7350:16;7344:23;7411:3;7403:6;7399:16;7392:4;7387:3;7383:14;7376:40;7439:41;7473:6;7457:14;7439:41;:::i;:::-;7425:55;;;7528:4;7521:5;7517:16;7511:23;7543:47;7584:4;7579:3;7575:14;7559;4571:13;4564:21;4552:34;;4501:91;7543:47;;7638:4;7631:5;7627:16;7621:23;7653:48;7695:4;7690:3;7686:14;7670;2730:1;2719:20;2707:33;;2655:91;7653:48;;7749:4;7742:5;7738:16;7732:23;7764:47;7805:4;7800:3;7796:14;7780;4571:13;4564:21;4552:34;;4501:91;7764:47;;7859:4;7852:5;7848:16;7842:23;7909:3;7901:6;7897:16;7890:4;7885:3;7881:14;7874:40;7937:60;7990:6;7974:14;7937:60;:::i;:::-;7923:74;;;8045:6;8038:5;8034:18;8028:25;8062:58;8112:6;8107:3;8103:16;8087:14;6657:12;;6654:1;6643:27;;;6631:40;;6724:4;6713:16;;;6707:23;-1:-1:-1;;;;;6703:49:39;6687:14;;;6680:73;6816:4;6805:16;;;6799:23;6785:38;;6769:14;;6762:62;6571:259;8062:58;-1:-1:-1;8136:6:39;6835:1313;-1:-1:-1;;;6835:1313:39:o;8153:856::-;8214:3;8252:5;8246:12;8279:6;8274:3;8267:19;8311:4;8306:3;8302:14;8295:21;;8350:4;8343:5;8339:16;8373:1;8383:601;8397:6;8394:1;8391:13;8383:601;;;8456:13;;8540:9;;8537:1;8526:24;8514:37;;8605:4;8597:13;;;8591:20;-1:-1:-1;;;;;8587:46:39;;;8571:14;;;8564:70;8698:4;8690:13;;;8684:20;8677:28;8670:36;8654:14;;;8647:60;8771:4;8763:13;;;8757:20;8750:28;8743:36;8727:14;;;8720:60;8834:4;8826:13;;;8820:20;8816:46;8800:14;;;8793:70;;;;8621:3;8890:14;;;;8957:17;;;;8630:1;8412:9;8383:601;;;-1:-1:-1;9000:3:39;;8153:856;-1:-1:-1;;;;8153:856:39:o;9014:921::-;9080:3;9118:5;9112:12;9145:6;9140:3;9133:19;9177:4;9172:3;9168:14;9161:21;;9216:4;9209:5;9205:16;9239:1;9249:661;9263:6;9260:1;9257:13;9249:661;;;9328:6;9322:13;9366:1;9412:2;9406:9;9403:1;9392:24;9387:3;9380:37;9481:4;9477:2;9473:13;9467:20;9464:1;9453:35;9446:4;9441:3;9437:14;9430:59;9553:4;9549:2;9545:13;9539:20;9536:1;9525:35;9518:4;9513:3;9509:14;9502:59;9625:4;9621:2;9617:13;9611:20;9608:1;9597:35;9590:4;9585:3;9581:14;9574:59;9697:4;9693:2;9689:13;9683:20;9676:28;9669:36;9662:4;9657:3;9653:14;9646:60;9785:1;9781;9776:3;9772:11;9768:19;9760:4;9756:2;9752:13;9746:20;9742:46;9735:4;9730:3;9726:14;9719:70;9825:4;9820:3;9816:14;9802:28;;9850:10;9843:17;;;;9895:4;9887:6;9883:17;9873:27;;9285:1;9282;9278:9;9273:14;;9249:661;;9940:929;10003:3;10041:5;10035:12;10068:6;10063:3;10056:19;10100:4;10095:3;10091:14;10084:21;;10139:4;10132:5;10128:16;10162:1;10172:672;10186:6;10183:1;10180:13;10172:672;;;10251:6;10245:13;10289:1;10335:2;10329:9;10326:1;10315:24;10310:3;10303:37;10404:4;10400:2;10396:13;10390:20;10387:1;10376:35;10369:4;10364:3;10360:14;10353:59;10476:4;10472:2;10468:13;10462:20;10459:1;10448:35;10441:4;10436:3;10432:14;10425:59;10563:1;10559;10554:3;10550:11;10546:19;10538:4;10534:2;10530:13;10524:20;10520:46;10513:4;10508:3;10504:14;10497:70;10631:4;10627:2;10623:13;10617:20;10610:28;10603:36;10596:4;10591:3;10587:14;10580:60;10719:1;10715;10710:3;10706:11;10702:19;10694:4;10690:2;10686:13;10680:20;10676:46;10669:4;10664:3;10660:14;10653:70;10759:4;10754:3;10750:14;10736:28;;10784:10;10777:17;;;;10829:4;10821:6;10817:17;10807:27;;10208:1;10205;10201:9;10196:14;;10172:672;;10874:1384;10926:3;10970:5;10964:12;10997:6;10992:3;10985:19;11025:61;11078:6;11073:3;11069:16;11055:12;11025:61;:::i;:::-;11013:73;;11134:4;11127:5;11123:16;11117:23;11149:48;11191:4;11186:3;11182:14;11166;2730:1;2719:20;2707:33;;2655:91;11149:48;;11245:4;11238:5;11234:16;11228:23;11260:47;11301:4;11296:3;11292:14;11276;4571:13;4564:21;4552:34;;4501:91;11260:47;;11355:4;11348:5;11344:16;11338:23;11370:47;11411:4;11406:3;11402:14;11386;4571:13;4564:21;4552:34;;4501:91;11370:47;;11465:4;11458:5;11454:16;11448:23;11480:47;11521:4;11516:3;11512:14;11496;4571:13;4564:21;4552:34;;4501:91;11480:47;;11575:4;11568:5;11564:16;11558:23;11623:3;11617:4;11613:14;11606:4;11601:3;11597:14;11590:38;11651:58;11704:4;11688:14;11651:58;:::i;:::-;11637:72;;;11757:4;11750:5;11746:16;11740:23;11807:3;11799:6;11795:16;11788:4;11783:3;11779:14;11772:40;11835:65;11893:6;11877:14;11835:65;:::i;:::-;11821:79;;;11948:4;11941:5;11937:16;11931:23;11998:3;11990:6;11986:16;11979:4;11974:3;11970:14;11963:40;12026:62;12081:6;12065:14;12026:62;:::i;:::-;12012:76;;;12136:6;12129:5;12125:18;12119:25;12190:3;12182:6;12178:16;12169:6;12164:3;12160:16;12153:42;12211:41;12245:6;12229:14;12211:41;:::i;12263:346::-;12484:6;12481:1;12470:21;12459:9;12452:40;12528:2;12523;12512:9;12508:18;12501:30;12433:4;12548:55;12599:2;12588:9;12584:18;12576:6;12548:55;:::i;12614:118::-;12701:5;12698:1;12687:20;12680:5;12677:31;12667:59;;12722:1;12719;12712:12;12737:384;12803:6;12811;12864:2;12852:9;12843:7;12839:23;12835:32;12832:52;;;12880:1;12877;12870:12;12832:52;12919:9;12906:23;12938:31;12963:5;12938:31;:::i;:::-;12988:5;-1:-1:-1;13045:2:39;13030:18;;13017:32;13058:31;13017:32;13058:31;:::i;13126:1002::-;13369:6;13366:1;13355:21;13344:9;13337:40;13413:2;13408;13397:9;13393:18;13386:30;13318:4;13451:6;13445:13;13494:4;13489:2;13478:9;13474:18;13467:32;13522:62;13579:3;13568:9;13564:19;13550:12;13522:62;:::i;:::-;13508:76;;13652:2;13644:6;13640:15;13634:22;13631:1;13620:37;13615:2;13604:9;13600:18;13593:65;13740:1;13736;13731:3;13727:11;13723:19;13717:2;13709:6;13705:15;13699:22;13695:48;13689:3;13678:9;13674:19;13667:77;13813:2;13805:6;13801:15;13795:22;13792:1;13781:37;13775:3;13764:9;13760:19;13753:66;13868:3;13860:6;13856:16;13850:23;13943:2;13939:7;13927:9;13919:6;13915:22;13911:36;13904:4;13893:9;13889:20;13882:66;13971:41;14005:6;13989:14;13971:41;:::i;:::-;14086:3;14059:16;;;;14053:23;-1:-1:-1;;;;;14049:49:39;14043:3;14028:19;;;;14021:78;;;;-1:-1:-1;13957:55:39;;13126:1002;-1:-1:-1;;;13126:1002:39:o;14133:127::-;14194:10;14189:3;14185:20;14182:1;14175:31;14225:4;14222:1;14215:15;14249:4;14246:1;14239:15;14265:258;14338:4;14332:11;;;14370:17;;-1:-1:-1;;;;;14402:34:39;;14438:22;;;14399:62;14396:88;;;14464:18;;:::i;:::-;14500:4;14493:24;14265:258;:::o;14528:254::-;14601:2;14595:9;14643:4;14631:17;;-1:-1:-1;;;;;14663:34:39;;14699:22;;;14660:62;14657:88;;;14725:18;;:::i;14787:256::-;14860:2;14854:9;14902:6;14890:19;;-1:-1:-1;;;;;14924:34:39;;14960:22;;;14921:62;14918:88;;;14986:18;;:::i;15048:254::-;15121:2;15115:9;15163:4;15151:17;;-1:-1:-1;;;;;15183:34:39;;15219:22;;;15180:62;15177:88;;;15245:18;;:::i;15307:275::-;15378:2;15372:9;15443:2;15424:13;;-1:-1:-1;;15420:27:39;15408:40;;-1:-1:-1;;;;;15463:34:39;;15499:22;;;15460:62;15457:88;;;15525:18;;:::i;:::-;15561:2;15554:22;15307:275;;-1:-1:-1;15307:275:39:o;15587:183::-;15647:4;-1:-1:-1;;;;;15672:6:39;15669:30;15666:56;;;15702:18;;:::i;:::-;-1:-1:-1;15747:1:39;15743:14;15759:4;15739:25;;15587:183::o;15775:1102::-;15868:6;15876;15929:2;15917:9;15908:7;15904:23;15900:32;15897:52;;;15945:1;15942;15935:12;15897:52;15984:9;15971:23;16003:31;16028:5;16003:31;:::i;:::-;16053:5;-1:-1:-1;16109:2:39;16094:18;;16081:32;-1:-1:-1;;;;;16125:30:39;;16122:50;;;16168:1;16165;16158:12;16122:50;16191:22;;16244:4;16236:13;;16232:27;-1:-1:-1;16222:55:39;;16273:1;16270;16263:12;16222:55;16313:2;16300:16;16336:64;16352:47;16392:6;16352:47;:::i;:::-;16336:64;:::i;:::-;16422:3;16446:6;16441:3;16434:19;16478:2;16473:3;16469:12;16462:19;;16533:2;16523:6;16520:1;16516:14;16512:2;16508:23;16504:32;16490:46;;16559:7;16551:6;16548:19;16545:39;;;16580:1;16577;16570:12;16545:39;16612:2;16608;16604:11;16593:22;;16624:223;16640:6;16635:3;16632:15;16624:223;;;16722:3;16709:17;16739:33;16764:7;16739:33;:::i;:::-;16785:20;;16834:2;16657:12;;;;16825;;;;16624:223;;;16866:5;16856:15;;;;;;15775:1102;;;;;:::o;16882:343::-;17101:6;17098:1;17087:21;17076:9;17069:40;17145:2;17140;17129:9;17125:18;17118:30;17050:4;17165:54;17215:2;17204:9;17200:18;17192:6;17165:54;:::i;17230:553::-;17467:6;17464:1;17453:21;17442:9;17435:40;17511:2;17506;17495:9;17491:18;17484:30;17416:4;17549:6;17543:13;17592:2;17587;17576:9;17572:18;17565:30;17618:62;17675:3;17664:9;17660:19;17646:12;17618:62;:::i;:::-;17604:76;;17748:2;17740:6;17736:15;17730:22;17727:1;17716:37;17711:2;17700:9;17696:18;17689:65;17771:6;17763:14;;;17230:553;;;;;:::o;18063:954::-;18606:6;18603:1;18592:21;18581:9;18574:40;18650:3;18645:2;18634:9;18630:18;18623:31;18555:4;18677:65;18737:3;18726:9;18722:19;18714:6;18677:65;:::i;:::-;18790:9;18782:6;18778:22;18773:2;18762:9;18758:18;18751:50;18824:57;18874:6;18866;18824:57;:::i;:::-;18810:71;;18929:9;18921:6;18917:22;18912:2;18901:9;18897:18;18890:50;18957:54;19004:6;18996;18957:54;:::i;19022:326::-;19270:1;19259:21;;;19241:40;;19228:3;19213:19;;19290:52;19338:2;19323:18;;19315:6;6657:12;;6654:1;6643:27;;;6631:40;;6724:4;6713:16;;;6707:23;-1:-1:-1;;;;;6703:49:39;6687:14;;;6680:73;6816:4;6805:16;;;6799:23;6785:38;;6769:14;;6762:62;6571:259;19353:1235;19451:6;19459;19467;19520:2;19508:9;19499:7;19495:23;19491:32;19488:52;;;19536:1;19533;19526:12;19488:52;19575:9;19562:23;19594:31;19619:5;19594:31;:::i;:::-;19644:5;-1:-1:-1;19701:2:39;19686:18;;19673:32;19714:31;19673:32;19714:31;:::i;:::-;19764:7;-1:-1:-1;19822:2:39;19807:18;;19794:32;-1:-1:-1;;;;;19838:30:39;;19835:50;;;19881:1;19878;19871:12;19835:50;19904:22;;19957:4;19949:13;;19945:27;-1:-1:-1;19935:55:39;;19986:1;19983;19976:12;19935:55;20026:2;20013:16;20049:64;20065:47;20105:6;20065:47;:::i;20049:64::-;20135:3;20159:6;20154:3;20147:19;20191:2;20186:3;20182:12;20175:19;;20246:2;20236:6;20233:1;20229:14;20225:2;20221:23;20217:32;20203:46;;20272:7;20264:6;20261:19;20258:39;;;20293:1;20290;20283:12;20258:39;20325:2;20321;20317:11;20306:22;;20337:221;20353:6;20348:3;20345:15;20337:221;;;20435:3;20422:17;20452:31;20475:7;20452:31;:::i;:::-;20496:20;;20545:2;20370:12;;;;20536;;;;20337:221;;;20577:5;20567:15;;;;;;19353:1235;;;;;:::o;21065:186::-;21113:4;-1:-1:-1;;;;;21138:6:39;21135:30;21132:56;;;21168:18;;:::i;:::-;-1:-1:-1;21234:2:39;21213:15;-1:-1:-1;;21209:29:39;21240:4;21205:40;;21065:186::o;21256:1759::-;21365:6;21373;21381;21434:2;21422:9;21413:7;21409:23;21405:32;21402:52;;;21450:1;21447;21440:12;21402:52;21489:9;21476:23;21508:31;21533:5;21508:31;:::i;:::-;21558:5;-1:-1:-1;21615:2:39;21600:18;;21587:32;21628:31;21587:32;21628:31;:::i;:::-;21678:7;-1:-1:-1;21736:2:39;21721:18;;21708:32;-1:-1:-1;;;;;21752:30:39;;21749:50;;;21795:1;21792;21785:12;21749:50;21818:22;;21871:4;21863:13;;21859:27;-1:-1:-1;21849:55:39;;21900:1;21897;21890:12;21849:55;21940:2;21927:16;21963:64;21979:47;22019:6;21979:47;:::i;21963:64::-;22049:3;22073:6;22068:3;22061:19;22105:2;22100:3;22096:12;22089:19;;22160:2;22150:6;22147:1;22143:14;22139:2;22135:23;22131:32;22117:46;;22186:7;22178:6;22175:19;22172:39;;;22207:1;22204;22197:12;22172:39;22239:2;22235;22231:11;22251:734;22267:6;22262:3;22259:15;22251:734;;;22353:3;22340:17;-1:-1:-1;;;;;22376:11:39;22373:35;22370:55;;;22421:1;22418;22411:12;22370:55;22448:20;;22503:2;22495:11;;22491:25;-1:-1:-1;22481:53:39;;22530:1;22527;22520:12;22481:53;22584:2;22580;22576:11;22563:25;22616:54;22632:37;22660:8;22632:37;:::i;22616:54::-;22683:25;;;22727:35;22735:17;;;22727:35;22724:48;-1:-1:-1;22721:68:39;;;22785:1;22782;22775:12;22721:68;22846:8;22841:2;22837;22833:11;22828:2;22819:7;22815:16;22802:53;22908:1;22903:2;22892:8;22883:7;22879:22;22875:31;22868:42;22935:7;22930:3;22923:20;;;;22972:2;22967:3;22963:12;22956:19;;22293:2;22288:3;22284:12;22277:19;;22251:734;;;22255:3;23004:5;22994:15;;;;;;21256:1759;;;;;:::o;23020:787::-;23206:4;23254:2;23243:9;23239:18;23298:6;23295:1;23284:21;23273:9;23266:40;23356:6;23353:1;23342:21;23337:2;23326:9;23322:18;23315:49;23400:2;23395;23384:9;23380:18;23373:30;23423:6;23458;23452:13;23489:6;23481;23474:22;23527:3;23516:9;23512:19;23505:26;;23566:2;23558:6;23554:15;23540:29;;23587:1;23597:184;23611:6;23608:1;23605:13;23597:184;;;23686:13;;23683:1;23672:28;23660:41;;23730:2;23756:15;;;;23721:12;;;;23633:1;23626:9;23597:184;;;-1:-1:-1;23798:3:39;;23020:787;-1:-1:-1;;;;;;;23020:787:39:o;23812:529::-;23889:6;23897;23905;23958:2;23946:9;23937:7;23933:23;23929:32;23926:52;;;23974:1;23971;23964:12;23926:52;24013:9;24000:23;24032:31;24057:5;24032:31;:::i;:::-;24082:5;-1:-1:-1;24139:2:39;24124:18;;24111:32;24152:33;24111:32;24152:33;:::i;:::-;24204:7;-1:-1:-1;24263:2:39;24248:18;;24235:32;24276:33;24235:32;24276:33;:::i;:::-;24328:7;24318:17;;;23812:529;;;;;:::o;24346:380::-;24425:1;24421:12;;;;24468;;;24489:61;;24543:4;24535:6;24531:17;24521:27;;24489:61;24596:2;24588:6;24585:14;24565:18;24562:38;24559:161;;24642:10;24637:3;24633:20;24630:1;24623:31;24677:4;24674:1;24667:15;24705:4;24702:1;24695:15;24559:161;;24346:380;;;:::o;24731:680::-;24784:3;24825:5;24819:12;24854:36;24880:9;24854:36;:::i;:::-;24921:1;24906:17;;24932:133;;;;25079:1;25074:331;;;;24899:506;;24932:133;-1:-1:-1;;24965:24:39;;24953:37;;25038:14;;25031:22;25019:35;;25010:45;;;-1:-1:-1;24932:133:39;;25074:331;25105:5;25102:1;25095:16;25152:4;25149:1;25139:18;25179:1;25193:166;25207:6;25204:1;25201:13;25193:166;;;25287:14;;25274:11;;;25267:35;25343:1;25330:15;;;;25229:4;25222:12;25193:166;;;25197:3;;25388:6;25383:3;25379:16;25372:23;;24899:506;;;;24731:680;;;;:::o;25416:202::-;25546:3;25571:41;25608:3;25600:6;25571:41;:::i;26427:739::-;26477:3;26518:5;26512:12;26547:36;26573:9;26547:36;:::i;:::-;26592:19;;;26642:1;26627:17;;26653:150;;;;26817:1;26812:348;;;;26620:540;;26653:150;26716:3;26712:8;26701:9;26697:24;26690:4;26685:3;26681:14;26674:48;26788:4;26776:6;26769:14;26762:22;26759:1;26755:30;26750:3;26746:40;26742:51;26735:58;;26653:150;;26812:348;26843:5;26840:1;26833:16;26890:4;26887:1;26877:18;26917:1;26931:177;26945:6;26942:1;26939:13;26931:177;;;27042:7;27036:14;27029:4;27025:1;27020:3;27016:11;27012:22;27005:46;27092:1;27083:7;27079:15;27068:26;;26967:4;26964:1;26960:12;26955:17;;26931:177;;;27132:11;;27145:4;27128:22;;-1:-1:-1;;26620:540:39;;;26427:739;;;;:::o;27314:1237::-;27383:3;27414;27446:5;27440:12;27473:6;27468:3;27461:19;27505:4;27500:3;27496:14;27489:21;;27563:4;27553:6;27550:1;27546:14;27539:5;27535:26;27531:37;27587:5;27584:1;27577:16;27629:4;27626:1;27616:18;27652:1;27662:863;27676:6;27673:1;27670:13;27662:863;;;27741:16;;;-1:-1:-1;;27737:30:39;27725:43;;27794:13;;27781:27;;27845:4;27838;27828:15;;27821:29;;;27898:1;27886:14;;27880:21;27967:4;27952:20;;27945:28;27938:36;27921:15;;;27914:61;;;;28020:1;28016:17;-1:-1:-1;;;;;28012:43:39;28005:4;27995:15;;27988:68;28043:3;28086:4;28076:15;;28069:29;28125:60;28180:3;28170:14;;28163:4;28151:17;;28125:60;:::i;:::-;28226:17;;;-1:-1:-1;;28222:31:39;28215:4;28205:15;;28198:56;28281:52;28230:6;28319:4;28307:17;;28281:52;:::i;:::-;28391:1;28379:14;;28373:21;-1:-1:-1;;;;;28369:47:39;28363:3;28353:14;;;;28346:71;;;;-1:-1:-1;28510:4:39;28501:14;;;;;28479:1;28467:14;;;;28413:1;27691:9;27662:863;;28856:1069;28948:6;28943:3;28936:19;28918:3;28976:50;29018:6;29013:3;29009:16;29002:5;28976:50;:::i;:::-;29068:3;29062:4;29058:14;29051:4;29046:3;29042:14;29035:38;29096:49;29140:4;29133;29126:5;29122:16;29096:49;:::i;:::-;29082:63;;29174:67;29234:4;29227:5;29223:16;29217:23;-1:-1:-1;;;;;27267:36:39;;27171:138;29174:67;-1:-1:-1;;;;;2817:31:39;29292:4;29283:14;;2805:44;29330:16;;;29323:4;29314:14;;29307:40;29370:51;29334:6;29407:4;29396:16;;29370:51;:::i;:::-;29356:65;;29464:4;29457:5;29453:16;29447:23;29479:53;29526:4;29521:3;29517:14;29510:4;29499:9;29495:20;4571:13;4564:21;4552:34;;4501:91;29479:53;29576:1;29572:17;;;29569:1;29558:32;29601:4;29592:14;;2707:33;29616:62;29672:4;29667:3;29663:14;29656:4;29644:9;29640:2;29636:18;29632:29;4571:13;4564:21;4552:34;;4501:91;29616:62;;29722:3;29714:6;29710:16;29703:4;29698:3;29694:14;29687:40;29750:70;29813:6;29806:4;29799:5;29795:16;29750:70;:::i;:::-;29736:84;;29829:68;29889:6;29884:3;29880:16;29873:4;29866:5;29862:16;28641:12;;28685:1;28674:24;;;28662:37;;28739:2;28735:18;;;-1:-1:-1;;;;;28731:44:39;28724:4;28715:14;;28708:68;28772:1;28826:16;;;28820:23;28806:38;;;28792:12;;28785:60;28556:295;29930:915;29999:3;30037:5;30031:12;30064:6;30059:3;30052:19;30096:4;30091:3;30087:14;30080:21;;30120:5;30117:1;30110:16;30162:4;30159:1;30149:18;30185:1;30195:625;30209:6;30206:1;30203:13;30195:625;;;30307:13;;30356:1;30345:24;;;30333:37;;30414:2;30410:18;;;-1:-1:-1;;;;;30406:44:39;;;30399:4;30390:14;;30383:68;30507:3;30503:19;;;30524:4;30499:30;;;30492:38;30485:46;30471:12;;;30464:68;;;;30590:3;30586:19;;;;30582:30;30575:38;30568:46;30561:4;30552:14;;30545:70;30447:1;30661:14;;;30655:21;30651:47;;;30644:4;30635:14;;30628:71;30438:3;30726:14;;;;30805:4;30793:17;;;;30224:9;30195:625;;30850:1014;30924:3;30962:5;30956:12;30989:6;30984:3;30977:19;31021:4;31016:3;31012:14;31005:21;;31045:5;31042:1;31035:16;31087:4;31084:1;31074:18;31110:1;31120:719;31134:6;31131:1;31128:13;31120:719;;;31201:1;31238:6;31232:13;31284:9;31281:1;31270:24;31265:3;31258:37;31353:9;31349:2;31345:18;31342:1;31331:33;31324:4;31319:3;31315:14;31308:57;31422:9;31417:3;31413:19;31410:1;31399:34;31394:2;31389:3;31385:12;31378:56;31493:9;31488:3;31484:19;31481:1;31470:34;31463:4;31458:3;31454:14;31447:58;;31555:1;31547:6;31543:14;31537:21;31571:54;31620:3;31615;31611:13;31604:4;31591:11;31587:22;4571:13;4564:21;4552:34;;4501:91;31571:54;31665:1;31661:19;-1:-1:-1;;;;;31657:45:39;31713:4;31704:14;;2805:44;-1:-1:-1;31755:3:39;31746:13;;;;31824:4;31812:17;;;;;31156:1;31149:9;31120:719;;31869:1092;31940:3;31978:5;31972:12;32005:6;32000:3;31993:19;32037:4;32032:3;32028:14;32021:21;;32061:5;32058:1;32051:16;32103:4;32100:1;32090:18;32126:1;32136:800;32150:6;32147:1;32144:13;32136:800;;;32217:1;32254:6;32248:13;32300:9;32297:1;32286:24;32281:3;32274:37;32369:9;32365:2;32361:18;32358:1;32347:33;32340:4;32335:3;32331:14;32324:57;32438:9;32433:3;32429:19;32426:1;32415:34;32410:2;32405:3;32401:12;32394:56;;32500:1;32492:6;32488:14;32482:21;32573:1;32569;32564:3;32560:11;32556:19;32543:11;32539:37;32532:4;32527:3;32523:14;32516:61;32590:64;32649:3;32644;32640:13;32633:4;32619:11;32614:3;32610:21;32606:32;4571:13;4564:21;4552:34;;4501:91;32590:64;-1:-1:-1;;32748:4:39;32736:17;;32730:24;-1:-1:-1;;;;;27267:36:39;32810:3;32801:13;;2805:44;32851:4;32842:14;;;;32921:4;32909:17;;;;32172:1;32165:9;32136:800;;32966:1416;33193:4;33185:6;33181:17;33170:9;33163:36;33235:2;33230;33219:9;33215:18;33208:30;33274:6;33269:2;33258:9;33254:18;33247:34;33144:4;33304:66;33365:3;33354:9;33350:19;33342:6;33304:66;:::i;:::-;33414:4;33402:17;;33396:24;33457:1;33446:24;;;33487:2;33472:18;;2707:33;33500:67;33562:3;33551:9;33547:19;33540:4;33528:9;33524:2;33520:18;33516:29;4571:13;4564:21;4552:34;;4501:91;33500:67;33576;33638:3;33627:9;33623:19;33616:4;33604:9;33600:2;33596:18;33592:29;4571:13;4564:21;4552:34;;4501:91;33576:67;33652;33714:3;33703:9;33699:19;33692:4;33680:9;33676:2;33672:18;33668:29;4571:13;4564:21;4552:34;;4501:91;33652:67;-1:-1:-1;33760:22:39;;;-1:-1:-1;;33756:36:39;33750:3;33735:19;;33728:65;33816:71;33764:6;33873:4;33861:17;;33816:71;:::i;:::-;33928:22;;;-1:-1:-1;;33924:36:39;33918:3;33903:19;;33896:65;33802:85;-1:-1:-1;33984:76:39;33802:85;34046:4;34034:17;;33984:76;:::i;:::-;34104:22;;;-1:-1:-1;;34100:36:39;34091:6;34076:22;;34069:68;33970:90;-1:-1:-1;34160:73:39;33970:90;34219:4;34207:17;;34160:73;:::i;:::-;34274:22;;;-1:-1:-1;;34270:36:39;34264:3;34249:19;;34242:65;34146:87;-1:-1:-1;34324:52:39;34146:87;34362:4;34350:17;;34324:52;:::i;34795:967::-;35329:4;35321:6;35317:17;35306:9;35299:36;35371:3;35366:2;35355:9;35351:18;35344:31;35280:4;35398:73;35466:3;35455:9;35451:19;35443:6;35398:73;:::i;:::-;35519:9;35511:6;35507:22;35502:2;35491:9;35487:18;35480:50;35553:65;35611:6;35603;35553:65;:::i;:::-;35539:79;;35666:9;35658:6;35654:22;35649:2;35638:9;35634:18;35627:50;35694:62;35749:6;35741;35694:62;:::i;37287:338::-;37544:4;37532:17;;37514:36;;37501:3;37486:19;;37559:60;37615:2;37600:18;;37592:6;28641:12;;28685:1;28674:24;;;28662:37;;28739:2;28735:18;;;-1:-1:-1;;;;;28731:44:39;28724:4;28715:14;;28708:68;28772:1;28826:16;;;28820:23;28806:38;;;28792:12;;28785:60;28556:295;38875:255;38995:19;;39034:2;39026:11;;39023:101;;;-1:-1:-1;;39095:2:39;39091:12;;;39088:1;39084:20;39080:33;39069:45;38875:255;;;;:::o;39738:347::-;39940:2;39922:21;;;39979:2;39959:18;;;39952:30;40018:25;40013:2;39998:18;;39991:53;40076:2;40061:18;;39738:347::o;40627:138::-;40706:13;;40728:31;40706:13;40728:31;:::i;:::-;40627:138;;;:::o;40770:251::-;40840:6;40893:2;40881:9;40872:7;40868:23;40864:32;40861:52;;;40909:1;40906;40899:12;40861:52;40941:9;40935:16;40960:31;40985:5;40960:31;:::i;41026:127::-;41087:10;41082:3;41078:20;41075:1;41068:31;41118:4;41115:1;41108:15;41142:4;41139:1;41132:15;41158:127;41219:10;41214:3;41210:20;41207:1;41200:31;41250:4;41247:1;41240:15;41274:4;41271:1;41264:15;41290:125;41355:9;;;41376:10;;;41373:36;;;41389:18;;:::i;41780:128::-;41847:9;;;41868:11;;;41865:37;;;41882:18;;:::i;42121:301::-;42250:3;42288:6;42282:13;42334:6;42327:4;42319:6;42315:17;42310:3;42304:37;42396:1;42360:16;;42385:13;;;-1:-1:-1;42360:16:39;42121:301;-1:-1:-1;42121:301:39:o;42783:134::-;42860:13;;42882:29;42860:13;42882:29;:::i;42922:514::-;42976:5;43029:3;43022:4;43014:6;43010:17;43006:27;42996:55;;43047:1;43044;43037:12;42996:55;43080:6;43074:13;43119:4;43111:6;43107:17;43148:1;43169:52;43185:35;43213:6;43185:35;:::i;43169:52::-;43158:63;;43246:6;43237:7;43230:23;43286:3;43277:6;43272:3;43268:16;43265:25;43262:45;;;43303:1;43300;43293:12;43262:45;43347:6;43342:3;43335:4;43326:7;43322:18;43316:38;43403:1;43374:20;;;43396:4;43370:31;43363:42;;;;-1:-1:-1;43378:7:39;42922:514;-1:-1:-1;;;42922:514:39:o;43441:164::-;43517:13;;43566;;43559:21;43549:32;;43539:60;;43595:1;43592;43585:12;43610:2123;43683:5;43736:3;43729:4;43721:6;43717:17;43713:27;43703:55;;43754:1;43751;43744:12;43703:55;43787:6;43781:13;43814:64;43830:47;43870:6;43830:47;:::i;43814:64::-;43902:3;43926:6;43921:3;43914:19;43958:4;43953:3;43949:14;43942:21;;44019:4;44009:6;44006:1;44002:14;43994:6;43990:27;43986:38;43972:52;;44047:3;44039:6;44036:15;44033:35;;;44064:1;44061;44054:12;44033:35;44100:4;44092:6;44088:17;44114:1588;44130:6;44125:3;44122:15;44114:1588;;;44211:3;44205:10;-1:-1:-1;;;;;44234:11:39;44231:35;44228:55;;;44279:1;44276;44269:12;44228:55;44306:24;;44378:4;44354:12;;;-1:-1:-1;;44350:26:39;44346:37;44343:57;;;44396:1;44393;44386:12;44343:57;44426:23;;:::i;:::-;44516:4;44508:13;;44502:20;44535:22;;44600:4;44592:13;;44586:20;-1:-1:-1;;;;;44622:32:39;;44619:52;;;44667:1;44664;44657:12;44619:52;44717:4;44706:8;44702:2;44698:17;44694:28;44684:38;;;44756:4;44751:2;44746:3;44742:12;44738:23;44735:43;;;44774:1;44771;44764:12;44735:43;44806:23;;:::i;:::-;44858:30;44885:2;44858:30;:::i;:::-;44849:7;44842:47;44931:4;44927:2;44923:13;44917:20;44950:33;44975:7;44950:33;:::i;:::-;45016:4;45003:18;;44996:35;45074:4;45066:13;;45060:20;-1:-1:-1;;;;;45096:32:39;;45093:52;;;45141:1;45138;45131:12;45093:52;45185;45233:3;45222:8;45218:2;45214:17;45185:52;:::i;:::-;45178:4;45169:7;45165:18;45158:80;;45281:2;45277;45273:11;45267:18;-1:-1:-1;;;;;45304:8:39;45301:32;45298:52;;;45346:1;45343;45336:12;45298:52;45388;45436:3;45425:8;45421:2;45417:17;45388:52;:::i;:::-;45383:2;45374:7;45370:16;45363:78;;45483:3;45479:2;45475:12;45469:19;45454:34;;45501:33;45526:7;45501:33;:::i;:::-;45567:3;45554:17;;45547:34;;;;45612:4;45601:16;;;45594:33;;;;45640:18;;45678:14;;;;44147;44114:1588;;;-1:-1:-1;45720:7:39;43610:2123;-1:-1:-1;;;;;43610:2123:39:o;45738:762::-;45802:5;45850:4;45838:9;45833:3;45829:19;45825:30;45822:50;;;45868:1;45865;45858:12;45822:50;45921:2;45915:9;45963:4;45951:17;;-1:-1:-1;;;;;45983:34:39;;46019:22;;;45980:62;45977:88;;;46045:18;;:::i;:::-;46085:10;46081:2;46074:22;;46114:6;46105:15;;46150:9;46144:16;46169:31;46192:7;46169:31;:::i;:::-;46209:23;;46277:2;46262:18;;46256:25;46290:33;46256:25;46290:33;:::i;:::-;46351:2;46339:15;;46332:32;46409:2;46394:18;;46388:25;46422:31;46388:25;46422:31;:::i;:::-;46481:2;46469:15;;;;46462:32;45738:762;;-1:-1:-1;;45738:762:39:o;46505:1418::-;46574:5;46622:6;46610:9;46605:3;46601:19;46597:32;46594:52;;;46642:1;46639;46632:12;46594:52;46664:23;;:::i;:::-;46655:32;;46716:9;46710:16;-1:-1:-1;;;;;46741:6:39;46738:30;46735:50;;;46781:1;46778;46771:12;46735:50;46808:57;46861:3;46852:6;46841:9;46837:22;46808:57;:::i;:::-;46801:5;46794:72;;46912:2;46901:9;46897:18;46891:25;-1:-1:-1;;;;;46931:8:39;46928:32;46925:52;;;46973:1;46970;46963:12;46925:52;47009:59;47064:3;47053:8;47042:9;47038:24;47009:59;:::i;:::-;47004:2;46997:5;46993:14;46986:83;;47101:49;47146:2;47135:9;47131:18;47101:49;:::i;:::-;47096:2;47089:5;47085:14;47078:73;47197:2;47186:9;47182:18;47176:25;-1:-1:-1;;;;;47216:8:39;47213:32;47210:52;;;47258:1;47255;47248:12;47210:52;47294:59;47349:3;47338:8;47327:9;47323:24;47294:59;:::i;:::-;47289:2;47282:5;47278:14;47271:83;;47387:47;47429:3;47418:9;47414:19;47387:47;:::i;:::-;47381:3;47374:5;47370:15;47363:72;47468:48;47511:3;47500:9;47496:19;47468:48;:::i;:::-;47462:3;47455:5;47451:15;47444:73;47550:47;47592:3;47581:9;47577:19;47550:47;:::i;:::-;47544:3;47537:5;47533:15;47526:72;47644:3;47633:9;47629:19;47623:26;-1:-1:-1;;;;;47664:8:39;47661:32;47658:52;;;47706:1;47703;47696:12;47658:52;47743:78;47817:3;47806:8;47795:9;47791:24;47743:78;:::i;:::-;47737:3;47730:5;47726:15;47719:103;;47855:61;47912:3;47906;47895:9;47891:19;47855:61;:::i;:::-;47849:3;47842:5;47838:15;47831:86;46505:1418;;;;:::o;47928:1329::-;48001:5;48054:3;48047:4;48039:6;48035:17;48031:27;48021:55;;48072:1;48069;48062:12;48021:55;48105:6;48099:13;48132:64;48148:47;48188:6;48148:47;:::i;48132:64::-;48220:3;48244:6;48239:3;48232:19;48276:4;48271:3;48267:14;48260:21;;48340:4;48332;48324:6;48320:17;48312:6;48308:30;48304:41;48290:55;;48368:3;48360:6;48357:15;48354:35;;;48385:1;48382;48375:12;48354:35;48421:4;48413:6;48409:17;48435:791;48451:6;48446:3;48443:15;48435:791;;;48529:4;48523:3;48518;48514:13;48510:24;48507:44;;;48547:1;48544;48537:12;48507:44;48577:23;;:::i;:::-;48634:3;48628:10;48651:31;48674:7;48651:31;:::i;:::-;48695:22;;48760:4;48751:14;;48745:21;48779:33;48745:21;48779:33;:::i;:::-;48843:4;48832:16;;48825:33;48894:40;48930:2;48921:12;;48894:40;:::i;:::-;48889:2;48882:5;48878:14;48871:64;48971:40;49007:2;49002:3;48998:12;48971:40;:::i;:::-;48966:2;48959:5;48955:14;48948:64;49055:3;49050;49046:13;49040:20;49073:33;49098:7;49073:33;:::i;:::-;49137:3;49126:15;;49119:32;49164:18;;49211:4;49202:14;;;;48477:4;48468:14;48435:791;;49262:1527;49340:5;49393:3;49386:4;49378:6;49374:17;49370:27;49360:55;;49411:1;49408;49401:12;49360:55;49444:6;49438:13;49471:64;49487:47;49527:6;49487:47;:::i;49471:64::-;49559:3;49583:6;49578:3;49571:19;49615:4;49610:3;49606:14;49599:21;;49679:4;49671;49663:6;49659:17;49651:6;49647:30;49643:41;49629:55;;49707:3;49699:6;49696:15;49693:35;;;49724:1;49721;49714:12;49693:35;49760:4;49752:6;49748:17;49774:984;49790:6;49785:3;49782:15;49774:984;;;49868:4;49862:3;49857;49853:13;49849:24;49846:44;;;49886:1;49883;49876:12;49846:44;49916:23;;:::i;:::-;49973:3;49967:10;49990:31;50013:7;49990:31;:::i;:::-;50034:22;;50099:4;50090:14;;50084:21;50118:31;50084:21;50118:31;:::i;:::-;50180:4;50169:16;;50162:33;50238:2;50229:12;;50223:19;50255:31;50223:19;50255:31;:::i;:::-;50317:2;50306:14;;50299:31;50373:2;50364:12;;50358:19;50390:31;50358:19;50390:31;:::i;:::-;50452:2;50441:14;;50434:31;50502:41;50538:3;50529:13;;50502:41;:::i;:::-;50496:3;50489:5;50485:15;50478:66;50587:3;50582;50578:13;50572:20;50605:33;50630:7;50605:33;:::i;:::-;50669:3;50658:15;;50651:32;50696:18;;50743:4;50734:14;;;;49816:4;49807:14;49774:984;;50794:1526;50869:5;50922:3;50915:4;50907:6;50903:17;50899:27;50889:55;;50940:1;50937;50930:12;50889:55;50973:6;50967:13;51000:64;51016:47;51056:6;51016:47;:::i;51000:64::-;51088:3;51112:6;51107:3;51100:19;51144:4;51139:3;51135:14;51128:21;;51208:4;51200;51192:6;51188:17;51180:6;51176:30;51172:41;51158:55;;51236:3;51228:6;51225:15;51222:35;;;51253:1;51250;51243:12;51222:35;51289:4;51281:6;51277:17;51303:986;51319:6;51314:3;51311:15;51303:986;;;51397:4;51391:3;51386;51382:13;51378:24;51375:44;;;51415:1;51412;51405:12;51375:44;51445:23;;:::i;:::-;51502:3;51496:10;51519:31;51542:7;51519:31;:::i;:::-;51563:22;;51628:4;51619:14;;51613:21;51647:31;51613:21;51647:31;:::i;:::-;51709:4;51698:16;;51691:33;51767:2;51758:12;;51752:19;51784:31;51752:19;51784:31;:::i;:::-;51846:2;51835:14;;51828:31;51902:2;51893:12;;51887:19;51919:33;51887:19;51919:33;:::i;:::-;51983:2;51972:14;;51965:31;52033:41;52069:3;52060:13;;52033:41;:::i;:::-;52027:3;52020:5;52016:15;52009:66;52118:3;52113;52109:13;52103:20;52136:33;52161:7;52136:33;:::i;:::-;52200:3;52189:15;;52182:32;52227:18;;52274:4;52265:14;;;;51345:4;51336:14;51303:986;;52325:1910;52429:6;52437;52490:2;52478:9;52469:7;52465:23;52461:32;52458:52;;;52506:1;52503;52496:12;52458:52;52538:9;52532:16;52557:29;52580:5;52557:29;:::i;:::-;52654:2;52639:18;;52633:25;52605:5;;-1:-1:-1;;;;;;52670:30:39;;52667:50;;;52713:1;52710;52703:12;52667:50;52736:22;;52792:6;52774:16;;;52770:29;52767:49;;;52812:1;52809;52802:12;52767:49;52840:23;;:::i;:::-;52894:2;52888:9;-1:-1:-1;;;;;52912:8:39;52909:32;52906:52;;;52954:1;52951;52944:12;52906:52;52983:68;53043:7;53032:8;53028:2;53024:17;52983:68;:::i;:::-;52974:7;52967:85;;53086:40;53122:2;53118;53114:11;53086:40;:::i;:::-;53081:2;53072:7;53068:16;53061:66;53161:39;53196:2;53192;53188:11;53161:39;:::i;:::-;53156:2;53147:7;53143:16;53136:65;53235:39;53270:2;53266;53262:11;53235:39;:::i;:::-;53230:2;53221:7;53217:16;53210:65;53310:40;53345:3;53341:2;53337:12;53310:40;:::i;:::-;53304:3;53295:7;53291:17;53284:67;53390:3;53386:2;53382:12;53376:19;-1:-1:-1;;;;;53410:8:39;53407:32;53404:52;;;53452:1;53449;53442:12;53404:52;53491:75;53558:7;53547:8;53543:2;53539:17;53491:75;:::i;:::-;53485:3;53476:7;53472:17;53465:102;;53606:3;53602:2;53598:12;53592:19;-1:-1:-1;;;;;53626:8:39;53623:32;53620:52;;;53668:1;53665;53658:12;53620:52;53707:80;53779:7;53768:8;53764:2;53760:17;53707:80;:::i;:::-;53701:3;53692:7;53688:17;53681:107;;53827:3;53823:2;53819:12;53813:19;-1:-1:-1;;;;;53847:8:39;53844:32;53841:52;;;53889:1;53886;53879:12;53841:52;53928:77;53997:7;53986:8;53982:2;53978:17;53928:77;:::i;:::-;53922:3;53913:7;53909:17;53902:104;;54045:3;54041:2;54037:12;54031:19;-1:-1:-1;;;;;54065:8:39;54062:32;54059:52;;;54107:1;54104;54097:12;54059:52;54146:56;54194:7;54183:8;54179:2;54175:17;54146:56;:::i;:::-;54140:3;54131:7;54127:17;54120:83;;54222:7;54212:17;;;;52325:1910;;;;;:::o;57157:326::-;57231:6;57239;57292:2;57280:9;57271:7;57267:23;57263:32;57260:52;;;57308:1;57305;57298:12;57260:52;57340:9;57334:16;57359:29;57382:5;57359:29;:::i;:::-;57407:5;-1:-1:-1;57431:46:39;57473:2;57458:18;;57431:46;:::i;:::-;57421:56;;57157:326;;;;;:::o;59068:273::-;59136:6;59189:2;59177:9;59168:7;59164:23;59160:32;59157:52;;;59205:1;59202;59195:12;59157:52;59237:9;59231:16;59287:4;59280:5;59276:16;59269:5;59266:27;59256:55;;59307:1;59304;59297:12;61390:409;61465:6;61473;61526:2;61514:9;61505:7;61501:23;61497:32;61494:52;;;61542:1;61539;61532:12;61494:52;61574:9;61568:16;61593:29;61616:5;61593:29;:::i;:::-;61641:5;61631:15;;;61691:2;61680:9;61676:18;61670:25;61740:7;61737:1;61726:22;61717:7;61714:35;61704:63;;61763:1;61760;61753:12;62619:1096;62874:6;62882;62890;62898;62951:3;62939:9;62930:7;62926:23;62922:33;62919:53;;;62968:1;62965;62958:12;62919:53;63000:9;62994:16;63019:29;63042:5;63019:29;:::i;:::-;63116:2;63101:18;;63095:25;63067:5;;-1:-1:-1;;;;;;63132:30:39;;63129:50;;;63175:1;63172;63165:12;63129:50;63198:80;63270:7;63261:6;63250:9;63246:22;63198:80;:::i;:::-;63188:90;;;63324:2;63313:9;63309:18;63303:25;-1:-1:-1;;;;;63343:8:39;63340:32;63337:52;;;63385:1;63382;63375:12;63337:52;63408:87;63487:7;63476:8;63465:9;63461:24;63408:87;:::i;:::-;63398:97;;;63541:2;63530:9;63526:18;63520:25;-1:-1:-1;;;;;63560:8:39;63557:32;63554:52;;;63602:1;63599;63592:12;63554:52;63625:84;63701:7;63690:8;63679:9;63675:24;63625:84;:::i;:::-;63615:94;;;62619:1096;;;;;;;:::o;64122:372::-;64223:6;64231;64284:3;64272:9;64263:7;64259:23;64255:33;64252:53;;;64301:1;64298;64291:12;64252:53;64333:9;64327:16;64352:29;64375:5;64352:29;:::i;:::-;64400:5;-1:-1:-1;64424:64:39;64480:7;64475:2;64460:18;;64424:64;:::i;66341:230::-;66411:6;66464:2;66452:9;66443:7;66439:23;66435:32;66432:52;;;66480:1;66477;66470:12;66432:52;-1:-1:-1;66525:16:39;;66341:230;-1:-1:-1;66341:230:39:o;67367:297::-;67485:12;;67532:4;67521:16;;;67515:23;;67485:12;67550:16;;67547:111;;;-1:-1:-1;;67624:4:39;67620:17;;;;67617:1;67613:25;67609:38;67598:50;;67367:297;-1:-1:-1;67367:297:39:o;70160:202::-;70227:6;70280:2;70268:9;70259:7;70255:23;70251:32;70248:52;;;70296:1;70293;70286:12;70248:52;70319:37;70346:9;70319:37;:::i;70367:225::-;70513:2;70502:9;70495:21;70476:4;70533:53;70582:2;70571:9;70567:18;70559:6;70533:53;:::i;72936:220::-;73085:2;73074:9;73067:21;73048:4;73105:45;73146:2;73135:9;73131:18;73123:6;73105:45;:::i;75094:280::-;75163:6;75216:2;75204:9;75195:7;75191:23;75187:32;75184:52;;;75232:1;75229;75222:12;75184:52;75264:9;75258:16;75314:10;75307:5;75303:22;75296:5;75293:33;75283:61;;75340:1;75337;75330:12;75379:410;-1:-1:-1;;;;;;75572:33:39;;;75560:46;;75643:2;75639:15;;;;-1:-1:-1;;75635:45:39;75631:1;75622:11;;75615:66;75588:3;75715:16;75711:43;;;75706:2;75697:12;;75690:65;75780:2;75771:12;;75379:410::o;79370:518::-;-1:-1:-1;;;;;;79589:33:39;;;79577:46;;79660:2;79656:15;;;;-1:-1:-1;;;;;;79652:53:39;79648:1;79639:11;;79632:74;79605:3;79740:16;;;79736:43;;79731:2;79722:12;;79715:65;79814:16;;79810:43;;;79805:2;79796:12;;79789:65;79879:2;79870:12;;79370:518::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "_update(address,address,uint256)": "0bb3bfa8",
        "associateToken(address,address)": "49146bde",
        "associateTokens(address,address[])": "2e63879b",
        "burnToken(address,int64,int64[])": "d6910d06",
        "dissociateToken(address,address)": "099794e8",
        "dissociateTokens(address,address[])": "78b63918",
        "getAccountId(address)": "e0b490f7",
        "getApproved(address,uint256)": "098f2366",
        "getFungibleTokenInfo(address)": "3f28a19b",
        "getNonFungibleTokenInfo(address,int64)": "287e1da8",
        "getTokenCustomFees(address)": "ae7611a0",
        "getTokenDefaultFreezeStatus(address)": "a7daa18d",
        "getTokenDefaultKycStatus(address)": "335e04c1",
        "getTokenExpiryInfo(address)": "d614cdb8",
        "getTokenInfo(address)": "1f69565f",
        "getTokenKey(address,uint256)": "3c4dd32e",
        "getTokenType(address)": "93272baf",
        "isApprovedForAll(address,address,address)": "f49f40db",
        "isToken(address)": "19f37361",
        "mintToken(address,int64,bytes[])": "e0f4059a"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"associateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"associateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"\",\"type\":\"int64[]\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"dissociateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"dissociateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"accountId\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int32\",\"name\":\"decimals\",\"type\":\"int32\"}],\"internalType\":\"struct IHederaTokenService.FungibleTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"getNonFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"ownerId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"creationTime\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"spenderId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.NonFungibleTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultFreezeStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultKycStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenExpiryInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"getTokenKey\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"associateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"associateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be associated with the provided tokens\",\"tokens\":\"The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"dissociateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"dissociateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be dissociated from the provided tokens\",\"tokens\":\"The tokens to be dissociated from the provided account.\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getAccountId(address)\":{\"details\":\"Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties.\"},\"getApproved(address,uint256)\":{\"params\":{\"serialNumber\":\"The NFT to find the approved address for\",\"token\":\"The Hedera NFT token address to check approval\"},\"returns\":{\"approved\":\"The approved address for this NFT, or the zero address if there is none\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getFungibleTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"FungibleTokenInfo info for `token`\"}},\"getNonFungibleTokenInfo(address,int64)\":{\"params\":{\"serialNumber\":\"The NFT serialNumber to check\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"NonFungibleTokenInfo info for `token` `serialNumber`\"}},\"getTokenCustomFees(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"Set of fixed fees for `token`\",\"_2\":\"Set of fractional fees for `token`\",\"_3\":\"Set of royalty fees for `token`\"}},\"getTokenDefaultFreezeStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default freeze status is frozen.\"}},\"getTokenDefaultKycStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default kyc status is KycNotApplicable and false if Revoked.\"}},\"getTokenExpiryInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"Expiry info for `token`\"}},\"getTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"TokenInfo info for `token`\"}},\"getTokenKey(address,uint256)\":{\"params\":{\"keyType\":\"The keyType of the desired KeyValue\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"KeyValue info for key of type `keyType`\"}},\"getTokenType(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\"}},\"isApprovedForAll(address,address,address)\":{\"params\":{\"operator\":\"The address that acts on behalf of the owner\",\"owner\":\"The address that owns the NFTs\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `operator` is an approved operator for `owner`, false otherwise\"}},\"isToken(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if valid token found for the given address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"associateToken(address,address)\":{\"notice\":\"Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\"},\"associateTokens(address,address[])\":{\"notice\":\"Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens.\"},\"dissociateToken(address,address)\":{\"notice\":\"Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\"},\"dissociateTokens(address,address[])\":{\"notice\":\"Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed.\"},\"getApproved(address,uint256)\":{\"notice\":\"Get the approved address for a single NFT Only Applicable to NFT Tokens\"},\"getFungibleTokenInfo(address)\":{\"notice\":\"Query fungible token info\"},\"getNonFungibleTokenInfo(address,int64)\":{\"notice\":\"Query non fungible token info\"},\"getTokenCustomFees(address)\":{\"notice\":\"Query token custom fees\"},\"getTokenDefaultFreezeStatus(address)\":{\"notice\":\"Query token default freeze status\"},\"getTokenDefaultKycStatus(address)\":{\"notice\":\"Query token default kyc status\"},\"getTokenExpiryInfo(address)\":{\"notice\":\"Query token expiry info\"},\"getTokenInfo(address)\":{\"notice\":\"Query token info\"},\"getTokenKey(address,uint256)\":{\"notice\":\"Query token KeyValue\"},\"getTokenType(address)\":{\"notice\":\"Query to return the token type for a given address\"},\"isApprovedForAll(address,address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address Only Applicable to NFT Tokens\"},\"isToken(address)\":{\"notice\":\"Query if valid token found for the given address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HtsSystemContract.sol\":\"HtsSystemContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":surl/=lib/surl/\"]},\"sources\":{\"contracts/HtsSystemContract.sol\":{\"keccak256\":\"0x911c467c6dd68d6f44e901cf0d87812e15589f70e97b282b2d2b9c43708fd5c8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b4ffe05031d88d37f0596732f95c54a1c23ec529973d57f01959c2043bea26d2\",\"dweb:/ipfs/QmZRBQjnjtdFYT47yio4uSrY7fv2UT7J6f1PFebb2CCWQv\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x77993e2d90d6b91d30b8721a52364902d823dd5d1020500071c4ecd7f847a00e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://776be938a4f20b2b40e95a5d58f330454d21077894659a674ac8bda378561598\",\"dweb:/ipfs/QmToUenT2jKjiJLCozN3xQp2esRVbRceyS8KVMqcd9j29W\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0x7b4a961afb96ff6326f4d2985f20edf7aa10b3ba1b68c502a0cdcd84ba26e767\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://322d92f6a244dd8a9818d5be6e4e17c6dd048a033449dd79b43229c7077da06d\",\"dweb:/ipfs/QmdFyC7EU8iGiyFzh77YsUpp6eysV8ijyLUKWsDPVKq7yG\"]},\"contracts/IHRC719.sol\":{\"keccak256\":\"0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d\",\"dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD\"]},\"contracts/IHederaTokenService.sol\":{\"keccak256\":\"0x753e733f6c1921938f300e2a1d31f7fc09d598149c9991ffa91d99a4d26ca3f1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b68ea0df42ebc03fe33e2dc56b80f9d9dbfed1c0b528436423cf66de5a1e4a43\",\"dweb:/ipfs/QmXJbGG7nEH9fNDpxgXfUKE8aG7pcwPB72EbuYUgtSAGWY\"]}},\"version\":1}",
    "metadata": {
        "compiler": { "version": "0.8.26+commit.8a97fa7a" },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "approved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ApprovalForAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                { "inputs": [], "stateMutability": "nonpayable", "type": "fallback" },
                {
                    "inputs": [
                        { "internalType": "address", "name": "from", "type": "address" },
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "amount", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "_update"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address", "name": "token", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "associateToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address[]", "name": "tokens", "type": "address[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "associateTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "int64[]", "name": "", "type": "int64[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address", "name": "token", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "dissociateToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address[]", "name": "tokens", "type": "address[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "dissociateTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAccountId",
                    "outputs": [{ "internalType": "uint32", "name": "accountId", "type": "uint32" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "serialNumber", "type": "uint256" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getApproved",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "address", "name": "approved", "type": "address" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getFungibleTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.FungibleTokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.TokenInfo",
                                    "name": "tokenInfo",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IHederaTokenService.HederaToken",
                                            "name": "token",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "string",
                                                    "name": "name",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "symbol",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "treasury",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "memo",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "tokenSupplyType",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maxSupply",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "freezeDefault",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                                    "name": "tokenKeys",
                                                    "type": "tuple[]",
                                                    "components": [
                                                        {
                                                            "internalType": "uint256",
                                                            "name": "keyType",
                                                            "type": "uint256"
                                                        },
                                                        {
                                                            "internalType": "struct IHederaTokenService.KeyValue",
                                                            "name": "key",
                                                            "type": "tuple",
                                                            "components": [
                                                                {
                                                                    "internalType": "bool",
                                                                    "name": "inheritAccountKey",
                                                                    "type": "bool"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "contractId",
                                                                    "type": "address"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ed25519",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ECDSA_secp256k1",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "delegatableContractId",
                                                                    "type": "address"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.Expiry",
                                                    "name": "expiry",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "int64",
                                                            "name": "second",
                                                            "type": "int64"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "autoRenewAccount",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "int64",
                                                            "name": "autoRenewPeriod",
                                                            "type": "int64"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "totalSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "deleted",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "defaultKycStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "pauseStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FixedFee[]",
                                            "name": "fixedFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useCurrentTokenForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                                            "name": "fractionalFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "minimumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maximumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "netOfTransfers",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                            "name": "royaltyFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "ledgerId",
                                            "type": "string"
                                        }
                                    ]
                                },
                                { "internalType": "int32", "name": "decimals", "type": "int32" }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "serialNumber", "type": "int64" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getNonFungibleTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.TokenInfo",
                                    "name": "tokenInfo",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IHederaTokenService.HederaToken",
                                            "name": "token",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "string",
                                                    "name": "name",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "symbol",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "treasury",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "memo",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "tokenSupplyType",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maxSupply",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "freezeDefault",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                                    "name": "tokenKeys",
                                                    "type": "tuple[]",
                                                    "components": [
                                                        {
                                                            "internalType": "uint256",
                                                            "name": "keyType",
                                                            "type": "uint256"
                                                        },
                                                        {
                                                            "internalType": "struct IHederaTokenService.KeyValue",
                                                            "name": "key",
                                                            "type": "tuple",
                                                            "components": [
                                                                {
                                                                    "internalType": "bool",
                                                                    "name": "inheritAccountKey",
                                                                    "type": "bool"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "contractId",
                                                                    "type": "address"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ed25519",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ECDSA_secp256k1",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "delegatableContractId",
                                                                    "type": "address"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.Expiry",
                                                    "name": "expiry",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "int64",
                                                            "name": "second",
                                                            "type": "int64"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "autoRenewAccount",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "int64",
                                                            "name": "autoRenewPeriod",
                                                            "type": "int64"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "totalSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "deleted",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "defaultKycStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "pauseStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FixedFee[]",
                                            "name": "fixedFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useCurrentTokenForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                                            "name": "fractionalFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "minimumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maximumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "netOfTransfers",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                            "name": "royaltyFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "ledgerId",
                                            "type": "string"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "int64",
                                    "name": "serialNumber",
                                    "type": "int64"
                                },
                                { "internalType": "address", "name": "ownerId", "type": "address" },
                                {
                                    "internalType": "int64",
                                    "name": "creationTime",
                                    "type": "int64"
                                },
                                { "internalType": "bytes", "name": "metadata", "type": "bytes" },
                                {
                                    "internalType": "address",
                                    "name": "spenderId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenCustomFees",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                {
                                    "internalType": "int64",
                                    "name": "minimumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "maximumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "netOfTransfers",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenDefaultFreezeStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenDefaultKycStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenExpiryInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.Expiry",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                { "internalType": "int64", "name": "second", "type": "int64" },
                                {
                                    "internalType": "address",
                                    "name": "autoRenewAccount",
                                    "type": "address"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "autoRenewPeriod",
                                    "type": "int64"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "name": "token",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "string",
                                            "name": "name",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "symbol",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "treasury",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "memo",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "tokenSupplyType",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maxSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "freezeDefault",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "uint256",
                                                    "name": "keyType",
                                                    "type": "uint256"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "bool",
                                                            "name": "inheritAccountKey",
                                                            "type": "bool"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "contractId",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ed25519",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "delegatableContractId",
                                                            "type": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "name": "expiry",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "second",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "autoRenewAccount",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "internalType": "int64", "name": "totalSupply", "type": "int64" },
                                { "internalType": "bool", "name": "deleted", "type": "bool" },
                                {
                                    "internalType": "bool",
                                    "name": "defaultKycStatus",
                                    "type": "bool"
                                },
                                { "internalType": "bool", "name": "pauseStatus", "type": "bool" },
                                {
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "minimumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maximumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "netOfTransfers",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                { "internalType": "string", "name": "ledgerId", "type": "string" }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "keyType", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenKey",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.KeyValue",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "inheritAccountKey",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "contractId",
                                    "type": "address"
                                },
                                { "internalType": "bytes", "name": "ed25519", "type": "bytes" },
                                {
                                    "internalType": "bytes",
                                    "name": "ECDSA_secp256k1",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatableContractId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenType",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "int32", "name": "", "type": "int32" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "owner", "type": "address" },
                        { "internalType": "address", "name": "operator", "type": "address" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isApprovedForAll",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "isToken",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "bytes[]", "name": "", "type": "bytes[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" },
                        { "internalType": "int64[]", "name": "serialNumbers", "type": "int64[]" }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "associateToken(address,address)": {
                        "params": {
                            "account": "The account to be associated with the provided token",
                            "token": "The token to be associated with the provided account"
                        }
                    },
                    "associateTokens(address,address[])": {
                        "params": {
                            "account": "The account to be associated with the provided tokens",
                            "tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "dissociateToken(address,address)": {
                        "params": {
                            "account": "The account to be associated with the provided token",
                            "token": "The token to be associated with the provided account"
                        }
                    },
                    "dissociateTokens(address,address[])": {
                        "params": {
                            "account": "The account to be dissociated from the provided tokens",
                            "tokens": "The tokens to be dissociated from the provided account."
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getAccountId(address)": {
                        "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
                    },
                    "getApproved(address,uint256)": {
                        "params": {
                            "serialNumber": "The NFT to find the approved address for",
                            "token": "The Hedera NFT token address to check approval"
                        },
                        "returns": {
                            "approved": "The approved address for this NFT, or the zero address if there is none",
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getFungibleTokenInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "FungibleTokenInfo info for `token`"
                        }
                    },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "params": {
                            "serialNumber": "The NFT serialNumber to check",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                        }
                    },
                    "getTokenCustomFees(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "Set of fixed fees for `token`",
                            "_2": "Set of fractional fees for `token`",
                            "_3": "Set of royalty fees for `token`"
                        }
                    },
                    "getTokenDefaultFreezeStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default freeze status is frozen."
                        }
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                        }
                    },
                    "getTokenExpiryInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenInfo": "Expiry info for `token`"
                        }
                    },
                    "getTokenInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenInfo": "TokenInfo info for `token`"
                        }
                    },
                    "getTokenKey(address,uint256)": {
                        "params": {
                            "keyType": "The keyType of the desired KeyValue",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "KeyValue info for key of type `keyType`"
                        }
                    },
                    "getTokenType(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                        }
                    },
                    "isApprovedForAll(address,address,address)": {
                        "params": {
                            "operator": "The address that acts on behalf of the owner",
                            "owner": "The address that owns the NFTs",
                            "token": "The Hedera NFT token address to approve"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                        }
                    },
                    "isToken(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if valid token found for the given address"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "associateToken(address,address)": {
                        "notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
                    },
                    "associateTokens(address,address[])": {
                        "notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
                    },
                    "dissociateToken(address,address)": {
                        "notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
                    },
                    "dissociateTokens(address,address[])": {
                        "notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
                    },
                    "getApproved(address,uint256)": {
                        "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
                    },
                    "getFungibleTokenInfo(address)": { "notice": "Query fungible token info" },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "notice": "Query non fungible token info"
                    },
                    "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
                    "getTokenDefaultFreezeStatus(address)": {
                        "notice": "Query token default freeze status"
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "notice": "Query token default kyc status"
                    },
                    "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
                    "getTokenInfo(address)": { "notice": "Query token info" },
                    "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
                    "getTokenType(address)": {
                        "notice": "Query to return the token type for a given address"
                    },
                    "isApprovedForAll(address,address,address)": {
                        "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
                    },
                    "isToken(address)": {
                        "notice": "Query if valid token found for the given address"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/",
                "forge-std/=lib/forge-std/src/",
                "solidity-stringutils/=lib/surl/lib/solidity-stringutils/",
                "surl/=lib/surl/"
            ],
            "optimizer": { "enabled": true, "runs": 200 },
            "metadata": { "bytecodeHash": "ipfs" },
            "compilationTarget": { "contracts/HtsSystemContract.sol": "HtsSystemContract" },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "contracts/HtsSystemContract.sol": {
                "keccak256": "0x911c467c6dd68d6f44e901cf0d87812e15589f70e97b282b2d2b9c43708fd5c8",
                "urls": [
                    "bzz-raw://b4ffe05031d88d37f0596732f95c54a1c23ec529973d57f01959c2043bea26d2",
                    "dweb:/ipfs/QmZRBQjnjtdFYT47yio4uSrY7fv2UT7J6f1PFebb2CCWQv"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC20.sol": {
                "keccak256": "0x77993e2d90d6b91d30b8721a52364902d823dd5d1020500071c4ecd7f847a00e",
                "urls": [
                    "bzz-raw://776be938a4f20b2b40e95a5d58f330454d21077894659a674ac8bda378561598",
                    "dweb:/ipfs/QmToUenT2jKjiJLCozN3xQp2esRVbRceyS8KVMqcd9j29W"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC721.sol": {
                "keccak256": "0x7b4a961afb96ff6326f4d2985f20edf7aa10b3ba1b68c502a0cdcd84ba26e767",
                "urls": [
                    "bzz-raw://322d92f6a244dd8a9818d5be6e4e17c6dd048a033449dd79b43229c7077da06d",
                    "dweb:/ipfs/QmdFyC7EU8iGiyFzh77YsUpp6eysV8ijyLUKWsDPVKq7yG"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHRC719.sol": {
                "keccak256": "0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd",
                "urls": [
                    "bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d",
                    "dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHederaTokenService.sol": {
                "keccak256": "0x753e733f6c1921938f300e2a1d31f7fc09d598149c9991ffa91d99a4d26ca3f1",
                "urls": [
                    "bzz-raw://b68ea0df42ebc03fe33e2dc56b80f9d9dbfed1c0b528436423cf66de5a1e4a43",
                    "dweb:/ipfs/QmXJbGG7nEH9fNDpxgXfUKE8aG7pcwPB72EbuYUgtSAGWY"
                ],
                "license": "Apache-2.0"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 91,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "tokenType",
                "offset": 0,
                "slot": "0",
                "type": "t_string_storage"
            },
            {
                "astId": 93,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "name",
                "offset": 0,
                "slot": "1",
                "type": "t_string_storage"
            },
            {
                "astId": 95,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "symbol",
                "offset": 0,
                "slot": "2",
                "type": "t_string_storage"
            },
            {
                "astId": 97,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "decimals",
                "offset": 0,
                "slot": "3",
                "type": "t_uint8"
            },
            {
                "astId": 99,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "totalSupply",
                "offset": 0,
                "slot": "4",
                "type": "t_uint256"
            },
            {
                "astId": 102,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "_tokenInfo",
                "offset": 0,
                "slot": "5",
                "type": "t_struct(TokenInfo)6381_storage"
            }
        ],
        "types": {
            "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
            "t_array(t_struct(FixedFee)6423_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FixedFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FixedFee)6423_storage"
            },
            "t_array(t_struct(FractionalFee)6437_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FractionalFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FractionalFee)6437_storage"
            },
            "t_array(t_struct(RoyaltyFee)6451_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.RoyaltyFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(RoyaltyFee)6451_storage"
            },
            "t_array(t_struct(TokenKey)6322_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.TokenKey[]",
                "numberOfBytes": "32",
                "base": "t_struct(TokenKey)6322_storage"
            },
            "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
            "t_bytes_storage": { "encoding": "bytes", "label": "bytes", "numberOfBytes": "32" },
            "t_int64": { "encoding": "inplace", "label": "int64", "numberOfBytes": "8" },
            "t_string_storage": { "encoding": "bytes", "label": "string", "numberOfBytes": "32" },
            "t_struct(Expiry)6303_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.Expiry",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6298,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "second",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6300,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewAccount",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6302,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewPeriod",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_int64"
                    }
                ]
            },
            "t_struct(FixedFee)6423_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FixedFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6414,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6416,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6418,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 28,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6420,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useCurrentTokenForPayment",
                        "offset": 29,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6422,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(FractionalFee)6437_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FractionalFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6426,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6428,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6430,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "minimumAmount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6432,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maximumAmount",
                        "offset": 24,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6434,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "netOfTransfers",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6436,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 1,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(HederaToken)6345_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.HederaToken",
                "numberOfBytes": "256",
                "members": [
                    {
                        "astId": 6325,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "name",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6327,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "symbol",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6329,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "treasury",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    },
                    {
                        "astId": 6331,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "memo",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6333,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenSupplyType",
                        "offset": 0,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6335,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maxSupply",
                        "offset": 1,
                        "slot": "4",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6337,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "freezeDefault",
                        "offset": 9,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6341,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenKeys",
                        "offset": 0,
                        "slot": "5",
                        "type": "t_array(t_struct(TokenKey)6322_storage)dyn_storage"
                    },
                    {
                        "astId": 6344,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "expiry",
                        "offset": 0,
                        "slot": "6",
                        "type": "t_struct(Expiry)6303_storage"
                    }
                ]
            },
            "t_struct(KeyValue)6315_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.KeyValue",
                "numberOfBytes": "128",
                "members": [
                    {
                        "astId": 6306,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "inheritAccountKey",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6308,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "contractId",
                        "offset": 1,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6310,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ed25519",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 6312,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ECDSA_secp256k1",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 6314,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "delegatableContractId",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(RoyaltyFee)6451_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.RoyaltyFee",
                "numberOfBytes": "96",
                "members": [
                    {
                        "astId": 6440,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6442,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6444,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6446,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    },
                    {
                        "astId": 6448,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 20,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6450,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(TokenInfo)6381_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenInfo",
                "numberOfBytes": "416",
                "members": [
                    {
                        "astId": 6350,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "token",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_struct(HederaToken)6345_storage"
                    },
                    {
                        "astId": 6353,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "totalSupply",
                        "offset": 0,
                        "slot": "8",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6356,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "deleted",
                        "offset": 8,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6359,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "defaultKycStatus",
                        "offset": 9,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6362,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "pauseStatus",
                        "offset": 10,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6367,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fixedFees",
                        "offset": 0,
                        "slot": "9",
                        "type": "t_array(t_struct(FixedFee)6423_storage)dyn_storage"
                    },
                    {
                        "astId": 6372,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fractionalFees",
                        "offset": 0,
                        "slot": "10",
                        "type": "t_array(t_struct(FractionalFee)6437_storage)dyn_storage"
                    },
                    {
                        "astId": 6377,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "royaltyFees",
                        "offset": 0,
                        "slot": "11",
                        "type": "t_array(t_struct(RoyaltyFee)6451_storage)dyn_storage"
                    },
                    {
                        "astId": 6380,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ledgerId",
                        "offset": 0,
                        "slot": "12",
                        "type": "t_string_storage"
                    }
                ]
            },
            "t_struct(TokenKey)6322_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenKey",
                "numberOfBytes": "160",
                "members": [
                    {
                        "astId": 6318,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "keyType",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 6321,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "key",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_struct(KeyValue)6315_storage"
                    }
                ]
            },
            "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" },
            "t_uint8": { "encoding": "inplace", "label": "uint8", "numberOfBytes": "1" }
        }
    },
    "userdoc": {
        "version": 1,
        "kind": "user",
        "methods": {
            "associateToken(address,address)": {
                "notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
            },
            "associateTokens(address,address[])": {
                "notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
            },
            "dissociateToken(address,address)": {
                "notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
            },
            "dissociateTokens(address,address[])": {
                "notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
            },
            "getApproved(address,uint256)": {
                "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
            },
            "getFungibleTokenInfo(address)": { "notice": "Query fungible token info" },
            "getNonFungibleTokenInfo(address,int64)": { "notice": "Query non fungible token info" },
            "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
            "getTokenDefaultFreezeStatus(address)": {
                "notice": "Query token default freeze status"
            },
            "getTokenDefaultKycStatus(address)": { "notice": "Query token default kyc status" },
            "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
            "getTokenInfo(address)": { "notice": "Query token info" },
            "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
            "getTokenType(address)": {
                "notice": "Query to return the token type for a given address"
            },
            "isApprovedForAll(address,address,address)": {
                "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
            },
            "isToken(address)": { "notice": "Query if valid token found for the given address" }
        }
    },
    "devdoc": {
        "version": 1,
        "kind": "dev",
        "methods": {
            "associateToken(address,address)": {
                "params": {
                    "account": "The account to be associated with the provided token",
                    "token": "The token to be associated with the provided account"
                }
            },
            "associateTokens(address,address[])": {
                "params": {
                    "account": "The account to be associated with the provided tokens",
                    "tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "dissociateToken(address,address)": {
                "params": {
                    "account": "The account to be associated with the provided token",
                    "token": "The token to be associated with the provided account"
                }
            },
            "dissociateTokens(address,address[])": {
                "params": {
                    "account": "The account to be dissociated from the provided tokens",
                    "tokens": "The tokens to be dissociated from the provided account."
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "getAccountId(address)": {
                "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
            },
            "getApproved(address,uint256)": {
                "params": {
                    "serialNumber": "The NFT to find the approved address for",
                    "token": "The Hedera NFT token address to check approval"
                },
                "returns": {
                    "approved": "The approved address for this NFT, or the zero address if there is none",
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "getFungibleTokenInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "FungibleTokenInfo info for `token`"
                }
            },
            "getNonFungibleTokenInfo(address,int64)": {
                "params": {
                    "serialNumber": "The NFT serialNumber to check",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                }
            },
            "getTokenCustomFees(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "Set of fixed fees for `token`",
                    "_2": "Set of fractional fees for `token`",
                    "_3": "Set of royalty fees for `token`"
                }
            },
            "getTokenDefaultFreezeStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default freeze status is frozen."
                }
            },
            "getTokenDefaultKycStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                }
            },
            "getTokenExpiryInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenInfo": "Expiry info for `token`"
                }
            },
            "getTokenInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenInfo": "TokenInfo info for `token`"
                }
            },
            "getTokenKey(address,uint256)": {
                "params": {
                    "keyType": "The keyType of the desired KeyValue",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "KeyValue info for key of type `keyType`"
                }
            },
            "getTokenType(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                }
            },
            "isApprovedForAll(address,address,address)": {
                "params": {
                    "operator": "The address that acts on behalf of the owner",
                    "owner": "The address that owns the NFTs",
                    "token": "The Hedera NFT token address to approve"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                }
            },
            "isToken(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if valid token found for the given address"
                }
            }
        },
        "events": {
            "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
            },
            "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
            }
        }
    },
    "id": 1
}
