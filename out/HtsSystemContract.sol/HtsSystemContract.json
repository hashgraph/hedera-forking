{
    "abi": [
        { "type": "fallback", "stateMutability": "nonpayable" },
        {
            "type": "function",
            "name": "_update",
            "inputs": [
                { "name": "from", "type": "address", "internalType": "address" },
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "associateToken",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "token", "type": "address", "internalType": "address" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "associateTokens",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "tokens", "type": "address[]", "internalType": "address[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "burnToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int64[]", "internalType": "int64[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "dissociateToken",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "token", "type": "address", "internalType": "address" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "dissociateTokens",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "tokens", "type": "address[]", "internalType": "address[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getAccountId",
            "inputs": [{ "name": "account", "type": "address", "internalType": "address" }],
            "outputs": [{ "name": "accountId", "type": "uint32", "internalType": "uint32" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getApproved",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "approved", "type": "address", "internalType": "address" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getFungibleTokenInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.FungibleTokenInfo",
                    "components": [
                        {
                            "name": "tokenInfo",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "components": [
                                {
                                    "name": "token",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "components": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "symbol",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "treasury",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "memo",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "tokenSupplyType",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "maxSupply",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "freezeDefault",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "components": [
                                                {
                                                    "name": "keyType",
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                {
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "components": [
                                                        {
                                                            "name": "inheritAccountKey",
                                                            "type": "bool",
                                                            "internalType": "bool"
                                                        },
                                                        {
                                                            "name": "contractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        },
                                                        {
                                                            "name": "ed25519",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "delegatableContractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "expiry",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "components": [
                                                {
                                                    "name": "second",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                },
                                                {
                                                    "name": "autoRenewAccount",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                                { "name": "deleted", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "defaultKycStatus",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "components": [
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "minimumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "maximumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "netOfTransfers",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                { "name": "ledgerId", "type": "string", "internalType": "string" }
                            ]
                        },
                        { "name": "decimals", "type": "int32", "internalType": "int32" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getNonFungibleTokenInfo",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "int64", "internalType": "int64" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                    "components": [
                        {
                            "name": "tokenInfo",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "components": [
                                {
                                    "name": "token",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "components": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "symbol",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "treasury",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "memo",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "tokenSupplyType",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "maxSupply",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "freezeDefault",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "components": [
                                                {
                                                    "name": "keyType",
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                {
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "components": [
                                                        {
                                                            "name": "inheritAccountKey",
                                                            "type": "bool",
                                                            "internalType": "bool"
                                                        },
                                                        {
                                                            "name": "contractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        },
                                                        {
                                                            "name": "ed25519",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "delegatableContractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "expiry",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "components": [
                                                {
                                                    "name": "second",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                },
                                                {
                                                    "name": "autoRenewAccount",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                                { "name": "deleted", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "defaultKycStatus",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "components": [
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "minimumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "maximumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "netOfTransfers",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                { "name": "ledgerId", "type": "string", "internalType": "string" }
                            ]
                        },
                        { "name": "serialNumber", "type": "int64", "internalType": "int64" },
                        { "name": "ownerId", "type": "address", "internalType": "address" },
                        { "name": "creationTime", "type": "int64", "internalType": "int64" },
                        { "name": "metadata", "type": "bytes", "internalType": "bytes" },
                        { "name": "spenderId", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenCustomFees",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FixedFee[]",
                    "components": [
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        {
                            "name": "useCurrentTokenForPayment",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "minimumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "maximumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "netOfTransfers", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenDefaultFreezeStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenDefaultKycStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenExpiryInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.Expiry",
                    "components": [
                        { "name": "second", "type": "int64", "internalType": "int64" },
                        {
                            "name": "autoRenewAccount",
                            "type": "address",
                            "internalType": "address"
                        },
                        { "name": "autoRenewPeriod", "type": "int64", "internalType": "int64" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.TokenInfo",
                    "components": [
                        {
                            "name": "token",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "components": [
                                { "name": "name", "type": "string", "internalType": "string" },
                                { "name": "symbol", "type": "string", "internalType": "string" },
                                {
                                    "name": "treasury",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                { "name": "memo", "type": "string", "internalType": "string" },
                                {
                                    "name": "tokenSupplyType",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "maxSupply", "type": "int64", "internalType": "int64" },
                                { "name": "freezeDefault", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "components": [
                                        {
                                            "name": "keyType",
                                            "type": "uint256",
                                            "internalType": "uint256"
                                        },
                                        {
                                            "name": "key",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "components": [
                                                {
                                                    "name": "inheritAccountKey",
                                                    "type": "bool",
                                                    "internalType": "bool"
                                                },
                                                {
                                                    "name": "contractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "ed25519",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "delegatableContractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "expiry",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "components": [
                                        {
                                            "name": "second",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "autoRenewAccount",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "autoRenewPeriod",
                                            "type": "int64",
                                            "internalType": "int64"
                                        }
                                    ]
                                }
                            ]
                        },
                        { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                        { "name": "deleted", "type": "bool", "internalType": "bool" },
                        { "name": "defaultKycStatus", "type": "bool", "internalType": "bool" },
                        { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                        {
                            "name": "fixedFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "components": [
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "fractionalFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                {
                                    "name": "minimumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "maximumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "netOfTransfers",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "royaltyFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        { "name": "ledgerId", "type": "string", "internalType": "string" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenKey",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "keyType", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.KeyValue",
                    "components": [
                        { "name": "inheritAccountKey", "type": "bool", "internalType": "bool" },
                        { "name": "contractId", "type": "address", "internalType": "address" },
                        { "name": "ed25519", "type": "bytes", "internalType": "bytes" },
                        { "name": "ECDSA_secp256k1", "type": "bytes", "internalType": "bytes" },
                        {
                            "name": "delegatableContractId",
                            "type": "address",
                            "internalType": "address"
                        }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenType",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int32", "internalType": "int32" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isApprovedForAll",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "owner", "type": "address", "internalType": "address" },
                { "name": "operator", "type": "address", "internalType": "address" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isToken",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bytes[]", "internalType": "bytes[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" },
                { "name": "serialNumbers", "type": "int64[]", "internalType": "int64[]" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferTokens",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "accountId", "type": "address[]", "internalType": "address[]" },
                { "name": "amount", "type": "int64[]", "internalType": "int64[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ApprovalForAll",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        }
    ],
    "bytecode": {
        "object": "0x6080604052348015600e575f5ffd5b506162c68061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610135575f3560e01c806349146bde116100b6578063ae7611a01161007a578063ae7611a014610448578063d614cdb81461046b578063d6910d061461048c578063e0b490f7146104b9578063e0f4059a146104e1578063f49f40db1461050357610135565b806349146bde146103cc57806378b63918146103df57806382bba493146103f257806393272baf14610405578063a7daa18d1461043557610135565b8063287e1da8116100fd578063287e1da8146103435780632e63879b14610364578063335e04c1146103775780633c4dd32e1461038a5780633f28a19b146103ab57610135565b8063098f236614610280578063099794e8146102ba5780630bb3bfa8146102e057806319f37361146102f55780631f69565f14610322575b5f366060601c82101561018f5760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a206e6f7420656e6f7567682063616c6c6461746100000060448201526064015b60405180910390fd5b5f61019d60048236816145f4565b6101a69161461b565b60e01c905063618dc65e81146101fe5760405162461bcd60e51b815260206004820152601e60248201527f66616c6c6261636b3a20756e737570706f727465642073656c6563746f7200006044820152606401610186565b5f61020d6018600436846145f4565b61021691614653565b60601c905030811461026a5760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a20746f6b656e206973206e6f742063616c6c65720000006044820152606401610186565b610272610516565b805195506020019350505050f35b61029361028e3660046146a0565b610df6565b6040805160079390930b83526001600160a01b039091166020830152015b60405180910390f35b6102cd6102c83660046146ca565b610ee4565b60405160079190910b81526020016102b1565b6102f36102ee366004614701565b610f6e565b005b61030861030336600461473f565b61104c565b6040805160079390930b83529015156020830152016102b1565b61033561033036600461473f565b61110d565b6040516102b1929190614bc1565b610356610351366004614bea565b611201565b6040516102b1929190614c16565b6102cd610372366004614e0f565b611488565b61030861038536600461473f565b611763565b61039d6103983660046146a0565b61185f565b6040516102b1929190614e5b565b6103be6103b936600461473f565b611a3e565b6040516102b1929190614e76565b6102cd6103da3660046146ca565b611c29565b6102cd6103ed366004614e0f565b611ca9565b6102cd610400366004614f17565b611f7d565b61041861041336600461473f565b6122a7565b6040805160079390930b835260039190910b6020830152016102b1565b61030861044336600461473f565b612387565b61045b61045636600461473f565b612442565b6040516102b19493929190614f8b565b61047e61047936600461473f565b612541565b6040516102b1929190614fcc565b61049f61049a366004615008565b612645565b60408051600793840b81529190920b6020820152016102b1565b6104cc6104c736600461473f565b61296c565b60405163ffffffff90911681526020016102b1565b6104f46104ef366004615075565b6129e6565b6040516102b19392919061518a565b6103086105113660046151e7565b612d23565b60605f610527601c601836846145f4565b6105309161461b565b905060408051808201825260098152681393d517d193d5539160ba1b602090910152517f7bafae6429a8b3ef0db181af7c5834a6f2b1af33146a1a9ae02e833d27f2431b90610580905f906152d5565b6040518091039020036105df5760405162461bcd60e51b815260206004820152602160248201527f7265646972656374466f72546f6b656e3a20746f6b656e206e6f7420666f756e6044820152601960fa1b6064820152608401610186565b610166193301610cbd5763e096a9a160e01b6001600160e01b031982160161068657601c36101561065c5760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e496e666f3a204e6f7420656e6f7567682063616c6c6461746044820152606160f81b6064820152608401610186565b60166005604051602001610671929190615698565b60405160208183030381529060405291505090565b63028c4f7360e51b6001600160e01b031982160161071a57601c3610156106ff5760405162461bcd60e51b815260206004820152602760248201527f676574546f6b656e437573746f6d466565733a204e6f7420656e6f7567682063604482015266616c6c6461746160c81b6064820152608401610186565b60405161067190601690600e90600f90601090602001615775565b63cca1fb3f60e01b6001600160e01b03198216016107c057601c3610156107995760405162461bcd60e51b815260206004820152602d60248201527f676574546f6b656e44656661756c744b79635374617475733a204e6f7420656e60448201526c6f7567682063616c6c6461746160981b6064820152608401610186565b600d546040805160166020820152600160481b90920460ff16151590820152606001610671565b6358255e7360e01b6001600160e01b031982160161086957601c3610156108425760405162461bcd60e51b815260206004820152603060248201527f676574546f6b656e44656661756c74467265657a655374617475733a204e6f7460448201526f20656e6f7567682063616c6c6461746160801b6064820152608401610186565b6009546040805160166020820152600160481b90920460ff16151590820152606001610671565b63053d664960e31b6001600160e01b03198216016108f757601c3610156108e25760405162461bcd60e51b815260206004820152602760248201527f676574546f6b656e457870697279496e666f3a204e6f7420656e6f7567682063604482015266616c6c6461746160c81b6064820152608401610186565b60405161067190601690600b906020016157b6565b635b75ca1160e11b6001600160e01b03198216016109be57603036101561096c5760405162461bcd60e51b815260206004820152602360248201527f6173736f6369617465546f6b656e3a204e6f7420656e6f7567682063616c6c6460448201526261746160e81b6064820152608401610186565b5f61097b603c602836846145f4565b61098491614653565b60601c90505f61099382612e1c565b600181556040805160166020820152919250015b604051602081830303815290604052935050505090565b631ecd0d6360e31b6001600160e01b0319821601610a71576030361015610a335760405162461bcd60e51b8152602060048201526024808201527f646973736f6369617465546f6b656e3a204e6f7420656e6f7567682063616c6c6044820152636461746160e01b6064820152608401610186565b5f610a42603c602836846145f4565b610a4b91614653565b60601c90505f610a5a82612e1c565b5f81556040805160166020820152919250016109a7565b636cd8d45160e01b6001600160e01b0319821601610bd157601c361015610ae45760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e547970653a204e6f7420656e6f7567682063616c6c6461746044820152606160f81b6064820152608401610186565b7f20081d23699eb901ca16307080f9b35e7967740755a921f749a9e037b0875c755f604051602001610b1691906152d5565b6040516020818303038152906040528051906020012003610b4c5760408051601660208201525f91810191909152606001610671565b7f6c58a12b113a1ee77f554495d8bd48a419af104bca196099cdecc39fcb8989f05f604051602001610b7e91906152d5565b6040516020818303038152906040528051906020012003610bb5576040805160166020820152600191810191909152606001610671565b60408051601660208201525f1991810191909152606001610671565b631e89880b60e31b6001600160e01b0319821601610cbd57607c361015610c3a5760405162461bcd60e51b815260206004820152601b60248201527f7570646174653a204e6f7420656e6f7567682063616c6c6461746100000000006044820152606401610186565b5f610c49603c602836846145f4565b610c5291614653565b60601c90505f610c66605c604836846145f4565b610c6f91614653565b60601c90505f610c83607c605c36846145f4565b610c8c916157f2565b9050610c99838383610f6e565b60408051600160208201520160405160208183030381529060405294505050505090565b604080518082018252600f81526e232aa723a4a12622afa1a7a6a6a7a760891b602090910152517f20081d23699eb901ca16307080f9b35e7967740755a921f749a9e037b0875c7590610d11905f906152d5565b604051809103902003610d2d57610d2781612ecc565b91505090565b60408051808201825260138152724e4f4e5f46554e4749424c455f554e4951554560681b602090910152517f6c58a12b113a1ee77f554495d8bd48a419af104bca196099cdecc39fcb8989f090610d85905f906152d5565b604051809103902003610d9b57610d2781613402565b60405162461bcd60e51b815260206004820152602a60248201527f7265646972656374466f72546f6b656e3a20746f6b656e2074797065206e6f74604482015269081cdd5c1c1bdc9d195960b21b6064820152608401610186565b5f803061016714610e195760405162461bcd60e51b81526004016101869061580f565b6001600160a01b038416610e6f5760405162461bcd60e51b815260206004820152601a60248201527f676574417070726f7665643a20696e76616c696420746f6b656e0000000000006044820152606401610186565b60405163020604bf60e21b8152600481018490526016906001600160a01b0386169063081812fc90602401602060405180830381865afa158015610eb5573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ed99190615856565b909590945092505050565b5f3061016714610f065760405162461bcd60e51b81526004016101869061580f565b6040805160018082528183019092525f916020808301908036833701905050905082815f81518110610f3a57610f3a615871565b60200260200101906001600160a01b031690816001600160a01b031681525050610f648482611ca9565b9150505b92915050565b6001600160a01b038316610f98578060045f828254610f8d9190615899565b90915550610ffd9050565b5f610fa2846139d4565b805490915082811015610ff75760405162461bcd60e51b815260206004820152601f60248201527f5f7472616e736665723a20696e73756666696369656e742062616c616e6365006044820152606401610186565b82900390555b6001600160a01b038216611027578060045f82825461101c91906158ac565b909155506110479050565b5f611031836139d4565b80549091505f6110418483615899565b90925550505b505050565b6040516001600160a01b03821660248201525f908190819060440160408051601f198184030181529181526020820180516001600160e01b03166393272baf60e01b179052519091505f9081906001600160a01b038716906110af9085906158bf565b5f604051808303815f865af19150503d805f81146110e8576040519150601f19603f3d011682016040523d82523d5f602084013e6110ed565b606091505b5091509150601682801561110157505f8251115b94509450505050915091565b5f6111166144a9565b30610167146111375760405162461bcd60e51b81526004016101869061580f565b6001600160a01b03831661118d5760405162461bcd60e51b815260206004820152601b60248201527f676574546f6b656e496e666f3a20696e76616c696420746f6b656e00000000006044820152606401610186565b604051631f69565f60e01b81526001600160a01b0384166004820181905290631f69565f906024015f604051808303815f875af11580156111d0573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111f79190810190615ea8565b9094909350915050565b5f61120a61455b565b306101671461122b5760405162461bcd60e51b81526004016101869061580f565b6001600160a01b0384166112905760405162461bcd60e51b815260206004820152602660248201527f6765744e6f6e46756e6769626c65546f6b656e496e666f3a20696e76616c6964604482015265103a37b5b2b760d11b6064820152608401610186565b604051631f69565f60e01b81526001600160a01b038516600482018190525f91829190631f69565f906024015f604051808303815f875af11580156112d7573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526112fe9190810190615ea8565b915091508160070b60161461136f5760405162461bcd60e51b815260206004820152603160248201527f6765744e6f6e46756e6769626c65546f6b656e496e666f3a206661696c656420604482015270746f2067657420746f6b656e206461746160781b6064820152608401610186565b61137761455b565b818152600786900b602082015260405163020604bf60e21b81526001600160401b03871660048201526001600160a01b0388169063081812fc90602401602060405180830381865afa1580156113cf573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113f39190615856565b6001600160a01b0390811660a08301526040516331a9108f60e11b81526001600160401b038816600482015290881690636352211e90602401602060405180830381865afa158015611447573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061146b9190615856565b6001600160a01b03166040820152919350909150505b9250929050565b5f30610167146114aa5760405162461bcd60e51b81526004016101869061580f565b5f8251116114fa5760405162461bcd60e51b815260206004820152601f60248201527f6173736f6369617465546f6b656e733a206d697373696e6720746f6b656e73006044820152606401610186565b6001600160a01b03831633146115ad5760405162461bcd60e51b815260206004820152606660248201527f6173736f6369617465546f6b656e733a204d757374206265207369676e65642060448201527f6279207468652070726f7669646564204163636f756e742773206b6579206f7260648201527f2063616c6c65642066726f6d20746865206163636f756e747320636f6e7472616084820152656374206b657960d01b60a482015260c401610186565b5f5b8251811015611759575f6001600160a01b03168382815181106115d4576115d4615871565b60200260200101516001600160a01b0316036116325760405162461bcd60e51b815260206004820152601e60248201527f6173736f6369617465546f6b656e733a20696e76616c696420746f6b656e00006044820152606401610186565b5f83828151811061164557611645615871565b60200260200101516001600160a01b03166349146bde8686858151811061166e5761166e615871565b60200260200101516040518363ffffffff1660e01b81526004016116a89291906001600160a01b0392831681529116602082015260400190565b6020604051808303815f875af11580156116c4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116e89190616017565b90508060070b6016146117505760405162461bcd60e51b815260206004820152602a60248201527f6173736f6369617465546f6b656e733a204661696c656420746f206173736f6360448201526934b0ba32903a37b5b2b760b11b6064820152608401610186565b506001016115af565b5060169392505050565b5f8030610167146117865760405162461bcd60e51b81526004016101869061580f565b6001600160a01b0383166117ee5760405162461bcd60e51b815260206004820152602960248201527f676574546f6b656e44656661756c744b79635374617475733a20696e76616c6960448201526864206164647265737360b81b6064820152608401610186565b60405163335e04c160e01b81526001600160a01b038416600482018190529063335e04c1906024015b60408051808303815f875af1158015611832573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118569190616032565b91509150915091565b5f611868614595565b30610167146118895760405162461bcd60e51b81526004016101869061580f565b6001600160a01b0384166118df5760405162461bcd60e51b815260206004820152601a60248201527f676574546f6b656e4b65793a20696e76616c696420746f6b656e0000000000006044820152606401610186565b604051631f69565f60e01b81526001600160a01b038516600482018190525f91829190631f69565f906024015f604051808303815f875af1158015611926573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261194d9190810190615ea8565b915091508160070b6016146119b25760405162461bcd60e51b815260206004820152602560248201527f676574546f6b656e4b65793a206661696c656420746f2067657420746f6b656e604482015264206461746160d81b6064820152608401610186565b5f5b815160e0015151811015611a275785825f015160e0015182815181106119dc576119dc615871565b60200260200101515f015103611a1f576016825f015160e001518281518110611a0757611a07615871565b60200260200101516020015194509450505050611481565b6001016119b4565b50611a30614595565b601697909650945050505050565b5f611a476145d5565b3061016714611a685760405162461bcd60e51b81526004016101869061580f565b6001600160a01b038316611aca5760405162461bcd60e51b815260206004820152602360248201527f67657446756e6769626c65546f6b656e496e666f3a20696e76616c696420746f60448201526235b2b760e91b6064820152608401610186565b604051631f69565f60e01b81526001600160a01b038416600482018190525f91829190631f69565f906024015f604051808303815f875af1158015611b11573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611b389190810190615ea8565b915091508160070b601614611ba65760405162461bcd60e51b815260206004820152602e60248201527f67657446756e6769626c65546f6b656e496e666f3a206661696c656420746f2060448201526d67657420746f6b656e206461746160901b6064820152608401610186565b611bae6145d5565b81815f0181905250856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bf2573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c169190616065565b5f0b602082015291935090915050915091565b5f3061016714611c4b5760405162461bcd60e51b81526004016101869061580f565b6040805160018082528183019092525f916020808301908036833701905050905082815f81518110611c7f57611c7f615871565b60200260200101906001600160a01b031690816001600160a01b031681525050610f648482611488565b5f3061016714611ccb5760405162461bcd60e51b81526004016101869061580f565b5f825111611d1b5760405162461bcd60e51b815260206004820181905260248201527f646973736f6369617465546f6b656e733a206d697373696e6720746f6b656e736044820152606401610186565b6001600160a01b0383163314611dcf5760405162461bcd60e51b815260206004820152606760248201527f646973736f6369617465546f6b656e733a204d757374206265207369676e656460448201527f206279207468652070726f7669646564204163636f756e742773206b6579206f60648201527f722063616c6c65642066726f6d20746865206163636f756e747320636f6e7472608482015266616374206b657960c81b60a482015260c401610186565b5f5b8251811015611759575f6001600160a01b0316838281518110611df657611df6615871565b60200260200101516001600160a01b031603611e545760405162461bcd60e51b815260206004820152601f60248201527f646973736f6369617465546f6b656e733a20696e76616c696420746f6b656e006044820152606401610186565b5f838281518110611e6757611e67615871565b60200260200101516001600160a01b031663099794e886868581518110611e9057611e90615871565b60200260200101516040518363ffffffff1660e01b8152600401611eca9291906001600160a01b0392831681529116602082015260400190565b6020604051808303815f875af1158015611ee6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f0a9190616017565b90508060070b601614611f745760405162461bcd60e51b815260206004820152602c60248201527f646973736f6369617465546f6b656e733a204661696c656420746f206469737360448201526b37b1b4b0ba32903a37b5b2b760a11b6064820152608401610186565b50600101611dd1565b5f3061016714611f9f5760405162461bcd60e51b81526004016101869061580f565b6001600160a01b038416611ff55760405162461bcd60e51b815260206004820152601d60248201527f7472616e73666572546f6b656e733a20696e76616c696420746f6b656e0000006044820152606401610186565b5f8351116120505760405162461bcd60e51b815260206004820152602260248201527f7472616e73666572546f6b656e733a206d697373696e6720726563697069656e604482015261747360f01b6064820152608401610186565b82518251146120ac5760405162461bcd60e51b815260206004820152602260248201527f7472616e73666572546f6b656e733a20696e636f6e73697374656e7420696e706044820152611d5d60f21b6064820152608401610186565b5f5b835181101561229c575f8382815181106120ca576120ca615871565b602002602001015160070b136121225760405162461bcd60e51b815260206004820152601e60248201527f7472616e73666572546f6b656e733a20696e76616c696420616d6f756e7400006044820152606401610186565b5f6001600160a01b031684828151811061213e5761213e615871565b60200260200101516001600160a01b0316141580156121885750336001600160a01b031684828151811061217457612174615871565b60200260200101516001600160a01b031614155b6121de5760405162461bcd60e51b815260206004820152602160248201527f7472616e73666572546f6b656e733a20496e76616c6964206163636f756e74496044820152601960fa1b6064820152608401610186565b846001600160a01b0316630bb3bfa83386848151811061220057612200615871565b602002602001015186858151811061221a5761221a615871565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526001600160401b031660448201526064015f604051808303815f87803b15801561227a575f5ffd5b505af115801561228c573d5f5f3e3d5ffd5b5050600190920191506120ae9050565b506016949350505050565b5f8030610167146122ca5760405162461bcd60e51b81526004016101869061580f565b6001600160a01b0383166123205760405162461bcd60e51b815260206004820152601d60248201527f676574546f6b656e547970653a20696e76616c696420616464726573730000006044820152606401610186565b6040516393272baf60e01b81526001600160a01b03841660048201819052906393272baf9060240160408051808303815f875af1158015612363573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118569190616085565b5f8030610167146123aa5760405162461bcd60e51b81526004016101869061580f565b6001600160a01b0383166124155760405162461bcd60e51b815260206004820152602c60248201527f676574546f6b656e44656661756c74467265657a655374617475733a20696e7660448201526b616c6964206164647265737360a01b6064820152608401610186565b60405163a7daa18d60e01b81526001600160a01b038416600482018190529063a7daa18d90602401611817565b5f6060808030610167146124685760405162461bcd60e51b81526004016101869061580f565b6001600160a01b0385166124c85760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e437573746f6d466565733a20696e76616c696420746f6b656044820152603760f91b6064820152608401610186565b604051630573b08d60e51b81526001600160a01b038616600482018190529063ae7611a0906024015f604051808303815f875af115801561250b573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261253291908101906160b8565b93509350935093509193509193565b604080516060810182525f80825260208201819052918101829052306101671461257d5760405162461bcd60e51b81526004016101869061580f565b6001600160a01b0383166125dd5760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e457870697279496e666f3a20696e76616c696420746f6b656044820152603760f91b6064820152608401610186565b604051631ac299b760e31b81526001600160a01b038416600482018190529063d614cdb8906024016080604051808303815f875af1158015612621573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111f79190616157565b5f8030610167146126685760405162461bcd60e51b81526004016101869061580f565b6001600160a01b0385166126be5760405162461bcd60e51b815260206004820152601860248201527f6275726e546f6b656e3a20696e76616c696420746f6b656e00000000000000006044820152606401610186565b5f8460070b136127105760405162461bcd60e51b815260206004820152601960248201527f6275726e546f6b656e3a20696e76616c696420616d6f756e74000000000000006044820152606401610186565b604051631f69565f60e01b81526001600160a01b038616600482018190525f91829190631f69565f906024015f604051808303815f875af1158015612757573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261277e9190810190615ea8565b915091508160070b6016146127e15760405162461bcd60e51b815260206004820152602360248201527f6275726e546f6b656e3a206661696c656420746f2067657420746f6b656e20696044820152626e666f60e81b6064820152608401610186565b8051604001516001600160a01b03811661283d5760405162461bcd60e51b815260206004820152601a60248201527f6275726e546f6b656e3a20696e76616c6964206163636f756e740000000000006044820152606401610186565b60405163017677f560e31b81526001600160a01b0382811660048301525f60248301526001600160401b0389166044830152891690630bb3bfa8906064015f604051808303815f87803b158015612892575f5ffd5b505af11580156128a4573d5f5f3e3d5ffd5b5050505060169450876001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156128e8573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061290c9190616182565b93505f8460070b12156129615760405162461bcd60e51b815260206004820152601f60248201527f6275726e546f6b656e3a20696e76616c696420746f74616c20737570706c79006044820152606401610186565b505050935093915050565b5f306101671461298e5760405162461bcd60e51b81526004016101869061580f565b6040805163e0b490f760e01b602082018190525f602483018190526001600160601b0319606087901b16602c840152909290918291016040516020818303038152906040526129dc90616199565b5495945050505050565b5f8060603061016714612a0b5760405162461bcd60e51b81526004016101869061580f565b6001600160a01b038616612a615760405162461bcd60e51b815260206004820152601860248201527f6d696e74546f6b656e3a20696e76616c696420746f6b656e00000000000000006044820152606401610186565b5f8560070b13612ab35760405162461bcd60e51b815260206004820152601960248201527f6d696e74546f6b656e3a20696e76616c696420616d6f756e74000000000000006044820152606401610186565b604051631f69565f60e01b81526001600160a01b038716600482018190525f91829190631f69565f906024015f604051808303815f875af1158015612afa573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052612b219190810190615ea8565b915091508160070b601614612b845760405162461bcd60e51b815260206004820152602360248201527f6d696e74546f6b656e3a206661696c656420746f2067657420746f6b656e20696044820152626e666f60e81b6064820152608401610186565b8051604001516001600160a01b038116612be05760405162461bcd60e51b815260206004820152601a60248201527f6d696e74546f6b656e3a20696e76616c6964206163636f756e740000000000006044820152606401610186565b60405163017677f560e31b81525f60048201526001600160a01b0382811660248301526001600160401b038a1660448301528a1690630bb3bfa8906064015f604051808303815f87803b158015612c35575f5ffd5b505af1158015612c47573d5f5f3e3d5ffd5b5050505060169550886001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612c8b573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612caf9190616182565b604080515f808252602082019092529196505093505f8560070b1215612d175760405162461bcd60e51b815260206004820152601f60248201527f6d696e74546f6b656e3a20696e76616c696420746f74616c20737570706c79006044820152606401610186565b50505093509350939050565b5f803061016714612d465760405162461bcd60e51b81526004016101869061580f565b6001600160a01b038516612d9c5760405162461bcd60e51b815260206004820152601f60248201527f6973417070726f766564466f72416c6c3a20696e76616c696420746f6b656e006044820152606401610186565b60405163e985e9c560e01b81526001600160a01b03858116600483015284811660248301526016919087169063e985e9c590604401602060405180830381865afa158015612dec573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e1091906161bc565b91509150935093915050565b60405163e0b490f760e01b81526001600160a01b03821660048201525f90634d8fdd6d60e01b90829081906101679063e0b490f7906024015b602060405180830381865afa158015612e70573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e9491906161d5565b9050828282604051602001612eab939291906161f8565b604051602081830303815290604052612ec390616199565b95945050505050565b606063f90221fd60e01b6001600160e01b0319831601612f0e576001604051602001612ef8919061622d565b6040516020818303038152906040529050919050565b63cec31a9960e01b6001600160e01b0319831601612f3d576003546040805160ff909216602083015201612ef8565b63e7e9f22360e01b6001600160e01b0319831601612f6a57600454604051602001612ef891815260200190565b636a2764bf60e01b6001600160e01b0319831601612f94576002604051602001612ef8919061622d565b638f5f7dcf60e01b6001600160e01b031983160161304c57603c361015612ffd5760405162461bcd60e51b815260206004820152601e60248201527f62616c616e63654f663a204e6f7420656e6f7567682063616c6c6461746100006044820152606401610186565b5f61300c603c602836846145f4565b61301591614653565b60601c905061302381613a11565b60405160200161303591815260200190565b604051602081830303815290604052915050919050565b6356fa634560e01b6001600160e01b031983160161311e57605c3610156130b55760405162461bcd60e51b815260206004820152601d60248201527f7472616e736665723a204e6f7420656e6f7567682063616c6c646174610000006044820152606401610186565b5f6130c4603c602836846145f4565b6130cd91614653565b60601c90505f6130e1605c603c36846145f4565b6130ea916157f2565b9050336130f8818484613a24565b6040805160016020820152015b6040516020818303038152906040529350505050919050565b63dc478d2360e01b6001600160e01b031983160161321857607c3610156131875760405162461bcd60e51b815260206004820152601e60248201527f7472616e73666572463a204e6f7420656e6f7567682063616c6c6461746100006044820152606401610186565b5f613196603c602836846145f4565b61319f91614653565b60601c90505f6131b3605c604836846145f4565b6131bc91614653565b60601c90505f6131d0607c605c36846145f4565b6131d9916157f2565b9050336131e7848284613b1b565b6131f2848484613a24565b604080516001602082015201604051602081830303815290604052945050505050919050565b63114e896160e11b6001600160e01b03198316016132ef57605c3610156132815760405162461bcd60e51b815260206004820152601e60248201527f616c6c6f77616e63653a204e6f7420656e6f7567682063616c6c6461746100006044820152606401610186565b5f613290603c602836846145f4565b61329991614653565b60601c90505f6132ad605c604836846145f4565b6132b691614653565b60601c90506132c58282613b93565b6040516020016132d791815260200190565b60405160208183030381529060405292505050919050565b63f6a1584d60e01b6001600160e01b03198316016133f957605c3610156133585760405162461bcd60e51b815260206004820152601c60248201527f617070726f76653a204e6f7420656e6f7567682063616c6c64617461000000006044820152606401610186565b5f613367603c602836846145f4565b61337091614653565b60601c90505f613384605c603c36846145f4565b61338d916157f2565b90503361339b818484613ba8565b826001600160a01b0316816001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516133e091815260200190565b60405180910390a3604080516001602082015201613105565b610f6882613c68565b606063f90221fd60e01b6001600160e01b031983160161342e576001604051602001612ef8919061622d565b636a2764bf60e01b6001600160e01b0319831601613458576002604051602001612ef8919061622d565b633784a92360e01b6001600160e01b03198316016134f457603c3610156134c15760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e5552493a204e6f7420656e6f7567682063616c6c646174610000006044820152606401610186565b5f6134d0603c601c36846145f4565b6134d9916157f2565b90506134e481613d64565b604051602001613035919061623f565b63e7e9f22360e01b6001600160e01b031983160161352157600454604051602001612ef891815260200190565b638f5f7dcf60e01b6001600160e01b031983160161358a57603c361015612ffd5760405162461bcd60e51b815260206004820152601e60248201527f62616c616e63654f663a204e6f7420656e6f7567682063616c6c6461746100006044820152606401610186565b634e56ef7160e11b6001600160e01b031983160161363057603c3610156135f35760405162461bcd60e51b815260206004820152601c60248201527f6f776e65724f663a204e6f7420656e6f7567682063616c6c64617461000000006044820152606401610186565b5f613602603c601c36846145f4565b61360b916157f2565b905061361681613e07565b604080516001600160a01b03909216602083015201613035565b63dc478d2360e01b6001600160e01b031983160161370257607c3610156136a35760405162461bcd60e51b815260206004820152602160248201527f7472616e7366657246726f6d3a204e6f7420656e6f7567682063616c6c6461746044820152606160f81b6064820152608401610186565b5f6136b2603c602836846145f4565b6136bb91614653565b60601c90505f6136cf605c604836846145f4565b6136d891614653565b60601c90505f6136ec607c605c36846145f4565b6136f5916157f2565b90506130f8838383613e12565b63f6a1584d60e01b6001600160e01b03198316016137bf57605c36101561376b5760405162461bcd60e51b815260206004820152601c60248201527f617070726f76653a204e6f7420656e6f7567682063616c6c64617461000000006044820152606401610186565b5f61377a603c602836846145f4565b61378391614653565b60601c90505f613797605c603c36846145f4565b6137a0916157f2565b90506137ae8282600161400b565b6040805160016020820152016132d7565b635dd34b9b60e01b6001600160e01b031983160161387b57605c3610156138375760405162461bcd60e51b815260206004820152602660248201527f736574417070726f76616c466f72416c6c3a204e6f7420656e6f7567682063616044820152656c6c6461746160d01b6064820152608401610186565b5f613846603c602836846145f4565b61384f91614653565b60601c90505f613863605c603c36846145f4565b61386c916157f2565b60011490506137ae8282614107565b633df9fb4160e21b6001600160e01b031983160161390757603c3610156138e45760405162461bcd60e51b815260206004820181905260248201527f676574417070726f7665643a204e6f7420656e6f7567682063616c6c646174616044820152606401610186565b5f6138f3603c601c36846145f4565b6138fc916157f2565b9050613616816141ef565b63167a163b60e01b6001600160e01b03198316016133f957605c36101561397e5760405162461bcd60e51b815260206004820152602560248201527f6973417070726f766564466f72416c6c3a204e6f7420656e6f7567682063616c6044820152646c6461746160d81b6064820152608401610186565b5f61398d603c602836846145f4565b61399691614653565b60601c90505f6139aa605c604836846145f4565b6139b391614653565b60601c90506139c282826141fa565b604080519115156020830152016132d7565b60405163e0b490f760e01b81526001600160a01b03821660048201525f906370a0823160e01b90829081906101679063e0b490f790602401612e55565b5f5f613a1c836139d4565b549392505050565b6001600160a01b038316613a705760405162461bcd60e51b8152602060048201526013602482015272343a399d1034b73b30b634b21039b2b73232b960691b6044820152606401610186565b6001600160a01b038216613abe5760405162461bcd60e51b8152602060048201526015602482015274343a399d1034b73b30b634b2103932b1b2b4bb32b960591b6044820152606401610186565b613ac9838383610f6e565b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051613b0e91815260200190565b60405180910390a3505050565b5f613b268484613b93565b90505f198114613b8d5781811015613b805760405162461bcd60e51b815260206004820152601d60248201527f5f7370656e64416c6c6f77616e63653a20696e73756666696369656e740000006044820152606401610186565b613b8d8484848403613ba8565b50505050565b5f5f613b9f8484614206565b54949350505050565b6001600160a01b038316613bfe5760405162461bcd60e51b815260206004820152601760248201527f5f617070726f76653a20696e76616c6964206f776e65720000000000000000006044820152606401610186565b6001600160a01b038216613c545760405162461bcd60e51b815260206004820152601960248201527f5f617070726f76653a20696e76616c6964207370656e646572000000000000006044820152606401610186565b5f613c5f8484614206565b91909155505050565b6060637ac5590d60e11b6001600160e01b0319831601613ca8575f613c8c33612e1c565b9050600181556001604051602001613035911515815260200190565b63051b6f4160e51b6001600160e01b0319831601613ce1575f613cca33612e1c565b5f8155604080516001602082015291925001613035565b63b270229360e01b6001600160e01b0319831601613d1c575f613d0333612e1c565b80546040805182151560208201529293509091016132d7565b60405162461bcd60e51b815260206004820152601f60248201527f7265646972656374466f72546f6b656e3a206e6f7420737570706f72746564006044820152606401610186565b60605f613d7083614326565b90505f819050808054613d829061522f565b80601f0160208091040260200160405190810160405280929190818152602001828054613dae9061522f565b8015613df95780601f10613dd057610100808354040283529160200191613df9565b820191905f5260205f20905b815481529060010190602001808311613ddc57829003601f168201915b505050505092505050919050565b5f5f613a1c83614368565b6001600160a01b038316613e5e5760405162461bcd60e51b8152602060048201526013602482015272343a399d1034b73b30b634b21039b2b73232b960691b6044820152606401610186565b6001600160a01b038216613eac5760405162461bcd60e51b8152602060048201526015602482015274343a399d1034b73b30b634b2103932b1b2b4bb32b960591b6044820152606401610186565b5f613eb682614368565b80549091506001600160a01b0380821690861614613f165760405162461bcd60e51b815260206004820152601860248201527f6874733a2073656e646572206973206e6f74206f776e657200000000000000006044820152606401610186565b336001600160a01b03861614613f9357613f2f836141ef565b6001600160a01b0316336001600160a01b03161480613f535750613f5385336141fa565b613f935760405162461bcd60e51b81526020600482015260116024820152701a1d1cce881d5b985d5d1a1bdc9a5e9959607a1b6044820152606401610186565b5f613f9d8461438a565b90505f81555f613fad87876143ac565b90505f8155858455856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef87604051613ffa91815260200190565b60405180910390a350505050505050565b5f61401583613e07565b9050336001600160a01b038216148061403e575033614033846141ef565b6001600160a01b0316145b8061404e575061404e81336141fa565b6140935760405162461bcd60e51b815260206004820152601660248201527517d85c1c1c9bdd994e881d5b985d5d1a1bdc9a5e995960521b6044820152606401610186565b5f61409d8461438a565b90505f836140ab575f6140ad565b855b9050808255856001600160a01b0316836001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925876040516140f791815260200190565b60405180910390a3505050505050565b336001600160a01b038316158015906141325750806001600160a01b0316836001600160a01b031614155b61418a5760405162461bcd60e51b815260206004820152602360248201527f736574417070726f76616c466f72416c6c3a20696e76616c6964206f706572616044820152623a37b960e91b6064820152608401610186565b5f61419582856143ac565b9050828155836001600160a01b0316826001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31856040516141e1911515815260200190565b60405180910390a350505050565b5f5f613a1c8361438a565b5f5f613b9f84846143ac565b60405163e0b490f760e01b81526001600160a01b03831660048201525f90636eb1769f60e11b90829081906101679063e0b490f790602401602060405180830381865afa158015614259573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061427d91906161d5565b60405163e0b490f760e01b81526001600160a01b03871660048201529091505f906101679063e0b490f790602401602060405180830381865afa1580156142c6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906142ea91906161d5565b9050838382846040516020016143039493929190616251565b60405160208183030381529060405261431b90616199565b979650505050505050565b6040515f9063c87b56dd60e01b908290614348908390839087906020016161f8565b60405160208183030381529060405261436090616199565b949350505050565b6040515f906331a9108f60e11b908290614348908390839087906020016161f8565b6040515f9063020604bf60e21b908290614348908390839087906020016161f8565b60405163e0b490f760e01b81526001600160a01b03831660048201525f9063e985e9c560e01b90829081906101679063e0b490f790602401602060405180830381865afa1580156143ff573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061442391906161d5565b60405163e0b490f760e01b81526001600160a01b03871660048201529091505f906101679063e0b490f790602401602060405180830381865afa15801561446c573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061449091906161d5565b9050838383836040516020016143039493929190616251565b60408051610240810182526060610120820181815261014083018290525f610160840181905261018084018390526101a084018190526101c084018190526101e08401819052610200840183905284519283018552808352602083018190529382019390935261022082015290819081526020015f60070b81526020015f151581526020015f151581526020015f15158152602001606081526020016060815260200160608152602001606081525090565b6040518060c0016040528061456e6144a9565b81525f60208201819052604082018190526060808301829052608083015260a09091015290565b6040518060a001604052805f151581526020015f6001600160a01b0316815260200160608152602001606081526020015f6001600160a01b031681525090565b60405180604001604052806145e86144a9565b81525f60209091015290565b5f5f85851115614602575f5ffd5b8386111561460e575f5ffd5b5050820193919092039150565b80356001600160e01b0319811690600484101561464c576001600160e01b0319600485900360031b81901b82161691505b5092915050565b80356001600160601b0319811690601484101561464c576001600160601b031960149490940360031b84901b1690921692915050565b6001600160a01b038116811461469d575f5ffd5b50565b5f5f604083850312156146b1575f5ffd5b82356146bc81614689565b946020939093013593505050565b5f5f604083850312156146db575f5ffd5b82356146e681614689565b915060208301356146f681614689565b809150509250929050565b5f5f5f60608486031215614713575f5ffd5b833561471e81614689565b9250602084013561472e81614689565b929592945050506040919091013590565b5f6020828403121561474f575f5ffd5b813561475a81614689565b9392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b80511515825260018060a01b0360208201511660208301525f604082015160a060408501526147c160a0850182614761565b9050606083015184820360608601526147da8282614761565b6080948501516001600160a01b03169590940194909452509092915050565b5f82825180855260208501945060208160051b830101602085015f5b8381101561485e57601f198584030188528151805184526020810151905060406020850152614847604085018261478f565b6020998a0199909450929092019150600101614815565b50909695505050505050565b5f81516101608452614880610160850182614761565b9050602083015184820360208601526148998282614761565b91505060408301516148b660408601826001600160a01b03169052565b50606083015184820360608601526148ce8282614761565b91505060808301516148e4608086018215159052565b5060a08301516148f960a086018260070b9052565b5060c083015161490d60c086018215159052565b5060e083015184820360e086015261492582826147f9565b9150506101008301516149606101008601828051600790810b83526020808301516001600160a01b031690840152604091820151900b910152565b509392505050565b5f8151808452602084019350602083015f5b828110156149d8578151805160070b87526020808201516001600160a01b03908116828a01526040808401511515908a01526060808401511515908a0152608092830151169188019190915260a0909601959091019060010161497a565b5093949350505050565b5f8151808452602084019350602083015f5b828110156149d85781515f815160070b8852602082015160070b6020890152604082015160070b6040890152606082015160070b606089015260808201511515608089015260018060a01b0360a08301511660a089015260c08801905080975050506020820191506001810190506149f4565b5f8151808452602084019350602083015f5b828110156149d85781515f815160070b8852602082015160070b6020890152604082015160070b604089015260018060a01b03606083015116606089015260808201511515608089015260018060a01b0360a08301511660a089015260c0880190508097505050602082019150600181019050614a79565b5f81516101208452614b0761012085018261486a565b90506020830151614b1d602086018260070b9052565b506040830151614b31604086018215159052565b506060830151614b45606086018215159052565b506080830151614b59608086018215159052565b5060a083015184820360a0860152614b718282614968565b91505060c083015184820360c0860152614b8b82826149e2565b91505060e083015184820360e0860152614ba58282614a67565b915050610100830151848203610100860152612ec38282614761565b8260070b8152604060208201525f6143606040830184614af1565b8060070b811461469d575f5ffd5b5f5f60408385031215614bfb575f5ffd5b8235614c0681614689565b915060208301356146f681614bdc565b8260070b8152604060208201525f825160c06040840152614c3b610100840182614af1565b9050602084015160070b606084015260018060a01b036040850151166080840152606084015160070b60a08401526080840151603f198483030160c0850152614c848282614761565b60a095909501516001600160a01b031660e0949094019390935250919392505050565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b0381118282101715614cdd57614cdd614ca7565b60405290565b60405160a081016001600160401b0381118282101715614cdd57614cdd614ca7565b60405161012081016001600160401b0381118282101715614cdd57614cdd614ca7565b60405160c081016001600160401b0381118282101715614cdd57614cdd614ca7565b604051601f8201601f191681016001600160401b0381118282101715614d7257614d72614ca7565b604052919050565b5f6001600160401b03821115614d9257614d92614ca7565b5060051b60200190565b5f82601f830112614dab575f5ffd5b8135614dbe614db982614d7a565b614d4a565b8082825260208201915060208360051b860101925085831115614ddf575f5ffd5b602085015b83811015614e05578035614df781614689565b835260209283019201614de4565b5095945050505050565b5f5f60408385031215614e20575f5ffd5b8235614e2b81614689565b915060208301356001600160401b03811115614e45575f5ffd5b614e5185828601614d9c565b9150509250929050565b8260070b8152604060208201525f614360604083018461478f565b8260070b8152604060208201525f8251604080840152614e996080840182614af1565b9050602084015160030b6060840152809150509392505050565b5f82601f830112614ec2575f5ffd5b8135614ed0614db982614d7a565b8082825260208201915060208360051b860101925085831115614ef1575f5ffd5b602085015b83811015614e05578035614f0981614bdc565b835260209283019201614ef6565b5f5f5f60608486031215614f29575f5ffd5b8335614f3481614689565b925060208401356001600160401b03811115614f4e575f5ffd5b614f5a86828701614d9c565b92505060408401356001600160401b03811115614f75575f5ffd5b614f8186828701614eb3565b9150509250925092565b8460070b8152608060208201525f614fa66080830186614968565b8281036040840152614fb881866149e2565b9050828103606084015261431b8185614a67565b600783900b81526080810161475a60208301848051600790810b83526020808301516001600160a01b031690840152604091820151900b910152565b5f5f5f6060848603121561501a575f5ffd5b833561502581614689565b9250602084013561503581614bdc565b915060408401356001600160401b03811115614f75575f5ffd5b5f6001600160401b0382111561506757615067614ca7565b50601f01601f191660200190565b5f5f5f60608486031215615087575f5ffd5b833561509281614689565b925060208401356150a281614bdc565b915060408401356001600160401b038111156150bc575f5ffd5b8401601f810186136150cc575f5ffd5b80356150da614db982614d7a565b8082825260208201915060208360051b8501019250888311156150fb575f5ffd5b602084015b8381101561517b5780356001600160401b0381111561511d575f5ffd5b8501603f81018b1361512d575f5ffd5b602081013561513e614db98261504f565b8181526040838301018d1015615152575f5ffd5b816040840160208301375f60208383010152808652505050602083019250602081019050615100565b50809450505050509250925092565b5f606082018560070b83528460070b6020840152606060408401528084518083526080850191506020860192505f5b818110156151da57835160070b8352602093840193909201916001016151b9565b5090979650505050505050565b5f5f5f606084860312156151f9575f5ffd5b833561520481614689565b9250602084013561521481614689565b9150604084013561522481614689565b809150509250925092565b600181811c9082168061524357607f821691505b60208210810361526157634e487b7160e01b5f52602260045260245ffd5b50919050565b5f81546152738161522f565b60018216801561528a576001811461529f576152cc565b60ff19831686528115158202860193506152cc565b845f5260205f205f5b838110156152c4578154888201526001909101906020016152a8565b505081860193505b50505092915050565b5f61475a8284615267565b5f81546152ec8161522f565b8085526001821680156153065760018114615322576152cc565b60ff1983166020870152602082151560051b87010193506152cc565b845f5260205f205f5b8381101561534d5781546020828a01015260018201915060208101905061532b565b870160200194505050505092915050565b5f82825480855260208501945060208160051b830101845f5260205f205f5b8381101561485e57848303601f1901885281548352604060208401819052600183015460ff811615159185019190915260081c6001600160a01b0316606084015260a060808401526153d560e08401600284016152e0565b838103603f190160a08501526153ee81600385016152e0565b60048401546001600160a01b031660c09590950194909452506020979097019660059091019060010161537d565b61016082525f6154306101608401836152e0565b838103602085015261544581600185016152e0565b905061545b60028401546001600160a01b031690565b6001600160a01b03166040850152838103606085015261547e81600385016152e0565b905060048301546154966080860160ff831615159052565b600881901c60070b60a08601526154b760c0860160ff8360481c1615159052565b5083810360e08501526154cd816005850161535e565b905061475a6101008501600685018054600781810b8452604091821c6001600160a01b0316602085015260019092015490910b910152565b5f8154808452602084019350825f5260205f205f5b828110156149d8578154600781900b8752604081811c6001600160a01b0390811660208a015260e083901c60ff9081161515928a019290925260e89290921c1615156060880152600180840154909116608088015260a0909601956002909201910161551a565b5f8154808452602084019350825f5260205f205f5b828110156149d8575f82548060070b88528060401c60070b60208901528060801c60070b60408901528060c01d60070b60608901525060018301546155e26080890160ff831615159052565b60081c6001600160a01b031660a08801525060c09095019460029190910190600101615596565b5f8154808452602084019350825f5260205f205f5b828110156149d8575f82548060070b88528060401c60070b60208901528060801c60070b604089015250600183015460018060a01b038116606089015261566f6080890160ff8360a01c1615159052565b505060028201546001600160a01b031660a087015260c09095019460039091019060010161561e565b60ff831681526040602082015261012060408201525f6156bc61016083018461541c565b6008840154600781900b60608501526156df6080850160ff8360401c1615159052565b6156f360a0850160ff8360481c1615159052565b61570760c0850160ff8360501c1615159052565b50828103603f190160e08401526157218160098601615505565b838103603f1901610100850152905061573d81600a8601615581565b838103603f1901610120850152905061575981600b8601615609565b838103603f19016101408501529050612ec381600c86016152e0565b60ff85168152608060208201525f6157906080830186615505565b82810360408401526157a28186615581565b9050828103606084015261431b8185615609565b60ff831681526080810161475a60208301848054600781810b8452604091821c6001600160a01b0316602085015260019092015490910b910152565b80356020831015610f68575f19602084900360031b1b1692915050565b60208082526017908201527f68747343616c6c3a2064656c6567617465642063616c6c000000000000000000604082015260600190565b805161585181614689565b919050565b5f60208284031215615866575f5ffd5b815161475a81614689565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b80820180821115610f6857610f68615885565b81810381811115610f6857610f68615885565b5f82518060208501845e5f920191825250919050565b805161585181614bdc565b5f82601f8301126158ef575f5ffd5b8151602083015f615902614db98461504f565b9050828152858383011115615915575f5ffd5b8282602083015e5f92810160200192909252509392505050565b80518015158114615851575f5ffd5b5f82601f83011261594d575f5ffd5b815161595b614db982614d7a565b8082825260208201915060208360051b86010192508583111561597c575f5ffd5b602085015b83811015614e055780516001600160401b0381111561599e575f5ffd5b86016040818903601f190112156159b3575f5ffd5b6159bb614cbb565b6020820151815260408201516001600160401b038111156159da575f5ffd5b60208184010192505060a0828a0312156159f2575f5ffd5b6159fa614ce3565b615a038361592f565b81526020830151615a1381614689565b602082015260408301516001600160401b03811115615a30575f5ffd5b615a3c8b8286016158e0565b60408301525060608301516001600160401b03811115615a5a575f5ffd5b615a668b8286016158e0565b60608301525060808301519250615a7c83614689565b608081019290925260208181019290925284529283019201615981565b5f60608284031215615aa9575f5ffd5b604051606081016001600160401b0381118282101715615acb57615acb614ca7565b80604052508091508251615ade81614bdc565b81526020830151615aee81614689565b60208201526040830151615b0181614bdc565b6040919091015292915050565b5f6101608284031215615b1f575f5ffd5b615b27614d05565b905081516001600160401b03811115615b3e575f5ffd5b615b4a848285016158e0565b82525060208201516001600160401b03811115615b65575f5ffd5b615b71848285016158e0565b602083015250615b8360408301615846565b604082015260608201516001600160401b03811115615ba0575f5ffd5b615bac848285016158e0565b606083015250615bbe6080830161592f565b6080820152615bcf60a083016158d5565b60a0820152615be060c0830161592f565b60c082015260e08201516001600160401b03811115615bfd575f5ffd5b615c098482850161593e565b60e083015250615c1d836101008401615a99565b61010082015292915050565b5f82601f830112615c38575f5ffd5b8151615c46614db982614d7a565b80828252602082019150602060a08402860101925085831115615c67575f5ffd5b602085015b83811015614e055760a08188031215615c83575f5ffd5b615c8b614ce3565b8151615c9681614bdc565b81526020820151615ca681614689565b6020820152615cb76040830161592f565b6040820152615cc86060830161592f565b60608201526080820151615cdb81614689565b6080820152835260209092019160a001615c6c565b5f82601f830112615cff575f5ffd5b8151615d0d614db982614d7a565b80828252602082019150602060c08402860101925085831115615d2e575f5ffd5b602085015b83811015614e055760c08188031215615d4a575f5ffd5b615d52614d28565b8151615d5d81614bdc565b81526020820151615d6d81614bdc565b60208201526040820151615d8081614bdc565b60408201526060820151615d9381614bdc565b6060820152615da46080830161592f565b608082015260a0820151615db781614689565b60a0820152835260209092019160c001615d33565b5f82601f830112615ddb575f5ffd5b8151615de9614db982614d7a565b80828252602082019150602060c08402860101925085831115615e0a575f5ffd5b602085015b83811015614e055760c08188031215615e26575f5ffd5b615e2e614d28565b8151615e3981614bdc565b81526020820151615e4981614bdc565b60208201526040820151615e5c81614bdc565b60408201526060820151615e6f81614689565b6060820152615e806080830161592f565b608082015260a0820151615e9381614689565b60a0820152835260209092019160c001615e0f565b5f5f60408385031215615eb9575f5ffd5b8251615ec481614bdc565b60208401519092506001600160401b03811115615edf575f5ffd5b83016101208186031215615ef1575f5ffd5b615ef9614d05565b81516001600160401b03811115615f0e575f5ffd5b615f1a87828501615b0e565b825250615f29602083016158d5565b6020820152615f3a6040830161592f565b6040820152615f4b6060830161592f565b6060820152615f5c6080830161592f565b608082015260a08201516001600160401b03811115615f79575f5ffd5b615f8587828501615c29565b60a08301525060c08201516001600160401b03811115615fa3575f5ffd5b615faf87828501615cf0565b60c08301525060e08201516001600160401b03811115615fcd575f5ffd5b615fd987828501615dcc565b60e0830152506101008201516001600160401b03811115615ff8575f5ffd5b616004878285016158e0565b6101008301525080925050509250929050565b5f60208284031215616027575f5ffd5b815161475a81614bdc565b5f5f60408385031215616043575f5ffd5b825161604e81614bdc565b915061605c6020840161592f565b90509250929050565b5f60208284031215616075575f5ffd5b815160ff8116811461475a575f5ffd5b5f5f60408385031215616096575f5ffd5b82516160a181614bdc565b8092505060208301518060030b81146146f6575f5ffd5b5f5f5f5f608085870312156160cb575f5ffd5b84516160d681614bdc565b60208601519094506001600160401b038111156160f1575f5ffd5b6160fd87828801615c29565b93505060408501516001600160401b03811115616118575f5ffd5b61612487828801615cf0565b92505060608501516001600160401b0381111561613f575f5ffd5b61614b87828801615dcc565b91505092959194509250565b5f5f60808385031215616168575f5ffd5b825161617381614bdc565b915061605c8460208501615a99565b5f60208284031215616192575f5ffd5b5051919050565b80516020808301519190811015615261575f1960209190910360031b1b16919050565b5f602082840312156161cc575f5ffd5b61475a8261592f565b5f602082840312156161e5575f5ffd5b815163ffffffff8116811461475a575f5ffd5b6001600160e01b0319938416815260409290921b67ffffffffffffffff1916600483015260e01b909116601c82015260200190565b602081525f61475a60208301846152e0565b602081525f61475a6020830184614761565b6001600160e01b0319948516815260609390931b6001600160601b031916600484015260e091821b84166018840152901b909116601c8201526020019056fea26469706673582212203255930881aa59e457eed602b9fd07be5a8938402ea7506cb741aef8f20ff05764736f6c634300081c0033",
        "sourceMap": "320:32414:1:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "320:32414:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13944:12;14377:2;14358:21;;;14350:63;;;;-1:-1:-1;;;14350:63:1;;216:2:39;14350:63:1;;;198:21:39;255:2;235:18;;;228:30;294:31;274:18;;;267:59;343:18;;14350:63:1;;;;;;;;;14424:24;14465:13;14476:1;14424:24;14465:8;14424:24;14465:13;:::i;:::-;14458:21;;;:::i;:::-;14451:29;;;-1:-1:-1;14518:10:1;14498:30;;14490:73;;;;-1:-1:-1;;;14490:73:1;;1253:2:39;14490:73:1;;;1235:21:39;1292:2;1272:18;;;1265:30;1331:32;1311:18;;;1304:60;1381:18;;14490:73:1;1051:354:39;14490:73:1;14574:13;14606:14;14617:2;14615:1;14606:8;14574:13;14606:14;:::i;:::-;14598:23;;;:::i;:::-;14590:32;;;-1:-1:-1;14657:4:1;14640:22;;14632:64;;;;-1:-1:-1;;;14632:64:1;;1991:2:39;14632:64:1;;;1973:21:39;2030:2;2010:18;;;2003:30;2069:31;2049:18;;;2042:59;2118:18;;14632:64:1;1789:353:39;14632:64:1;14875:20;:18;:20::i;:::-;320:32414;;;-1:-1:-1;320:32414:1;;;-1:-1:-1;;;;320:32414:1;6688:300;;;;;;:::i;:::-;;:::i;:::-;;;;3059:1:39;3048:21;;;;3030:40;;-1:-1:-1;;;;;3106:32:39;;;3101:2;3086:18;;3079:60;3003:18;6688:300:1;;;;;;;;6150:239;;;;;;:::i;:::-;;:::i;:::-;;;3714:1:39;3703:21;;;;3685:40;;3673:2;3658:18;6150:239:1;3543:188:39;29950:962:1;;;;;;:::i;:::-;;:::i;:::-;;9026:284;;;;;;:::i;:::-;;:::i;:::-;;;;4790:1:39;4779:21;;;;4761:40;;4844:14;;4837:22;4832:2;4817:18;;4810:50;4734:18;9026:284:1;4597:269:39;1638:272:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1916:1028::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3568:746::-;;;;;;:::i;:::-;;:::i;7885:253::-;;;;;;:::i;:::-;;:::i;8144:652::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2950:612::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5907:237::-;;;;;;:::i;:::-;;:::i;5146:755::-;;;;;;:::i;:::-;;:::i;4320:820::-;;;;;;:::i;:::-;;:::i;8802:218::-;;;;;;:::i;:::-;;:::i;:::-;;;;19584:1:39;19573:21;;;;19555:40;;19642:1;19631:21;;;;19626:2;19611:18;;19604:49;19528:18;8802:218:1;19389:270:39;7306:262:1;;;;;;:::i;:::-;;:::i;7574:305::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;6395:287::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;10324:924::-;;;;;;:::i;:::-;;:::i;:::-;;;;21770:1:39;21759:21;;;21741:40;;21817:21;;;;21812:2;21797:18;;21790:49;21714:18;10324:924:1;21575:270:39;1329:303:1;;;;;;:::i;:::-;;:::i;:::-;;;22024:10:39;22012:23;;;21994:42;;21982:2;21967:18;1329:303:1;21850:192:39;9316:1002:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;6994:306::-;;;;;;:::i;:::-;;:::i;15004:3875::-;15060:12;15084:15;15109;15121:2;15118;15109:8;15084:15;15109;:::i;:::-;15102:23;;;:::i;:::-;15084:41;;15208:18;;;;;;;;;;;-1:-1:-1;;;15208:18:1;;;;;15167:27;15198:29;;15167:27;;-1:-1:-1;;15167:27:1;:::i;:::-;;;;;;;;:60;15163:134;;15243:43;;-1:-1:-1;;;15243:43:1;;26807:2:39;15243:43:1;;;26789:21:39;26846:2;26826:18;;;26819:30;26885:34;26865:18;;;26858:62;-1:-1:-1;;;26936:18:39;;;26929:31;26977:19;;15243:43:1;26605:397:39;15163:134:1;-1:-1:-1;;15358:10:1;:25;15354:2997;;-1:-1:-1;;;;;;;;;15403:38:1;;;15399:195;;15488:2;15469:8;:21;;15461:67;;;;-1:-1:-1;;;15461:67:1;;27209:2:39;15461:67:1;;;27191:21:39;27248:2;27228:18;;;27221:30;27287:34;27267:18;;;27260:62;-1:-1:-1;;;27338:18:39;;;27331:31;27379:19;;15461:67:1;27007:397:39;15461:67:1;15564:2;15568:10;15553:26;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15546:33;;;15004:3875;:::o;15399:195::-;-1:-1:-1;;;;;;;;;15611:44:1;;;15607:268;;15702:2;15683:8;:21;;15675:73;;;;-1:-1:-1;;;15675:73:1;;35568:2:39;15675:73:1;;;35550:21:39;35607:2;35587:18;;;35580:30;35646:34;35626:18;;;35619:62;-1:-1:-1;;;35697:18:39;;;35690:37;35744:19;;15675:73:1;35366:403:39;15675:73:1;15773:87;;;;15784:2;;15788:20;;15810:25;;15837:22;;15773:87;;;:::i;15607:268::-;-1:-1:-1;;;;;;;;;15892:50:1;;;15888:236;;15989:2;15970:8;:21;;15962:79;;;;-1:-1:-1;;;15962:79:1;;36948:2:39;15962:79:1;;;36930:21:39;36987:2;36967:18;;;36960:30;37026:34;37006:18;;;36999:62;-1:-1:-1;;;37077:18:39;;;37070:43;37130:19;;15962:79:1;36746:409:39;15962:79:1;16081:27;;16066:43;;;16077:2;16066:43;;;37335:36:39;-1:-1:-1;;;16081:27:1;;;;;37414:14:39;37407:22;37387:18;;;37380:50;37308:18;;16066:43:1;37160:276:39;15888:236:1;-1:-1:-1;;;;;;;;;16141:53:1;;;16137:245;;16241:2;16222:8;:21;;16214:82;;;;-1:-1:-1;;;16214:82:1;;37643:2:39;16214:82:1;;;37625:21:39;37682:2;37662:18;;;37655:30;37721:34;37701:18;;;37694:62;-1:-1:-1;;;37772:18:39;;;37765:46;37828:19;;16214:82:1;37441:412:39;16214:82:1;16336:30;;16321:46;;;16332:2;16321:46;;;37335:36:39;-1:-1:-1;;;16336:30:1;;;;;37414:14:39;37407:22;37387:18;;;37380:50;37308:18;;16321:46:1;37160:276:39;16137:245:1;-1:-1:-1;;;;;;;;;16399:44:1;;;16395:220;;16490:2;16471:8;:21;;16463:73;;;;-1:-1:-1;;;16463:73:1;;38060:2:39;16463:73:1;;;38042:21:39;38099:2;38079:18;;;38072:30;38138:34;38118:18;;;38111:62;-1:-1:-1;;;38189:18:39;;;38182:37;38236:19;;16463:73:1;37858:403:39;16463:73:1;16561:39;;;;16572:2;;16576:23;;16561:39;;;:::i;16395:220::-;-1:-1:-1;;;;;;;;;16632:40:1;;;16628:363;;16719:2;16700:8;:21;;16692:69;;;;-1:-1:-1;;;16692:69:1;;38811:2:39;16692:69:1;;;38793:21:39;38850:2;38830:18;;;38823:30;38889:34;38869:18;;;38862:62;-1:-1:-1;;;38940:18:39;;;38933:33;38983:19;;16692:69:1;38609:399:39;16692:69:1;16779:15;16813;16825:2;16822;16813:8;16779:15;16813;:::i;:::-;16805:24;;;:::i;:::-;16797:33;;16779:51;;16848:12;16863:26;16881:7;16863:17;:26::i;:::-;16931:4;16918:18;;16962:14;;;16973:2;16962:14;;;39166:36:39;16848:41:1;;-1:-1:-1;39139:18:39;16962:14:1;;;;;;;;;;;;;16955:21;;;;;15004:3875;:::o;16628:363::-;-1:-1:-1;;;;;;;;;17008:41:1;;;17004:366;;17096:2;17077:8;:21;;17069:70;;;;-1:-1:-1;;;17069:70:1;;39415:2:39;17069:70:1;;;39397:21:39;39454:2;39434:18;;;39427:30;39493:34;39473:18;;;39466:62;-1:-1:-1;;;39544:18:39;;;39537:34;39588:19;;17069:70:1;39213:400:39;17069:70:1;17157:15;17191;17203:2;17200;17191:8;17157:15;17191;:::i;:::-;17183:24;;;:::i;:::-;17175:33;;17157:51;;17226:12;17241:26;17259:7;17241:17;:26::i;:::-;17309:5;17296:19;;17341:14;;;17352:2;17341:14;;;39166:36:39;17226:41:1;;-1:-1:-1;39139:18:39;17341:14:1;39013:195:39;17004:366:1;-1:-1:-1;;;;;;;;;17387:38:1;;;17383:528;;17472:2;17453:8;:21;;17445:67;;;;-1:-1:-1;;;17445:67:1;;39820:2:39;17445:67:1;;;39802:21:39;39859:2;39839:18;;;39832:30;39898:34;39878:18;;;39871:62;-1:-1:-1;;;39949:18:39;;;39942:31;39990:19;;17445:67:1;39618:397:39;17445:67:1;17576:28;17561:9;17544:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;17534:38;;;;;;:70;17530:148;;17635:24;;;17646:2;17635:24;;;40402:36:39;17656:1:1;40454:18:39;;;40447:49;;;;40375:18;;17635:24:1;40225:277:39;17530:148:1;17741:32;17726:9;17709:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;17699:38;;;;;;:74;17695:152;;17804:24;;;17815:2;17804:24;;;40402:36:39;17825:1:1;40454:18:39;;;40447:49;;;;40375:18;;17804:24:1;40225:277:39;17695:152:1;17871:25;;;17882:2;17871:25;;;40402:36:39;-1:-1:-1;;40454:18:39;;;40447:49;;;;40375:18;;17871:25:1;40225:277:39;17383:528:1;-1:-1:-1;;;;;;;;;17928:33:1;;;17924:417;;18008:3;17989:8;:22;;17981:62;;;;-1:-1:-1;;;17981:62:1;;40709:2:39;17981:62:1;;;40691:21:39;40748:2;40728:18;;;40721:30;40787:29;40767:18;;;40760:57;40834:18;;17981:62:1;40507:351:39;17981:62:1;18061:12;18092:15;18104:2;18101;18092:8;18061:12;18092:15;:::i;:::-;18084:24;;;:::i;:::-;18076:33;;;-1:-1:-1;18127:10:1;18156:15;18168:2;18165;18156:8;18127:10;18156:15;:::i;:::-;18148:24;;;:::i;:::-;18140:33;;;-1:-1:-1;18191:14:1;18224:16;18236:3;18233:2;18224:8;18191:14;18224:16;:::i;:::-;18216:25;;;:::i;:::-;18208:34;-1:-1:-1;18260:25:1;18268:4;18274:2;18208:34;18260:7;:25::i;:::-;18310:16;;;18321:4;18310:16;;;41263:41:39;41236:18;18310:16:1;;;;;;;;;;;;18303:23;;;;;;15004:3875;:::o;17924:417::-;18489:24;;;;;;;;;;;-1:-1:-1;;;18489:24:1;;;;;18448:27;18479:35;;18448:27;;-1:-1:-1;;18448:27:1;:::i;:::-;;;;;;;;:66;18444:131;;18537:27;18555:8;18537:17;:27::i;:::-;18530:34;;;15004:3875;:::o;18444:131::-;18718:28;;;;;;;;;;;-1:-1:-1;;;18718:28:1;;;;;18677:27;18708:39;;18677:27;;-1:-1:-1;;18677:27:1;:::i;:::-;;;;;;;;:70;18673:136;;18770:28;18789:8;18770:18;:28::i;18673:136::-;18819:53;;-1:-1:-1;;;18819:53:1;;41517:2:39;18819:53:1;;;41499:21:39;41556:2;41536:18;;;41529:30;41595:34;41575:18;;;41568:62;-1:-1:-1;;;41646:18:39;;;41639:40;41696:19;;18819:53:1;41315:406:39;6688:300:1;6785:18;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6841:19:1;::::1;6833:58;;;::::0;-1:-1:-1;;;6833:58:1;;42280:2:39;6833:58:1::1;::::0;::::1;42262:21:39::0;42319:2;42299:18;;;42292:30;42358:28;42338:18;;;42331:56;42404:18;;6833:58:1::1;42078:350:39::0;6833:58:1::1;6940:40;::::0;-1:-1:-1;;;6940:40:1;;::::1;::::0;::::1;42579:25:39::0;;;6935:2:1::1;::::0;-1:-1:-1;;;;;6940:26:1;::::1;::::0;::::1;::::0;42552:18:39;;6940:40:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6901:80:::0;;;;-1:-1:-1;6688:300:1;-1:-1:-1;;;6688:300:1:o;6150:239::-;6233:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;6289:16:::1;::::0;;6303:1:::1;6289:16:::0;;;;;::::1;::::0;;;6263:23:::1;::::0;6289:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;6289:16:1::1;6263:42;;6327:5;6315:6;6322:1;6315:9;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1::0;;;;;6315:17:1::1;;;-1:-1:-1::0;;;;;6315:17:1::1;;;::::0;::::1;6349:33;6366:7;6375:6;6349:16;:33::i;:::-;6342:40;;;904:1;6150:239:::0;;;;:::o;29950:962::-;-1:-1:-1;;;;;30030:18:1;;30026:376;;30079:6;30064:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;30026:376:1;;-1:-1:-1;30026:376:1;;30116:16;30135:20;30150:4;30135:14;:20::i;:::-;30228:15;;30116:39;;-1:-1:-1;30266:21:1;;;;30258:65;;;;-1:-1:-1;;;30258:65:1;;43610:2:39;30258:65:1;;;43592:21:39;43649:2;43629:18;;;43622:30;43688:33;43668:18;;;43661:61;43739:18;;30258:65:1;43408:355:39;30258:65:1;30365:24;;;30348:42;;30026:376;-1:-1:-1;;;;;30416:16:1;;30412:494;;30463:6;30448:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;30412:494:1;;-1:-1:-1;30412:494:1;;30500:14;30517:18;30532:2;30517:14;:18::i;:::-;30604:13;;30500:35;;-1:-1:-1;30549:17:1;30823:18;30835:6;30604:13;30823:18;:::i;:::-;30866:28;;;-1:-1:-1;;30412:494:1;29950:962;;;:::o;9026:284::-;9122:55;;-1:-1:-1;;;;;44065:32:39;;9122:55:1;;;44047:51:39;9076:5:1;;;;;;44020:18:39;;9122:55:1;;;-1:-1:-1;;9122:55:1;;;;;;;;;;;;;;-1:-1:-1;;;;;9122:55:1;-1:-1:-1;;;9122:55:1;;;9229:19;9122:55;;-1:-1:-1;;;;;;;;;;9229:10:1;;;:19;;9122:55;;9229:19;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9187:61;;;;9266:2;9270:7;:32;;;;;9301:1;9281:10;:17;:21;9270:32;9258:45;;;;;;;9026:284;;;:::o;1638:272::-;1701:18;1721:26;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1767:19:1;::::1;1759:59;;;::::0;-1:-1:-1;;;1759:59:1;;44617:2:39;1759:59:1::1;::::0;::::1;44599:21:39::0;44656:2;44636:18;;;44629:30;44695:29;44675:18;;;44668:57;44742:18;;1759:59:1::1;44415:351:39::0;1759:59:1::1;1857:46;::::0;-1:-1:-1;;;1857:46:1;;-1:-1:-1;;;;;1857:39:1;::::1;:46;::::0;::::1;44047:51:39::0;;;1857:39:1;::::1;::::0;44020:18:39;;1857:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1857:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1829:74:::0;;;;-1:-1:-1;1638:272:1;-1:-1:-1;;1638:272:1:o;1916:1028::-;2026:5;2033:27;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2080:19:1;::::1;2072:70;;;::::0;-1:-1:-1;;;2072:70:1;;56430:2:39;2072:70:1::1;::::0;::::1;56412:21:39::0;56469:2;56449:18;;;56442:30;56508:34;56488:18;;;56481:62;-1:-1:-1;;;56559:18:39;;;56552:36;56605:19;;2072:70:1::1;56228:402:39::0;2072:70:1::1;2204:46;::::0;-1:-1:-1;;;2204:46:1;;-1:-1:-1;;;;;2204:39:1;::::1;:46;::::0;::::1;44047:51:39::0;;;2154:18:1::1;::::0;;;2204:39;::::1;::::0;44020:18:39;;2204:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2204:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;2153:97;;;;2268:12;:18;;2284:2;2268:18;2260:80;;;::::0;-1:-1:-1;;;2260:80:1;;56837:2:39;2260:80:1::1;::::0;::::1;56819:21:39::0;56876:2;56856:18;;;56849:30;56915:34;56895:18;;;56888:62;-1:-1:-1;;;56966:18:39;;;56959:47;57023:19;;2260:80:1::1;56635:413:39::0;2260:80:1::1;2350:48;;:::i;:::-;2408:42:::0;;;2460:48:::1;::::0;;::::1;:33;::::0;::::1;:48:::0;2551:57:::1;::::0;-1:-1:-1;;;2551:57:1;;-1:-1:-1;;;;;2578:29:1;::::1;2551:57;::::0;::::1;42579:25:39::0;-1:-1:-1;;;;;2551:26:1;::::1;::::0;::::1;::::0;42552:18:39;;2551:57:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2518:90:1;;::::1;:30;::::0;::::1;:90:::0;2649:53:::1;::::0;-1:-1:-1;;;2649:53:1;;-1:-1:-1;;;;;2672:29:1;::::1;2649:53;::::0;::::1;42579:25:39::0;2649:22:1;;::::1;::::0;::::1;::::0;42552:18:39;;2649:53:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2618:84:1::1;:28;::::0;::::1;:84:::0;2902:12;;-1:-1:-1;2618:20:1;;-1:-1:-1;;904:1:1::1;1916:1028:::0;;;;;:::o;3568:746::-;3659:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;3713:1:::1;3697:6;:13;:17;3689:61;;;::::0;-1:-1:-1;;;3689:61:1;;57255:2:39;3689:61:1::1;::::0;::::1;57237:21:39::0;57294:2;57274:18;;;57267:30;57333:33;57313:18;;;57306:61;57384:18;;3689:61:1::1;57053:355:39::0;3689:61:1::1;-1:-1:-1::0;;;;;3768:21:1;::::1;3779:10;3768:21;3760:136;;;::::0;-1:-1:-1;;;3760:136:1;;57615:2:39;3760:136:1::1;::::0;::::1;57597:21:39::0;57654:3;57634:18;;;57627:31;57694:34;57674:18;;;57667:62;57765:34;57745:18;;;57738:62;57837:34;57816:19;;;57809:63;-1:-1:-1;;;57888:19:39;;;57881:37;57935:19;;3760:136:1::1;57413:547:39::0;3760:136:1::1;3911:9;3906:344;3930:6;:13;3926:1;:17;3906:344;;;3993:1;-1:-1:-1::0;;;;;3972:23:1::1;:6;3979:1;3972:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;3972:23:1::1;::::0;3964:66:::1;;;::::0;-1:-1:-1;;;3964:66:1;;58167:2:39;3964:66:1::1;::::0;::::1;58149:21:39::0;58206:2;58186:18;;;58179:30;58245:32;58225:18;;;58218:60;58295:18;;3964:66:1::1;57965:354:39::0;3964:66:1::1;4044:29;4096:6;4103:1;4096:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4076:45:1::1;;4122:7;4131:6;4138:1;4131:9;;;;;;;;:::i;:::-;;;;;;;4076:65;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;58516:32:39;;;58498:51;;58585:32;;58580:2;58565:18;;58558:60;58486:2;58471:18;;58324:300;4076:65:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4044:97;;4163:23;:29;;4190:2;4163:29;4155:84;;;::::0;-1:-1:-1;;;4155:84:1;;59083:2:39;4155:84:1::1;::::0;::::1;59065:21:39::0;59122:2;59102:18;;;59095:30;59161:34;59141:18;;;59134:62;-1:-1:-1;;;59212:18:39;;;59205:40;59262:19;;4155:84:1::1;58881:406:39::0;4155:84:1::1;-1:-1:-1::0;3945:3:1::1;;3906:344;;;-1:-1:-1::0;4274:2:1::1;::::0;3568:746;-1:-1:-1;;;3568:746:1:o;7885:253::-;7960:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7991:19:1;::::1;7983:73;;;::::0;-1:-1:-1;;;7983:73:1;;59494:2:39;7983:73:1::1;::::0;::::1;59476:21:39::0;59533:2;59513:18;;;59506:30;59572:34;59552:18;;;59545:62;-1:-1:-1;;;59623:18:39;;;59616:39;59672:19;;7983:73:1::1;59292:405:39::0;7983:73:1::1;8073:58;::::0;-1:-1:-1;;;8073:58:1;;-1:-1:-1;;;;;8073:51:1;::::1;:58;::::0;::::1;44047:51:39::0;;;8073::1;::::1;::::0;44020:18:39;;8073:58:1::1;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8066:65;;;;7885:253:::0;;;:::o;8144:652::-;8220:5;8227:15;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;8262:19:1;::::1;8254:58;;;::::0;-1:-1:-1;;;8254:58:1;;60235:2:39;8254:58:1::1;::::0;::::1;60217:21:39::0;60274:2;60254:18;;;60247:30;60313:28;60293:18;;;60286:56;60359:18;;8254:58:1::1;60033:350:39::0;8254:58:1::1;8373:46;::::0;-1:-1:-1;;;8373:46:1;;-1:-1:-1;;;;;8373:39:1;::::1;:46;::::0;::::1;44047:51:39::0;;;8323:18:1::1;::::0;;;8373:39;::::1;::::0;44020:18:39;;8373:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;8373:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;8322:97;;;;8437:12;:18;;8453:2;8437:18;8429:68;;;::::0;-1:-1:-1;;;8429:68:1;;60590:2:39;8429:68:1::1;::::0;::::1;60572:21:39::0;60629:2;60609:18;;;60602:30;60668:34;60648:18;;;60641:62;-1:-1:-1;;;60719:18:39;;;60712:35;60764:19;;8429:68:1::1;60388:401:39::0;8429:68:1::1;8512:9;8507:218;8531:15:::0;;:25:::1;;::::0;:32;8527:36;::::1;8507:218;;;8628:7;8588:9;:15;;;:25;;;8614:1;8588:28;;;;;;;;:::i;:::-;;;;;;;:36;;;:47:::0;8584:131:::1;;8663:2;8667:9;:15;;;:25;;;8693:1;8667:28;;;;;;;;:::i;:::-;;;;;;;:32;;;8655:45;;;;;;;;;8584:131;8565:3;;8507:218;;;;8734:24;;:::i;:::-;8776:2;::::0;8780:8;;-1:-1:-1;8144:652:1;-1:-1:-1;;;;;8144:652:1:o;2950:612::-;3021:5;3028:24;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;3072:19:1;::::1;3064:67;;;::::0;-1:-1:-1;;;3064:67:1;;60996:2:39;3064:67:1::1;::::0;::::1;60978:21:39::0;61035:2;61015:18;;;61008:30;61074:34;61054:18;;;61047:62;-1:-1:-1;;;61125:18:39;;;61118:33;61168:19;;3064:67:1::1;60794:399:39::0;3064:67:1::1;3193:46;::::0;-1:-1:-1;;;3193:46:1;;-1:-1:-1;;;;;3193:39:1;::::1;:46;::::0;::::1;44047:51:39::0;;;3143:18:1::1;::::0;;;3193:39;::::1;::::0;44020:18:39;;3193:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;3193:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;3142:97;;;;3257:12;:18;;3273:2;3257:18;3249:77;;;::::0;-1:-1:-1;;;3249:77:1;;61400:2:39;3249:77:1::1;::::0;::::1;61382:21:39::0;61439:2;61419:18;;;61412:30;61478:34;61458:18;;;61451:62;-1:-1:-1;;;61529:18:39;;;61522:44;61583:19;;3249:77:1::1;61198:410:39::0;3249:77:1::1;3336:42;;:::i;:::-;3418:9;3388:17;:27;;:39;;;;3485:5;-1:-1:-1::0;;;;;3478:22:1::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3467:37;;3437:26;::::0;::::1;:67:::0;3523:12;;-1:-1:-1;3437:17:1;;-1:-1:-1;;2950:612:1;;;:::o;5907:237::-;5989:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;6045:16:::1;::::0;;6059:1:::1;6045:16:::0;;;;;::::1;::::0;;;6019:23:::1;::::0;6045:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;6045:16:1::1;6019:42;;6083:5;6071:6;6078:1;6071:9;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1::0;;;;;6071:17:1::1;;;-1:-1:-1::0;;;;;6071:17:1::1;;;::::0;::::1;6105:32;6121:7;6130:6;6105:15;:32::i;5146:755::-:0;5238:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;5292:1:::1;5276:6;:13;:17;5268:62;;;::::0;-1:-1:-1;;;5268:62:1;;62093:2:39;5268:62:1::1;::::0;::::1;62075:21:39::0;;;62112:18;;;62105:30;62171:34;62151:18;;;62144:62;62223:18;;5268:62:1::1;61891:356:39::0;5268:62:1::1;-1:-1:-1::0;;;;;5348:21:1;::::1;5359:10;5348:21;5340:137;;;::::0;-1:-1:-1;;;5340:137:1;;62454:2:39;5340:137:1::1;::::0;::::1;62436:21:39::0;62493:3;62473:18;;;62466:31;62533:34;62513:18;;;62506:62;62604:34;62584:18;;;62577:62;62676:34;62655:19;;;62648:63;-1:-1:-1;;;62727:19:39;;;62720:38;62775:19;;5340:137:1::1;62252:548:39::0;5340:137:1::1;5492:9;5487:350;5511:6;:13;5507:1;:17;5487:350;;;5574:1;-1:-1:-1::0;;;;;5553:23:1::1;:6;5560:1;5553:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;5553:23:1::1;::::0;5545:67:::1;;;::::0;-1:-1:-1;;;5545:67:1;;63007:2:39;5545:67:1::1;::::0;::::1;62989:21:39::0;63046:2;63026:18;;;63019:30;63085:33;63065:18;;;63058:61;63136:18;;5545:67:1::1;62805:355:39::0;5545:67:1::1;5626:30;5679:6;5686:1;5679:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;5659:46:1::1;;5706:7;5715:6;5722:1;5715:9;;;;;;;;:::i;:::-;;;;;;;5659:66;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;58516:32:39;;;58498:51;;58585:32;;58580:2;58565:18;;58558:60;58486:2;58471:18;;58324:300;5659:66:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5626:99;;5747:24;:30;;5775:2;5747:30;5739:87;;;::::0;-1:-1:-1;;;5739:87:1;;63367:2:39;5739:87:1::1;::::0;::::1;63349:21:39::0;63406:2;63386:18;;;63379:30;63445:34;63425:18;;;63418:62;-1:-1:-1;;;63496:18:39;;;63489:42;63548:19;;5739:87:1::1;63165:408:39::0;5739:87:1::1;-1:-1:-1::0;5526:3:1::1;;5487:350;;4320:820:::0;4464:18;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;4502:19:1;::::1;4494:61;;;::::0;-1:-1:-1;;;4494:61:1;;63780:2:39;4494:61:1::1;::::0;::::1;63762:21:39::0;63819:2;63799:18;;;63792:30;63858:31;63838:18;;;63831:59;63907:18;;4494:61:1::1;63578:353:39::0;4494:61:1::1;4592:1;4573:9;:16;:20;4565:67;;;::::0;-1:-1:-1;;;4565:67:1;;64138:2:39;4565:67:1::1;::::0;::::1;64120:21:39::0;64177:2;64157:18;;;64150:30;64216:34;64196:18;;;64189:62;-1:-1:-1;;;64267:18:39;;;64260:32;64309:19;;4565:67:1::1;63936:398:39::0;4565:67:1::1;4667:9;:16;4650:6;:13;:33;4642:80;;;::::0;-1:-1:-1;;;4642:80:1;;64541:2:39;4642:80:1::1;::::0;::::1;64523:21:39::0;64580:2;64560:18;;;64553:30;64619:34;64599:18;;;64592:62;-1:-1:-1;;;64670:18:39;;;64663:32;64712:19;;4642:80:1::1;64339:398:39::0;4642:80:1::1;4737:9;4732:344;4756:9;:16;4752:1;:20;4732:344;;;4813:1;4801:6;4808:1;4801:9;;;;;;;;:::i;:::-;;;;;;;:13;;;4793:56;;;::::0;-1:-1:-1;;;4793:56:1;;64944:2:39;4793:56:1::1;::::0;::::1;64926:21:39::0;64983:2;64963:18;;;64956:30;65022:32;65002:18;;;64995:60;65072:18;;4793:56:1::1;64742:354:39::0;4793:56:1::1;4895:1;-1:-1:-1::0;;;;;4871:26:1::1;:9;4881:1;4871:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4871:26:1::1;;;:56;;;;;4917:10;-1:-1:-1::0;;;;;4901:26:1::1;:9;4911:1;4901:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4901:26:1::1;;;4871:56;4863:102;;;::::0;-1:-1:-1;;;4863:102:1;;65303:2:39;4863:102:1::1;::::0;::::1;65285:21:39::0;65342:2;65322:18;;;65315:30;65381:34;65361:18;;;65354:62;-1:-1:-1;;;65432:18:39;;;65425:31;65473:19;;4863:102:1::1;65101:397:39::0;4863:102:1::1;4997:5;-1:-1:-1::0;;;;;4979:32:1::1;;5012:10;5024:9;5034:1;5024:12;;;;;;;;:::i;:::-;;;;;;;5053:6;5060:1;5053:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;4979:86:::1;::::0;-1:-1:-1;;;;;;4979:86:1::1;::::0;;;;;;-1:-1:-1;;;;;65723:32:39;;;4979:86:1::1;::::0;::::1;65705:51:39::0;65792:32;;;;65772:18;;;65765:60;-1:-1:-1;;;;;5038:26:1::1;65841:18:39::0;;;65834:34;65678:18;;4979:86:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;4774:3:1::1;::::0;;::::1;::::0;-1:-1:-1;4732:344:1::1;::::0;-1:-1:-1;4732:344:1::1;;-1:-1:-1::0;5100:2:1::1;::::0;4320:820;-1:-1:-1;;;;4320:820:1:o;8802:218::-;8865:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;8897:19:1;::::1;8889:61;;;::::0;-1:-1:-1;;;8889:61:1;;66081:2:39;8889:61:1::1;::::0;::::1;66063:21:39::0;66120:2;66100:18;;;66093:30;66159:31;66139:18;;;66132:59;66208:18;;8889:61:1::1;65879:353:39::0;8889:61:1::1;8967:46;::::0;-1:-1:-1;;;8967:46:1;;-1:-1:-1;;;;;8967:39:1;::::1;:46;::::0;::::1;44047:51:39::0;;;8967:39:1;::::1;::::0;44020:18:39;;8967:46:1::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7306:262::-:0;7384:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7415:19:1;::::1;7407:76;;;::::0;-1:-1:-1;;;7407:76:1;;66853:2:39;7407:76:1::1;::::0;::::1;66835:21:39::0;66892:2;66872:18;;;66865:30;66931:34;66911:18;;;66904:62;-1:-1:-1;;;66982:18:39;;;66975:42;67034:19;;7407:76:1::1;66651:408:39::0;7407:76:1::1;7500:61;::::0;-1:-1:-1;;;7500:61:1;;-1:-1:-1;;;;;7500:54:1;::::1;:61;::::0;::::1;44047:51:39::0;;;7500:54:1;::::1;::::0;44020:18:39;;7500:61:1::1;43901:203:39::0;7574:305:1;7657:5;7664:17;;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7746:19:1;::::1;7738:65;;;::::0;-1:-1:-1;;;7738:65:1;;67266:2:39;7738:65:1::1;::::0;::::1;67248:21:39::0;67305:2;67285:18;;;67278:30;67344:34;67324:18;;;67317:62;-1:-1:-1;;;67395:18:39;;;67388:31;67436:19;;7738:65:1::1;67064:397:39::0;7738:65:1::1;7820:52;::::0;-1:-1:-1;;;7820:52:1;;-1:-1:-1;;;;;7820:45:1;::::1;:52;::::0;::::1;44047:51:39::0;;;7820:45:1;::::1;::::0;44020:18:39;;7820:52:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;7820:52:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;7813:59;;;;;;;;7574:305:::0;;;;;:::o;6395:287::-;-1:-1:-1;;;;;;;;6464:18:1;-1:-1:-1;;;;;;;;;;;;;;;846:4:1;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6527:19:1;::::1;6519:65;;;::::0;-1:-1:-1;;;6519:65:1;;68769:2:39;6519:65:1::1;::::0;::::1;68751:21:39::0;68808:2;68788:18;;;68781:30;68847:34;68827:18;;;68820:62;-1:-1:-1;;;68898:18:39;;;68891:31;68939:19;;6519:65:1::1;68567:397:39::0;6519:65:1::1;6623:52;::::0;-1:-1:-1;;;6623:52:1;;-1:-1:-1;;;;;6623:45:1;::::1;:52;::::0;::::1;44047:51:39::0;;;6623:45:1;::::1;::::0;44020:18:39;;6623:52:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;10324:924::-:0;10423:18;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10496:19:1;::::1;10488:56;;;::::0;-1:-1:-1;;;10488:56:1;;69548:2:39;10488:56:1::1;::::0;::::1;69530:21:39::0;69587:2;69567:18;;;69560:30;69626:26;69606:18;;;69599:54;69670:18;;10488:56:1::1;69346:348:39::0;10488:56:1::1;10571:1;10562:6;:10;;;10554:48;;;::::0;-1:-1:-1;;;10554:48:1;;69901:2:39;10554:48:1::1;::::0;::::1;69883:21:39::0;69940:2;69920:18;;;69913:30;69979:27;69959:18;;;69952:55;70024:18;;10554:48:1::1;69699:349:39::0;10554:48:1::1;10673:46;::::0;-1:-1:-1;;;10673:46:1;;-1:-1:-1;;;;;10673:39:1;::::1;:46;::::0;::::1;44047:51:39::0;;;10614:27:1::1;::::0;;;10673:39;::::1;::::0;44020:18:39;;10673:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;10673:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;10613:106;;;;10737:21;:27;;10762:2;10737:27;10729:75;;;::::0;-1:-1:-1;;;10729:75:1;;70255:2:39;10729:75:1::1;::::0;::::1;70237:21:39::0;70294:2;70274:18;;;70267:30;70333:34;70313:18;;;70306:62;-1:-1:-1;;;70384:18:39;;;70377:33;70427:19;;10729:75:1::1;70053:399:39::0;10729:75:1::1;10841:15:::0;;:24:::1;;::::0;-1:-1:-1;;;;;10883:29:1;::::1;10875:68;;;::::0;-1:-1:-1;;;10875:68:1;;70659:2:39;10875:68:1::1;::::0;::::1;70641:21:39::0;70698:2;70678:18;;;70671:30;70737:28;70717:18;;;70710:56;70783:18;;10875:68:1::1;70457:350:39::0;10875:68:1::1;10954:86;::::0;-1:-1:-1;;;10954:86:1;;-1:-1:-1;;;;;65723:32:39;;;10954:86:1::1;::::0;::::1;65705:51:39::0;11012:1:1::1;65772:18:39::0;;;65765:60;-1:-1:-1;;;;;11016:23:1;::::1;65841:18:39::0;;;65834:34;10954:32:1;::::1;::::0;::::1;::::0;65678:18:39;;10954:86:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11066:2;11051:17;;11146:5;-1:-1:-1::0;;;;;11139:25:1::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11109:59;;11204:1;11186:14;:19;;;;11178:63;;;::::0;-1:-1:-1;;;11178:63:1;;71249:2:39;11178:63:1::1;::::0;::::1;71231:21:39::0;71288:2;71268:18;;;71261:30;71327:33;71307:18;;;71300:61;71378:18;;11178:63:1::1;71047:355:39::0;11178:63:1::1;10478:770;;;10324:924:::0;;;;;;:::o;1329:303::-;1407:16;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;1538:40:::1;::::0;;-1:-1:-1;;;1538:40:1::1;::::0;::::1;71588:46:39::0;;;1435:15:1::1;71650:11:39::0;;;71643:72;;;-1:-1:-1;;;;;;71753:2:39;71749:15;;;71745:53;71731:12;;;71724:75;1453:26:1;;1435:15;;;;71815:12:39;1538:40:1::1;;;;;;;;;;;;1530:49;;;:::i;:::-;1613:11:::0;;1329:303;-1:-1:-1;;;;;1329:303:1:o;9316:1002::-;9415:18;;9473:28;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;9526:19:1;::::1;9518:56;;;::::0;-1:-1:-1;;;9518:56:1;;72342:2:39;9518:56:1::1;::::0;::::1;72324:21:39::0;72381:2;72361:18;;;72354:30;72420:26;72400:18;;;72393:54;72464:18;;9518:56:1::1;72140:348:39::0;9518:56:1::1;9601:1;9592:6;:10;;;9584:48;;;::::0;-1:-1:-1;;;9584:48:1;;72695:2:39;9584:48:1::1;::::0;::::1;72677:21:39::0;72734:2;72714:18;;;72707:30;72773:27;72753:18;;;72746:55;72818:18;;9584:48:1::1;72493:349:39::0;9584:48:1::1;9703:46;::::0;-1:-1:-1;;;9703:46:1;;-1:-1:-1;;;;;9703:39:1;::::1;:46;::::0;::::1;44047:51:39::0;;;9644:27:1::1;::::0;;;9703:39;::::1;::::0;44020:18:39;;9703:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;9703:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;9643:106;;;;9767:21;:27;;9792:2;9767:27;9759:75;;;::::0;-1:-1:-1;;;9759:75:1;;73049:2:39;9759:75:1::1;::::0;::::1;73031:21:39::0;73088:2;73068:18;;;73061:30;73127:34;73107:18;;;73100:62;-1:-1:-1;;;73178:18:39;;;73171:33;73221:19;;9759:75:1::1;72847:399:39::0;9759:75:1::1;9871:15:::0;;:24:::1;;::::0;-1:-1:-1;;;;;9913:29:1;::::1;9905:68;;;::::0;-1:-1:-1;;;9905:68:1;;73453:2:39;9905:68:1::1;::::0;::::1;73435:21:39::0;73492:2;73472:18;;;73465:30;73531:28;73511:18;;;73504:56;73577:18;;9905:68:1::1;73251:350:39::0;9905:68:1::1;9984:86;::::0;-1:-1:-1;;;9984:86:1;;10025:1:::1;9984:86;::::0;::::1;65705:51:39::0;-1:-1:-1;;;;;65792:32:39;;;65772:18;;;65765:60;-1:-1:-1;;;;;10046:23:1;::::1;65841:18:39::0;;;65834:34;9984:32:1;::::1;::::0;::::1;::::0;65678:18:39;;9984:86:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10096:2;10081:17;;10176:5;-1:-1:-1::0;;;;;10169:25:1::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10224:14;::::0;;10236:1:::1;10224:14:::0;;;::::1;::::0;::::1;::::0;;;10139:59;;-1:-1:-1;10224:14:1::1;10208:30;;10274:1;10256:14;:19;;;;10248:63;;;::::0;-1:-1:-1;;;10248:63:1;;73808:2:39;10248:63:1::1;::::0;::::1;73790:21:39::0;73847:2;73827:18;;;73820:30;73886:33;73866:18;;;73859:61;73937:18;;10248:63:1::1;73606:355:39::0;10248:63:1::1;9508:810;;;9316:1002:::0;;;;;;;:::o;6994:306::-;7129:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7160:19:1;::::1;7152:63;;;::::0;-1:-1:-1;;;7152:63:1;;74168:2:39;7152:63:1::1;::::0;::::1;74150:21:39::0;74207:2;74187:18;;;74180:30;74246:33;74226:18;;;74219:61;74297:18;;7152:63:1::1;73966:355:39::0;7152:63:1::1;7244:48;::::0;-1:-1:-1;;;7244:48:1;;-1:-1:-1;;;;;58516:32:39;;;7244:48:1::1;::::0;::::1;58498:51:39::0;58585:32;;;58565:18;;;58558:60;7239:2:1::1;::::0;7244:31;;::::1;::::0;::::1;::::0;58471:18:39;;7244:48:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7225:68;;;;6994:306:::0;;;;;;:::o;25899:319::-;26091:52;;-1:-1:-1;;;26091:52:1;;-1:-1:-1;;;;;44065:32:39;;26091:52:1;;;44047:51:39;25969:7:1;;-1:-1:-1;;;26006:29:1;25969:7;;;;311:5;;26091:43;;44020:18:39;;26091:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26072:71;;26185:8;26195:3;26200:9;26168:42;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;26160:51;;;:::i;:::-;26153:58;25899:319;-1:-1:-1;;;;;25899:319:1:o;18885:2453::-;18946:12;-1:-1:-1;;;;;;;;;18974:32:1;;;18970:86;;19040:4;19029:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;19022:23;;18885:2453;;;:::o;18970:86::-;-1:-1:-1;;;;;;;;;19069:36:1;;;19065:94;;19139:8;;19128:20;;;19139:8;;;;19128:20;;;39166:36:39;39139:18;19128:20:1;39013:195:39;19065:94:1;-1:-1:-1;;;;;;;;;19172:39:1;;;19168:100;;19245:11;;19234:23;;;;;;42579:25:39;;42567:2;42552:18;;42433:177;19168:100:1;-1:-1:-1;;;;;;;;;19281:34:1;;;19277:90;;19349:6;19338:18;;;;;;;;:::i;19277:90::-;-1:-1:-1;;;;;;;;;19380:37:1;;;19376:251;;19460:2;19441:8;:21;;19433:64;;;;-1:-1:-1;;;19433:64:1;;75854:2:39;19433:64:1;;;75836:21:39;75893:2;75873:18;;;75866:30;75932:32;75912:18;;;75905:60;75982:18;;19433:64:1;75652:354:39;19433:64:1;19512:15;19546;19558:2;19555;19546:8;19512:15;19546;:::i;:::-;19538:24;;;:::i;:::-;19530:33;;19512:51;;19595:20;19607:7;19595:11;:20::i;:::-;19584:32;;;;;;42579:25:39;;42567:2;42552:18;;42433:177;19584:32:1;;;;;;;;;;;;;19577:39;;;18885:2453;;;:::o;19376:251::-;-1:-1:-1;;;;;;;;;19640:36:1;;;19636:374;;19719:2;19700:8;:21;;19692:63;;;;-1:-1:-1;;;19692:63:1;;76213:2:39;19692:63:1;;;76195:21:39;76252:2;76232:18;;;76225:30;76291:31;76271:18;;;76264:59;76340:18;;19692:63:1;76011:353:39;19692:63:1;19770:10;19799:15;19811:2;19808;19799:8;19770:10;19799:15;:::i;:::-;19791:24;;;:::i;:::-;19783:33;;;-1:-1:-1;19830:14:1;19863:15;19875:2;19872;19863:8;19830:14;19863:15;:::i;:::-;19855:24;;;:::i;:::-;19847:33;-1:-1:-1;19910:10:1;19934:28;19910:10;19951:2;19847:33;19934:9;:28::i;:::-;19983:16;;;19994:4;19983:16;;;41263:41:39;41236:18;19983:16:1;;;;;;;;;;;;;19976:23;;;;;18885:2453;;;:::o;19636:374::-;-1:-1:-1;;;;;;;;;20023:40:1;;;20019:497;;20106:3;20087:8;:22;;20079:65;;;;-1:-1:-1;;;20079:65:1;;76571:2:39;20079:65:1;;;76553:21:39;76610:2;76590:18;;;76583:30;76649:32;76629:18;;;76622:60;76699:18;;20079:65:1;76369:354:39;20079:65:1;20159:12;20190:15;20202:2;20199;20190:8;20159:12;20190:15;:::i;:::-;20182:24;;;:::i;:::-;20174:33;;;-1:-1:-1;20221:10:1;20250:15;20262:2;20259;20250:8;20221:10;20250:15;:::i;:::-;20242:24;;;:::i;:::-;20234:33;;;-1:-1:-1;20281:14:1;20314:16;20326:3;20323:2;20314:8;20281:14;20314:16;:::i;:::-;20306:25;;;:::i;:::-;20298:34;-1:-1:-1;20364:10:1;20389:38;20405:4;20364:10;20298:34;20389:15;:38::i;:::-;20441:27;20451:4;20457:2;20461:6;20441:9;:27::i;:::-;20489:16;;;20500:4;20489:16;;;41263:41:39;41236:18;20489:16:1;;;;;;;;;;;;20482:23;;;;;;18885:2453;;;:::o;20019:497::-;-1:-1:-1;;;;;;;;;20529:37:1;;;20525:321;;20609:2;20590:8;:21;;20582:64;;;;-1:-1:-1;;;20582:64:1;;76930:2:39;20582:64:1;;;76912:21:39;76969:2;76949:18;;;76942:30;77008:32;76988:18;;;76981:60;77058:18;;20582:64:1;76728:354:39;20582:64:1;20661:13;20693:15;20705:2;20702;20693:8;20661:13;20693:15;:::i;:::-;20685:24;;;:::i;:::-;20677:33;;;-1:-1:-1;20724:15:1;20758;20770:2;20767;20758:8;20724:15;20758;:::i;:::-;20750:24;;;:::i;:::-;20742:33;;20724:51;;20807:27;20819:5;20826:7;20807:11;:27::i;:::-;20796:39;;;;;;42579:25:39;;42567:2;42552:18;;42433:177;20796:39:1;;;;;;;;;;;;;20789:46;;;;18885:2453;;;:::o;20525:321::-;-1:-1:-1;;;;;;;;;20859:35:1;;;20855:432;;20937:2;20918:8;:21;;20910:62;;;;-1:-1:-1;;;20910:62:1;;77289:2:39;20910:62:1;;;77271:21:39;77328:2;77308:18;;;77301:30;77367;77347:18;;;77340:58;77415:18;;20910:62:1;77087:352:39;20910:62:1;20987:15;21021;21033:2;21030;21021:8;20987:15;21021;:::i;:::-;21013:24;;;:::i;:::-;21005:33;;;-1:-1:-1;21052:14:1;21085:15;21097:2;21094;21085:8;21052:14;21085:15;:::i;:::-;21077:24;;;:::i;:::-;21069:33;-1:-1:-1;21132:10:1;21156:32;21132:10;21172:7;21069:33;21156:8;:32::i;:::-;21223:7;-1:-1:-1;;;;;21207:32:1;21216:5;-1:-1:-1;;;;;21207:32:1;;21232:6;21207:32;;;;42579:25:39;;42567:2;42552:18;;42433:177;21207:32:1;;;;;;;;21260:16;;;21271:4;21260:16;;;41263:41:39;41236:18;21260:16:1;41123:187:39;20855:432:1;21303:28;21322:8;21303:18;:28::i;21344:2981::-;21406:12;-1:-1:-1;;;;;;;;;21434:33:1;;;21430:87;;21501:4;21490:16;;;;;;;;:::i;21430:87::-;-1:-1:-1;;;;;;;;;21530:35:1;;;21526:91;;21599:6;21588:18;;;;;;;;:::i;21526:91::-;-1:-1:-1;;;;;;;;;21630:37:1;;;21626:250;;21710:2;21691:8;:21;;21683:63;;;;-1:-1:-1;;;21683:63:1;;77646:2:39;21683:63:1;;;77628:21:39;77685:2;77665:18;;;77658:30;77724:31;77704:18;;;77697:59;77773:18;;21683:63:1;77444:353:39;21683:63:1;21760:16;21795:15;21807:2;21804;21795:8;21760:16;21795:15;:::i;:::-;21787:24;;;:::i;:::-;21779:33;-1:-1:-1;21844:20:1;21779:33;21844:10;:20::i;:::-;21833:32;;;;;;;;:::i;21626:250::-;-1:-1:-1;;;;;;;;;21889:40:1;;;21885:101;;21963:11;;21952:23;;;;;;42579:25:39;;42567:2;42552:18;;42433:177;21885:101:1;-1:-1:-1;;;;;;;;;21999:38:1;;;21995:247;;22080:2;22061:8;:21;;22053:64;;;;-1:-1:-1;;;22053:64:1;;75854:2:39;22053:64:1;;;75836:21:39;75893:2;75873:18;;;75866:30;75932:32;75912:18;;;75905:60;75982:18;;22053:64:1;75652:354:39;21995:247:1;-1:-1:-1;;;;;;;;;22255:36:1;;;22251:247;;22334:2;22315:8;:21;;22307:62;;;;-1:-1:-1;;;22307:62:1;;78229:2:39;22307:62:1;;;78211:21:39;78268:2;78248:18;;;78241:30;78307;78287:18;;;78280:58;78355:18;;22307:62:1;78027:352:39;22307:62:1;22383:16;22418:15;22430:2;22427;22418:8;22383:16;22418:15;:::i;:::-;22410:24;;;:::i;:::-;22402:33;-1:-1:-1;22467:19:1;22402:33;22467:9;:19::i;:::-;22456:31;;;-1:-1:-1;;;;;44065:32:39;;;22456:31:1;;;44047:51:39;44020:18;22456:31:1;43901:203:39;22251:247:1;-1:-1:-1;;;;;;;;;22511:41:1;;;22507:412;;22595:3;22576:8;:22;;22568:68;;;;-1:-1:-1;;;22568:68:1;;78586:2:39;22568:68:1;;;78568:21:39;78625:2;78605:18;;;78598:30;78664:34;78644:18;;;78637:62;-1:-1:-1;;;78715:18:39;;;78708:31;78756:19;;22568:68:1;78384:397:39;22568:68:1;22650:12;22681:15;22693:2;22690;22681:8;22650:12;22681:15;:::i;:::-;22673:24;;;:::i;:::-;22665:33;;;-1:-1:-1;22712:10:1;22741:15;22753:2;22750;22741:8;22712:10;22741:15;:::i;:::-;22733:24;;;:::i;:::-;22725:33;;;-1:-1:-1;22772:16:1;22807;22819:3;22816:2;22807:8;22772:16;22807;:::i;:::-;22799:25;;;:::i;:::-;22791:34;-1:-1:-1;22839:32:1;22852:4;22858:2;22791:34;22839:12;:32::i;22507:412::-;-1:-1:-1;;;;;;;;;22932:36:1;;;22928:344;;23011:2;22992:8;:21;;22984:62;;;;-1:-1:-1;;;22984:62:1;;77289:2:39;22984:62:1;;;77271:21:39;77328:2;77308:18;;;77301:30;77367;77347:18;;;77340:58;77415:18;;22984:62:1;77087:352:39;22984:62:1;23060:15;23094;23106:2;23103;23094:8;23060:15;23094;:::i;:::-;23086:24;;;:::i;:::-;23078:33;;;-1:-1:-1;23125:16:1;23160:15;23172:2;23169;23160:8;23125:16;23160:15;:::i;:::-;23152:24;;;:::i;:::-;23144:33;-1:-1:-1;23191:33:1;23200:7;23144:33;23219:4;23191:8;:33::i;:::-;23245:16;;;23256:4;23245:16;;;41263:41:39;41236:18;23245:16:1;41123:187:39;22928:344:1;-1:-1:-1;;;;;;;;;23285:46:1;;;23281:372;;23374:2;23355:8;:21;;23347:72;;;;-1:-1:-1;;;23347:72:1;;78988:2:39;23347:72:1;;;78970:21:39;79027:2;79007:18;;;79000:30;79066:34;79046:18;;;79039:62;-1:-1:-1;;;79117:18:39;;;79110:36;79163:19;;23347:72:1;78786:402:39;23347:72:1;23433:16;23468:15;23480:2;23477;23468:8;23433:16;23468:15;:::i;:::-;23460:24;;;:::i;:::-;23452:33;;;-1:-1:-1;23499:13:1;23531:15;23543:2;23540;23531:8;23499:13;23531:15;:::i;:::-;23523:24;;;:::i;:::-;23552:1;23515:38;;-1:-1:-1;23567:38:1;23586:8;23515:38;23567:18;:38::i;23281:372::-;-1:-1:-1;;;;;;;;;23666:40:1;;;23662:259;;23749:2;23730:8;:21;;23722:66;;;;-1:-1:-1;;;23722:66:1;;79395:2:39;23722:66:1;;;79377:21:39;;;79414:18;;;79407:30;79473:34;79453:18;;;79446:62;79525:18;;23722:66:1;79193:356:39;23722:66:1;23802:16;23837:15;23849:2;23846;23837:8;23802:16;23837:15;:::i;:::-;23829:24;;;:::i;:::-;23821:33;-1:-1:-1;23886:23:1;23821:33;23886:13;:23::i;23662:259::-;-1:-1:-1;;;;;;;;;23934:45:1;;;23930:344;;24022:2;24003:8;:21;;23995:71;;;;-1:-1:-1;;;23995:71:1;;79756:2:39;23995:71:1;;;79738:21:39;79795:2;79775:18;;;79768:30;79834:34;79814:18;;;79807:62;-1:-1:-1;;;79885:18:39;;;79878:35;79930:19;;23995:71:1;79554:401:39;23995:71:1;24080:13;24112:15;24124:2;24121;24112:8;24080:13;24112:15;:::i;:::-;24104:24;;;:::i;:::-;24096:33;;;-1:-1:-1;24143:16:1;24178:15;24190:2;24187;24178:8;24143:16;24178:15;:::i;:::-;24170:24;;;:::i;:::-;24162:33;;24143:52;;24227:35;24246:5;24253:8;24227:18;:35::i;:::-;24216:47;;;41288:14:39;;41281:22;24216:47:1;;;41263:41:39;41236:18;24216:47:1;41123:187:39;25162:312:1;25347:52;;-1:-1:-1;;;25347:52:1;;-1:-1:-1;;;;;44065:32:39;;25347:52:1;;;44047:51:39;25229:7:1;;-1:-1:-1;;;25266:25:1;25229:7;;;;311:5;;25347:43;;44020:18:39;;25347:52:1;43901:203:39;27371:169:1;27426:14;27452:12;27467:23;27482:7;27467:14;:23::i;:::-;27521:11;;27371:169;-1:-1:-1;;;27371:169:1:o;28572:272::-;-1:-1:-1;;;;;28659:18:1;;28651:50;;;;-1:-1:-1;;;28651:50:1;;80162:2:39;28651:50:1;;;80144:21:39;80201:2;80181:18;;;80174:30;-1:-1:-1;;;80220:18:39;;;80213:49;80279:18;;28651:50:1;79960:343:39;28651:50:1;-1:-1:-1;;;;;28719:16:1;;28711:50;;;;-1:-1:-1;;;28711:50:1;;80510:2:39;28711:50:1;;;80492:21:39;80549:2;80529:18;;;80522:30;-1:-1:-1;;;80568:18:39;;;80561:51;80629:18;;28711:50:1;80308:345:39;28711:50:1;28771:25;28779:4;28785:2;28789:6;28771:7;:25::i;:::-;28826:2;-1:-1:-1;;;;;28811:26:1;28820:4;-1:-1:-1;;;;;28811:26:1;;28830:6;28811:26;;;;42579:25:39;;42567:2;42552:18;;42433:177;28811:26:1;;;;;;;;28572:272;;;:::o;31946:404::-;32037:24;32064:27;32076:5;32083:7;32064:11;:27::i;:::-;32037:54;;-1:-1:-1;;32105:16:1;:37;32101:243;;32186:6;32166:16;:26;;32158:68;;;;-1:-1:-1;;;32158:68:1;;80860:2:39;32158:68:1;;;80842:21:39;80899:2;80879:18;;;80872:30;80938:31;80918:18;;;80911:59;80987:18;;32158:68:1;80658:353:39;32158:68:1;32268:51;32277:5;32284:7;32312:6;32293:16;:25;32268:8;:51::i;:::-;32027:323;31946:404;;;:::o;27546:191::-;27616:14;27642:12;27657:30;27672:5;27679:7;27657:14;:30::i;:::-;27718:11;;27546:191;-1:-1:-1;;;;27546:191:1:o;30918:330::-;-1:-1:-1;;;;;31010:19:1;;31002:55;;;;-1:-1:-1;;;31002:55:1;;81218:2:39;31002:55:1;;;81200:21:39;81257:2;81237:18;;;81230:30;81296:25;81276:18;;;81269:53;81339:18;;31002:55:1;81016:347:39;31002:55:1;-1:-1:-1;;;;;31075:21:1;;31067:59;;;;-1:-1:-1;;;31067:59:1;;81570:2:39;31067:59:1;;;81552:21:39;81609:2;81589:18;;;81582:30;81648:27;81628:18;;;81621:55;81693:18;;31067:59:1;81368:349:39;31067:59:1;31136:21;31160:30;31175:5;31182:7;31160:14;:30::i;:::-;31211:29;;;;-1:-1:-1;;;30918:330:1:o;24331:769::-;24393:12;-1:-1:-1;;;;;;;;;24421:38:1;;;24417:194;;24475:12;24490:29;24508:10;24490:17;:29::i;:::-;24475:44;;24557:4;24551;24544:18;24595:4;24584:16;;;;;;41288:14:39;41281:22;41263:41;;41251:2;41236:18;;41123:187;24417:194:1;-1:-1:-1;;;;;;;;;24624:39:1;;;24620:196;;24679:12;24694:29;24712:10;24694:17;:29::i;:::-;24761:5;24748:19;;24789:16;;;24800:4;24789:16;;;41263:41:39;24679:44:1;;-1:-1:-1;41236:18:39;24789:16:1;41123:187:39;24620:196:1;-1:-1:-1;;;;;;;;;24829:41:1;;;24825:218;;24886:12;24901:29;24919:10;24901:17;:29::i;:::-;24984:11;;25017:15;;;41288:14:39;;41281:22;25017:15:1;;;41263:41:39;24984:11:1;;-1:-1:-1;24984:11:1;;41236:18:39;25017:15:1;41123:187:39;24825:218:1;25052:41;;-1:-1:-1;;;25052:41:1;;81924:2:39;25052:41:1;;;81906:21:39;81963:2;81943:18;;;81936:30;82002:33;81982:18;;;81975:61;82053:18;;25052:41:1;81722:355:39;27743:225:1;27798:17;27827:12;27842:31;27863:8;27842:13;:31::i;:::-;27827:46;;27883:19;27936:4;27923:17;;27957:4;27951:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27817:151;;27743:225;;;:::o;27974:173::-;28028:13;28053:12;28068:30;28088:8;28068:12;:30::i;28850:1094::-;-1:-1:-1;;;;;28942:18:1;;28934:50;;;;-1:-1:-1;;;28934:50:1;;80162:2:39;28934:50:1;;;80144:21:39;80201:2;80181:18;;;80174:30;-1:-1:-1;;;80220:18:39;;;80213:49;80279:18;;28934:50:1;79960:343:39;28934:50:1;-1:-1:-1;;;;;29002:16:1;;28994:50;;;;-1:-1:-1;;;28994:50:1;;80510:2:39;28994:50:1;;;80492:21:39;80549:2;80529:18;;;80522:30;-1:-1:-1;;;80568:18:39;;;80561:51;80629:18;;28994:50:1;80308:345:39;28994:50:1;29112:12;29127:30;29147:8;29127:12;:30::i;:::-;29210:11;;29112:45;;-1:-1:-1;;;;;;29240:13:1;;;;;;;29232:50;;;;-1:-1:-1;;;29232:50:1;;82284:2:39;29232:50:1;;;82266:21:39;82323:2;82303:18;;;82296:30;82362:26;82342:18;;;82335:54;82406:18;;29232:50:1;82082:348:39;29232:50:1;29372:10;-1:-1:-1;;;;;29372:18:1;;;29368:156;;29428:23;29442:8;29428:13;:23::i;:::-;-1:-1:-1;;;;;29414:37:1;:10;-1:-1:-1;;;;;29414:37:1;;:77;;;;29455:36;29474:4;29480:10;29455:18;:36::i;:::-;29406:107;;;;-1:-1:-1;;;29406:107:1;;82637:2:39;29406:107:1;;;82619:21:39;82676:2;82656:18;;;82649:30;-1:-1:-1;;;82695:18:39;;;82688:47;82752:18;;29406:107:1;82435:341:39;29406:107:1;29560:20;29583:34;29607:8;29583:16;:34::i;:::-;29560:57;;29659:1;29645:12;29638:23;29707:28;29738:31;29760:4;29766:2;29738:21;:31::i;:::-;29707:62;;29819:5;29797:20;29790:35;29890:2;29884:4;29877:16;29924:2;-1:-1:-1;;;;;29909:28:1;29918:4;-1:-1:-1;;;;;29909:28:1;;29928:8;29909:28;;;;42579:25:39;;42567:2;42552:18;;42433:177;29909:28:1;;;;;;;;28924:1020;;;;28850:1094;;;:::o;31254:567::-;31411:13;31427:19;31437:8;31427:9;:19::i;:::-;31411:35;-1:-1:-1;31464:10:1;-1:-1:-1;;;;;31464:19:1;;;;:60;;-1:-1:-1;31514:10:1;31487:23;31501:8;31487:13;:23::i;:::-;-1:-1:-1;;;;;31487:37:1;;31464:60;:101;;;;31528:37;31547:5;31554:10;31528:18;:37::i;:::-;31456:136;;;;-1:-1:-1;;;31456:136:1;;82983:2:39;31456:136:1;;;82965:21:39;83022:2;83002:18;;;82995:30;-1:-1:-1;;;83041:18:39;;;83034:52;83103:18;;31456:136:1;82781:346:39;31456:136:1;31603:12;31618:34;31642:8;31618:16;:34::i;:::-;31603:49;;31662:19;31684:10;:33;;31715:1;31684:33;;;31697:7;31684:33;31662:55;;31751:11;31745:4;31738:25;31796:7;-1:-1:-1;;;;;31780:34:1;31789:5;-1:-1:-1;;;;;31780:34:1;;31805:8;31780:34;;;;42579:25:39;;42567:2;42552:18;;42433:177;31780:34:1;;;;;;;;31332:489;;;31254:567;;;:::o;32356:376::-;32451:10;-1:-1:-1;;;;;32479:22:1;;;;;;:43;;;32517:5;-1:-1:-1;;;;;32505:17:1;:8;-1:-1:-1;;;;;32505:17:1;;;32479:43;32471:91;;;;-1:-1:-1;;;32471:91:1;;83334:2:39;32471:91:1;;;83316:21:39;83373:2;83353:18;;;83346:30;83412:34;83392:18;;;83385:62;-1:-1:-1;;;83463:18:39;;;83456:33;83506:19;;32471:91:1;83132:399:39;32471:91:1;32572:12;32587:38;32609:5;32616:8;32587:21;:38::i;:::-;32572:53;;32659:8;32653:4;32646:22;32706:8;-1:-1:-1;;;;;32684:41:1;32699:5;-1:-1:-1;;;;;32684:41:1;;32716:8;32684:41;;;;41288:14:39;41281:22;41263:41;;41251:2;41236:18;;41123:187;32684:41:1;;;;;;;;32425:307;;32356:376;;:::o;28153:187::-;28211:16;28239:12;28254:34;28278:8;28254:16;:34::i;28346:220::-;28424:19;28455:12;28470:38;28492:5;28499:8;28470:21;:38::i;25480:413::-;25678:50;;-1:-1:-1;;;25678:50:1;;-1:-1:-1;;;;;44065:32:39;;25678:50:1;;;44047:51:39;25562:7:1;;-1:-1:-1;;;25599:25:1;25562:7;;;;311:5;;25678:43;;44020:18:39;;25678:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25757:52;;-1:-1:-1;;;25757:52:1;;-1:-1:-1;;;;;44065:32:39;;25757:52:1;;;44047:51:39;25661:67:1;;-1:-1:-1;25738:16:1;;311:5;;25757:43;;44020:18:39;;25757:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25738:71;;25851:8;25861:3;25866:9;25877:7;25834:51;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;25826:60;;;:::i;:::-;25819:67;25480:413;-1:-1:-1;;;;;;;25480:413:1:o;26224:229::-;26404:41;;26290:7;;-1:-1:-1;;;26327:25:1;26290:7;;26404:41;;26327:25;;26290:7;;26436:8;;26404:41;;;:::i;:::-;;;;;;;;;;;;;26396:50;;;:::i;:::-;26389:57;26224:229;-1:-1:-1;;;;26224:229:1:o;26459:227::-;26637:41;;26524:7;;-1:-1:-1;;;26561:24:1;26524:7;;26637:41;;26561:24;;26524:7;;26669:8;;26637:41;;;:::i;26692:235::-;26878:41;;26761:7;;-1:-1:-1;;;26798:28:1;26761:7;;26878:41;;26798:28;;26761:7;;26910:8;;26878:41;;;:::i;26933:432::-;27147:50;;-1:-1:-1;;;27147:50:1;;-1:-1:-1;;;;;44065:32:39;;27147:50:1;;;44047:51:39;27023:7:1;;-1:-1:-1;;;27060:33:1;27023:7;;;;311:5;;27147:43;;44020:18:39;;27147:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27227:53;;-1:-1:-1;;;27227:53:1;;-1:-1:-1;;;;;44065:32:39;;27227:53:1;;;44047:51:39;27130:67:1;;-1:-1:-1;27207:17:1;;311:5;;27227:43;;44020:18:39;;27227:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27207:73;;27322:8;27332:3;27337:7;27346:10;27305:52;;;;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;372:331:39:-;477:9;488;530:8;518:10;515:24;512:44;;;552:1;549;542:12;512:44;581:6;571:8;568:20;565:40;;;601:1;598;591:12;565:40;-1:-1:-1;;627:23:39;;;672:25;;;;;-1:-1:-1;372:331:39:o;708:338::-;828:19;;-1:-1:-1;;;;;;865:29:39;;;914:1;906:10;;903:137;;;-1:-1:-1;;;;;;975:1:39;971:11;;;968:1;964:19;960:46;;;952:55;;948:82;;-1:-1:-1;903:137:39;;708:338;;;;:::o;1410:374::-;1531:19;;-1:-1:-1;;;;;;1568:40:39;;;1628:2;1620:11;;1617:161;;;-1:-1:-1;;;;;;1690:2:39;1686:12;;;;1683:1;1679:20;1675:58;;;1667:67;1663:105;;;;1410:374;-1:-1:-1;;1410:374:39:o;2147:131::-;-1:-1:-1;;;;;2222:31:39;;2212:42;;2202:70;;2268:1;2265;2258:12;2202:70;2147:131;:::o;2283:367::-;2351:6;2359;2412:2;2400:9;2391:7;2387:23;2383:32;2380:52;;;2428:1;2425;2418:12;2380:52;2467:9;2454:23;2486:31;2511:5;2486:31;:::i;:::-;2536:5;2614:2;2599:18;;;;2586:32;;-1:-1:-1;;;2283:367:39:o;3150:388::-;3218:6;3226;3279:2;3267:9;3258:7;3254:23;3250:32;3247:52;;;3295:1;3292;3285:12;3247:52;3334:9;3321:23;3353:31;3378:5;3353:31;:::i;:::-;3403:5;-1:-1:-1;3460:2:39;3445:18;;3432:32;3473:33;3432:32;3473:33;:::i;:::-;3525:7;3515:17;;;3150:388;;;;;:::o;3736:508::-;3813:6;3821;3829;3882:2;3870:9;3861:7;3857:23;3853:32;3850:52;;;3898:1;3895;3888:12;3850:52;3937:9;3924:23;3956:31;3981:5;3956:31;:::i;:::-;4006:5;-1:-1:-1;4063:2:39;4048:18;;4035:32;4076:33;4035:32;4076:33;:::i;:::-;3736:508;;4128:7;;-1:-1:-1;;;4208:2:39;4193:18;;;;4180:32;;3736:508::o;4249:247::-;4308:6;4361:2;4349:9;4340:7;4336:23;4332:32;4329:52;;;4377:1;4374;4367:12;4329:52;4416:9;4403:23;4435:31;4460:5;4435:31;:::i;:::-;4485:5;4249:247;-1:-1:-1;;;4249:247:39:o;4871:289::-;4913:3;4951:5;4945:12;4978:6;4973:3;4966:19;5034:6;5027:4;5020:5;5016:16;5009:4;5004:3;5000:14;4994:47;5086:1;5079:4;5070:6;5065:3;5061:16;5057:27;5050:38;5149:4;5142:2;5138:7;5133:2;5125:6;5121:15;5117:29;5112:3;5108:39;5104:50;5097:57;;;4871:289;;;;:::o;5165:622::-;5266:5;5260:12;5253:20;5246:28;5241:3;5234:41;5353:1;5349;5344:3;5340:11;5336:19;5328:4;5321:5;5317:16;5311:23;5307:49;5300:4;5295:3;5291:14;5284:73;5216:3;5403:4;5396:5;5392:16;5386:23;5441:4;5434;5429:3;5425:14;5418:28;5467:47;5508:4;5503:3;5499:14;5485:12;5467:47;:::i;:::-;5455:59;;5562:4;5555:5;5551:16;5545:23;5610:3;5604:4;5600:14;5593:4;5588:3;5584:14;5577:38;5638:39;5672:4;5656:14;5638:39;:::i;:::-;5730:4;5719:16;;;5713:23;-1:-1:-1;;;;;5709:49:39;5693:14;;;;5686:73;;;;-1:-1:-1;5624:53:39;;5165:622;-1:-1:-1;;5165:622:39:o;5792:774::-;5853:3;5884;5916:5;5910:12;5943:6;5938:3;5931:19;5975:4;5970:3;5966:14;5959:21;;6033:4;6023:6;6020:1;6016:14;6009:5;6005:26;6001:37;6072:4;6065:5;6061:16;6095:1;6105:435;6119:6;6116:1;6113:13;6105:435;;;6206:2;6202:7;6194:5;6188:4;6184:16;6180:30;6175:3;6168:43;6240:6;6234:13;6279:2;6273:9;6267:4;6260:23;6330:4;6326:2;6322:13;6316:20;6296:40;;6373:4;6366;6360;6356:15;6349:29;6399:57;6450:4;6444;6440:15;6426:12;6399:57;:::i;:::-;6491:4;6516:14;;;;6391:65;;-1:-1:-1;6479:17:39;;;;;-1:-1:-1;6141:1:39;6134:9;6105:435;;;-1:-1:-1;6556:4:39;;5792:774;-1:-1:-1;;;;;;5792:774:39:o;6835:1313::-;6889:3;6933:5;6927:12;6960:6;6955:3;6948:19;6988:49;7029:6;7024:3;7020:16;7006:12;6988:49;:::i;:::-;6976:61;;7085:4;7078:5;7074:16;7068:23;7133:3;7127:4;7123:14;7116:4;7111:3;7107:14;7100:38;7161:39;7195:4;7179:14;7161:39;:::i;:::-;7147:53;;;7248:4;7241:5;7237:16;7231:23;7263:50;7307:4;7302:3;7298:14;7282;-1:-1:-1;;;;;2817:31:39;2805:44;;2751:104;7263:50;;7361:4;7354:5;7350:16;7344:23;7411:3;7403:6;7399:16;7392:4;7387:3;7383:14;7376:40;7439:41;7473:6;7457:14;7439:41;:::i;:::-;7425:55;;;7528:4;7521:5;7517:16;7511:23;7543:47;7584:4;7579:3;7575:14;7559;4571:13;4564:21;4552:34;;4501:91;7543:47;;7638:4;7631:5;7627:16;7621:23;7653:48;7695:4;7690:3;7686:14;7670;2730:1;2719:20;2707:33;;2655:91;7653:48;;7749:4;7742:5;7738:16;7732:23;7764:47;7805:4;7800:3;7796:14;7780;4571:13;4564:21;4552:34;;4501:91;7764:47;;7859:4;7852:5;7848:16;7842:23;7909:3;7901:6;7897:16;7890:4;7885:3;7881:14;7874:40;7937:60;7990:6;7974:14;7937:60;:::i;:::-;7923:74;;;8045:6;8038:5;8034:18;8028:25;8062:58;8112:6;8107:3;8103:16;8087:14;6657:12;;6654:1;6643:27;;;6631:40;;6724:4;6713:16;;;6707:23;-1:-1:-1;;;;;6703:49:39;6687:14;;;6680:73;6816:4;6805:16;;;6799:23;6785:38;;6769:14;;6762:62;6571:259;8062:58;-1:-1:-1;8136:6:39;6835:1313;-1:-1:-1;;;6835:1313:39:o;8153:856::-;8214:3;8252:5;8246:12;8279:6;8274:3;8267:19;8311:4;8306:3;8302:14;8295:21;;8350:4;8343:5;8339:16;8373:1;8383:601;8397:6;8394:1;8391:13;8383:601;;;8456:13;;8540:9;;8537:1;8526:24;8514:37;;8605:4;8597:13;;;8591:20;-1:-1:-1;;;;;8587:46:39;;;8571:14;;;8564:70;8698:4;8690:13;;;8684:20;8677:28;8670:36;8654:14;;;8647:60;8771:4;8763:13;;;8757:20;8750:28;8743:36;8727:14;;;8720:60;8834:4;8826:13;;;8820:20;8816:46;8800:14;;;8793:70;;;;8621:3;8890:14;;;;8957:17;;;;8630:1;8412:9;8383:601;;;-1:-1:-1;9000:3:39;;8153:856;-1:-1:-1;;;;8153:856:39:o;9014:921::-;9080:3;9118:5;9112:12;9145:6;9140:3;9133:19;9177:4;9172:3;9168:14;9161:21;;9216:4;9209:5;9205:16;9239:1;9249:661;9263:6;9260:1;9257:13;9249:661;;;9328:6;9322:13;9366:1;9412:2;9406:9;9403:1;9392:24;9387:3;9380:37;9481:4;9477:2;9473:13;9467:20;9464:1;9453:35;9446:4;9441:3;9437:14;9430:59;9553:4;9549:2;9545:13;9539:20;9536:1;9525:35;9518:4;9513:3;9509:14;9502:59;9625:4;9621:2;9617:13;9611:20;9608:1;9597:35;9590:4;9585:3;9581:14;9574:59;9697:4;9693:2;9689:13;9683:20;9676:28;9669:36;9662:4;9657:3;9653:14;9646:60;9785:1;9781;9776:3;9772:11;9768:19;9760:4;9756:2;9752:13;9746:20;9742:46;9735:4;9730:3;9726:14;9719:70;9825:4;9820:3;9816:14;9802:28;;9850:10;9843:17;;;;9895:4;9887:6;9883:17;9873:27;;9285:1;9282;9278:9;9273:14;;9249:661;;9940:929;10003:3;10041:5;10035:12;10068:6;10063:3;10056:19;10100:4;10095:3;10091:14;10084:21;;10139:4;10132:5;10128:16;10162:1;10172:672;10186:6;10183:1;10180:13;10172:672;;;10251:6;10245:13;10289:1;10335:2;10329:9;10326:1;10315:24;10310:3;10303:37;10404:4;10400:2;10396:13;10390:20;10387:1;10376:35;10369:4;10364:3;10360:14;10353:59;10476:4;10472:2;10468:13;10462:20;10459:1;10448:35;10441:4;10436:3;10432:14;10425:59;10563:1;10559;10554:3;10550:11;10546:19;10538:4;10534:2;10530:13;10524:20;10520:46;10513:4;10508:3;10504:14;10497:70;10631:4;10627:2;10623:13;10617:20;10610:28;10603:36;10596:4;10591:3;10587:14;10580:60;10719:1;10715;10710:3;10706:11;10702:19;10694:4;10690:2;10686:13;10680:20;10676:46;10669:4;10664:3;10660:14;10653:70;10759:4;10754:3;10750:14;10736:28;;10784:10;10777:17;;;;10829:4;10821:6;10817:17;10807:27;;10208:1;10205;10201:9;10196:14;;10172:672;;10874:1384;10926:3;10970:5;10964:12;10997:6;10992:3;10985:19;11025:61;11078:6;11073:3;11069:16;11055:12;11025:61;:::i;:::-;11013:73;;11134:4;11127:5;11123:16;11117:23;11149:48;11191:4;11186:3;11182:14;11166;2730:1;2719:20;2707:33;;2655:91;11149:48;;11245:4;11238:5;11234:16;11228:23;11260:47;11301:4;11296:3;11292:14;11276;4571:13;4564:21;4552:34;;4501:91;11260:47;;11355:4;11348:5;11344:16;11338:23;11370:47;11411:4;11406:3;11402:14;11386;4571:13;4564:21;4552:34;;4501:91;11370:47;;11465:4;11458:5;11454:16;11448:23;11480:47;11521:4;11516:3;11512:14;11496;4571:13;4564:21;4552:34;;4501:91;11480:47;;11575:4;11568:5;11564:16;11558:23;11623:3;11617:4;11613:14;11606:4;11601:3;11597:14;11590:38;11651:58;11704:4;11688:14;11651:58;:::i;:::-;11637:72;;;11757:4;11750:5;11746:16;11740:23;11807:3;11799:6;11795:16;11788:4;11783:3;11779:14;11772:40;11835:65;11893:6;11877:14;11835:65;:::i;:::-;11821:79;;;11948:4;11941:5;11937:16;11931:23;11998:3;11990:6;11986:16;11979:4;11974:3;11970:14;11963:40;12026:62;12081:6;12065:14;12026:62;:::i;:::-;12012:76;;;12136:6;12129:5;12125:18;12119:25;12190:3;12182:6;12178:16;12169:6;12164:3;12160:16;12153:42;12211:41;12245:6;12229:14;12211:41;:::i;12263:346::-;12484:6;12481:1;12470:21;12459:9;12452:40;12528:2;12523;12512:9;12508:18;12501:30;12433:4;12548:55;12599:2;12588:9;12584:18;12576:6;12548:55;:::i;12614:118::-;12701:5;12698:1;12687:20;12680:5;12677:31;12667:59;;12722:1;12719;12712:12;12737:384;12803:6;12811;12864:2;12852:9;12843:7;12839:23;12835:32;12832:52;;;12880:1;12877;12870:12;12832:52;12919:9;12906:23;12938:31;12963:5;12938:31;:::i;:::-;12988:5;-1:-1:-1;13045:2:39;13030:18;;13017:32;13058:31;13017:32;13058:31;:::i;13126:1002::-;13369:6;13366:1;13355:21;13344:9;13337:40;13413:2;13408;13397:9;13393:18;13386:30;13318:4;13451:6;13445:13;13494:4;13489:2;13478:9;13474:18;13467:32;13522:62;13579:3;13568:9;13564:19;13550:12;13522:62;:::i;:::-;13508:76;;13652:2;13644:6;13640:15;13634:22;13631:1;13620:37;13615:2;13604:9;13600:18;13593:65;13740:1;13736;13731:3;13727:11;13723:19;13717:2;13709:6;13705:15;13699:22;13695:48;13689:3;13678:9;13674:19;13667:77;13813:2;13805:6;13801:15;13795:22;13792:1;13781:37;13775:3;13764:9;13760:19;13753:66;13868:3;13860:6;13856:16;13850:23;13943:2;13939:7;13927:9;13919:6;13915:22;13911:36;13904:4;13893:9;13889:20;13882:66;13971:41;14005:6;13989:14;13971:41;:::i;:::-;14086:3;14059:16;;;;14053:23;-1:-1:-1;;;;;14049:49:39;14043:3;14028:19;;;;14021:78;;;;-1:-1:-1;13957:55:39;;13126:1002;-1:-1:-1;;;13126:1002:39:o;14133:127::-;14194:10;14189:3;14185:20;14182:1;14175:31;14225:4;14222:1;14215:15;14249:4;14246:1;14239:15;14265:258;14338:4;14332:11;;;14370:17;;-1:-1:-1;;;;;14402:34:39;;14438:22;;;14399:62;14396:88;;;14464:18;;:::i;:::-;14500:4;14493:24;14265:258;:::o;14528:254::-;14601:2;14595:9;14643:4;14631:17;;-1:-1:-1;;;;;14663:34:39;;14699:22;;;14660:62;14657:88;;;14725:18;;:::i;14787:256::-;14860:2;14854:9;14902:6;14890:19;;-1:-1:-1;;;;;14924:34:39;;14960:22;;;14921:62;14918:88;;;14986:18;;:::i;15048:254::-;15121:2;15115:9;15163:4;15151:17;;-1:-1:-1;;;;;15183:34:39;;15219:22;;;15180:62;15177:88;;;15245:18;;:::i;15307:275::-;15378:2;15372:9;15443:2;15424:13;;-1:-1:-1;;15420:27:39;15408:40;;-1:-1:-1;;;;;15463:34:39;;15499:22;;;15460:62;15457:88;;;15525:18;;:::i;:::-;15561:2;15554:22;15307:275;;-1:-1:-1;15307:275:39:o;15587:183::-;15647:4;-1:-1:-1;;;;;15672:6:39;15669:30;15666:56;;;15702:18;;:::i;:::-;-1:-1:-1;15747:1:39;15743:14;15759:4;15739:25;;15587:183::o;15775:744::-;15829:5;15882:3;15875:4;15867:6;15863:17;15859:27;15849:55;;15900:1;15897;15890:12;15849:55;15940:6;15927:20;15967:64;15983:47;16023:6;15983:47;:::i;:::-;15967:64;:::i;:::-;16055:3;16079:6;16074:3;16067:19;16111:4;16106:3;16102:14;16095:21;;16172:4;16162:6;16159:1;16155:14;16147:6;16143:27;16139:38;16125:52;;16200:3;16192:6;16189:15;16186:35;;;16217:1;16214;16207:12;16186:35;16253:4;16245:6;16241:17;16267:221;16283:6;16278:3;16275:15;16267:221;;;16365:3;16352:17;16382:31;16407:5;16382:31;:::i;:::-;16426:18;;16473:4;16464:14;;;;16300;16267:221;;;-1:-1:-1;16506:7:39;15775:744;-1:-1:-1;;;;;15775:744:39:o;16524:483::-;16617:6;16625;16678:2;16666:9;16657:7;16653:23;16649:32;16646:52;;;16694:1;16691;16684:12;16646:52;16733:9;16720:23;16752:31;16777:5;16752:31;:::i;:::-;16802:5;-1:-1:-1;16858:2:39;16843:18;;16830:32;-1:-1:-1;;;;;16874:30:39;;16871:50;;;16917:1;16914;16907:12;16871:50;16940:61;16993:7;16984:6;16973:9;16969:22;16940:61;:::i;:::-;16930:71;;;16524:483;;;;;:::o;17012:343::-;17231:6;17228:1;17217:21;17206:9;17199:40;17275:2;17270;17259:9;17255:18;17248:30;17180:4;17295:54;17345:2;17334:9;17330:18;17322:6;17295:54;:::i;17360:553::-;17597:6;17594:1;17583:21;17572:9;17565:40;17641:2;17636;17625:9;17621:18;17614:30;17546:4;17679:6;17673:13;17722:2;17717;17706:9;17702:18;17695:30;17748:62;17805:3;17794:9;17790:19;17776:12;17748:62;:::i;:::-;17734:76;;17878:2;17870:6;17866:15;17860:22;17857:1;17846:37;17841:2;17830:9;17826:18;17819:65;17901:6;17893:14;;;17360:553;;;;;:::o;17918:740::-;17970:5;18023:3;18016:4;18008:6;18004:17;18000:27;17990:55;;18041:1;18038;18031:12;17990:55;18081:6;18068:20;18108:64;18124:47;18164:6;18124:47;:::i;18108:64::-;18196:3;18220:6;18215:3;18208:19;18252:4;18247:3;18243:14;18236:21;;18313:4;18303:6;18300:1;18296:14;18288:6;18284:27;18280:38;18266:52;;18341:3;18333:6;18330:15;18327:35;;;18358:1;18355;18348:12;18327:35;18394:4;18386:6;18382:17;18408:219;18424:6;18419:3;18416:15;18408:219;;;18506:3;18493:17;18523:29;18546:5;18523:29;:::i;:::-;18565:18;;18612:4;18603:14;;;;18441;18408:219;;18663:721;18788:6;18796;18804;18857:2;18845:9;18836:7;18832:23;18828:32;18825:52;;;18873:1;18870;18863:12;18825:52;18912:9;18899:23;18931:31;18956:5;18931:31;:::i;:::-;18981:5;-1:-1:-1;19037:2:39;19022:18;;19009:32;-1:-1:-1;;;;;19053:30:39;;19050:50;;;19096:1;19093;19086:12;19050:50;19119:61;19172:7;19163:6;19152:9;19148:22;19119:61;:::i;:::-;19109:71;;;19233:2;19222:9;19218:18;19205:32;-1:-1:-1;;;;;19252:8:39;19249:32;19246:52;;;19294:1;19291;19284:12;19246:52;19317:61;19370:7;19359:8;19348:9;19344:24;19317:61;:::i;:::-;19307:71;;;18663:721;;;;;:::o;19664:954::-;20207:6;20204:1;20193:21;20182:9;20175:40;20251:3;20246:2;20235:9;20231:18;20224:31;20156:4;20278:65;20338:3;20327:9;20323:19;20315:6;20278:65;:::i;:::-;20391:9;20383:6;20379:22;20374:2;20363:9;20359:18;20352:50;20425:57;20475:6;20467;20425:57;:::i;:::-;20411:71;;20530:9;20522:6;20518:22;20513:2;20502:9;20498:18;20491:50;20558:54;20605:6;20597;20558:54;:::i;20623:326::-;20871:1;20860:21;;;20842:40;;20829:3;20814:19;;20891:52;20939:2;20924:18;;20916:6;6657:12;;6654:1;6643:27;;;6631:40;;6724:4;6713:16;;;6707:23;-1:-1:-1;;;;;6703:49:39;6687:14;;;6680:73;6816:4;6805:16;;;6799:23;6785:38;;6769:14;;6762:62;6571:259;20954:616;21052:6;21060;21068;21121:2;21109:9;21100:7;21096:23;21092:32;21089:52;;;21137:1;21134;21127:12;21089:52;21176:9;21163:23;21195:31;21220:5;21195:31;:::i;:::-;21245:5;-1:-1:-1;21302:2:39;21287:18;;21274:32;21315:31;21274:32;21315:31;:::i;:::-;21365:7;-1:-1:-1;21423:2:39;21408:18;;21395:32;-1:-1:-1;;;;;21439:30:39;;21436:50;;;21482:1;21479;21472:12;22047:186;22095:4;-1:-1:-1;;;;;22120:6:39;22117:30;22114:56;;;22150:18;;:::i;:::-;-1:-1:-1;22216:2:39;22195:15;-1:-1:-1;;22191:29:39;22222:4;22187:40;;22047:186::o;22238:1759::-;22347:6;22355;22363;22416:2;22404:9;22395:7;22391:23;22387:32;22384:52;;;22432:1;22429;22422:12;22384:52;22471:9;22458:23;22490:31;22515:5;22490:31;:::i;:::-;22540:5;-1:-1:-1;22597:2:39;22582:18;;22569:32;22610:31;22569:32;22610:31;:::i;:::-;22660:7;-1:-1:-1;22718:2:39;22703:18;;22690:32;-1:-1:-1;;;;;22734:30:39;;22731:50;;;22777:1;22774;22767:12;22731:50;22800:22;;22853:4;22845:13;;22841:27;-1:-1:-1;22831:55:39;;22882:1;22879;22872:12;22831:55;22922:2;22909:16;22945:64;22961:47;23001:6;22961:47;:::i;22945:64::-;23031:3;23055:6;23050:3;23043:19;23087:2;23082:3;23078:12;23071:19;;23142:2;23132:6;23129:1;23125:14;23121:2;23117:23;23113:32;23099:46;;23168:7;23160:6;23157:19;23154:39;;;23189:1;23186;23179:12;23154:39;23221:2;23217;23213:11;23233:734;23249:6;23244:3;23241:15;23233:734;;;23335:3;23322:17;-1:-1:-1;;;;;23358:11:39;23355:35;23352:55;;;23403:1;23400;23393:12;23352:55;23430:20;;23485:2;23477:11;;23473:25;-1:-1:-1;23463:53:39;;23512:1;23509;23502:12;23463:53;23566:2;23562;23558:11;23545:25;23598:54;23614:37;23642:8;23614:37;:::i;23598:54::-;23665:25;;;23709:35;23717:17;;;23709:35;23706:48;-1:-1:-1;23703:68:39;;;23767:1;23764;23757:12;23703:68;23828:8;23823:2;23819;23815:11;23810:2;23801:7;23797:16;23784:53;23890:1;23885:2;23874:8;23865:7;23861:22;23857:31;23850:42;23917:7;23912:3;23905:20;;;;23954:2;23949:3;23945:12;23938:19;;23275:2;23270:3;23266:12;23259:19;;23233:734;;;23237:3;23986:5;23976:15;;;;;;22238:1759;;;;;:::o;24002:787::-;24188:4;24236:2;24225:9;24221:18;24280:6;24277:1;24266:21;24255:9;24248:40;24338:6;24335:1;24324:21;24319:2;24308:9;24304:18;24297:49;24382:2;24377;24366:9;24362:18;24355:30;24405:6;24440;24434:13;24471:6;24463;24456:22;24509:3;24498:9;24494:19;24487:26;;24548:2;24540:6;24536:15;24522:29;;24569:1;24579:184;24593:6;24590:1;24587:13;24579:184;;;24668:13;;24665:1;24654:28;24642:41;;24712:2;24738:15;;;;24703:12;;;;24615:1;24608:9;24579:184;;;-1:-1:-1;24780:3:39;;24002:787;-1:-1:-1;;;;;;;24002:787:39:o;24794:529::-;24871:6;24879;24887;24940:2;24928:9;24919:7;24915:23;24911:32;24908:52;;;24956:1;24953;24946:12;24908:52;24995:9;24982:23;25014:31;25039:5;25014:31;:::i;:::-;25064:5;-1:-1:-1;25121:2:39;25106:18;;25093:32;25134:33;25093:32;25134:33;:::i;:::-;25186:7;-1:-1:-1;25245:2:39;25230:18;;25217:32;25258:33;25217:32;25258:33;:::i;:::-;25310:7;25300:17;;;24794:529;;;;;:::o;25328:380::-;25407:1;25403:12;;;;25450;;;25471:61;;25525:4;25517:6;25513:17;25503:27;;25471:61;25578:2;25570:6;25567:14;25547:18;25544:38;25541:161;;25624:10;25619:3;25615:20;25612:1;25605:31;25659:4;25656:1;25649:15;25687:4;25684:1;25677:15;25541:161;;25328:380;;;:::o;25713:680::-;25766:3;25807:5;25801:12;25836:36;25862:9;25836:36;:::i;:::-;25903:1;25888:17;;25914:133;;;;26061:1;26056:331;;;;25881:506;;25914:133;-1:-1:-1;;25947:24:39;;25935:37;;26020:14;;26013:22;26001:35;;25992:45;;;-1:-1:-1;25914:133:39;;26056:331;26087:5;26084:1;26077:16;26134:4;26131:1;26121:18;26161:1;26175:166;26189:6;26186:1;26183:13;26175:166;;;26269:14;;26256:11;;;26249:35;26325:1;26312:15;;;;26211:4;26204:12;26175:166;;;26179:3;;26370:6;26365:3;26361:16;26354:23;;25881:506;;;;25713:680;;;;:::o;26398:202::-;26528:3;26553:41;26590:3;26582:6;26553:41;:::i;27409:739::-;27459:3;27500:5;27494:12;27529:36;27555:9;27529:36;:::i;:::-;27574:19;;;27624:1;27609:17;;27635:150;;;;27799:1;27794:348;;;;27602:540;;27635:150;27698:3;27694:8;27683:9;27679:24;27672:4;27667:3;27663:14;27656:48;27770:4;27758:6;27751:14;27744:22;27741:1;27737:30;27732:3;27728:40;27724:51;27717:58;;27635:150;;27794:348;27825:5;27822:1;27815:16;27872:4;27869:1;27859:18;27899:1;27913:177;27927:6;27924:1;27921:13;27913:177;;;28024:7;28018:14;28011:4;28007:1;28002:3;27998:11;27994:22;27987:46;28074:1;28065:7;28061:15;28050:26;;27949:4;27946:1;27942:12;27937:17;;27913:177;;;28114:11;;28127:4;28110:22;;-1:-1:-1;;27602:540:39;;;27409:739;;;;:::o;28295:1237::-;28364:3;28395;28427:5;28421:12;28454:6;28449:3;28442:19;28486:4;28481:3;28477:14;28470:21;;28544:4;28534:6;28531:1;28527:14;28520:5;28516:26;28512:37;28568:5;28565:1;28558:16;28610:4;28607:1;28597:18;28633:1;28643:863;28657:6;28654:1;28651:13;28643:863;;;28722:16;;;-1:-1:-1;;28718:30:39;28706:43;;28775:13;;28762:27;;28826:4;28819;28809:15;;28802:29;;;28879:1;28867:14;;28861:21;28948:4;28933:20;;28926:28;28919:36;28902:15;;;28895:61;;;;29001:1;28997:17;-1:-1:-1;;;;;28993:43:39;28986:4;28976:15;;28969:68;29024:3;29067:4;29057:15;;29050:29;29106:60;29161:3;29151:14;;29144:4;29132:17;;29106:60;:::i;:::-;29207:17;;;-1:-1:-1;;29203:31:39;29196:4;29186:15;;29179:56;29262:52;29211:6;29300:4;29288:17;;29262:52;:::i;:::-;29372:1;29360:14;;29354:21;-1:-1:-1;;;;;29350:47:39;29344:3;29334:14;;;;29327:71;;;;-1:-1:-1;29491:4:39;29482:14;;;;;29460:1;29448:14;;;;29394:1;28672:9;28643:863;;29837:1068;29929:6;29924:3;29917:19;29899:3;29957:50;29999:6;29994:3;29990:16;29983:5;29957:50;:::i;:::-;30049:3;30043:4;30039:14;30032:4;30027:3;30023:14;30016:38;30077:49;30121:4;30114;30107:5;30103:16;30077:49;:::i;:::-;30063:63;;30155:66;30214:4;30207:5;30203:16;30197:23;-1:-1:-1;;;;;28248:36:39;;28153:137;30155:66;-1:-1:-1;;;;;2817:31:39;30272:4;30263:14;;2805:44;30310:16;;;30303:4;30294:14;;30287:40;30350:51;30314:6;30387:4;30376:16;;30350:51;:::i;:::-;30336:65;;30444:4;30437:5;30433:16;30427:23;30459:53;30506:4;30501:3;30497:14;30490:4;30479:9;30475:20;4571:13;4564:21;4552:34;;4501:91;30459:53;30556:1;30552:17;;;30549:1;30538:32;30581:4;30572:14;;2707:33;30596:62;30652:4;30647:3;30643:14;30636:4;30624:9;30620:2;30616:18;30612:29;4571:13;4564:21;4552:34;;4501:91;30596:62;;30702:3;30694:6;30690:16;30683:4;30678:3;30674:14;30667:40;30730:70;30793:6;30786:4;30779:5;30775:16;30730:70;:::i;:::-;30716:84;;30809:68;30869:6;30864:3;30860:16;30853:4;30846:5;30842:16;29622:12;;29666:1;29655:24;;;29643:37;;29720:2;29716:18;;;-1:-1:-1;;;;;29712:44:39;29705:4;29696:14;;29689:68;29753:1;29807:16;;;29801:23;29787:38;;;29773:12;;29766:60;29537:295;30910:915;30979:3;31017:5;31011:12;31044:6;31039:3;31032:19;31076:4;31071:3;31067:14;31060:21;;31100:5;31097:1;31090:16;31142:4;31139:1;31129:18;31165:1;31175:625;31189:6;31186:1;31183:13;31175:625;;;31287:13;;31336:1;31325:24;;;31313:37;;31394:2;31390:18;;;-1:-1:-1;;;;;31386:44:39;;;31379:4;31370:14;;31363:68;31487:3;31483:19;;;31504:4;31479:30;;;31472:38;31465:46;31451:12;;;31444:68;;;;31570:3;31566:19;;;;31562:30;31555:38;31548:46;31541:4;31532:14;;31525:70;31427:1;31641:14;;;31635:21;31631:47;;;31624:4;31615:14;;31608:71;31418:3;31706:14;;;;31785:4;31773:17;;;;31204:9;31175:625;;31830:1014;31904:3;31942:5;31936:12;31969:6;31964:3;31957:19;32001:4;31996:3;31992:14;31985:21;;32025:5;32022:1;32015:16;32067:4;32064:1;32054:18;32090:1;32100:719;32114:6;32111:1;32108:13;32100:719;;;32181:1;32218:6;32212:13;32264:9;32261:1;32250:24;32245:3;32238:37;32333:9;32329:2;32325:18;32322:1;32311:33;32304:4;32299:3;32295:14;32288:57;32402:9;32397:3;32393:19;32390:1;32379:34;32374:2;32369:3;32365:12;32358:56;32473:9;32468:3;32464:19;32461:1;32450:34;32443:4;32438:3;32434:14;32427:58;;32535:1;32527:6;32523:14;32517:21;32551:54;32600:3;32595;32591:13;32584:4;32571:11;32567:22;4571:13;4564:21;4552:34;;4501:91;32551:54;32645:1;32641:19;-1:-1:-1;;;;;32637:45:39;32693:4;32684:14;;2805:44;-1:-1:-1;32735:3:39;32726:13;;;;32804:4;32792:17;;;;;32136:1;32129:9;32100:719;;32849:1091;32920:3;32958:5;32952:12;32985:6;32980:3;32973:19;33017:4;33012:3;33008:14;33001:21;;33041:5;33038:1;33031:16;33083:4;33080:1;33070:18;33106:1;33116:799;33130:6;33127:1;33124:13;33116:799;;;33197:1;33234:6;33228:13;33280:9;33277:1;33266:24;33261:3;33254:37;33349:9;33345:2;33341:18;33338:1;33327:33;33320:4;33315:3;33311:14;33304:57;33418:9;33413:3;33409:19;33406:1;33395:34;33390:2;33385:3;33381:12;33374:56;;33480:1;33472:6;33468:14;33462:21;33553:1;33549;33544:3;33540:11;33536:19;33523:11;33519:37;33512:4;33507:3;33503:14;33496:61;33570:64;33629:3;33624;33620:13;33613:4;33599:11;33594:3;33590:21;33586:32;4571:13;4564:21;4552:34;;4501:91;33570:64;-1:-1:-1;;33727:4:39;33715:17;;33709:24;-1:-1:-1;;;;;28248:36:39;33789:3;33780:13;;2805:44;33830:4;33821:14;;;;33900:4;33888:17;;;;33152:1;33145:9;33116:799;;33945:1416;34172:4;34164:6;34160:17;34149:9;34142:36;34214:2;34209;34198:9;34194:18;34187:30;34253:6;34248:2;34237:9;34233:18;34226:34;34123:4;34283:66;34344:3;34333:9;34329:19;34321:6;34283:66;:::i;:::-;34393:4;34381:17;;34375:24;34436:1;34425:24;;;34466:2;34451:18;;2707:33;34479:67;34541:3;34530:9;34526:19;34519:4;34507:9;34503:2;34499:18;34495:29;4571:13;4564:21;4552:34;;4501:91;34479:67;34555;34617:3;34606:9;34602:19;34595:4;34583:9;34579:2;34575:18;34571:29;4571:13;4564:21;4552:34;;4501:91;34555:67;34631;34693:3;34682:9;34678:19;34671:4;34659:9;34655:2;34651:18;34647:29;4571:13;4564:21;4552:34;;4501:91;34631:67;-1:-1:-1;34739:22:39;;;-1:-1:-1;;34735:36:39;34729:3;34714:19;;34707:65;34795:71;34743:6;34852:4;34840:17;;34795:71;:::i;:::-;34907:22;;;-1:-1:-1;;34903:36:39;34897:3;34882:19;;34875:65;34781:85;-1:-1:-1;34963:76:39;34781:85;35025:4;35013:17;;34963:76;:::i;:::-;35083:22;;;-1:-1:-1;;35079:36:39;35070:6;35055:22;;35048:68;34949:90;-1:-1:-1;35139:73:39;34949:90;35198:4;35186:17;;35139:73;:::i;:::-;35253:22;;;-1:-1:-1;;35249:36:39;35243:3;35228:19;;35221:65;35125:87;-1:-1:-1;35303:52:39;35125:87;35341:4;35329:17;;35303:52;:::i;35774:967::-;36308:4;36300:6;36296:17;36285:9;36278:36;36350:3;36345:2;36334:9;36330:18;36323:31;36259:4;36377:73;36445:3;36434:9;36430:19;36422:6;36377:73;:::i;:::-;36498:9;36490:6;36486:22;36481:2;36470:9;36466:18;36459:50;36532:65;36590:6;36582;36532:65;:::i;:::-;36518:79;;36645:9;36637:6;36633:22;36628:2;36617:9;36613:18;36606:50;36673:62;36728:6;36720;36673:62;:::i;38266:338::-;38523:4;38511:17;;38493:36;;38480:3;38465:19;;38538:60;38594:2;38579:18;;38571:6;29622:12;;29666:1;29655:24;;;29643:37;;29720:2;29716:18;;;-1:-1:-1;;;;;29712:44:39;29705:4;29696:14;;29689:68;29753:1;29807:16;;;29801:23;29787:38;;;29773:12;;29766:60;29537:295;40863:255;40983:19;;41022:2;41014:11;;41011:101;;;-1:-1:-1;;41083:2:39;41079:12;;;41076:1;41072:20;41068:33;41057:45;40863:255;;;;:::o;41726:347::-;41928:2;41910:21;;;41967:2;41947:18;;;41940:30;42006:25;42001:2;41986:18;;41979:53;42064:2;42049:18;;41726:347::o;42615:138::-;42694:13;;42716:31;42694:13;42716:31;:::i;:::-;42615:138;;;:::o;42758:251::-;42828:6;42881:2;42869:9;42860:7;42856:23;42852:32;42849:52;;;42897:1;42894;42887:12;42849:52;42929:9;42923:16;42948:31;42973:5;42948:31;:::i;43014:127::-;43075:10;43070:3;43066:20;43063:1;43056:31;43106:4;43103:1;43096:15;43130:4;43127:1;43120:15;43146:127;43207:10;43202:3;43198:20;43195:1;43188:31;43238:4;43235:1;43228:15;43262:4;43259:1;43252:15;43278:125;43343:9;;;43364:10;;;43361:36;;;43377:18;;:::i;43768:128::-;43835:9;;;43856:11;;;43853:37;;;43870:18;;:::i;44109:301::-;44238:3;44276:6;44270:13;44322:6;44315:4;44307:6;44303:17;44298:3;44292:37;44384:1;44348:16;;44373:13;;;-1:-1:-1;44348:16:39;44109:301;-1:-1:-1;44109:301:39:o;44771:134::-;44848:13;;44870:29;44848:13;44870:29;:::i;44910:514::-;44964:5;45017:3;45010:4;45002:6;44998:17;44994:27;44984:55;;45035:1;45032;45025:12;44984:55;45068:6;45062:13;45107:4;45099:6;45095:17;45136:1;45157:52;45173:35;45201:6;45173:35;:::i;45157:52::-;45146:63;;45234:6;45225:7;45218:23;45274:3;45265:6;45260:3;45256:16;45253:25;45250:45;;;45291:1;45288;45281:12;45250:45;45335:6;45330:3;45323:4;45314:7;45310:18;45304:38;45391:1;45362:20;;;45384:4;45358:31;45351:42;;;;-1:-1:-1;45366:7:39;44910:514;-1:-1:-1;;;44910:514:39:o;45429:164::-;45505:13;;45554;;45547:21;45537:32;;45527:60;;45583:1;45580;45573:12;45598:2123;45671:5;45724:3;45717:4;45709:6;45705:17;45701:27;45691:55;;45742:1;45739;45732:12;45691:55;45775:6;45769:13;45802:64;45818:47;45858:6;45818:47;:::i;45802:64::-;45890:3;45914:6;45909:3;45902:19;45946:4;45941:3;45937:14;45930:21;;46007:4;45997:6;45994:1;45990:14;45982:6;45978:27;45974:38;45960:52;;46035:3;46027:6;46024:15;46021:35;;;46052:1;46049;46042:12;46021:35;46088:4;46080:6;46076:17;46102:1588;46118:6;46113:3;46110:15;46102:1588;;;46199:3;46193:10;-1:-1:-1;;;;;46222:11:39;46219:35;46216:55;;;46267:1;46264;46257:12;46216:55;46294:24;;46366:4;46342:12;;;-1:-1:-1;;46338:26:39;46334:37;46331:57;;;46384:1;46381;46374:12;46331:57;46414:23;;:::i;:::-;46504:4;46496:13;;46490:20;46523:22;;46588:4;46580:13;;46574:20;-1:-1:-1;;;;;46610:32:39;;46607:52;;;46655:1;46652;46645:12;46607:52;46705:4;46694:8;46690:2;46686:17;46682:28;46672:38;;;46744:4;46739:2;46734:3;46730:12;46726:23;46723:43;;;46762:1;46759;46752:12;46723:43;46794:23;;:::i;:::-;46846:30;46873:2;46846:30;:::i;:::-;46837:7;46830:47;46919:4;46915:2;46911:13;46905:20;46938:33;46963:7;46938:33;:::i;:::-;47004:4;46991:18;;46984:35;47062:4;47054:13;;47048:20;-1:-1:-1;;;;;47084:32:39;;47081:52;;;47129:1;47126;47119:12;47081:52;47173;47221:3;47210:8;47206:2;47202:17;47173:52;:::i;:::-;47166:4;47157:7;47153:18;47146:80;;47269:2;47265;47261:11;47255:18;-1:-1:-1;;;;;47292:8:39;47289:32;47286:52;;;47334:1;47331;47324:12;47286:52;47376;47424:3;47413:8;47409:2;47405:17;47376:52;:::i;:::-;47371:2;47362:7;47358:16;47351:78;;47471:3;47467:2;47463:12;47457:19;47442:34;;47489:33;47514:7;47489:33;:::i;:::-;47555:3;47542:17;;47535:34;;;;47600:4;47589:16;;;47582:33;;;;47628:18;;47666:14;;;;46135;46102:1588;;47726:762;47790:5;47838:4;47826:9;47821:3;47817:19;47813:30;47810:50;;;47856:1;47853;47846:12;47810:50;47909:2;47903:9;47951:4;47939:17;;-1:-1:-1;;;;;47971:34:39;;48007:22;;;47968:62;47965:88;;;48033:18;;:::i;:::-;48073:10;48069:2;48062:22;;48102:6;48093:15;;48138:9;48132:16;48157:31;48180:7;48157:31;:::i;:::-;48197:23;;48265:2;48250:18;;48244:25;48278:33;48244:25;48278:33;:::i;:::-;48339:2;48327:15;;48320:32;48397:2;48382:18;;48376:25;48410:31;48376:25;48410:31;:::i;:::-;48469:2;48457:15;;;;48450:32;47726:762;;-1:-1:-1;;47726:762:39:o;48493:1418::-;48562:5;48610:6;48598:9;48593:3;48589:19;48585:32;48582:52;;;48630:1;48627;48620:12;48582:52;48652:23;;:::i;:::-;48643:32;;48704:9;48698:16;-1:-1:-1;;;;;48729:6:39;48726:30;48723:50;;;48769:1;48766;48759:12;48723:50;48796:57;48849:3;48840:6;48829:9;48825:22;48796:57;:::i;:::-;48789:5;48782:72;;48900:2;48889:9;48885:18;48879:25;-1:-1:-1;;;;;48919:8:39;48916:32;48913:52;;;48961:1;48958;48951:12;48913:52;48997:59;49052:3;49041:8;49030:9;49026:24;48997:59;:::i;:::-;48992:2;48985:5;48981:14;48974:83;;49089:49;49134:2;49123:9;49119:18;49089:49;:::i;:::-;49084:2;49077:5;49073:14;49066:73;49185:2;49174:9;49170:18;49164:25;-1:-1:-1;;;;;49204:8:39;49201:32;49198:52;;;49246:1;49243;49236:12;49198:52;49282:59;49337:3;49326:8;49315:9;49311:24;49282:59;:::i;:::-;49277:2;49270:5;49266:14;49259:83;;49375:47;49417:3;49406:9;49402:19;49375:47;:::i;:::-;49369:3;49362:5;49358:15;49351:72;49456:48;49499:3;49488:9;49484:19;49456:48;:::i;:::-;49450:3;49443:5;49439:15;49432:73;49538:47;49580:3;49569:9;49565:19;49538:47;:::i;:::-;49532:3;49525:5;49521:15;49514:72;49632:3;49621:9;49617:19;49611:26;-1:-1:-1;;;;;49652:8:39;49649:32;49646:52;;;49694:1;49691;49684:12;49646:52;49731:78;49805:3;49794:8;49783:9;49779:24;49731:78;:::i;:::-;49725:3;49718:5;49714:15;49707:103;;49843:61;49900:3;49894;49883:9;49879:19;49843:61;:::i;:::-;49837:3;49830:5;49826:15;49819:86;48493:1418;;;;:::o;49916:1329::-;49989:5;50042:3;50035:4;50027:6;50023:17;50019:27;50009:55;;50060:1;50057;50050:12;50009:55;50093:6;50087:13;50120:64;50136:47;50176:6;50136:47;:::i;50120:64::-;50208:3;50232:6;50227:3;50220:19;50264:4;50259:3;50255:14;50248:21;;50328:4;50320;50312:6;50308:17;50300:6;50296:30;50292:41;50278:55;;50356:3;50348:6;50345:15;50342:35;;;50373:1;50370;50363:12;50342:35;50409:4;50401:6;50397:17;50423:791;50439:6;50434:3;50431:15;50423:791;;;50517:4;50511:3;50506;50502:13;50498:24;50495:44;;;50535:1;50532;50525:12;50495:44;50565:23;;:::i;:::-;50622:3;50616:10;50639:31;50662:7;50639:31;:::i;:::-;50683:22;;50748:4;50739:14;;50733:21;50767:33;50733:21;50767:33;:::i;:::-;50831:4;50820:16;;50813:33;50882:40;50918:2;50909:12;;50882:40;:::i;:::-;50877:2;50870:5;50866:14;50859:64;50959:40;50995:2;50990:3;50986:12;50959:40;:::i;:::-;50954:2;50947:5;50943:14;50936:64;51043:3;51038;51034:13;51028:20;51061:33;51086:7;51061:33;:::i;:::-;51125:3;51114:15;;51107:32;51152:18;;51199:4;51190:14;;;;50465:4;50456:14;50423:791;;51250:1527;51328:5;51381:3;51374:4;51366:6;51362:17;51358:27;51348:55;;51399:1;51396;51389:12;51348:55;51432:6;51426:13;51459:64;51475:47;51515:6;51475:47;:::i;51459:64::-;51547:3;51571:6;51566:3;51559:19;51603:4;51598:3;51594:14;51587:21;;51667:4;51659;51651:6;51647:17;51639:6;51635:30;51631:41;51617:55;;51695:3;51687:6;51684:15;51681:35;;;51712:1;51709;51702:12;51681:35;51748:4;51740:6;51736:17;51762:984;51778:6;51773:3;51770:15;51762:984;;;51856:4;51850:3;51845;51841:13;51837:24;51834:44;;;51874:1;51871;51864:12;51834:44;51904:23;;:::i;:::-;51961:3;51955:10;51978:31;52001:7;51978:31;:::i;:::-;52022:22;;52087:4;52078:14;;52072:21;52106:31;52072:21;52106:31;:::i;:::-;52168:4;52157:16;;52150:33;52226:2;52217:12;;52211:19;52243:31;52211:19;52243:31;:::i;:::-;52305:2;52294:14;;52287:31;52361:2;52352:12;;52346:19;52378:31;52346:19;52378:31;:::i;:::-;52440:2;52429:14;;52422:31;52490:41;52526:3;52517:13;;52490:41;:::i;:::-;52484:3;52477:5;52473:15;52466:66;52575:3;52570;52566:13;52560:20;52593:33;52618:7;52593:33;:::i;:::-;52657:3;52646:15;;52639:32;52684:18;;52731:4;52722:14;;;;51804:4;51795:14;51762:984;;52782:1526;52857:5;52910:3;52903:4;52895:6;52891:17;52887:27;52877:55;;52928:1;52925;52918:12;52877:55;52961:6;52955:13;52988:64;53004:47;53044:6;53004:47;:::i;52988:64::-;53076:3;53100:6;53095:3;53088:19;53132:4;53127:3;53123:14;53116:21;;53196:4;53188;53180:6;53176:17;53168:6;53164:30;53160:41;53146:55;;53224:3;53216:6;53213:15;53210:35;;;53241:1;53238;53231:12;53210:35;53277:4;53269:6;53265:17;53291:986;53307:6;53302:3;53299:15;53291:986;;;53385:4;53379:3;53374;53370:13;53366:24;53363:44;;;53403:1;53400;53393:12;53363:44;53433:23;;:::i;:::-;53490:3;53484:10;53507:31;53530:7;53507:31;:::i;:::-;53551:22;;53616:4;53607:14;;53601:21;53635:31;53601:21;53635:31;:::i;:::-;53697:4;53686:16;;53679:33;53755:2;53746:12;;53740:19;53772:31;53740:19;53772:31;:::i;:::-;53834:2;53823:14;;53816:31;53890:2;53881:12;;53875:19;53907:33;53875:19;53907:33;:::i;:::-;53971:2;53960:14;;53953:31;54021:41;54057:3;54048:13;;54021:41;:::i;:::-;54015:3;54008:5;54004:15;53997:66;54106:3;54101;54097:13;54091:20;54124:33;54149:7;54124:33;:::i;:::-;54188:3;54177:15;;54170:32;54215:18;;54262:4;54253:14;;;;53333:4;53324:14;53291:986;;54313:1910;54417:6;54425;54478:2;54466:9;54457:7;54453:23;54449:32;54446:52;;;54494:1;54491;54484:12;54446:52;54526:9;54520:16;54545:29;54568:5;54545:29;:::i;:::-;54642:2;54627:18;;54621:25;54593:5;;-1:-1:-1;;;;;;54658:30:39;;54655:50;;;54701:1;54698;54691:12;54655:50;54724:22;;54780:6;54762:16;;;54758:29;54755:49;;;54800:1;54797;54790:12;54755:49;54828:23;;:::i;:::-;54882:2;54876:9;-1:-1:-1;;;;;54900:8:39;54897:32;54894:52;;;54942:1;54939;54932:12;54894:52;54971:68;55031:7;55020:8;55016:2;55012:17;54971:68;:::i;:::-;54962:7;54955:85;;55074:40;55110:2;55106;55102:11;55074:40;:::i;:::-;55069:2;55060:7;55056:16;55049:66;55149:39;55184:2;55180;55176:11;55149:39;:::i;:::-;55144:2;55135:7;55131:16;55124:65;55223:39;55258:2;55254;55250:11;55223:39;:::i;:::-;55218:2;55209:7;55205:16;55198:65;55298:40;55333:3;55329:2;55325:12;55298:40;:::i;:::-;55292:3;55283:7;55279:17;55272:67;55378:3;55374:2;55370:12;55364:19;-1:-1:-1;;;;;55398:8:39;55395:32;55392:52;;;55440:1;55437;55430:12;55392:52;55479:75;55546:7;55535:8;55531:2;55527:17;55479:75;:::i;:::-;55473:3;55464:7;55460:17;55453:102;;55594:3;55590:2;55586:12;55580:19;-1:-1:-1;;;;;55614:8:39;55611:32;55608:52;;;55656:1;55653;55646:12;55608:52;55695:80;55767:7;55756:8;55752:2;55748:17;55695:80;:::i;:::-;55689:3;55680:7;55676:17;55669:107;;55815:3;55811:2;55807:12;55801:19;-1:-1:-1;;;;;55835:8:39;55832:32;55829:52;;;55877:1;55874;55867:12;55829:52;55916:77;55985:7;55974:8;55970:2;55966:17;55916:77;:::i;:::-;55910:3;55901:7;55897:17;55890:104;;56033:3;56029:2;56025:12;56019:19;-1:-1:-1;;;;;56053:8:39;56050:32;56047:52;;;56095:1;56092;56085:12;56047:52;56134:56;56182:7;56171:8;56167:2;56163:17;56134:56;:::i;:::-;56128:3;56119:7;56115:17;56108:83;;56210:7;56200:17;;;;54313:1910;;;;;:::o;58629:247::-;58697:6;58750:2;58738:9;58729:7;58725:23;58721:32;58718:52;;;58766:1;58763;58756:12;58718:52;58798:9;58792:16;58817:29;58840:5;58817:29;:::i;59702:326::-;59776:6;59784;59837:2;59825:9;59816:7;59812:23;59808:32;59805:52;;;59853:1;59850;59843:12;59805:52;59885:9;59879:16;59904:29;59927:5;59904:29;:::i;:::-;59952:5;-1:-1:-1;59976:46:39;60018:2;60003:18;;59976:46;:::i;:::-;59966:56;;59702:326;;;;;:::o;61613:273::-;61681:6;61734:2;61722:9;61713:7;61709:23;61705:32;61702:52;;;61750:1;61747;61740:12;61702:52;61782:9;61776:16;61832:4;61825:5;61821:16;61814:5;61811:27;61801:55;;61852:1;61849;61842:12;66237:409;66312:6;66320;66373:2;66361:9;66352:7;66348:23;66344:32;66341:52;;;66389:1;66386;66379:12;66341:52;66421:9;66415:16;66440:29;66463:5;66440:29;:::i;:::-;66488:5;66478:15;;;66538:2;66527:9;66523:18;66517:25;66587:7;66584:1;66573:22;66564:7;66561:35;66551:63;;66610:1;66607;66600:12;67466:1096;67721:6;67729;67737;67745;67798:3;67786:9;67777:7;67773:23;67769:33;67766:53;;;67815:1;67812;67805:12;67766:53;67847:9;67841:16;67866:29;67889:5;67866:29;:::i;:::-;67963:2;67948:18;;67942:25;67914:5;;-1:-1:-1;;;;;;67979:30:39;;67976:50;;;68022:1;68019;68012:12;67976:50;68045:80;68117:7;68108:6;68097:9;68093:22;68045:80;:::i;:::-;68035:90;;;68171:2;68160:9;68156:18;68150:25;-1:-1:-1;;;;;68190:8:39;68187:32;68184:52;;;68232:1;68229;68222:12;68184:52;68255:87;68334:7;68323:8;68312:9;68308:24;68255:87;:::i;:::-;68245:97;;;68388:2;68377:9;68373:18;68367:25;-1:-1:-1;;;;;68407:8:39;68404:32;68401:52;;;68449:1;68446;68439:12;68401:52;68472:84;68548:7;68537:8;68526:9;68522:24;68472:84;:::i;:::-;68462:94;;;67466:1096;;;;;;;:::o;68969:372::-;69070:6;69078;69131:3;69119:9;69110:7;69106:23;69102:33;69099:53;;;69148:1;69145;69138:12;69099:53;69180:9;69174:16;69199:29;69222:5;69199:29;:::i;:::-;69247:5;-1:-1:-1;69271:64:39;69327:7;69322:2;69307:18;;69271:64;:::i;70812:230::-;70882:6;70935:2;70923:9;70914:7;70910:23;70906:32;70903:52;;;70951:1;70948;70941:12;70903:52;-1:-1:-1;70996:16:39;;70812:230;-1:-1:-1;70812:230:39:o;71838:297::-;71956:12;;72003:4;71992:16;;;71986:23;;71956:12;72021:16;;72018:111;;;-1:-1:-1;;72095:4:39;72091:17;;;;72088:1;72084:25;72080:38;72069:50;;71838:297;-1:-1:-1;71838:297:39:o;74326:202::-;74393:6;74446:2;74434:9;74425:7;74421:23;74417:32;74414:52;;;74462:1;74459;74452:12;74414:52;74485:37;74512:9;74485:37;:::i;74533:280::-;74602:6;74655:2;74643:9;74634:7;74630:23;74626:32;74623:52;;;74671:1;74668;74661:12;74623:52;74703:9;74697:16;74753:10;74746:5;74742:22;74735:5;74732:33;74722:61;;74779:1;74776;74769:12;74818:410;-1:-1:-1;;;;;;75011:33:39;;;74999:46;;75082:2;75078:15;;;;-1:-1:-1;;75074:45:39;75070:1;75061:11;;75054:66;75027:3;75154:16;75150:43;;;75145:2;75136:12;;75129:65;75219:2;75210:12;;74818:410::o;75233:225::-;75379:2;75368:9;75361:21;75342:4;75399:53;75448:2;75437:9;75433:18;75425:6;75399:53;:::i;77802:220::-;77951:2;77940:9;77933:21;77914:4;77971:45;78012:2;78001:9;77997:18;77989:6;77971:45;:::i;83536:518::-;-1:-1:-1;;;;;;83755:33:39;;;83743:46;;83826:2;83822:15;;;;-1:-1:-1;;;;;;83818:53:39;83814:1;83805:11;;83798:74;83771:3;83906:16;;;83902:43;;83897:2;83888:12;;83881:65;83980:16;;83976:43;;;83971:2;83962:12;;83955:65;84045:2;84036:12;;83536:518::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "_update(address,address,uint256)": "0bb3bfa8",
        "associateToken(address,address)": "49146bde",
        "associateTokens(address,address[])": "2e63879b",
        "burnToken(address,int64,int64[])": "d6910d06",
        "dissociateToken(address,address)": "099794e8",
        "dissociateTokens(address,address[])": "78b63918",
        "getAccountId(address)": "e0b490f7",
        "getApproved(address,uint256)": "098f2366",
        "getFungibleTokenInfo(address)": "3f28a19b",
        "getNonFungibleTokenInfo(address,int64)": "287e1da8",
        "getTokenCustomFees(address)": "ae7611a0",
        "getTokenDefaultFreezeStatus(address)": "a7daa18d",
        "getTokenDefaultKycStatus(address)": "335e04c1",
        "getTokenExpiryInfo(address)": "d614cdb8",
        "getTokenInfo(address)": "1f69565f",
        "getTokenKey(address,uint256)": "3c4dd32e",
        "getTokenType(address)": "93272baf",
        "isApprovedForAll(address,address,address)": "f49f40db",
        "isToken(address)": "19f37361",
        "mintToken(address,int64,bytes[])": "e0f4059a",
        "transferTokens(address,address[],int64[])": "82bba493"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"associateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"associateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"\",\"type\":\"int64[]\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"dissociateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"dissociateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"accountId\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int32\",\"name\":\"decimals\",\"type\":\"int32\"}],\"internalType\":\"struct IHederaTokenService.FungibleTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"getNonFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"ownerId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"creationTime\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"spenderId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.NonFungibleTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultFreezeStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultKycStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenExpiryInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"getTokenKey\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accountId\",\"type\":\"address[]\"},{\"internalType\":\"int64[]\",\"name\":\"amount\",\"type\":\"int64[]\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"associateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"associateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be associated with the provided tokens\",\"tokens\":\"The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"dissociateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"dissociateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be dissociated from the provided tokens\",\"tokens\":\"The tokens to be dissociated from the provided account.\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getAccountId(address)\":{\"details\":\"Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties.\"},\"getApproved(address,uint256)\":{\"params\":{\"serialNumber\":\"The NFT to find the approved address for\",\"token\":\"The Hedera NFT token address to check approval\"},\"returns\":{\"approved\":\"The approved address for this NFT, or the zero address if there is none\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getFungibleTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"FungibleTokenInfo info for `token`\"}},\"getNonFungibleTokenInfo(address,int64)\":{\"params\":{\"serialNumber\":\"The NFT serialNumber to check\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"NonFungibleTokenInfo info for `token` `serialNumber`\"}},\"getTokenCustomFees(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"Set of fixed fees for `token`\",\"_2\":\"Set of fractional fees for `token`\",\"_3\":\"Set of royalty fees for `token`\"}},\"getTokenDefaultFreezeStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default freeze status is frozen.\"}},\"getTokenDefaultKycStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default kyc status is KycNotApplicable and false if Revoked.\"}},\"getTokenExpiryInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"Expiry info for `token`\"}},\"getTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"TokenInfo info for `token`\"}},\"getTokenKey(address,uint256)\":{\"params\":{\"keyType\":\"The keyType of the desired KeyValue\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"KeyValue info for key of type `keyType`\"}},\"getTokenType(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\"}},\"isApprovedForAll(address,address,address)\":{\"params\":{\"operator\":\"The address that acts on behalf of the owner\",\"owner\":\"The address that owns the NFTs\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `operator` is an approved operator for `owner`, false otherwise\"}},\"isToken(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if valid token found for the given address\"}},\"transferTokens(address,address[],int64[])\":{\"params\":{\"accountId\":\"account to do a transfer to/from\",\"amount\":\"The amount from the accountId at the same index\",\"token\":\"The ID of the token as a solidity address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"associateToken(address,address)\":{\"notice\":\"Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\"},\"associateTokens(address,address[])\":{\"notice\":\"Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens.\"},\"dissociateToken(address,address)\":{\"notice\":\"Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\"},\"dissociateTokens(address,address[])\":{\"notice\":\"Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed.\"},\"getApproved(address,uint256)\":{\"notice\":\"Get the approved address for a single NFT Only Applicable to NFT Tokens\"},\"getFungibleTokenInfo(address)\":{\"notice\":\"Query fungible token info\"},\"getNonFungibleTokenInfo(address,int64)\":{\"notice\":\"Query non fungible token info\"},\"getTokenCustomFees(address)\":{\"notice\":\"Query token custom fees\"},\"getTokenDefaultFreezeStatus(address)\":{\"notice\":\"Query token default freeze status\"},\"getTokenDefaultKycStatus(address)\":{\"notice\":\"Query token default kyc status\"},\"getTokenExpiryInfo(address)\":{\"notice\":\"Query token expiry info\"},\"getTokenInfo(address)\":{\"notice\":\"Query token info\"},\"getTokenKey(address,uint256)\":{\"notice\":\"Query token KeyValue\"},\"getTokenType(address)\":{\"notice\":\"Query to return the token type for a given address\"},\"isApprovedForAll(address,address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address Only Applicable to NFT Tokens\"},\"isToken(address)\":{\"notice\":\"Query if valid token found for the given address\"},\"transferTokens(address,address[],int64[])\":{\"notice\":\"Initiates a Fungible Token Transfer\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HtsSystemContract.sol\":\"HtsSystemContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":surl/=lib/surl/\"]},\"sources\":{\"contracts/HtsSystemContract.sol\":{\"keccak256\":\"0xd1a13f160b44f3fbfbf08bcc07ee69d8c4c3cf62541325257de0dbf420339c1a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fc587488440ab2670ac8adf96441eba1a7ddb3f5b5382d146937de9279ac3d07\",\"dweb:/ipfs/Qma48u2o6rJsZYCCNc6BmBesnHpey7utTbZqa3zg28gAEw\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x77993e2d90d6b91d30b8721a52364902d823dd5d1020500071c4ecd7f847a00e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://776be938a4f20b2b40e95a5d58f330454d21077894659a674ac8bda378561598\",\"dweb:/ipfs/QmToUenT2jKjiJLCozN3xQp2esRVbRceyS8KVMqcd9j29W\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0x7b4a961afb96ff6326f4d2985f20edf7aa10b3ba1b68c502a0cdcd84ba26e767\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://322d92f6a244dd8a9818d5be6e4e17c6dd048a033449dd79b43229c7077da06d\",\"dweb:/ipfs/QmdFyC7EU8iGiyFzh77YsUpp6eysV8ijyLUKWsDPVKq7yG\"]},\"contracts/IHRC719.sol\":{\"keccak256\":\"0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d\",\"dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD\"]},\"contracts/IHederaTokenService.sol\":{\"keccak256\":\"0x04e6d5e8b6b57e7ce072c3555d29e531ad38c964ac9caa89bea3d4409d4dd55d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://15f1b5b0a5f5eef75ae23c1825cb79a1914af36d60ede3f76a62272d25d02579\",\"dweb:/ipfs/Qma6DzrPLbEWsmoJBxjp5GwhkxkwupnTyA5h4fHa1MVryV\"]}},\"version\":1}",
    "metadata": {
        "compiler": { "version": "0.8.28+commit.7893614a" },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "approved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ApprovalForAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                { "inputs": [], "stateMutability": "nonpayable", "type": "fallback" },
                {
                    "inputs": [
                        { "internalType": "address", "name": "from", "type": "address" },
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "amount", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "_update"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address", "name": "token", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "associateToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address[]", "name": "tokens", "type": "address[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "associateTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "int64[]", "name": "", "type": "int64[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address", "name": "token", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "dissociateToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address[]", "name": "tokens", "type": "address[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "dissociateTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAccountId",
                    "outputs": [{ "internalType": "uint32", "name": "accountId", "type": "uint32" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "serialNumber", "type": "uint256" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getApproved",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "address", "name": "approved", "type": "address" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getFungibleTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.FungibleTokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.TokenInfo",
                                    "name": "tokenInfo",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IHederaTokenService.HederaToken",
                                            "name": "token",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "string",
                                                    "name": "name",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "symbol",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "treasury",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "memo",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "tokenSupplyType",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maxSupply",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "freezeDefault",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                                    "name": "tokenKeys",
                                                    "type": "tuple[]",
                                                    "components": [
                                                        {
                                                            "internalType": "uint256",
                                                            "name": "keyType",
                                                            "type": "uint256"
                                                        },
                                                        {
                                                            "internalType": "struct IHederaTokenService.KeyValue",
                                                            "name": "key",
                                                            "type": "tuple",
                                                            "components": [
                                                                {
                                                                    "internalType": "bool",
                                                                    "name": "inheritAccountKey",
                                                                    "type": "bool"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "contractId",
                                                                    "type": "address"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ed25519",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ECDSA_secp256k1",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "delegatableContractId",
                                                                    "type": "address"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.Expiry",
                                                    "name": "expiry",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "int64",
                                                            "name": "second",
                                                            "type": "int64"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "autoRenewAccount",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "int64",
                                                            "name": "autoRenewPeriod",
                                                            "type": "int64"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "totalSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "deleted",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "defaultKycStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "pauseStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FixedFee[]",
                                            "name": "fixedFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useCurrentTokenForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                                            "name": "fractionalFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "minimumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maximumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "netOfTransfers",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                            "name": "royaltyFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "ledgerId",
                                            "type": "string"
                                        }
                                    ]
                                },
                                { "internalType": "int32", "name": "decimals", "type": "int32" }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "serialNumber", "type": "int64" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getNonFungibleTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.TokenInfo",
                                    "name": "tokenInfo",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IHederaTokenService.HederaToken",
                                            "name": "token",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "string",
                                                    "name": "name",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "symbol",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "treasury",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "memo",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "tokenSupplyType",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maxSupply",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "freezeDefault",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                                    "name": "tokenKeys",
                                                    "type": "tuple[]",
                                                    "components": [
                                                        {
                                                            "internalType": "uint256",
                                                            "name": "keyType",
                                                            "type": "uint256"
                                                        },
                                                        {
                                                            "internalType": "struct IHederaTokenService.KeyValue",
                                                            "name": "key",
                                                            "type": "tuple",
                                                            "components": [
                                                                {
                                                                    "internalType": "bool",
                                                                    "name": "inheritAccountKey",
                                                                    "type": "bool"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "contractId",
                                                                    "type": "address"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ed25519",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ECDSA_secp256k1",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "delegatableContractId",
                                                                    "type": "address"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.Expiry",
                                                    "name": "expiry",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "int64",
                                                            "name": "second",
                                                            "type": "int64"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "autoRenewAccount",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "int64",
                                                            "name": "autoRenewPeriod",
                                                            "type": "int64"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "totalSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "deleted",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "defaultKycStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "pauseStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FixedFee[]",
                                            "name": "fixedFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useCurrentTokenForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                                            "name": "fractionalFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "minimumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maximumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "netOfTransfers",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                            "name": "royaltyFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "ledgerId",
                                            "type": "string"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "int64",
                                    "name": "serialNumber",
                                    "type": "int64"
                                },
                                { "internalType": "address", "name": "ownerId", "type": "address" },
                                {
                                    "internalType": "int64",
                                    "name": "creationTime",
                                    "type": "int64"
                                },
                                { "internalType": "bytes", "name": "metadata", "type": "bytes" },
                                {
                                    "internalType": "address",
                                    "name": "spenderId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenCustomFees",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                {
                                    "internalType": "int64",
                                    "name": "minimumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "maximumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "netOfTransfers",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenDefaultFreezeStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenDefaultKycStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenExpiryInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.Expiry",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                { "internalType": "int64", "name": "second", "type": "int64" },
                                {
                                    "internalType": "address",
                                    "name": "autoRenewAccount",
                                    "type": "address"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "autoRenewPeriod",
                                    "type": "int64"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "name": "token",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "string",
                                            "name": "name",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "symbol",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "treasury",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "memo",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "tokenSupplyType",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maxSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "freezeDefault",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "uint256",
                                                    "name": "keyType",
                                                    "type": "uint256"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "bool",
                                                            "name": "inheritAccountKey",
                                                            "type": "bool"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "contractId",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ed25519",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "delegatableContractId",
                                                            "type": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "name": "expiry",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "second",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "autoRenewAccount",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "internalType": "int64", "name": "totalSupply", "type": "int64" },
                                { "internalType": "bool", "name": "deleted", "type": "bool" },
                                {
                                    "internalType": "bool",
                                    "name": "defaultKycStatus",
                                    "type": "bool"
                                },
                                { "internalType": "bool", "name": "pauseStatus", "type": "bool" },
                                {
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "minimumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maximumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "netOfTransfers",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                { "internalType": "string", "name": "ledgerId", "type": "string" }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "keyType", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenKey",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.KeyValue",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "inheritAccountKey",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "contractId",
                                    "type": "address"
                                },
                                { "internalType": "bytes", "name": "ed25519", "type": "bytes" },
                                {
                                    "internalType": "bytes",
                                    "name": "ECDSA_secp256k1",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatableContractId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenType",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "int32", "name": "", "type": "int32" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "owner", "type": "address" },
                        { "internalType": "address", "name": "operator", "type": "address" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isApprovedForAll",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "isToken",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "bytes[]", "name": "", "type": "bytes[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" },
                        { "internalType": "int64[]", "name": "serialNumbers", "type": "int64[]" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address[]", "name": "accountId", "type": "address[]" },
                        { "internalType": "int64[]", "name": "amount", "type": "int64[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "associateToken(address,address)": {
                        "params": {
                            "account": "The account to be associated with the provided token",
                            "token": "The token to be associated with the provided account"
                        }
                    },
                    "associateTokens(address,address[])": {
                        "params": {
                            "account": "The account to be associated with the provided tokens",
                            "tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "dissociateToken(address,address)": {
                        "params": {
                            "account": "The account to be associated with the provided token",
                            "token": "The token to be associated with the provided account"
                        }
                    },
                    "dissociateTokens(address,address[])": {
                        "params": {
                            "account": "The account to be dissociated from the provided tokens",
                            "tokens": "The tokens to be dissociated from the provided account."
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getAccountId(address)": {
                        "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
                    },
                    "getApproved(address,uint256)": {
                        "params": {
                            "serialNumber": "The NFT to find the approved address for",
                            "token": "The Hedera NFT token address to check approval"
                        },
                        "returns": {
                            "approved": "The approved address for this NFT, or the zero address if there is none",
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getFungibleTokenInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "FungibleTokenInfo info for `token`"
                        }
                    },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "params": {
                            "serialNumber": "The NFT serialNumber to check",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                        }
                    },
                    "getTokenCustomFees(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "Set of fixed fees for `token`",
                            "_2": "Set of fractional fees for `token`",
                            "_3": "Set of royalty fees for `token`"
                        }
                    },
                    "getTokenDefaultFreezeStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default freeze status is frozen."
                        }
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                        }
                    },
                    "getTokenExpiryInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenInfo": "Expiry info for `token`"
                        }
                    },
                    "getTokenInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenInfo": "TokenInfo info for `token`"
                        }
                    },
                    "getTokenKey(address,uint256)": {
                        "params": {
                            "keyType": "The keyType of the desired KeyValue",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "KeyValue info for key of type `keyType`"
                        }
                    },
                    "getTokenType(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                        }
                    },
                    "isApprovedForAll(address,address,address)": {
                        "params": {
                            "operator": "The address that acts on behalf of the owner",
                            "owner": "The address that owns the NFTs",
                            "token": "The Hedera NFT token address to approve"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                        }
                    },
                    "isToken(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if valid token found for the given address"
                        }
                    },
                    "transferTokens(address,address[],int64[])": {
                        "params": {
                            "accountId": "account to do a transfer to/from",
                            "amount": "The amount from the accountId at the same index",
                            "token": "The ID of the token as a solidity address"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "associateToken(address,address)": {
                        "notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
                    },
                    "associateTokens(address,address[])": {
                        "notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
                    },
                    "dissociateToken(address,address)": {
                        "notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
                    },
                    "dissociateTokens(address,address[])": {
                        "notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
                    },
                    "getApproved(address,uint256)": {
                        "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
                    },
                    "getFungibleTokenInfo(address)": { "notice": "Query fungible token info" },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "notice": "Query non fungible token info"
                    },
                    "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
                    "getTokenDefaultFreezeStatus(address)": {
                        "notice": "Query token default freeze status"
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "notice": "Query token default kyc status"
                    },
                    "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
                    "getTokenInfo(address)": { "notice": "Query token info" },
                    "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
                    "getTokenType(address)": {
                        "notice": "Query to return the token type for a given address"
                    },
                    "isApprovedForAll(address,address,address)": {
                        "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
                    },
                    "isToken(address)": {
                        "notice": "Query if valid token found for the given address"
                    },
                    "transferTokens(address,address[],int64[])": {
                        "notice": "Initiates a Fungible Token Transfer"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/",
                "forge-std/=lib/forge-std/src/",
                "solidity-stringutils/=lib/surl/lib/solidity-stringutils/",
                "surl/=lib/surl/"
            ],
            "optimizer": { "enabled": true, "runs": 200 },
            "metadata": { "bytecodeHash": "ipfs" },
            "compilationTarget": { "contracts/HtsSystemContract.sol": "HtsSystemContract" },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "contracts/HtsSystemContract.sol": {
                "keccak256": "0xd1a13f160b44f3fbfbf08bcc07ee69d8c4c3cf62541325257de0dbf420339c1a",
                "urls": [
                    "bzz-raw://fc587488440ab2670ac8adf96441eba1a7ddb3f5b5382d146937de9279ac3d07",
                    "dweb:/ipfs/Qma48u2o6rJsZYCCNc6BmBesnHpey7utTbZqa3zg28gAEw"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC20.sol": {
                "keccak256": "0x77993e2d90d6b91d30b8721a52364902d823dd5d1020500071c4ecd7f847a00e",
                "urls": [
                    "bzz-raw://776be938a4f20b2b40e95a5d58f330454d21077894659a674ac8bda378561598",
                    "dweb:/ipfs/QmToUenT2jKjiJLCozN3xQp2esRVbRceyS8KVMqcd9j29W"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC721.sol": {
                "keccak256": "0x7b4a961afb96ff6326f4d2985f20edf7aa10b3ba1b68c502a0cdcd84ba26e767",
                "urls": [
                    "bzz-raw://322d92f6a244dd8a9818d5be6e4e17c6dd048a033449dd79b43229c7077da06d",
                    "dweb:/ipfs/QmdFyC7EU8iGiyFzh77YsUpp6eysV8ijyLUKWsDPVKq7yG"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHRC719.sol": {
                "keccak256": "0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd",
                "urls": [
                    "bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d",
                    "dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHederaTokenService.sol": {
                "keccak256": "0x04e6d5e8b6b57e7ce072c3555d29e531ad38c964ac9caa89bea3d4409d4dd55d",
                "urls": [
                    "bzz-raw://15f1b5b0a5f5eef75ae23c1825cb79a1914af36d60ede3f76a62272d25d02579",
                    "dweb:/ipfs/Qma6DzrPLbEWsmoJBxjp5GwhkxkwupnTyA5h4fHa1MVryV"
                ],
                "license": "Apache-2.0"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 91,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "tokenType",
                "offset": 0,
                "slot": "0",
                "type": "t_string_storage"
            },
            {
                "astId": 93,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "name",
                "offset": 0,
                "slot": "1",
                "type": "t_string_storage"
            },
            {
                "astId": 95,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "symbol",
                "offset": 0,
                "slot": "2",
                "type": "t_string_storage"
            },
            {
                "astId": 97,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "decimals",
                "offset": 0,
                "slot": "3",
                "type": "t_uint8"
            },
            {
                "astId": 99,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "totalSupply",
                "offset": 0,
                "slot": "4",
                "type": "t_uint256"
            },
            {
                "astId": 102,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "_tokenInfo",
                "offset": 0,
                "slot": "5",
                "type": "t_struct(TokenInfo)6581_storage"
            }
        ],
        "types": {
            "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
            "t_array(t_struct(FixedFee)6623_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FixedFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FixedFee)6623_storage"
            },
            "t_array(t_struct(FractionalFee)6637_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FractionalFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FractionalFee)6637_storage"
            },
            "t_array(t_struct(RoyaltyFee)6651_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.RoyaltyFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(RoyaltyFee)6651_storage"
            },
            "t_array(t_struct(TokenKey)6522_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.TokenKey[]",
                "numberOfBytes": "32",
                "base": "t_struct(TokenKey)6522_storage"
            },
            "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
            "t_bytes_storage": { "encoding": "bytes", "label": "bytes", "numberOfBytes": "32" },
            "t_int64": { "encoding": "inplace", "label": "int64", "numberOfBytes": "8" },
            "t_string_storage": { "encoding": "bytes", "label": "string", "numberOfBytes": "32" },
            "t_struct(Expiry)6503_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.Expiry",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6498,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "second",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6500,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewAccount",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6502,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewPeriod",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_int64"
                    }
                ]
            },
            "t_struct(FixedFee)6623_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FixedFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6614,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6616,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6618,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 28,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6620,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useCurrentTokenForPayment",
                        "offset": 29,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6622,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(FractionalFee)6637_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FractionalFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6626,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6628,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6630,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "minimumAmount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6632,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maximumAmount",
                        "offset": 24,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6634,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "netOfTransfers",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6636,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 1,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(HederaToken)6545_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.HederaToken",
                "numberOfBytes": "256",
                "members": [
                    {
                        "astId": 6525,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "name",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6527,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "symbol",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6529,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "treasury",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    },
                    {
                        "astId": 6531,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "memo",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6533,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenSupplyType",
                        "offset": 0,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6535,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maxSupply",
                        "offset": 1,
                        "slot": "4",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6537,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "freezeDefault",
                        "offset": 9,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6541,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenKeys",
                        "offset": 0,
                        "slot": "5",
                        "type": "t_array(t_struct(TokenKey)6522_storage)dyn_storage"
                    },
                    {
                        "astId": 6544,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "expiry",
                        "offset": 0,
                        "slot": "6",
                        "type": "t_struct(Expiry)6503_storage"
                    }
                ]
            },
            "t_struct(KeyValue)6515_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.KeyValue",
                "numberOfBytes": "128",
                "members": [
                    {
                        "astId": 6506,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "inheritAccountKey",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6508,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "contractId",
                        "offset": 1,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6510,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ed25519",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 6512,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ECDSA_secp256k1",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 6514,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "delegatableContractId",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(RoyaltyFee)6651_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.RoyaltyFee",
                "numberOfBytes": "96",
                "members": [
                    {
                        "astId": 6640,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6642,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6644,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6646,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    },
                    {
                        "astId": 6648,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 20,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6650,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(TokenInfo)6581_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenInfo",
                "numberOfBytes": "416",
                "members": [
                    {
                        "astId": 6550,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "token",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_struct(HederaToken)6545_storage"
                    },
                    {
                        "astId": 6553,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "totalSupply",
                        "offset": 0,
                        "slot": "8",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6556,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "deleted",
                        "offset": 8,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6559,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "defaultKycStatus",
                        "offset": 9,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6562,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "pauseStatus",
                        "offset": 10,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6567,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fixedFees",
                        "offset": 0,
                        "slot": "9",
                        "type": "t_array(t_struct(FixedFee)6623_storage)dyn_storage"
                    },
                    {
                        "astId": 6572,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fractionalFees",
                        "offset": 0,
                        "slot": "10",
                        "type": "t_array(t_struct(FractionalFee)6637_storage)dyn_storage"
                    },
                    {
                        "astId": 6577,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "royaltyFees",
                        "offset": 0,
                        "slot": "11",
                        "type": "t_array(t_struct(RoyaltyFee)6651_storage)dyn_storage"
                    },
                    {
                        "astId": 6580,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ledgerId",
                        "offset": 0,
                        "slot": "12",
                        "type": "t_string_storage"
                    }
                ]
            },
            "t_struct(TokenKey)6522_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenKey",
                "numberOfBytes": "160",
                "members": [
                    {
                        "astId": 6518,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "keyType",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 6521,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "key",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_struct(KeyValue)6515_storage"
                    }
                ]
            },
            "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" },
            "t_uint8": { "encoding": "inplace", "label": "uint8", "numberOfBytes": "1" }
        }
    },
    "userdoc": {
        "version": 1,
        "kind": "user",
        "methods": {
            "associateToken(address,address)": {
                "notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
            },
            "associateTokens(address,address[])": {
                "notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
            },
            "dissociateToken(address,address)": {
                "notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
            },
            "dissociateTokens(address,address[])": {
                "notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
            },
            "getApproved(address,uint256)": {
                "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
            },
            "getFungibleTokenInfo(address)": { "notice": "Query fungible token info" },
            "getNonFungibleTokenInfo(address,int64)": { "notice": "Query non fungible token info" },
            "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
            "getTokenDefaultFreezeStatus(address)": {
                "notice": "Query token default freeze status"
            },
            "getTokenDefaultKycStatus(address)": { "notice": "Query token default kyc status" },
            "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
            "getTokenInfo(address)": { "notice": "Query token info" },
            "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
            "getTokenType(address)": {
                "notice": "Query to return the token type for a given address"
            },
            "isApprovedForAll(address,address,address)": {
                "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
            },
            "isToken(address)": { "notice": "Query if valid token found for the given address" },
            "transferTokens(address,address[],int64[])": {
                "notice": "Initiates a Fungible Token Transfer"
            }
        }
    },
    "devdoc": {
        "version": 1,
        "kind": "dev",
        "methods": {
            "associateToken(address,address)": {
                "params": {
                    "account": "The account to be associated with the provided token",
                    "token": "The token to be associated with the provided account"
                }
            },
            "associateTokens(address,address[])": {
                "params": {
                    "account": "The account to be associated with the provided tokens",
                    "tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "dissociateToken(address,address)": {
                "params": {
                    "account": "The account to be associated with the provided token",
                    "token": "The token to be associated with the provided account"
                }
            },
            "dissociateTokens(address,address[])": {
                "params": {
                    "account": "The account to be dissociated from the provided tokens",
                    "tokens": "The tokens to be dissociated from the provided account."
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "getAccountId(address)": {
                "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
            },
            "getApproved(address,uint256)": {
                "params": {
                    "serialNumber": "The NFT to find the approved address for",
                    "token": "The Hedera NFT token address to check approval"
                },
                "returns": {
                    "approved": "The approved address for this NFT, or the zero address if there is none",
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "getFungibleTokenInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "FungibleTokenInfo info for `token`"
                }
            },
            "getNonFungibleTokenInfo(address,int64)": {
                "params": {
                    "serialNumber": "The NFT serialNumber to check",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                }
            },
            "getTokenCustomFees(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "Set of fixed fees for `token`",
                    "_2": "Set of fractional fees for `token`",
                    "_3": "Set of royalty fees for `token`"
                }
            },
            "getTokenDefaultFreezeStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default freeze status is frozen."
                }
            },
            "getTokenDefaultKycStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                }
            },
            "getTokenExpiryInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenInfo": "Expiry info for `token`"
                }
            },
            "getTokenInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenInfo": "TokenInfo info for `token`"
                }
            },
            "getTokenKey(address,uint256)": {
                "params": {
                    "keyType": "The keyType of the desired KeyValue",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "KeyValue info for key of type `keyType`"
                }
            },
            "getTokenType(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                }
            },
            "isApprovedForAll(address,address,address)": {
                "params": {
                    "operator": "The address that acts on behalf of the owner",
                    "owner": "The address that owns the NFTs",
                    "token": "The Hedera NFT token address to approve"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                }
            },
            "isToken(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if valid token found for the given address"
                }
            },
            "transferTokens(address,address[],int64[])": {
                "params": {
                    "accountId": "account to do a transfer to/from",
                    "amount": "The amount from the accountId at the same index",
                    "token": "The ID of the token as a solidity address"
                }
            }
        },
        "events": {
            "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
            },
            "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
            }
        }
    },
    "id": 1
}
