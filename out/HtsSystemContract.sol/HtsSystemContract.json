{
    "abi": [
        { "type": "fallback", "stateMutability": "nonpayable" },
        {
            "type": "function",
            "name": "__setTokenInfo",
            "inputs": [
                { "name": "tokenType_", "type": "string", "internalType": "string" },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.TokenInfo",
                    "components": [
                        {
                            "name": "token",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "components": [
                                { "name": "name", "type": "string", "internalType": "string" },
                                { "name": "symbol", "type": "string", "internalType": "string" },
                                {
                                    "name": "treasury",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                { "name": "memo", "type": "string", "internalType": "string" },
                                {
                                    "name": "tokenSupplyType",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "maxSupply", "type": "int64", "internalType": "int64" },
                                { "name": "freezeDefault", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "components": [
                                        {
                                            "name": "keyType",
                                            "type": "uint256",
                                            "internalType": "uint256"
                                        },
                                        {
                                            "name": "key",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "components": [
                                                {
                                                    "name": "inheritAccountKey",
                                                    "type": "bool",
                                                    "internalType": "bool"
                                                },
                                                {
                                                    "name": "contractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "ed25519",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "delegatableContractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "expiry",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "components": [
                                        {
                                            "name": "second",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "autoRenewAccount",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "autoRenewPeriod",
                                            "type": "int64",
                                            "internalType": "int64"
                                        }
                                    ]
                                }
                            ]
                        },
                        { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                        { "name": "deleted", "type": "bool", "internalType": "bool" },
                        { "name": "defaultKycStatus", "type": "bool", "internalType": "bool" },
                        { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                        {
                            "name": "fixedFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "components": [
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "fractionalFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                {
                                    "name": "minimumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "maximumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "netOfTransfers",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "royaltyFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        { "name": "ledgerId", "type": "string", "internalType": "string" }
                    ]
                },
                { "name": "decimals_", "type": "int32", "internalType": "int32" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "_update",
            "inputs": [
                { "name": "from", "type": "address", "internalType": "address" },
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "allowance",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "owner", "type": "address", "internalType": "address" },
                { "name": "spender", "type": "address", "internalType": "address" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "uint256", "internalType": "uint256" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "approve",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "spender", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "approveNFT",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "approved", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "associateToken",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "token", "type": "address", "internalType": "address" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "associateTokens",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "tokens", "type": "address[]", "internalType": "address[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "burnToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int64[]", "internalType": "int64[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "createFungibleToken",
            "inputs": [
                {
                    "name": "token",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.HederaToken",
                    "components": [
                        { "name": "name", "type": "string", "internalType": "string" },
                        { "name": "symbol", "type": "string", "internalType": "string" },
                        { "name": "treasury", "type": "address", "internalType": "address" },
                        { "name": "memo", "type": "string", "internalType": "string" },
                        { "name": "tokenSupplyType", "type": "bool", "internalType": "bool" },
                        { "name": "maxSupply", "type": "int64", "internalType": "int64" },
                        { "name": "freezeDefault", "type": "bool", "internalType": "bool" },
                        {
                            "name": "tokenKeys",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.TokenKey[]",
                            "components": [
                                { "name": "keyType", "type": "uint256", "internalType": "uint256" },
                                {
                                    "name": "key",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.KeyValue",
                                    "components": [
                                        {
                                            "name": "inheritAccountKey",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "contractId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "ed25519",
                                            "type": "bytes",
                                            "internalType": "bytes"
                                        },
                                        {
                                            "name": "ECDSA_secp256k1",
                                            "type": "bytes",
                                            "internalType": "bytes"
                                        },
                                        {
                                            "name": "delegatableContractId",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "expiry",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.Expiry",
                            "components": [
                                { "name": "second", "type": "int64", "internalType": "int64" },
                                {
                                    "name": "autoRenewAccount",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "autoRenewPeriod",
                                    "type": "int64",
                                    "internalType": "int64"
                                }
                            ]
                        }
                    ]
                },
                { "name": "initialTotalSupply", "type": "int64", "internalType": "int64" },
                { "name": "decimals_", "type": "int32", "internalType": "int32" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "tokenAddress", "type": "address", "internalType": "address" }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "createFungibleTokenWithCustomFees",
            "inputs": [
                {
                    "name": "token",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.HederaToken",
                    "components": [
                        { "name": "name", "type": "string", "internalType": "string" },
                        { "name": "symbol", "type": "string", "internalType": "string" },
                        { "name": "treasury", "type": "address", "internalType": "address" },
                        { "name": "memo", "type": "string", "internalType": "string" },
                        { "name": "tokenSupplyType", "type": "bool", "internalType": "bool" },
                        { "name": "maxSupply", "type": "int64", "internalType": "int64" },
                        { "name": "freezeDefault", "type": "bool", "internalType": "bool" },
                        {
                            "name": "tokenKeys",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.TokenKey[]",
                            "components": [
                                { "name": "keyType", "type": "uint256", "internalType": "uint256" },
                                {
                                    "name": "key",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.KeyValue",
                                    "components": [
                                        {
                                            "name": "inheritAccountKey",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "contractId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "ed25519",
                                            "type": "bytes",
                                            "internalType": "bytes"
                                        },
                                        {
                                            "name": "ECDSA_secp256k1",
                                            "type": "bytes",
                                            "internalType": "bytes"
                                        },
                                        {
                                            "name": "delegatableContractId",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "expiry",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.Expiry",
                            "components": [
                                { "name": "second", "type": "int64", "internalType": "int64" },
                                {
                                    "name": "autoRenewAccount",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "autoRenewPeriod",
                                    "type": "int64",
                                    "internalType": "int64"
                                }
                            ]
                        }
                    ]
                },
                { "name": "initialTotalSupply", "type": "int64", "internalType": "int64" },
                { "name": "decimals_", "type": "int32", "internalType": "int32" },
                {
                    "name": "fixedFees",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FixedFee[]",
                    "components": [
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        {
                            "name": "useCurrentTokenForPayment",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "fractionalFees",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "minimumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "maximumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "netOfTransfers", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "tokenAddress", "type": "address", "internalType": "address" }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "createNonFungibleToken",
            "inputs": [
                {
                    "name": "token",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.HederaToken",
                    "components": [
                        { "name": "name", "type": "string", "internalType": "string" },
                        { "name": "symbol", "type": "string", "internalType": "string" },
                        { "name": "treasury", "type": "address", "internalType": "address" },
                        { "name": "memo", "type": "string", "internalType": "string" },
                        { "name": "tokenSupplyType", "type": "bool", "internalType": "bool" },
                        { "name": "maxSupply", "type": "int64", "internalType": "int64" },
                        { "name": "freezeDefault", "type": "bool", "internalType": "bool" },
                        {
                            "name": "tokenKeys",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.TokenKey[]",
                            "components": [
                                { "name": "keyType", "type": "uint256", "internalType": "uint256" },
                                {
                                    "name": "key",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.KeyValue",
                                    "components": [
                                        {
                                            "name": "inheritAccountKey",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "contractId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "ed25519",
                                            "type": "bytes",
                                            "internalType": "bytes"
                                        },
                                        {
                                            "name": "ECDSA_secp256k1",
                                            "type": "bytes",
                                            "internalType": "bytes"
                                        },
                                        {
                                            "name": "delegatableContractId",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "expiry",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.Expiry",
                            "components": [
                                { "name": "second", "type": "int64", "internalType": "int64" },
                                {
                                    "name": "autoRenewAccount",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "autoRenewPeriod",
                                    "type": "int64",
                                    "internalType": "int64"
                                }
                            ]
                        }
                    ]
                }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "tokenAddress", "type": "address", "internalType": "address" }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "createNonFungibleTokenWithCustomFees",
            "inputs": [
                {
                    "name": "token",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.HederaToken",
                    "components": [
                        { "name": "name", "type": "string", "internalType": "string" },
                        { "name": "symbol", "type": "string", "internalType": "string" },
                        { "name": "treasury", "type": "address", "internalType": "address" },
                        { "name": "memo", "type": "string", "internalType": "string" },
                        { "name": "tokenSupplyType", "type": "bool", "internalType": "bool" },
                        { "name": "maxSupply", "type": "int64", "internalType": "int64" },
                        { "name": "freezeDefault", "type": "bool", "internalType": "bool" },
                        {
                            "name": "tokenKeys",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.TokenKey[]",
                            "components": [
                                { "name": "keyType", "type": "uint256", "internalType": "uint256" },
                                {
                                    "name": "key",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.KeyValue",
                                    "components": [
                                        {
                                            "name": "inheritAccountKey",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "contractId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "ed25519",
                                            "type": "bytes",
                                            "internalType": "bytes"
                                        },
                                        {
                                            "name": "ECDSA_secp256k1",
                                            "type": "bytes",
                                            "internalType": "bytes"
                                        },
                                        {
                                            "name": "delegatableContractId",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "expiry",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.Expiry",
                            "components": [
                                { "name": "second", "type": "int64", "internalType": "int64" },
                                {
                                    "name": "autoRenewAccount",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "autoRenewPeriod",
                                    "type": "int64",
                                    "internalType": "int64"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "fixedFees",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FixedFee[]",
                    "components": [
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        {
                            "name": "useCurrentTokenForPayment",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "royaltyFees",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "tokenAddress", "type": "address", "internalType": "address" }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "dissociateToken",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "token", "type": "address", "internalType": "address" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "dissociateTokens",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "tokens", "type": "address[]", "internalType": "address[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getAccountId",
            "inputs": [{ "name": "account", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "accountId", "type": "uint32", "internalType": "uint32" },
                { "name": "exists", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getApproved",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "approved", "type": "address", "internalType": "address" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getFungibleTokenInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.FungibleTokenInfo",
                    "components": [
                        {
                            "name": "tokenInfo",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "components": [
                                {
                                    "name": "token",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "components": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "symbol",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "treasury",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "memo",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "tokenSupplyType",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "maxSupply",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "freezeDefault",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "components": [
                                                {
                                                    "name": "keyType",
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                {
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "components": [
                                                        {
                                                            "name": "inheritAccountKey",
                                                            "type": "bool",
                                                            "internalType": "bool"
                                                        },
                                                        {
                                                            "name": "contractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        },
                                                        {
                                                            "name": "ed25519",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "delegatableContractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "expiry",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "components": [
                                                {
                                                    "name": "second",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                },
                                                {
                                                    "name": "autoRenewAccount",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                                { "name": "deleted", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "defaultKycStatus",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "components": [
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "minimumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "maximumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "netOfTransfers",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                { "name": "ledgerId", "type": "string", "internalType": "string" }
                            ]
                        },
                        { "name": "decimals", "type": "int32", "internalType": "int32" }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getNonFungibleTokenInfo",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "int64", "internalType": "int64" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                    "components": [
                        {
                            "name": "tokenInfo",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "components": [
                                {
                                    "name": "token",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "components": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "symbol",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "treasury",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "memo",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "tokenSupplyType",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "maxSupply",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "freezeDefault",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "components": [
                                                {
                                                    "name": "keyType",
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                {
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "components": [
                                                        {
                                                            "name": "inheritAccountKey",
                                                            "type": "bool",
                                                            "internalType": "bool"
                                                        },
                                                        {
                                                            "name": "contractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        },
                                                        {
                                                            "name": "ed25519",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "delegatableContractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "expiry",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "components": [
                                                {
                                                    "name": "second",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                },
                                                {
                                                    "name": "autoRenewAccount",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                                { "name": "deleted", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "defaultKycStatus",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "components": [
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "minimumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "maximumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "netOfTransfers",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                { "name": "ledgerId", "type": "string", "internalType": "string" }
                            ]
                        },
                        { "name": "serialNumber", "type": "int64", "internalType": "int64" },
                        { "name": "ownerId", "type": "address", "internalType": "address" },
                        { "name": "creationTime", "type": "int64", "internalType": "int64" },
                        { "name": "metadata", "type": "bytes", "internalType": "bytes" },
                        { "name": "spenderId", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getTokenCustomFees",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FixedFee[]",
                    "components": [
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        {
                            "name": "useCurrentTokenForPayment",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "minimumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "maximumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "netOfTransfers", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getTokenDefaultFreezeStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getTokenDefaultKycStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getTokenExpiryInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "expiry",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.Expiry",
                    "components": [
                        { "name": "second", "type": "int64", "internalType": "int64" },
                        {
                            "name": "autoRenewAccount",
                            "type": "address",
                            "internalType": "address"
                        },
                        { "name": "autoRenewPeriod", "type": "int64", "internalType": "int64" }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getTokenInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.TokenInfo",
                    "components": [
                        {
                            "name": "token",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "components": [
                                { "name": "name", "type": "string", "internalType": "string" },
                                { "name": "symbol", "type": "string", "internalType": "string" },
                                {
                                    "name": "treasury",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                { "name": "memo", "type": "string", "internalType": "string" },
                                {
                                    "name": "tokenSupplyType",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "maxSupply", "type": "int64", "internalType": "int64" },
                                { "name": "freezeDefault", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "components": [
                                        {
                                            "name": "keyType",
                                            "type": "uint256",
                                            "internalType": "uint256"
                                        },
                                        {
                                            "name": "key",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "components": [
                                                {
                                                    "name": "inheritAccountKey",
                                                    "type": "bool",
                                                    "internalType": "bool"
                                                },
                                                {
                                                    "name": "contractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "ed25519",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "delegatableContractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "expiry",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "components": [
                                        {
                                            "name": "second",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "autoRenewAccount",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "autoRenewPeriod",
                                            "type": "int64",
                                            "internalType": "int64"
                                        }
                                    ]
                                }
                            ]
                        },
                        { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                        { "name": "deleted", "type": "bool", "internalType": "bool" },
                        { "name": "defaultKycStatus", "type": "bool", "internalType": "bool" },
                        { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                        {
                            "name": "fixedFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "components": [
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "fractionalFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                {
                                    "name": "minimumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "maximumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "netOfTransfers",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "royaltyFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        { "name": "ledgerId", "type": "string", "internalType": "string" }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getTokenKey",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "keyType", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.KeyValue",
                    "components": [
                        { "name": "inheritAccountKey", "type": "bool", "internalType": "bool" },
                        { "name": "contractId", "type": "address", "internalType": "address" },
                        { "name": "ed25519", "type": "bytes", "internalType": "bytes" },
                        { "name": "ECDSA_secp256k1", "type": "bytes", "internalType": "bytes" },
                        {
                            "name": "delegatableContractId",
                            "type": "address",
                            "internalType": "address"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getTokenType",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int32", "internalType": "int32" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isApprovedForAll",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "owner", "type": "address", "internalType": "address" },
                { "name": "operator", "type": "address", "internalType": "address" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isToken",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "mintToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bytes[]", "internalType": "bytes[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" },
                { "name": "serialNumbers", "type": "int64[]", "internalType": "int64[]" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setApprovalForAll",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "operator", "type": "address", "internalType": "address" },
                { "name": "approved", "type": "bool", "internalType": "bool" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferFrom",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "sender", "type": "address", "internalType": "address" },
                { "name": "recipient", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [{ "name": "", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferFromNFT",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "from", "type": "address", "internalType": "address" },
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [{ "name": "", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferNFT",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "sender", "type": "address", "internalType": "address" },
                { "name": "recipient", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "int64", "internalType": "int64" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferNFTs",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "sender", "type": "address[]", "internalType": "address[]" },
                { "name": "receiver", "type": "address[]", "internalType": "address[]" },
                { "name": "serialNumber", "type": "int64[]", "internalType": "int64[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "sender", "type": "address", "internalType": "address" },
                { "name": "recipient", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferTokens",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "accountId", "type": "address[]", "internalType": "address[]" },
                { "name": "amount", "type": "int64[]", "internalType": "int64[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "approved",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ApprovalForAll",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256" }
            ],
            "anonymous": false
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "391:47093:2:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "391:47093:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;391:47093:2;;23331:12;23764:2;23745:21;;;23737:63;;;;-1:-1:-1;;;23737:63:2;;216:2:48;23737:63:2;;;198:21:48;255:2;235:18;;;228:30;294:31;274:18;;;267:59;343:18;;23737:63:2;;;;;;;;;23811:24;23852:13;23863:1;23811:24;23852:8;23811:24;23852:13;:::i;:::-;23845:21;;;:::i;:::-;23838:29;;;-1:-1:-1;23905:10:2;23885:30;;23877:73;;;;-1:-1:-1;;;23877:73:2;;1253:2:48;23877:73:2;;;1235:21:48;1292:2;1272:18;;;1265:30;1331:32;1311:18;;;1304:60;1381:18;;23877:73:2;1051:354:48;23877:73:2;23961:13;23993:14;24004:2;24002:1;23993:8;23961:13;23993:14;:::i;:::-;23985:23;;;:::i;:::-;23977:32;;;-1:-1:-1;24044:4:2;24027:22;;24019:64;;;;-1:-1:-1;;;24019:64:2;;1991:2:48;24019:64:2;;;1973:21:48;2030:2;2010:18;;;2003:30;2069:31;2049:18;;;2042:59;2118:18;;24019:64:2;1789:353:48;24019:64:2;24262:20;:18;:20::i;:::-;391:47093;;;-1:-1:-1;391:47093:2;;;-1:-1:-1;;;;391:47093:2;15645:318;;;;;;;;;;-1:-1:-1;15645:318:2;;;;;:::i;:::-;;:::i;:::-;;;;3198:1:48;3187:21;;;;3169:40;;-1:-1:-1;;;;;3245:32:48;;;3240:2;3225:18;;3218:60;3142:18;15645:318:2;;;;;;;;7183:239;;;;;;;;;;-1:-1:-1;7183:239:2;;;;;:::i;:::-;;:::i;:::-;;;3853:1:48;3842:21;;;;3824:40;;3812:2;3797:18;7183:239:2;3682:188:48;44612:1014:2;;;;;;;;;;-1:-1:-1;44612:1014:2;;;;;:::i;:::-;;:::i;:::-;;9873:529;;;;;;:::i;:::-;;:::i;14640:245::-;;;;;;;;;;-1:-1:-1;14640:245:2;;;;;:::i;:::-;;:::i;20078:328::-;;;;;;;;;;-1:-1:-1;20078:328:2;;;;;:::i;:::-;;:::i;:::-;;;;13662:1:48;13651:21;;;;13633:40;;13716:14;;13709:22;13704:2;13689:18;;13682:50;13606:18;20078:328:2;13469:269:48;18242:231:2;;;;;;;;;;-1:-1:-1;18242:231:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;19122:950::-;;;;;;;;;;-1:-1:-1;19122:950:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;10408:498::-;;;;;;:::i;:::-;;:::i;12523:717::-;;;;;;;;;;-1:-1:-1;12523:717:2;;;;;:::i;:::-;;:::i;5309:845::-;;;;;;;;;;-1:-1:-1;5309:845:2;;;;;:::i;:::-;;:::i;17203:239::-;;;;;;;;;;-1:-1:-1;17203:239:2;;;;;:::i;:::-;;:::i;15969:294::-;;;;;;;;;;-1:-1:-1;15969:294:2;;;;;:::i;:::-;;:::i;18479:637::-;;;;;;;;;;-1:-1:-1;18479:637:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;17699:537::-;;;;;;;;;;-1:-1:-1;17699:537:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;6160:237::-;;;;;;;;;;-1:-1:-1;6160:237:2;;;;;:::i;:::-;;:::i;14008:381::-;;;;;;;;;;-1:-1:-1;14008:381:2;;;;;:::i;:::-;;:::i;15104:289::-;;;;;;;;;;-1:-1:-1;15104:289:2;;;;;:::i;:::-;;:::i;6403:774::-;;;;;;;;;;-1:-1:-1;6403:774:2;;;;;:::i;:::-;;:::i;11800:717::-;;;;;;;;;;-1:-1:-1;11800:717:2;;;;;:::i;:::-;;:::i;14891:207::-;;;;;;;;;;-1:-1:-1;14891:207:2;;;;;:::i;:::-;;:::i;:::-;;;;33726:1:48;33715:21;;;;33697:40;;33768:2;33753:18;;33746:34;;;;33670:18;14891:207:2;33527:259:48;20412:223:2;;;;;;;;;;-1:-1:-1;20412:223:2;;;;;:::i;:::-;;:::i;:::-;;;;33986:1:48;33975:21;;;;33957:40;;34044:1;34033:21;;;;34028:2;34013:18;;34006:49;33930:18;20412:223:2;33791:270:48;15399:240:2;;;;;;;;;;-1:-1:-1;15399:240:2;;;;;:::i;:::-;;:::i;16952:245::-;;;;;;;;;;-1:-1:-1;16952:245:2;;;;;:::i;:::-;;:::i;11370:424::-;;;;;;:::i;:::-;;:::i;16599:347::-;;;;;;;;;;-1:-1:-1;16599:347:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;17448:245::-;;;;;;;;;;-1:-1:-1;17448:245:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4211:1092::-;;;;;;;;;;-1:-1:-1;4211:1092:2;;;;;:::i;:::-;;:::i;:::-;;;;38720:1:48;38709:21;;;38691:40;;38767:21;;;;38762:2;38747:18;;38740:49;38664:18;4211:1092:2;38525:270:48;36867:2836:2;;;;;;;;;;-1:-1:-1;36867:2836:2;;;;;:::i;:::-;;:::i;2174:307::-;;;;;;;;;;-1:-1:-1;2174:307:2;;;;;:::i;:::-;;:::i;:::-;;;;40983:10:48;40971:23;;;40953:42;;41038:14;;41031:22;41026:2;41011:18;;41004:50;40926:18;2174:307:2;40787:273:48;2730:247:2;;;;;;;;;;-1:-1:-1;2730:247:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;14395:239::-;;;;;;;;;;-1:-1:-1;14395:239:2;;;;;:::i;:::-;;:::i;10912:452::-;;;;;;:::i;:::-;;:::i;13246:756::-;;;;;;;;;;-1:-1:-1;13246:756:2;;;;;:::i;:::-;;:::i;16269:324::-;;;;;;;;;;-1:-1:-1;16269:324:2;;;;;:::i;:::-;;:::i;24391:6116::-;24447:12;24471:15;24496;24508:2;24505;24496:8;24471:15;24496;:::i;:::-;24489:23;;;:::i;:::-;24471:41;-1:-1:-1;24695:10:2;382:5;24695:25;:69;;;;-1:-1:-1;;;;;;;24724:40:2;;-1:-1:-1;;;24724:40:2;24695:69;24691:366;;;24781:24;;;24885:13;:8;24894:2;24885:8;24781:24;24885:13;:::i;:::-;24874:73;;;;;;;:::i;:::-;24780:167;;;;;;24961:48;24976:10;24988:9;24999;24961:14;:48::i;:::-;25030:16;;;25041:4;25030:16;;;43692:41:48;43665:18;25030:16:2;;;;;;;;;;;;;25023:23;;;;;;24391:6116;:::o;24691:366::-;25139:18;;;;;;;;;;;-1:-1:-1;;;25139:18:2;;;;;25098:27;25129:29;;25098:27;;-1:-1:-1;;25098:27:2;:::i;:::-;;;;;;;;:60;25094:134;;25174:43;;-1:-1:-1;;;25174:43:2;;45352:2:48;25174:43:2;;;45334:21:48;45391:2;45371:18;;;45364:30;45430:34;45410:18;;;45403:62;-1:-1:-1;;;45481:18:48;;;45474:31;45522:19;;25174:43:2;45150:397:48;25094:134:2;-1:-1:-1;;25289:10:2;:25;25285:4694;;-1:-1:-1;;;;;;;;;25334:38:2;;;25330:220;;25419:2;25400:8;:21;;25392:67;;;;-1:-1:-1;;;25392:67:2;;45754:2:48;25392:67:2;;;45736:21:48;45793:2;45773:18;;;45766:30;45832:34;45812:18;;;45805:62;-1:-1:-1;;;45883:18:48;;;45876:31;45924:19;;25392:67:2;45552:397:48;25392:67:2;132:2:1;25524:10:2;25484:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;25477:58;;;24391:6116;:::o;25330:220::-;-1:-1:-1;;;;;;;;;25567:40:2;;;25563:388;;25654:2;25635:8;:21;;25627:69;;;;-1:-1:-1;;;25627:69:2;;53899:2:48;25627:69:2;;;53881:21:48;53938:2;53918:18;;;53911:30;53977:34;53957:18;;;53950:62;-1:-1:-1;;;54028:18:48;;;54021:33;54071:19;;25627:69:2;53697:399:48;25627:69:2;25714:15;25748;25760:2;25757;25748:8;25714:15;25748;:::i;:::-;25740:24;;;:::i;:::-;25732:33;;25714:51;;25783:12;25798:26;25816:7;25798:17;:26::i;:::-;25866:4;25853:18;;25897:39;;;132:2:1;25897:39:2;;;54243:40:48;25783:41:2;;-1:-1:-1;54216:18:48;25897:39:2;;;;;;;;;;;;;25890:46;;;;;24391:6116;:::o;25563:388::-;-1:-1:-1;;;;;;;;;25968:41:2;;;25964:391;;26056:2;26037:8;:21;;26029:70;;;;-1:-1:-1;;;26029:70:2;;54496:2:48;26029:70:2;;;54478:21:48;54535:2;54515:18;;;54508:30;54574:34;54554:18;;;54547:62;-1:-1:-1;;;54625:18:48;;;54618:34;54669:19;;26029:70:2;54294:400:48;26029:70:2;26117:15;26151;26163:2;26160;26151:8;26117:15;26151;:::i;:::-;26143:24;;;:::i;:::-;26135:33;;26117:51;;26186:12;26201:26;26219:7;26201:17;:26::i;:::-;26269:5;26256:19;;26301:39;;;132:2:1;26301:39:2;;;54243:40:48;26186:41:2;;-1:-1:-1;54216:18:48;26301:39:2;54101:188:48;25964:391:2;-1:-1:-1;;;;;;;;;26372:38:2;;;26368:603;;26457:2;26438:8;:21;;26430:67;;;;-1:-1:-1;;;26430:67:2;;54901:2:48;26430:67:2;;;54883:21:48;54940:2;54920:18;;;54913:30;54979:34;54959:18;;;54952:62;-1:-1:-1;;;55030:18:48;;;55023:31;55071:19;;26430:67:2;54699:397:48;26430:67:2;26561:28;26546:9;26529:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;26519:38;;;;;;:70;26515:173;;26620:49;;;132:2:1;26620:49:2;;;55472:40:48;26666:1:2;55528:18:48;;;55521:49;;;;55445:18;;26620:49:2;55306:270:48;26515:173:2;26751:32;26736:9;26719:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;26709:38;;;;;;:74;26705:177;;26814:49;;;132:2:1;26814:49:2;;;55472:40:48;26860:1:2;55528:18:48;;;55521:49;;;;55445:18;;26814:49:2;55306:270:48;26705:177:2;26906:50;;;132:2:1;26906:50:2;;;55472:40:48;-1:-1:-1;;55528:18:48;;;55521:49;;;;55445:18;;26906:50:2;55306:270:48;26368:603:2;-1:-1:-1;;;;;;;;;26988:38:2;;;26984:616;;27073:3;27054:8;:22;;27046:68;;;;-1:-1:-1;;;27046:68:2;;;;;;;:::i;:::-;27132:14;27165:15;27177:2;27174;27165:8;27132:14;27165:15;:::i;:::-;27157:24;;;:::i;:::-;27149:33;;;-1:-1:-1;27200:12:2;27231:15;27243:2;27240;27231:8;27200:12;27231:15;:::i;:::-;27223:24;;;:::i;:::-;27215:33;;;-1:-1:-1;27266:10:2;27295:17;27308:3;27304;27295:8;27266:10;27295:17;:::i;:::-;27287:26;;;:::i;:::-;27279:35;;;-1:-1:-1;27332:14:2;27365:17;27378:3;27374;27365:8;27332:14;27365:17;:::i;:::-;27357:26;;;:::i;:::-;27349:35;-1:-1:-1;;;;;;27406:14:2;;;;;;;27402:98;;27444:37;27460:4;27466:6;27474;27444:15;:37::i;:::-;27517:27;27527:4;27533:2;27537:6;27517:9;:27::i;:::-;27569:16;;;27580:4;27569:16;;;43692:41:48;43665:18;27569:16:2;;;;;;;;;;;;27562:23;;;;;;;24391:6116;:::o;26984:616::-;-1:-1:-1;;;;;;;;;27617:41:2;;;27613:522;;27705:3;27686:8;:22;;27678:71;;;;-1:-1:-1;;;27678:71:2;;56445:2:48;27678:71:2;;;56427:21:48;56484:2;56464:18;;;56457:30;56523:34;56503:18;;;56496:62;-1:-1:-1;;;56574:18:48;;;56567:34;56618:19;;27678:71:2;56243:400:48;27678:71:2;27767:14;27800:15;27812:2;27809;27800:8;27767:14;27800:15;:::i;:::-;27792:24;;;:::i;:::-;27784:33;;;-1:-1:-1;27835:12:2;27866:15;27878:2;27875;27866:8;27835:12;27866:15;:::i;:::-;27858:24;;;:::i;:::-;27850:33;;;-1:-1:-1;27901:10:2;27930:17;27943:3;27939;27930:8;27901:10;27930:17;:::i;:::-;27922:26;;;:::i;:::-;27914:35;;;-1:-1:-1;27967:16:2;28002:17;28015:3;28011;28002:8;27967:16;28002:17;:::i;:::-;27994:26;;;:::i;:::-;27986:35;-1:-1:-1;28039:40:2;28052:6;28060:4;28066:2;27986:35;28039:12;:40::i;27613:522::-;-1:-1:-1;;;;;;;;;28152:33:2;;;28148:475;;28232:3;28213:8;:22;;28205:63;;;;-1:-1:-1;;;28205:63:2;;;;;;;:::i;:::-;28286:12;28317:15;28329:2;28326;28317:8;28286:12;28317:15;:::i;:::-;28309:24;;;:::i;:::-;28301:33;;;-1:-1:-1;28352:10:2;28381:15;28393:2;28390;28381:8;28352:10;28381:15;:::i;:::-;28373:24;;;:::i;:::-;28365:33;;;-1:-1:-1;28416:14:2;28449:16;28461:3;28458:2;28449:8;28416:14;28449:16;:::i;:::-;28441:25;;;:::i;:::-;28433:34;-1:-1:-1;28485:26:2;28494:4;28500:2;28433:34;28485:8;:26::i;:::-;28556:2;-1:-1:-1;;;;;28534:33:2;28550:4;-1:-1:-1;;;;;28534:33:2;;28560:6;28534:33;;;;57151:25:48;;57139:2;57124:18;;57005:177;28534:33:2;;;;;;;;28592:16;;;28603:4;28592:16;;;43692:41:48;43665:18;28592:16:2;43552:187:48;28148:475:2;-1:-1:-1;;;;;;;;;28640:36:2;;;28636:435;;28723:3;28704:8;:22;;28696:66;;;;-1:-1:-1;;;28696:66:2;;57389:2:48;28696:66:2;;;57371:21:48;57428:2;57408:18;;;57401:30;57467:33;57447:18;;;57440:61;57518:18;;28696:66:2;57187:355:48;28696:66:2;28780:12;28811:15;28823:2;28820;28811:8;28780:12;28811:15;:::i;:::-;28803:24;;;:::i;:::-;28795:33;;;-1:-1:-1;28846:10:2;28875:15;28887:2;28884;28875:8;28846:10;28875:15;:::i;:::-;28867:24;;;:::i;:::-;28859:33;;;-1:-1:-1;28910:16:2;28945;28957:3;28954:2;28945:8;28910:16;28945;:::i;:::-;28937:25;;;:::i;:::-;28929:34;-1:-1:-1;28981:34:2;28990:4;28996:2;28929:34;29010:4;28981:8;:34::i;28636:435::-;-1:-1:-1;;;;;;;;;29088:43:2;;;29084:455;;29178:3;29159:8;:22;;29151:73;;;;-1:-1:-1;;;29151:73:2;;;;;;;:::i;:::-;29242:12;29273:15;29285:2;29282;29273:8;29242:12;29273:15;:::i;:::-;29265:24;;;:::i;:::-;29257:33;;;-1:-1:-1;29308:10:2;29337:15;29349:2;29346;29337:8;29308:10;29337:15;:::i;:::-;29329:24;;;:::i;:::-;29321:33;;;-1:-1:-1;29372:13:2;29404:16;29416:3;29413:2;29404:8;29372:13;29404:16;:::i;:::-;29396:25;;;:::i;:::-;29426:1;29388:39;;-1:-1:-1;29445:38:2;29464:4;29470:2;29388:39;29445:18;:38::i;29084:455::-;-1:-1:-1;;;;;;;;;29556:33:2;;;29552:417;;29636:3;29617:8;:22;;29609:62;;;;-1:-1:-1;;;29609:62:2;;58156:2:48;29609:62:2;;;58138:21:48;58195:2;58175:18;;;58168:30;58234:29;58214:18;;;58207:57;58281:18;;29609:62:2;57954:351:48;29609:62:2;29689:12;29720:15;29732:2;29729;29720:8;29689:12;29720:15;:::i;:::-;29712:24;;;:::i;:::-;29704:33;;;-1:-1:-1;29755:10:2;29784:15;29796:2;29793;29784:8;29755:10;29784:15;:::i;:::-;29776:24;;;:::i;:::-;29768:33;;;-1:-1:-1;29819:14:2;29852:16;29864:3;29861:2;29852:8;29819:14;29852:16;:::i;:::-;29844:25;;;:::i;:::-;29836:34;-1:-1:-1;29888:25:2;29896:4;29902:2;29836:34;29888:7;:25::i;29552:417::-;30117:24;;;;;;;;;;;-1:-1:-1;;;30117:24:2;;;;;30076:27;30107:35;;30076:27;;-1:-1:-1;;30076:27:2;:::i;:::-;;;;;;;;:66;30072:131;;30165:27;30183:8;30165:17;:27::i;:::-;30158:34;;;24391:6116;:::o;30072:131::-;30346:28;;;;;;;;;;;-1:-1:-1;;;30346:28:2;;;;;30305:27;30336:39;;30305:27;;-1:-1:-1;;30305:27:2;:::i;:::-;;;;;;;;:70;30301:136;;30398:28;30417:8;30398:18;:28::i;30301:136::-;30447:53;;-1:-1:-1;;;30447:53:2;;58512:2:48;30447:53:2;;;58494:21:48;58551:2;58531:18;;;58524:30;58590:34;58570:18;;;58563:62;-1:-1:-1;;;58641:18:48;;;58634:40;58691:19;;30447:53:2;58310:406:48;15645:318:2;15742:18;;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;15798:19:2;::::1;15790:58;;;::::0;-1:-1:-1;;;15790:58:2;;59275:2:48;15790:58:2::1;::::0;::::1;59257:21:48::0;59314:2;59294:18;;;59287:30;59353:28;59333:18;;;59326:56;59399:18;;15790:58:2::1;59073:350:48::0;15790:58:2::1;15915:40;::::0;-1:-1:-1;;;15915:40:2;;::::1;::::0;::::1;57151:25:48::0;;;132:2:1::1;::::0;-1:-1:-1;;;;;15915:26:2;::::1;::::0;::::1;::::0;57124:18:48;;15915:40:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15858:98;::::0;;;::::1;::::0;;;-1:-1:-1;15645:318:2;-1:-1:-1;;;15645:318:2:o;7183:239::-;7266:18;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;7322:16:::1;::::0;;7336:1:::1;7322:16:::0;;;;;::::1;::::0;;;7296:23:::1;::::0;7322:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;7322:16:2::1;7296:42;;7360:5;7348:6;7355:1;7348:9;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1::0;;;;;7348:17:2::1;;;-1:-1:-1::0;;;;;7348:17:2::1;;;::::0;::::1;7382:33;7399:7;7408:6;7382:16;:33::i;:::-;7375:40;;;1506:1;7183:239:::0;;;;:::o;44612:1014::-;-1:-1:-1;;;;;44692:18:2;;44688:402;;44726:22;:47;;44765:6;;44726:22;;;:47;;44765:6;;44726:47;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;44726:47:2;;;;;;;-1:-1:-1;;;;;44726:47:2;;;;;;44688:402;;;44804:16;44823:20;44838:4;44823:14;:20::i;:::-;44916:15;;44804:39;;-1:-1:-1;44954:21:2;;;;44946:65;;;;-1:-1:-1;;;44946:65:2;;60508:2:48;44946:65:2;;;60490:21:48;60547:2;60527:18;;;60520:30;60586:33;60566:18;;;60559:61;60637:18;;44946:65:2;60306:355:48;44946:65:2;45053:24;;;45036:42;;44688:402;-1:-1:-1;;;;;45104:16:2;;45100:520;;45136:22;:47;;45175:6;;45136:22;;;:47;;45175:6;;45136:47;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;45136:47:2;;;;;;;-1:-1:-1;;;;;45136:47:2;;;;;;44612:1014;;;:::o;45100:520::-;45214:14;45231:18;45246:2;45231:14;:18::i;:::-;45318:13;;45214:35;;-1:-1:-1;45263:17:2;45537:18;45549:6;45318:13;45537:18;:::i;:::-;45580:28;;;-1:-1:-1;;45100:520:2;44612:1014;;;:::o;9873:529::-;10035:18;;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;10117:17:::1;::::0;;10087:27:::1;10117:17:::0;;;::::1;::::0;::::1;::::0;;;10087:27;10117:17:::1;::::0;::::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10117:17:2;;-1:-1:-1;;10117:17:2;;;;::::1;::::0;::::1;;;;;-1:-1:-1::0;10184:22:2::1;::::0;;10144:37:::1;10184:22:::0;;;::::1;::::0;::::1;::::0;;;10087:47;;-1:-1:-1;10144:37:2;;10184:22:::1;::::0;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1::0;10250:19:2::1;::::0;;10216:31:::1;10250:19:::0;;;::::1;::::0;::::1;::::0;;;10144:62;;-1:-1:-1;10216:31:2;;10250:19:::1;::::0;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;;10216:53;;10286:109;;;;;;;;;;;;;;-1:-1:-1::0;;;10286:109:2::1;;::::0;10318:5:::1;10325:18;10345:9;10356;10367:14;10383:11;10286:12;:109::i;:::-;10279:116;;;;;;;1506:1;9873:529:::0;;;;;;:::o;14640:245::-;14792:5;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;14816:62:::1;14830:5;14837:6;14845:9;14869:6;14816:13;:62::i;:::-;14809:69:::0;14640:245;-1:-1:-1;;;;;14640:245:2:o;20078:328::-;20141:5;;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;20187:55:::1;::::0;-1:-1:-1;;;;;61179:32:48;;20187:55:2::1;::::0;::::1;61161:51:48::0;20164:20:2::1;::::0;61134:18:48;;20187:55:2::1;::::0;;-1:-1:-1;;20187:55:2;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;20187:55:2::1;-1:-1:-1::0;;;20187:55:2::1;::::0;;20294:25;20187:55;;-1:-1:-1;;;;;;;;;;20294:16:2;::::1;::::0;:25:::1;::::0;20187:55;;20294:25:::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20252:67;;;;132:2:1;20366:7:2;:32;;;;;20397:1;20377:10;:17;:21;20366:32;20329:70;;;;;;;;;;;;20078:328:::0;;;:::o;18242:231::-;18308:5;18315:16;;:::i;:::-;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;18351:19:2;::::1;18343:59;;;::::0;-1:-1:-1;;;18343:59:2;;61731:2:48;18343:59:2::1;::::0;::::1;61713:21:48::0;61770:2;61750:18;;;61743:30;61809:29;61789:18;;;61782:57;61856:18;;18343:59:2::1;61529:351:48::0;18343:59:2::1;18420:46;::::0;-1:-1:-1;;;18420:46:2;;-1:-1:-1;;;;;18420:39:2;::::1;:46;::::0;::::1;61161:51:48::0;;;18420:39:2;::::1;::::0;61134:18:48;;18420:46:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;18420:46:2::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;18413:53;;;;18242:231:::0;;;:::o;19122:950::-;19237:5;19244:27;;:::i;:::-;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;19284:18:::1;19304:26;19334:19;19347:5;19334:12;:19::i;:::-;19283:70;;;;132:2:1;19371:43:2;;:12;:43;;;19363:105;;;::::0;-1:-1:-1;;;19363:105:2;;73563:2:48;19363:105:2::1;::::0;::::1;73545:21:48::0;73602:2;73582:18;;;73575:30;73641:34;73621:18;;;73614:62;-1:-1:-1;;;73692:18:48;;;73685:47;73749:19;;19363:105:2::1;73361:413:48::0;19363:105:2::1;19478:48;;:::i;:::-;19536:42:::0;;;19588:48:::1;::::0;;::::1;:33;::::0;::::1;:48:::0;19679:57:::1;::::0;-1:-1:-1;;;19679:57:2;;-1:-1:-1;;;;;19706:29:2;::::1;19679:57;::::0;::::1;57151:25:48::0;-1:-1:-1;;;;;19679:26:2;::::1;::::0;::::1;::::0;57124:18:48;;19679:57:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;19646:90:2;;::::1;:30;::::0;::::1;:90:::0;19777:53:::1;::::0;-1:-1:-1;;;19777:53:2;;-1:-1:-1;;;;;19800:29:2;::::1;19777:53;::::0;::::1;57151:25:48::0;19777:22:2;;::::1;::::0;::::1;::::0;57124:18:48;;19777:53:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;19746:84:2::1;:28;::::0;::::1;:84:::0;20030:12;;-1:-1:-1;19746:20:2;;-1:-1:-1;;1506:1:2::1;19122:950:::0;;;;;:::o;10408:498::-;10668:18;;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;10754:19:::1;::::0;;10720:31:::1;10754:19:::0;;;::::1;::::0;::::1;::::0;;;10720:31;10754:19:::1;::::0;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;;10720:53;;10790:109;;;;;;;;;;;;;;-1:-1:-1::0;;;10790:109:2::1;;::::0;10822:5:::1;10829:18;10849:9;10860;10871:14;10887:11;10790:12;:109::i;:::-;10783:116;;;;;10408:498:::0;;;;;;;;:::o;12523:717::-;12705:18;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;12743:19:2;::::1;12735:59;;;::::0;-1:-1:-1;;;12735:59:2;;73981:2:48;12735:59:2::1;::::0;::::1;73963:21:48::0;74020:2;74000:18;;;73993:30;74059:29;74039:18;;;74032:57;74106:18;;12735:59:2::1;73779:351:48::0;12735:59:2::1;12828:1;12812:6;:13;:17;12804:62;;;::::0;-1:-1:-1;;;12804:62:2;;74337:2:48;12804:62:2::1;::::0;::::1;74319:21:48::0;;;74356:18;;;74349:30;74415:34;74395:18;;;74388:62;74467:18;;12804:62:2::1;74135:356:48::0;12804:62:2::1;12903:6;:13;12884:8;:15;:32;12876:77;;;::::0;-1:-1:-1;;;12876:77:2;;74698:2:48;12876:77:2::1;::::0;::::1;74680:21:48::0;;;74717:18;;;74710:30;74776:34;74756:18;;;74749:62;74828:18;;12876:77:2::1;74496:356:48::0;12876:77:2::1;12994:6;:13;12971:12;:19;:36;12963:81;;;::::0;-1:-1:-1;;;12963:81:2;;74698:2:48;12963:81:2::1;::::0;::::1;74680:21:48::0;;;74717:18;;;74710:30;74776:34;74756:18;;;74749:62;74828:18;;12963:81:2::1;74496:356:48::0;12963:81:2::1;13059:9;13054:128;13078:6;:13;13074:1;:17;13054:128;;;13112:59;13124:5;13131:6;13138:1;13131:9;;;;;;;;:::i;:::-;;;;;;;13142:8;13151:1;13142:11;;;;;;;;:::i;:::-;;;;;;;13155:12;13168:1;13155:15;;;;;;;;:::i;:::-;;;;;;;13112:11;:59::i;:::-;-1:-1:-1::0;13093:3:2::1;;13054:128;;;-1:-1:-1::0;132:2:1::1;::::0;12523:717:2;-1:-1:-1;;;;;12523:717:2:o;5309:845::-;5400:18;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;5454:1:::1;5438:6;:13;:17;5430:61;;;::::0;-1:-1:-1;;;5430:61:2;;75059:2:48;5430:61:2::1;::::0;::::1;75041:21:48::0;75098:2;75078:18;;;75071:30;75137:33;75117:18;;;75110:61;75188:18;;5430:61:2::1;74857:355:48::0;5430:61:2::1;-1:-1:-1::0;;;;;5522:21:2;::::1;5533:10;5522:21;5501:170;;;::::0;-1:-1:-1;;;5501:170:2;;75419:2:48;5501:170:2::1;::::0;::::1;75401:21:48::0;75458:3;75438:18;;;75431:31;75498:34;75478:18;;;75471:62;75569:34;75549:18;;;75542:62;75641:34;75620:19;;;75613:63;-1:-1:-1;;;75692:19:48;;;75685:37;75739:19;;5501:170:2::1;75217:547:48::0;5501:170:2::1;5686:9;5681:415;5705:6;:13;5701:1;:17;5681:415;;;5768:1;-1:-1:-1::0;;;;;5747:23:2::1;:6;5754:1;5747:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;5747:23:2::1;::::0;5739:66:::1;;;::::0;-1:-1:-1;;;5739:66:2;;75971:2:48;5739:66:2::1;::::0;::::1;75953:21:48::0;76010:2;75990:18;;;75983:30;76049:32;76029:18;;;76022:60;76099:18;;5739:66:2::1;75769:354:48::0;5739:66:2::1;5819:29;5871:6;5878:1;5871:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;5851:45:2::1;;5897:7;5906:6;5913:1;5906:9;;;;;;;;:::i;:::-;;;;;;;5851:65;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;76320:32:48;;;76302:51;;76389:32;;76384:2;76369:18;;76362:60;76290:2;76275:18;;76128:300;5851:65:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5819:97:::0;-1:-1:-1;5955:54:2::1;::::0;;::::1;132:2:1;5955:54:2;5930:155;;;::::0;-1:-1:-1;;;5930:155:2;;76887:2:48;5930:155:2::1;::::0;::::1;76869:21:48::0;76926:2;76906:18;;;76899:30;76965:34;76945:18;;;76938:62;-1:-1:-1;;;77016:18:48;;;77009:40;77066:19;;5930:155:2::1;76685:406:48::0;5930:155:2::1;-1:-1:-1::0;5720:3:2::1;;5681:415;;;-1:-1:-1::0;132:2:1::1;::::0;5309:845:2;-1:-1:-1;;;5309:845:2:o;17203:239::-;17283:5;;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;17307:18:::1;17327:26;17357:19;17370:5;17357:12;:19::i;:::-;17408:26;;::::0;17306:70;;-1:-1:-1;17408:26:2;-1:-1:-1;;;17203:239:2;;;:::o;15969:294::-;16100:18;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;16130:74:::1;::::0;-1:-1:-1;;;16130:74:2;;16173:10:::1;16130:74;::::0;::::1;77292:51:48::0;-1:-1:-1;;;;;77379:32:48;;;77359:18;;;77352:60;77455:14;;77448:22;77428:18;;;77421:50;16130:42:2;::::1;::::0;::::1;::::0;77265:18:48;;16130:74:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;132:2:1::1;::::0;15969:294:2;-1:-1:-1;;;;15969:294:2:o;18479:637::-;18560:5;18567:15;;:::i;:::-;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;18595:18:::1;18615:26;18645:19;18658:5;18645:12;:19::i;:::-;18594:70;;;;132:2:1;18682:43:2;;:12;:43;;;18674:93;;;::::0;-1:-1:-1;;;18674:93:2;;77684:2:48;18674:93:2::1;::::0;::::1;77666:21:48::0;77723:2;77703:18;;;77696:30;77762:34;77742:18;;;77735:62;-1:-1:-1;;;77813:18:48;;;77806:35;77858:19;;18674:93:2::1;77482:401:48::0;18674:93:2::1;18782:9;18777:243;18801:15:::0;;:25:::1;;::::0;:32;18797:36;::::1;18777:243;;;18898:7;18858:9;:15;;;:25;;;18884:1;18858:28;;;;;;;;:::i;:::-;;;;;;;:36;;;:47:::0;18854:156:::1;;132:2:1;18962:9:2;:15;;;:25;;;18988:1;18962:28;;;;;;;;:::i;:::-;;;;;;;:32;;;18925:70;;;;;;;;;;;;;;18854:156;18835:3;;18777:243;;;;19029:24;;:::i;:::-;132:2:1;::::0;19100:8:2;;-1:-1:-1;18479:637:2;-1:-1:-1;;;;;18479:637:2:o;17699:537::-;17775:5;17782:24;;:::i;:::-;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;17819:18:::1;17839:26;17869:19;17882:5;17869:12;:19::i;:::-;17818:70;;;;132:2:1;17906:43:2;;:12;:43;;;17898:102;;;::::0;-1:-1:-1;;;17898:102:2;;78090:2:48;17898:102:2::1;::::0;::::1;78072:21:48::0;78129:2;78109:18;;;78102:30;78168:34;78148:18;;;78141:62;-1:-1:-1;;;78219:18:48;;;78212:44;78273:19;;17898:102:2::1;77888:410:48::0;17898:102:2::1;18010:42;;:::i;:::-;18092:9;18062:17;:27;;:39;;;;18159:5;-1:-1:-1::0;;;;;18152:22:2::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18141:37;;18111:26;::::0;::::1;:67:::0;18197:12;;-1:-1:-1;18111:17:2;;-1:-1:-1;;17699:537:2;;;:::o;6160:237::-;6242:18;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;6298:16:::1;::::0;;6312:1:::1;6298:16:::0;;;;;::::1;::::0;;;6272:23:::1;::::0;6298:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;6298:16:2::1;6272:42;;6336:5;6324:6;6331:1;6324:9;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1::0;;;;;6324:17:2::1;;;-1:-1:-1::0;;;;;6324:17:2::1;;;::::0;::::1;6358:32;6374:7;6383:6;6358:15;:32::i;14008:381::-:0;14161:18;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;14249:81:::1;::::0;-1:-1:-1;;;14249:81:2;;14290:10:::1;14249:81;::::0;::::1;78812:51:48::0;-1:-1:-1;;;;;78899:32:48;;;78879:18;;;78872:60;78968:32;;;78948:18;;;78941:60;-1:-1:-1;;;;;14210:29:2;::::1;79017:18:48::0;;;79010:34;;;14210:29:2;14249:40;;::::1;::::0;::::1;::::0;78784:19:48;;14249:81:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;132:2:1::1;::::0;14008:381:2;-1:-1:-1;;;;;;14008:381:2:o;15104:289::-;15233:18;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;15263:71:::1;::::0;-1:-1:-1;;;15263:71:2;;-1:-1:-1;;;;;15263:35:2;::::1;::::0;::::1;::::0;:71:::1;::::0;15299:10:::1;::::0;15311:8;;15321:12;;15263:71:::1;;;:::i;6403:774::-:0;6495:18;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;6549:1:::1;6533:6;:13;:17;6525:62;;;::::0;-1:-1:-1;;;6525:62:2;;79633:2:48;6525:62:2::1;::::0;::::1;79615:21:48::0;;;79652:18;;;79645:30;79711:34;79691:18;;;79684:62;79763:18;;6525:62:2::1;79431:356:48::0;6525:62:2::1;-1:-1:-1::0;;;;;6605:21:2;::::1;6616:10;6605:21;6597:137;;;::::0;-1:-1:-1;;;6597:137:2;;79994:2:48;6597:137:2::1;::::0;::::1;79976:21:48::0;80033:3;80013:18;;;80006:31;80073:34;80053:18;;;80046:62;80144:34;80124:18;;;80117:62;80216:34;80195:19;;;80188:63;-1:-1:-1;;;80267:19:48;;;80260:38;80315:19;;6597:137:2::1;79792:548:48::0;6597:137:2::1;6749:9;6744:375;6768:6;:13;6764:1;:17;6744:375;;;6831:1;-1:-1:-1::0;;;;;6810:23:2::1;:6;6817:1;6810:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;6810:23:2::1;::::0;6802:67:::1;;;::::0;-1:-1:-1;;;6802:67:2;;80547:2:48;6802:67:2::1;::::0;::::1;80529:21:48::0;80586:2;80566:18;;;80559:30;80625:33;80605:18;;;80598:61;80676:18;;6802:67:2::1;80345:355:48::0;6802:67:2::1;6883:30;6936:6;6943:1;6936:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;6916:46:2::1;;6963:7;6972:6;6979:1;6972:9;;;;;;;;:::i;:::-;;;;;;;6916:66;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;76320:32:48;;;76302:51;;76389:32;;76384:2;76369:18;;76362:60;76290:2;76275:18;;76128:300;6916:66:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6883:99:::0;-1:-1:-1;7004:55:2::1;::::0;;::::1;132:2:1;7004:55:2;6996:112;;;::::0;-1:-1:-1;;;6996:112:2;;80907:2:48;6996:112:2::1;::::0;::::1;80889:21:48::0;80946:2;80926:18;;;80919:30;80985:34;80965:18;;;80958:62;-1:-1:-1;;;81036:18:48;;;81029:42;81088:19;;6996:112:2::1;80705:408:48::0;6996:112:2::1;-1:-1:-1::0;6783:3:2::1;;6744:375;;11800:717:::0;11946:18;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;11984:19:2;::::1;11976:61;;;::::0;-1:-1:-1;;;11976:61:2;;81320:2:48;11976:61:2::1;::::0;::::1;81302:21:48::0;81359:2;81339:18;;;81332:30;81398:31;81378:18;;;81371:59;81447:18;;11976:61:2::1;81118:353:48::0;11976:61:2::1;12074:1;12055:9;:16;:20;12047:67;;;::::0;-1:-1:-1;;;12047:67:2;;81678:2:48;12047:67:2::1;::::0;::::1;81660:21:48::0;81717:2;81697:18;;;81690:30;81756:34;81736:18;;;81729:62;-1:-1:-1;;;81807:18:48;;;81800:32;81849:19;;12047:67:2::1;81476:398:48::0;12047:67:2::1;12149:9;:16;12132:6;:13;:33;12124:80;;;::::0;-1:-1:-1;;;12124:80:2;;82081:2:48;12124:80:2::1;::::0;::::1;82063:21:48::0;82120:2;82100:18;;;82093:30;82159:34;82139:18;;;82132:62;-1:-1:-1;;;82210:18:48;;;82203:32;82252:19;;12124:80:2::1;81879:398:48::0;12124:80:2::1;12219:9;12214:245;12238:9;:16;12234:1;:20;12214:245;;;12290:57;12304:5;12311:10;12323:9;12333:1;12323:12;;;;;;;;:::i;:::-;;;;;;;12337:6;12344:1;12337:9;;;;;;;;:::i;:::-;;;;;;;12290:13;:57::i;:::-;12275:72:::0;-1:-1:-1;12369:43:2::1;::::0;;::::1;132:2:1;12369:43:2;12361:87;;;::::0;-1:-1:-1;;;12361:87:2;;82484:2:48;12361:87:2::1;::::0;::::1;82466:21:48::0;82523:2;82503:18;;;82496:30;82562:33;82542:18;;;82535:61;82613:18;;12361:87:2::1;82282:355:48::0;12361:87:2::1;12256:3;;12214:245;;14891:207:::0;14988:5;;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;15051:39:::1;::::0;-1:-1:-1;;;15051:39:2;;-1:-1:-1;;;;;76320:32:48;;;15051:39:2::1;::::0;::::1;76302:51:48::0;76389:32;;;76369:18;;;76362:60;132:2:1::1;::::0;15051:23:2;;::::1;::::0;::::1;::::0;76275:18:48;;15051:39:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15014:77;::::0;;;::::1;::::0;;;-1:-1:-1;14891:207:2;-1:-1:-1;;;;14891:207:2:o;20412:223::-;20480:5;;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;20512:19:2;::::1;20504:61;;;::::0;-1:-1:-1;;;20504:61:2;;83079:2:48;20504:61:2::1;::::0;::::1;83061:21:48::0;83118:2;83098:18;;;83091:30;83157:31;83137:18;;;83130:59;83206:18;;20504:61:2::1;82877:353:48::0;20504:61:2::1;20582:46;::::0;-1:-1:-1;;;20582:46:2;;-1:-1:-1;;;;;20582:39:2;::::1;:46;::::0;::::1;61161:51:48::0;;;20582:39:2;::::1;::::0;61134:18:48;;20582:46:2::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;15399:240::-:0;15551:5;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;15575:57:::1;15587:5;15594:4;15600:2;15617:12;15575:11;:57::i;16952:245::-:0;17035:5;;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;17059:18:::1;17079:26;17109:19;17122:5;17109:12;:19::i;:::-;17160:15:::0;:29:::1;;::::0;17058:70;;-1:-1:-1;17160:29:2;-1:-1:-1;;;16952:245:2;;;:::o;11370:424::-;11568:18;;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;11660:22:::1;::::0;;11620:37:::1;11660:22:::0;;;::::1;::::0;::::1;::::0;;;11620:37;11660:22:::1;::::0;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;;11620:62;;11699:88;;;;;;;;;;;;;;-1:-1:-1::0;;;11699:88:2::1;;::::0;11735:5:::1;11742:1;11745;11748:9;11759:14;11775:11;11699:12;:88::i;:::-;11692:95;;;;;11370:424:::0;;;;;;:::o;16599:347::-;16687:5;16694:17;;;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;16769:18:::1;16789:26;16819:19;16832:5;16819:12;:19::i;:::-;16870;::::0;::::1;::::0;16891:24:::1;::::0;::::1;::::0;16917:21:::1;::::0;;::::1;::::0;16768:70;;-1:-1:-1;16870:19:2;-1:-1:-1;16891:24:2;-1:-1:-1;16917:21:2;-1:-1:-1;;;16599:347:2;;;;;:::o;17448:245::-;-1:-1:-1;;;;;;;;17522:5:2;-1:-1:-1;;;;;;;;;;;;;;;1448:4:2;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;17562:18:::1;17582:26;17612:19;17625:5;17612:12;:19::i;:::-;17663:15:::0;:22:::1;;::::0;17561:70;;-1:-1:-1;17663:22:2;-1:-1:-1;;;17448:245:2;;;:::o;4211:1092::-;4310:18;;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;4383:19:2;::::1;4375:56;;;::::0;-1:-1:-1;;;4375:56:2;;83819:2:48;4375:56:2::1;::::0;::::1;83801:21:48::0;83858:2;83838:18;;;83831:30;83897:26;83877:18;;;83870:54;83941:18;;4375:56:2::1;83617:348:48::0;4375:56:2::1;4458:1;4449:6;:10;;;4441:48;;;::::0;-1:-1:-1;;;4441:48:2;;84172:2:48;4441:48:2::1;::::0;::::1;84154:21:48::0;84211:2;84191:18;;;84184:30;84250:27;84230:18;;;84223:55;84295:18;;4441:48:2::1;83970:349:48::0;4441:48:2::1;4560:46;::::0;-1:-1:-1;;;4560:46:2;;-1:-1:-1;;;;;4560:39:2;::::1;:46;::::0;::::1;61161:51:48::0;;;4501:27:2::1;::::0;;;4560:39;::::1;::::0;61134:18:48;;4560:46:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;4560:46:2::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;4500:106;;;;4621:33;4638:4;4644:9;4621:16;:33::i;:::-;4616:140;;4723:21;;::::0;219:3:1::1;::::0;-1:-1:-1;4723:21:2;-1:-1:-1;4670:75:2::1;::::0;-1:-1:-1;4670:75:2::1;4616:140;4773:52;::::0;;::::1;132:2:1;4773:52:2;4765:100;;;::::0;-1:-1:-1;;;4765:100:2;;84526:2:48;4765:100:2::1;::::0;::::1;84508:21:48::0;84565:2;84545:18;;;84538:30;84604:34;84584:18;;;84577:62;-1:-1:-1;;;84655:18:48;;;84648:33;84698:19;;4765:100:2::1;84324:399:48::0;4765:100:2::1;4902:15:::0;;:24:::1;;::::0;-1:-1:-1;;;;;4944:29:2;::::1;4936:68;;;::::0;-1:-1:-1;;;4936:68:2;;84930:2:48;4936:68:2::1;::::0;::::1;84912:21:48::0;84969:2;84949:18;;;84942:30;85008:28;84988:18;;;84981:56;85054:18;;4936:68:2::1;84728:350:48::0;4936:68:2::1;5015:86;::::0;-1:-1:-1;;;5015:86:2;;-1:-1:-1;;;;;5015:32:2;::::1;::::0;::::1;::::0;:86:::1;::::0;5048:15;;5073:1:::1;::::0;-1:-1:-1;;;;;5077:23:2;::::1;::::0;5015:86:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;132:2:1;5112:42:2;;;;5201:5;-1:-1:-1::0;;;;;5194:25:2::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5164:59;;5259:1;5241:14;:19;;;;5233:63;;;::::0;-1:-1:-1;;;5233:63:2;;85285:2:48;5233:63:2::1;::::0;::::1;85267:21:48::0;85324:2;85304:18;;;85297:30;85363:33;85343:18;;;85336:61;85414:18;;5233:63:2::1;85083:355:48::0;5233:63:2::1;4365:938;;;4211:1092:::0;;;;;;:::o;36867:2836::-;37007:9;:22;37019:10;37007:9;:22;:::i;:::-;-1:-1:-1;37039:8:2;:35;;-1:-1:-1;;37039:35:2;;;;;;;38104:15;;:20;38080:10;;:44;;:10;:44;:::i;:::-;-1:-1:-1;38160:15:2;;:22;;;38134:23;;:48;;:23;:48;:::i;:::-;-1:-1:-1;38220:15:2;;:24;;;;38192:25;:52;;-1:-1:-1;;;;;;38192:52:2;-1:-1:-1;;;;;38192:52:2;;;;;;;;;38278:20;;;38254:21;;:44;;:21;:44;:::i;:::-;-1:-1:-1;38343:15:2;;:31;;;;38308:32;:66;;38413:25;;;;38481:29;;;;;38448:62;;-1:-1:-1;;;38448:62:2;-1:-1:-1;;;;;;;38384:54:2;;;38308:66;38384:54;-1:-1:-1;;38308:66:2;;;38384:54;;;;-1:-1:-1;;38384:54:2;;;;;;;;;;;38448:62;;;;;;;38343:15;38521:149;38545:15;;:25;;;:32;38541:36;;38521:149;;;38630:15;;:25;;;:28;;38598:26;;38630:25;38656:1;;38630:28;;;;;;:::i;:::-;;;;;;;;;;;;38598:61;;;;;;;;-1:-1:-1;38598:61:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;38598:61:2;;;-1:-1:-1;;;;;;38598:61:2;;;;;;;-1:-1:-1;;;;;;38598:61:2;;;;;;;;;;;;;;;;;38630:28;;38598:61;;;;;;;;;;;;:::i;:::-;-1:-1:-1;38598:61:2;;;;;;;;;;;;:::i;:::-;-1:-1:-1;38598:61:2;;;;;;;;;;;;-1:-1:-1;;;;;;38598:61:2;-1:-1:-1;;;;;38598:61:2;;;;;;;;;-1:-1:-1;;;38579:3:2;38521:149;;;-1:-1:-1;38706:15:2;;:22;;;38680:48;;:23;:48;;;;;;;-1:-1:-1;;;;;38680:48:2;-1:-1:-1;;;38680:48:2;;;-1:-1:-1;;;;;;38680:48:2;;;-1:-1:-1;;;;;38680:48:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;38680:48:2;;;;;;;;;;38764:21;;;;38739:22;:46;;38816:17;;;;38873:26;;;;38934:21;;;;38909:46;;-1:-1:-1;;;38909:46:2;-1:-1:-1;;;;38843:56:2;;;-1:-1:-1;;;38843:56:2;38909:46;;;;-1:-1:-1;;38795:38:2;;;;;;-1:-1:-1;;38795:38:2;;;38739:46;;;;38795:38;;;;;;;;38909:46;;;;;38706:15;39090:131;39114:9;:19;;;:26;39110:1;:30;39090:131;;;39161:10;:20;;39187:9;:19;;;39207:1;39187:22;;;;;;;;:::i;:::-;;;;;;;;;;;;39161:49;;;;;;;;-1:-1:-1;39161:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;39161:49:2;;;-1:-1:-1;;;;;;39161:49:2;;;;;;;-1:-1:-1;;;;;;;;39161:49:2;;;;;-1:-1:-1;;;;39161:49:2;-1:-1:-1;;;39161:49:2;;;;;;;-1:-1:-1;;;;39161:49:2;;;;;-1:-1:-1;;;39161:49:2;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;39161:49:2;;;;;;;;39142:3;39090:131;;;-1:-1:-1;39300:9:2;39295:146;39319:9;:24;;;:31;39315:1;:35;39295:146;;;39371:10;:25;;39402:9;:24;;;39427:1;39402:27;;;;;;;;:::i;:::-;;;;;;;;;;;;39371:59;;;;;;;;-1:-1:-1;39371:59:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;39371:59:2;;;-1:-1:-1;;;39371:59:2;-1:-1:-1;;;;;39371:59:2;;;-1:-1:-1;;;39371:59:2;;;;;;;;;-1:-1:-1;;;39371:59:2;-1:-1:-1;;;;;;39371:59:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;39371:59:2;;;-1:-1:-1;;;;;;39371:59:2;;;;;;;-1:-1:-1;;;;;;39371:59:2;;;;;;;;;;;;;39352:3;39295:146;;;-1:-1:-1;39514:9:2;39509:137;39533:9;:21;;;:28;39529:1;:32;39509:137;;;39582:10;:22;;39610:9;:21;;;39632:1;39610:24;;;;;;;;:::i;:::-;;;;;;;;;;;;39582:53;;;;;;;;-1:-1:-1;39582:53:2;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;39582:53:2;;;-1:-1:-1;;;39582:53:2;-1:-1:-1;;;;39582:53:2;;;-1:-1:-1;;;39582:53:2;-1:-1:-1;;;;;;39582:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;39582:53:2;-1:-1:-1;;;;;;39582:53:2;;;-1:-1:-1;;;;;39582:53:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;39582:53:2;;;;;;;;;;39563:3;39509:137;;;-1:-1:-1;39678:18:2;;;;39656:19;;:40;;:19;:40;:::i;:::-;;36867:2836;;;:::o;2174:307::-;2244:16;;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;2285:12:::1;2300:26;2318:7;2300:17;:26::i;:::-;2379:11:::0;;2473:1:::1;2336:13;2460:8:::0;;::::1;2454:20;::::0;-1:-1:-1;2174:307:2;-1:-1:-1;;;2174:307:2:o;2730:247::-;2829:18;;2887:28;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;2939:31:::1;2950:5;2957:6;2965:4;2939:10;:31::i;:::-;2932:38;;;;;;1506:1;2730:247:::0;;;;;;;:::o;14395:239::-;14484:18;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;14514:61:::1;::::0;-1:-1:-1;;;14514:61:2;;-1:-1:-1;;;;;14514:32:2;::::1;::::0;::::1;::::0;:61:::1;::::0;14547:10:::1;::::0;14559:7;;14568:6;;14514:61:::1;;;:::i;10912:452::-:0;11018:18;;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;11100:17:::1;::::0;;11070:27:::1;11100:17:::0;;;::::1;::::0;::::1;::::0;;;11070:27;11100:17:::1;::::0;::::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11100:17:2;;-1:-1:-1;;11100:17:2;;;;::::1;::::0;::::1;;;;;-1:-1:-1::0;11167:22:2::1;::::0;;11127:37:::1;11167:22:::0;;;::::1;::::0;::::1;::::0;;;11070:47;;-1:-1:-1;11127:37:2;;11167:22:::1;::::0;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1::0;11233:19:2::1;::::0;;11199:31:::1;11233:19:::0;;;::::1;::::0;::::1;::::0;;;11127:62;;-1:-1:-1;11199:31:2;;11233:19:::1;::::0;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;;11199:53;;11269:88;;;;;;;;;;;;;;-1:-1:-1::0;;;11269:88:2::1;;::::0;11305:5:::1;11312:1;11315;11318:9;11329:14;11345:11;11269:12;:88::i;:::-;11262:95;;;;;;;10912:452:::0;;;:::o;13246:756::-;13395:18;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;13433:19:2;::::1;13425:60;;;::::0;-1:-1:-1;;;13425:60:2;;88951:2:48;13425:60:2::1;::::0;::::1;88933:21:48::0;88990:2;88970:18;;;88963:30;89029;89009:18;;;89002:58;89077:18;;13425:60:2::1;88749:352:48::0;13425:60:2::1;13510:6:::0;13539:9;13495:12:::1;13562:10;::::0;;::::1;;13558:108;;;-1:-1:-1::0;13595:9:2;;-1:-1:-1;13623:6:2;13643:12:::1;-1:-1:-1::0;;13643:12:2;::::1;:::i;:::-;;;13558:108;-1:-1:-1::0;;;;;13696:18:2;::::1;13704:10;13696:18;::::0;:102:::1;;-1:-1:-1::0;13730:41:2::1;::::0;-1:-1:-1;;;13730:41:2;;-1:-1:-1;;;;;76320:32:48;;;13730:41:2::1;::::0;::::1;76302:51:48::0;13760:10:2::1;76369:18:48::0;;;76362:60;-1:-1:-1;;;;;13775:23:2;::::1;::::0;13730;;::::1;::::0;::::1;::::0;76275:18:48;;13730:41:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;13696:102;13675:174;;;::::0;-1:-1:-1;;;13675:174:2;;89550:2:48;13675:174:2::1;::::0;::::1;89532:21:48::0;89589:2;89569:18;;;89562:30;89628:27;89608:18;;;89601:55;89673:18;;13675:174:2::1;89348:349:48::0;13675:174:2::1;13859:84;::::0;-1:-1:-1;;;13859:84:2;;13897:10:::1;13859:84;::::0;::::1;78812:51:48::0;-1:-1:-1;;;;;78899:32:48;;;78879:18;;;78872:60;78968:32;;;78948:18;;;78941:60;-1:-1:-1;;;;;13919:23:2;::::1;79017:18:48::0;;;79010:34;13859:37:2;::::1;::::0;::::1;::::0;78784:19:48;;13859:84:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;132:2:1::1;::::0;13246:756:2;-1:-1:-1;;;;;;;13246:756:2:o;16269:324::-;16404:5;;1448:4;382:5;1440:28;1432:64;;;;-1:-1:-1;;;1432:64:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;16435:19:2;::::1;16427:63;;;::::0;-1:-1:-1;;;16427:63:2;;89904:2:48;16427:63:2::1;::::0;::::1;89886:21:48::0;89943:2;89923:18;;;89916:30;89982:33;89962:18;;;89955:61;90033:18;;16427:63:2::1;89702:355:48::0;16427:63:2::1;16537:48;::::0;-1:-1:-1;;;16537:48:2;;-1:-1:-1;;;;;76320:32:48;;;16537:48:2::1;::::0;::::1;76302:51:48::0;76389:32;;;76369:18;;;76362:60;132:2:1::1;::::0;16537:31:2;;::::1;::::0;::::1;::::0;76275:18:48;;16537:48:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;40514:359::-:0;40721:52;;-1:-1:-1;;;40721:52:2;;-1:-1:-1;;;;;61179:32:48;;40721:52:2;;;61161:51:48;40584:7:2;;-1:-1:-1;;;40621:29:2;40584:7;;;;;;382:5;;40721:43;;61134:18:48;;40721:52:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;40687:86;;;;40791:6;40783:15;;;;;;40840:8;40850:3;40855:9;40823:42;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;40815:51;;;:::i;:::-;40808:58;40514:359;-1:-1:-1;;;;;;40514:359:2:o;46705:404::-;46796:24;46823:27;46835:5;46842:7;46823:11;:27::i;:::-;46796:54;;-1:-1:-1;;46864:16:2;:37;46860:243;;46945:6;46925:16;:26;;46917:68;;;;-1:-1:-1;;;46917:68:2;;91644:2:48;46917:68:2;;;91626:21:48;91683:2;91663:18;;;91656:30;91722:31;91702:18;;;91695:59;91771:18;;46917:68:2;91442:353:48;46917:68:2;47027:51;47036:5;47043:7;47071:6;47052:16;:25;47027:8;:51::i;43235:279::-;-1:-1:-1;;;;;43322:18:2;;43314:50;;;;-1:-1:-1;;;43314:50:2;;92002:2:48;43314:50:2;;;91984:21:48;92041:2;92021:18;;;92014:30;-1:-1:-1;;;92060:18:48;;;92053:49;92119:18;;43314:50:2;91800:343:48;43314:50:2;-1:-1:-1;;;;;43382:16:2;;43374:50;;;;-1:-1:-1;;;43374:50:2;;92350:2:48;43374:50:2;;;92332:21:48;92389:2;92369:18;;;92362:30;-1:-1:-1;;;92408:18:48;;;92401:51;92469:18;;43374:50:2;92148:345:48;43374:50:2;43434:25;43442:4;43448:2;43452:6;43434:7;:25::i;:::-;43496:2;-1:-1:-1;;;;;43474:33:2;43490:4;-1:-1:-1;;;;;43474:33:2;;43500:6;43474:33;;;;57151:25:48;;57139:2;57124:18;;57005:177;43474:33:2;;;;;;;;43235:279;;;:::o;43520:1086::-;-1:-1:-1;;;;;43628:18:2;;43620:50;;;;-1:-1:-1;;;43620:50:2;;92002:2:48;43620:50:2;;;91984:21:48;92041:2;92021:18;;;92014:30;-1:-1:-1;;;92060:18:48;;;92053:49;92119:18;;43620:50:2;91800:343:48;43620:50:2;-1:-1:-1;;;;;43688:16:2;;43680:50;;;;-1:-1:-1;;;43680:50:2;;92350:2:48;43680:50:2;;;92332:21:48;92389:2;92369:18;;;92362:30;-1:-1:-1;;;92408:18:48;;;92401:51;92469:18;;43680:50:2;92148:345:48;43680:50:2;43798:12;43813:30;43833:8;43813:12;:30::i;:::-;43896:11;;43798:45;;-1:-1:-1;;;;;;43926:13:2;;;;;;;43918:50;;;;-1:-1:-1;;;43918:50:2;;92700:2:48;43918:50:2;;;92682:21:48;92739:2;92719:18;;;92712:30;92778:26;92758:18;;;92751:54;92822:18;;43918:50:2;92498:348:48;43918:50:2;43992:5;-1:-1:-1;;;;;43982:15:2;:6;-1:-1:-1;;;;;43982:15:2;;43978:146;;44031:23;44045:8;44031:13;:23::i;:::-;-1:-1:-1;;;;;44021:33:2;:6;-1:-1:-1;;;;;44021:33:2;;:70;;;;44058:33;44077:5;44084:6;44058:18;:33::i;:::-;44013:100;;;;-1:-1:-1;;;44013:100:2;;93053:2:48;44013:100:2;;;93035:21:48;93092:2;93072:18;;;93065:30;-1:-1:-1;;;93111:18:48;;;93104:47;93168:18;;44013:100:2;92851:341:48;44013:100:2;44160:20;44183:34;44207:8;44183:16;:34::i;:::-;44160:57;;44259:1;44245:12;44238:23;44320:6;-1:-1:-1;;;;;44311:15:2;:5;-1:-1:-1;;;;;44311:15:2;;44307:174;;44342:28;44373:36;44395:5;44402:6;44373:21;:36::i;:::-;44463:5;44434:35;;-1:-1:-1;44307:174:2;44544:2;44538:4;44531:16;44590:8;44586:2;-1:-1:-1;;;;;44563:36:2;44580:4;-1:-1:-1;;;;;44563:36:2;;;;;;;;;;;43610:996;;;43520:1086;;;;:::o;45632:330::-;-1:-1:-1;;;;;45724:19:2;;45716:55;;;;-1:-1:-1;;;45716:55:2;;93399:2:48;45716:55:2;;;93381:21:48;93438:2;93418:18;;;93411:30;93477:25;93457:18;;;93450:53;93520:18;;45716:55:2;93197:347:48;45716:55:2;-1:-1:-1;;;;;45789:21:2;;45781:59;;;;-1:-1:-1;;;45781:59:2;;93751:2:48;45781:59:2;;;93733:21:48;93790:2;93770:18;;;93763:30;93829:27;93809:18;;;93802:55;93874:18;;45781:59:2;93549:349:48;45781:59:2;45850:21;45874:30;45889:5;45896:7;45874:14;:30::i;:::-;45925:29;;;;-1:-1:-1;;;45632:330:2:o;45968:612::-;46141:13;46157:19;46167:8;46157:9;:19::i;:::-;46141:35;;46217:5;-1:-1:-1;;;;;46207:15:2;:6;-1:-1:-1;;;;;46207:15:2;;:52;;;;46253:6;-1:-1:-1;;;;;46226:33:2;:23;46240:8;46226:13;:23::i;:::-;-1:-1:-1;;;;;46226:33:2;;46207:52;:89;;;;46263:33;46282:5;46289:6;46263:18;:33::i;:::-;46186:158;;;;-1:-1:-1;;;46186:158:2;;94105:2:48;46186:158:2;;;94087:21:48;94144:2;94124:18;;;94117:30;-1:-1:-1;;;94163:18:48;;;94156:52;94225:18;;46186:158:2;93903:346:48;46186:158:2;46355:12;46370:34;46394:8;46370:16;:34::i;:::-;46355:49;;46414:19;46436:10;:33;;46467:1;46436:33;;;46449:7;46436:33;46414:55;;46503:11;46497:4;46490:25;46564:8;46555:7;-1:-1:-1;;;;;46531:42:2;46548:5;-1:-1:-1;;;;;46531:42:2;;;;;;;;;;;46062:518;;;45968:612;;;;:::o;47115:367::-;-1:-1:-1;;;;;47218:22:2;;;;;;:44;;;47256:6;-1:-1:-1;;;;;47244:18:2;:8;-1:-1:-1;;;;;47244:18:2;;;47218:44;47210:92;;;;-1:-1:-1;;;47210:92:2;;94456:2:48;47210:92:2;;;94438:21:48;94495:2;94475:18;;;94468:30;94534:34;94514:18;;;94507:62;-1:-1:-1;;;94585:18:48;;;94578:33;94628:19;;47210:92:2;94254:399:48;47210:92:2;47312:12;47327:39;47349:6;47357:8;47327:21;:39::i;:::-;47312:54;;47400:8;47394:4;47387:22;47456:8;-1:-1:-1;;;;;47425:50:2;47448:6;-1:-1:-1;;;;;47425:50:2;;47466:8;47425:50;;;;43717:14:48;43710:22;43692:41;;43680:2;43665:18;;43552:187;47425:50:2;;;;;;;;47200:282;47115:367;;;:::o;30513:2505::-;30574:12;-1:-1:-1;;;;;;;;;30602:32:2;;;30598:103;;30657:33;;;;30668:10;;30657:33;;;:::i;:::-;;;;;;;;;;;;;30650:40;;30513:2505;;;:::o;30598:103::-;-1:-1:-1;;;;;;;;;30714:36:2;;;30710:94;;30784:8;;30773:20;;;30784:8;;;;30773:20;;;95030:36:48;95003:18;30773:20:2;94888:184:48;30710:94:2;-1:-1:-1;;;;;;;;;30817:39:2;;;30813:111;;30890:22;;30879:34;;;30890:22;;;;;30879:34;;;3824:40:48;3797:18;30879:34:2;3682:188:48;30813:111:2;-1:-1:-1;;;;;;;;;30937:34:2;;;30933:107;;30994:35;;;;31005:23;;30994:35;;;:::i;30933:107::-;-1:-1:-1;;;;;;;;;31053:37:2;;;31049:251;;31133:2;31114:8;:21;;31106:64;;;;-1:-1:-1;;;31106:64:2;;95279:2:48;31106:64:2;;;95261:21:48;95318:2;95298:18;;;95291:30;95357:32;95337:18;;;95330:60;95407:18;;31106:64:2;95077:354:48;31106:64:2;31185:15;31219;31231:2;31228;31219:8;31185:15;31219;:::i;:::-;31211:24;;;:::i;:::-;31203:33;;31185:51;;31268:20;31280:7;31268:11;:20::i;:::-;31257:32;;;;;;57151:25:48;;57139:2;57124:18;;57005:177;31257:32:2;;;;;;;;;;;;;31250:39;;;30513:2505;;;:::o;31049:251::-;-1:-1:-1;;;;;;;;;31313:36:2;;;31309:374;;31392:2;31373:8;:21;;31365:63;;;;-1:-1:-1;;;31365:63:2;;95638:2:48;31365:63:2;;;95620:21:48;95677:2;95657:18;;;95650:30;95716:31;95696:18;;;95689:59;95765:18;;31365:63:2;95436:353:48;31365:63:2;31443:10;31472:15;31484:2;31481;31472:8;31443:10;31472:15;:::i;:::-;31464:24;;;:::i;:::-;31456:33;;;-1:-1:-1;31503:14:2;31536:15;31548:2;31545;31536:8;31503:14;31536:15;:::i;:::-;31528:24;;;:::i;:::-;31520:33;-1:-1:-1;31583:10:2;31607:28;31583:10;31624:2;31520:33;31607:9;:28::i;:::-;31656:16;;;31667:4;31656:16;;;43692:41:48;43665:18;31656:16:2;;;;;;;;;;;;;31649:23;;;;;30513:2505;;;:::o;31309:374::-;-1:-1:-1;;;;;;;;;31696:40:2;;;31692:497;;31779:3;31760:8;:22;;31752:65;;;;-1:-1:-1;;;31752:65:2;;95996:2:48;31752:65:2;;;95978:21:48;96035:2;96015:18;;;96008:30;96074:32;96054:18;;;96047:60;96124:18;;31752:65:2;95794:354:48;31752:65:2;31832:12;31863:15;31875:2;31872;31863:8;31832:12;31863:15;:::i;:::-;31855:24;;;:::i;:::-;31847:33;;;-1:-1:-1;31894:10:2;31923:15;31935:2;31932;31923:8;31894:10;31923:15;:::i;:::-;31915:24;;;:::i;:::-;31907:33;;;-1:-1:-1;31954:14:2;31987:16;31999:3;31996:2;31987:8;31954:14;31987:16;:::i;:::-;31979:25;;;:::i;:::-;31971:34;-1:-1:-1;32037:10:2;32062:38;32078:4;32037:10;31971:34;32062:15;:38::i;:::-;32114:27;32124:4;32130:2;32134:6;32114:9;:27::i;:::-;32162:16;;;32173:4;32162:16;;;43692:41:48;43665:18;32162:16:2;;;;;;;;;;;;32155:23;;;;;;30513:2505;;;:::o;31692:497::-;-1:-1:-1;;;;;;;;;32202:37:2;;;32198:321;;32282:2;32263:8;:21;;32255:64;;;;-1:-1:-1;;;32255:64:2;;96355:2:48;32255:64:2;;;96337:21:48;96394:2;96374:18;;;96367:30;96433:32;96413:18;;;96406:60;96483:18;;32255:64:2;96153:354:48;32255:64:2;32334:13;32366:15;32378:2;32375;32366:8;32334:13;32366:15;:::i;:::-;32358:24;;;:::i;:::-;32350:33;;;-1:-1:-1;32397:15:2;32431;32443:2;32440;32431:8;32397:15;32431;:::i;:::-;32423:24;;;:::i;:::-;32415:33;;32397:51;;32480:27;32492:5;32499:7;32480:11;:27::i;:::-;32469:39;;;;;;57151:25:48;;57139:2;57124:18;;57005:177;32469:39:2;;;;;;;;;;;;;32462:46;;;;30513:2505;;;:::o;32198:321::-;-1:-1:-1;;;;;;;;;32532:35:2;;;32528:439;;32610:2;32591:8;:21;;32583:62;;;;-1:-1:-1;;;32583:62:2;;;;;;;:::i;:::-;32660:15;32694;32706:2;32703;32694:8;32660:15;32694;:::i;:::-;32686:24;;;:::i;:::-;32678:33;;;-1:-1:-1;32725:14:2;32758:15;32770:2;32767;32758:8;32725:14;32758:15;:::i;:::-;32750:24;;;:::i;:::-;32742:33;-1:-1:-1;32805:10:2;32829:32;32805:10;32845:7;32742:33;32829:8;:32::i;:::-;32903:7;-1:-1:-1;;;;;32880:39:2;32896:5;-1:-1:-1;;;;;32880:39:2;;32912:6;32880:39;;;;57151:25:48;;57139:2;57124:18;;57005:177;32880:39:2;;;;;;;;32940:16;;;32951:4;32940:16;;;43692:41:48;43665:18;32940:16:2;43552:187:48;32528:439:2;32983:28;33002:8;32983:18;:28::i;33024:3062::-;33086:12;-1:-1:-1;;;;;;;;;33114:33:2;;;33110:104;;33170:33;;;;33181:10;;33170:33;;;:::i;33110:104::-;-1:-1:-1;;;;;;;;;33227:35:2;;;33223:108;;33285:35;;;;33296:23;;33285:35;;;:::i;33223:108::-;-1:-1:-1;;;;;;;;;33344:37:2;;;33340:250;;33424:2;33405:8;:21;;33397:63;;;;-1:-1:-1;;;33397:63:2;;96714:2:48;33397:63:2;;;96696:21:48;96753:2;96733:18;;;96726:30;96792:31;96772:18;;;96765:59;96841:18;;33397:63:2;96512:353:48;33397:63:2;33474:16;33509:15;33521:2;33518;33509:8;33474:16;33509:15;:::i;:::-;33501:24;;;:::i;:::-;33493:33;-1:-1:-1;33558:20:2;33493:33;33558:10;:20::i;:::-;33547:32;;;;;;;;:::i;33340:250::-;-1:-1:-1;;;;;;;;;33603:40:2;;;33599:112;;33677:22;;33666:34;;;33677:22;;;;;33666:34;;;3824:40:48;3797:18;33666:34:2;3682:188:48;33599:112:2;-1:-1:-1;;;;;;;;;33724:38:2;;;33720:247;;33805:2;33786:8;:21;;33778:64;;;;-1:-1:-1;;;33778:64:2;;95279:2:48;33778:64:2;;;95261:21:48;95318:2;95298:18;;;95291:30;95357:32;95337:18;;;95330:60;95407:18;;33778:64:2;95077:354:48;33720:247:2;-1:-1:-1;;;;;;;;;33980:36:2;;;33976:247;;34059:2;34040:8;:21;;34032:62;;;;-1:-1:-1;;;34032:62:2;;97297:2:48;34032:62:2;;;97279:21:48;97336:2;97316:18;;;97309:30;97375;97355:18;;;97348:58;97423:18;;34032:62:2;97095:352:48;34032:62:2;34108:16;34143:15;34155:2;34152;34143:8;34108:16;34143:15;:::i;:::-;34135:24;;;:::i;:::-;34127:33;-1:-1:-1;34192:19:2;34127:33;34192:9;:19::i;:::-;34181:31;;;-1:-1:-1;;;;;61179:32:48;;;34181:31:2;;;61161:51:48;61134:18;34181:31:2;61015:203:48;33976:247:2;-1:-1:-1;;;;;;;;;34236:41:2;;;34232:424;;34320:3;34301:8;:22;;34293:68;;;;-1:-1:-1;;;34293:68:2;;;;;;;:::i;:::-;34375:12;34406:15;34418:2;34415;34406:8;34375:12;34406:15;:::i;:::-;34398:24;;;:::i;:::-;34390:33;;;-1:-1:-1;34437:10:2;34466:15;34478:2;34475;34466:8;34437:10;34466:15;:::i;:::-;34458:24;;;:::i;:::-;34450:33;;;-1:-1:-1;34497:16:2;34532;34544:3;34541:2;34532:8;34497:16;34532;:::i;:::-;34524:25;;;:::i;:::-;34516:34;-1:-1:-1;34564:44:2;34577:10;34589:4;34595:2;34516:34;34564:12;:44::i;34232:424::-;-1:-1:-1;;;;;;;;;34669:36:2;;;34665:356;;34748:2;34729:8;:21;;34721:62;;;;-1:-1:-1;;;34721:62:2;;;;;;;:::i;:::-;34797:15;34831;34843:2;34840;34831:8;34797:15;34831;:::i;:::-;34823:24;;;:::i;:::-;34815:33;;;-1:-1:-1;34862:16:2;34897:15;34909:2;34906;34897:8;34862:16;34897:15;:::i;:::-;34889:24;;;:::i;:::-;34881:33;-1:-1:-1;34928:45:2;34937:10;34949:7;34881:33;34968:4;34928:8;:45::i;:::-;34994:16;;;35005:4;34994:16;;;43692:41:48;43665:18;34994:16:2;43552:187:48;34665:356:2;-1:-1:-1;;;;;;;;;35034:46:2;;;35030:384;;35123:2;35104:8;:21;;35096:72;;;;-1:-1:-1;;;35096:72:2;;;;;;;:::i;:::-;35182:16;35217:15;35229:2;35226;35217:8;35182:16;35217:15;:::i;:::-;35209:24;;;:::i;:::-;35201:33;;;-1:-1:-1;35248:13:2;35280:15;35292:2;35289;35280:8;35248:13;35280:15;:::i;:::-;35272:24;;;:::i;:::-;35301:1;35264:38;;-1:-1:-1;35316:50:2;35335:10;35347:8;35264:38;35316:18;:50::i;35030:384::-;-1:-1:-1;;;;;;;;;35427:40:2;;;35423:259;;35510:2;35491:8;:21;;35483:66;;;;-1:-1:-1;;;35483:66:2;;97654:2:48;35483:66:2;;;97636:21:48;;;97673:18;;;97666:30;97732:34;97712:18;;;97705:62;97784:18;;35483:66:2;97452:356:48;35483:66:2;35563:16;35598:15;35610:2;35607;35598:8;35563:16;35598:15;:::i;:::-;35590:24;;;:::i;:::-;35582:33;-1:-1:-1;35647:23:2;35582:33;35647:13;:23::i;35423:259::-;-1:-1:-1;;;;;;;;;35695:45:2;;;35691:344;;35783:2;35764:8;:21;;35756:71;;;;-1:-1:-1;;;35756:71:2;;98015:2:48;35756:71:2;;;97997:21:48;98054:2;98034:18;;;98027:30;98093:34;98073:18;;;98066:62;-1:-1:-1;;;98144:18:48;;;98137:35;98189:19;;35756:71:2;97813:401:48;35756:71:2;35841:13;35873:15;35885:2;35882;35873:8;35841:13;35873:15;:::i;:::-;35865:24;;;:::i;:::-;35857:33;;;-1:-1:-1;35904:16:2;35939:15;35951:2;35948;35939:8;35904:16;35939:15;:::i;:::-;35931:24;;;:::i;:::-;35923:33;;35904:52;;35988:35;36007:5;36014:8;35988:18;:35::i;:::-;35977:47;;;43717:14:48;;43710:22;35977:47:2;;;43692:41:48;43665:18;35977:47:2;43552:187:48;39765:316:2;39954:52;;-1:-1:-1;;;39954:52:2;;-1:-1:-1;;;;;61179:32:48;;39954:52:2;;;61161:51:48;39832:7:2;;-1:-1:-1;;;39869:25:2;39832:7;;;;382:5;;39954:43;;61134:18:48;;39954:52:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;39931:75;;;40048:8;40058:3;40063:9;40031:42;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;40023:51;;;:::i;8028:1839::-;8325:18;8345:20;8397:1;8385:9;:13;8377:46;;;;-1:-1:-1;;;8377:46:2;;98421:2:48;8377:46:2;;;98403:21:48;98460:2;98440:18;;;98433:30;-1:-1:-1;;;98479:18:48;;;98472:50;98539:18;;8377:46:2;98219:344:48;8377:46:2;8447:10;;8441:24;8433:66;;;;-1:-1:-1;;;8433:66:2;;98770:2:48;8433:66:2;;;98752:21:48;98809:2;98789:18;;;98782:30;98848:27;98828:18;;;98821:55;98893:18;;8433:66:2;98568:349:48;8433:66:2;8546:1;8523:5;:12;;;8517:26;:30;8509:70;;;;-1:-1:-1;;;8509:70:2;;99124:2:48;8509:70:2;;;99106:21:48;99163:2;99143:18;;;99136:30;99202:29;99182:18;;;99175:57;99249:18;;8509:70:2;98922:351:48;8509:70:2;8597:14;;;;-1:-1:-1;;;;;8597:28:2;8589:77;;;;-1:-1:-1;;;8589:77:2;;99480:2:48;8589:77:2;;;99462:21:48;99519:2;99499:18;;;99492:30;99558:34;99538:18;;;99531:62;-1:-1:-1;;;99609:18:48;;;99602:34;99653:19;;8589:77:2;99278:400:48;8589:77:2;8706:1;8684:18;:23;;;;8676:78;;;;-1:-1:-1;;;8676:78:2;;99885:2:48;8676:78:2;;;99867:21:48;99924:2;99904:18;;;99897:30;99963:34;99943:18;;;99936:62;-1:-1:-1;;;100014:18:48;;;100007:40;100064:19;;8676:78:2;99683:406:48;8676:78:2;8785:1;8772:9;:14;;;;8764:59;;;;-1:-1:-1;;;8764:59:2;;100296:2:48;8764:59:2;;;100278:21:48;;;100315:18;;;100308:30;100374:34;100354:18;;;100347:62;100426:18;;8764:59:2;100094:356:48;8764:59:2;8834:26;;:::i;:::-;8870:23;;;:15;8903:21;;;;:25;;;8938:17;;;;:25;;;;8973:26;;;:33;9016:21;;;:29;;;9055:19;;;:31;;;9096:24;;;:41;;;9147:21;;;:35;;;9192:27;;;;;;;;;;;-1:-1:-1;;;9192:27:2;;;;;;;:18;;;:27;854:48;9337:22;;854:48;;-1:-1:-1;;;;;9374:16:2;;;;9370:65;;-1:-1:-1;9420:4:2;9370:65;9444:13;;;;:::i;:::-;;;;9502:11;9485:15;9478:36;9549:11;9526:35;;9572:31;9590:12;9572:17;:31::i;:::-;9613:80;;-1:-1:-1;;;9613:80:2;;-1:-1:-1;;;;;9613:46:2;;;;;:80;;9660:10;;9672:9;;9683;;9613:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9729:1;9708:18;:22;;;9704:104;;;9746:51;9757:12;9771:18;9791:5;9746:10;:51::i;:::-;;;;9704:104;-1:-1:-1;132:2:1;;8028:1839:2;;-1:-1:-1;8028:1839:2;;-1:-1:-1;;;;;;;;;8028:1839:2:o;149:505:9:-;253:4;;269:357;293:15;;:25;;;:32;289:36;;269:357;;;390:7;350:9;:15;;;:25;;;376:1;350:28;;;;;;;;:::i;:::-;;;;;;;:36;;;:47;346:270;;417:39;459:9;:15;;;:25;;;485:1;459:28;;;;;;;;:::i;:::-;;;;;;;:32;;;417:74;;542:1;-1:-1:-1;;;;;516:28:9;:3;:14;;;-1:-1:-1;;;;;516:28:9;;;:85;;;;600:1;578:3;:11;;;:18;549:3;:19;;;:26;:47;;;;:::i;:::-;548:53;516:85;509:92;;;;;;346:270;327:3;;269:357;;;-1:-1:-1;642:5:9;;149:505;-1:-1:-1;;;149:505:9:o;2487:237:2:-;2676:40;;2562:7;;-1:-1:-1;;;2599:26:2;2562:7;;2676:40;;2599:26;;2562:7;;2708;;2676:40;;;:::i;:::-;;;;;;;;;;;;;2668:49;;;:::i;:::-;2661:56;2487:237;-1:-1:-1;;;;2487:237:2:o;2983:1222::-;3079:18;;3137:28;-1:-1:-1;;;;;3190:19:2;;3182:56;;;;-1:-1:-1;;;3182:56:2;;101814:2:48;3182:56:2;;;101796:21:48;101853:2;101833:18;;;101826:30;101892:26;101872:18;;;101865:54;101936:18;;3182:56:2;101612:348:48;3182:56:2;3265:1;3256:6;:10;;;3248:48;;;;-1:-1:-1;;;3248:48:2;;102167:2:48;3248:48:2;;;102149:21:48;102206:2;102186:18;;;102179:30;102245:27;102225:18;;;102218:55;102290:18;;3248:48:2;101965:349:48;3248:48:2;3367:46;;-1:-1:-1;;;3367:46:2;;-1:-1:-1;;;;;3367:39:2;;:46;;;61161:51:48;;;3308:27:2;;;;3367:39;;;61134:18:48;;3367:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3367:46:2;;;;;;;;;;;;:::i;:::-;3307:106;;;;3427:14;:52;;;;;3446:33;3463:4;3469:9;3446:16;:33::i;:::-;3445:34;3427:52;3423:195;;;3569:21;;;;;3592:14;;;3604:1;3592:14;;;;;;;219:3:1;;-1:-1:-1;3569:21:2;-1:-1:-1;3592:14:2;-1:-1:-1;3516:91:2;;-1:-1:-1;3516:91:2;3423:195;3635:52;;;;132:2:1;3635:52:2;3627:100;;;;-1:-1:-1;;;3627:100:2;;102521:2:48;3627:100:2;;;102503:21:48;102560:2;102540:18;;;102533:30;102599:34;102579:18;;;102572:62;-1:-1:-1;;;102650:18:48;;;102643:33;102693:19;;3627:100:2;102319:399:48;3627:100:2;3764:15;;:24;;;-1:-1:-1;;;;;3806:29:2;;3798:68;;;;-1:-1:-1;;;3798:68:2;;102925:2:48;3798:68:2;;;102907:21:48;102964:2;102944:18;;;102937:30;103003:28;102983:18;;;102976:56;103049:18;;3798:68:2;102723:350:48;3798:68:2;3877:86;;-1:-1:-1;;;3877:86:2;;-1:-1:-1;;;;;3877:32:2;;;;;:86;;3918:1;;3922:15;;-1:-1:-1;;;;;3939:23:2;;;3877:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;132:2:1;3974:42:2;;;;4063:5;-1:-1:-1;;;;;4056:25:2;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4111:14;;;4123:1;4111:14;;;;;;;;;4026:59;;-1:-1:-1;4111:14:2;4095:30;;4161:1;4143:14;:19;;;;4135:63;;;;-1:-1:-1;;;4135:63:2;;103280:2:48;4135:63:2;;;103262:21:48;103319:2;103299:18;;;103292:30;103358:33;103338:18;;;103331:61;103409:18;;4135:63:2;103078:355:48;4135:63:2;3172:1033;;;2983:1222;;;;;;;:::o;42209:191::-;42279:14;42305:12;42320:30;42335:5;42342:7;42320:14;:30::i;:::-;42381:11;;42209:191;-1:-1:-1;;;;42209:191:2:o;41114:227::-;41292:41;;41179:7;;-1:-1:-1;;;41216:24:2;41179:7;;41292:41;;41216:24;;41179:7;;41324:8;;41292:41;;;:::i;42816:187::-;42874:16;42902:12;42917:34;42941:8;42917:16;:34::i;:::-;42984:11;;42816:187;-1:-1:-1;;;42816:187:2:o;43009:220::-;43087:19;43118:12;43133:38;43155:5;43162:8;43133:21;:38::i;41347:235::-;41533:41;;41416:7;;-1:-1:-1;;;41453:28:2;41416:7;;41533:41;;41453:28;;41416:7;;41565:8;;41533:41;;;:::i;41588:440::-;41806:50;;-1:-1:-1;;;41806:50:2;;-1:-1:-1;;;;;61179:32:48;;41806:50:2;;;61161:51:48;41678:7:2;;-1:-1:-1;;;41715:33:2;41678:7;;;;382:5;;41806:43;;61134:18:48;;41806:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;41890:53:2;;-1:-1:-1;;;41890:53:2;;-1:-1:-1;;;;;61179:32:48;;41890:53:2;;;61161:51:48;41785:71:2;;-1:-1:-1;41867:17:2;;382:5;;41890:43;;61134:18:48;;41890:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;41866:77;;;41985:8;41995:3;42000:7;42009:10;41968:52;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;41960:61;;;:::i;:::-;41953:68;41588:440;-1:-1:-1;;;;;;;41588:440:2:o;40087:421::-;40289:50;;-1:-1:-1;;;40289:50:2;;-1:-1:-1;;;;;61179:32:48;;40289:50:2;;;61161:51:48;40169:7:2;;-1:-1:-1;;;40206:25:2;40169:7;;;;382:5;;40289:43;;61134:18:48;;40289:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;40372:52:2;;-1:-1:-1;;;40372:52:2;;-1:-1:-1;;;;;61179:32:48;;40372:52:2;;;61161:51:48;40268:71:2;;-1:-1:-1;40350:16:2;;382:5;;40372:43;;61134:18:48;;40372:52:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;40349:75;;;40466:8;40476:3;40481:9;40492:7;40449:51;;;;;;;;;;;:::i;42637:173::-;42691:13;42716:12;42731:30;42751:8;42731:12;:30::i;42034:169::-;42089:14;42115:12;42130:23;42145:7;42130:14;:23::i;36092:769::-;36154:12;-1:-1:-1;;;;;;;;;36182:38:2;;;36178:194;;36236:12;36251:29;36269:10;36251:17;:29::i;:::-;36236:44;;36318:4;36312;36305:18;36356:4;36345:16;;;;;;43717:14:48;43710:22;43692:41;;43680:2;43665:18;;43552:187;36178:194:2;-1:-1:-1;;;;;;;;;36385:39:2;;;36381:196;;36440:12;36455:29;36473:10;36455:17;:29::i;:::-;36522:5;36509:19;;36550:16;;;36561:4;36550:16;;;43692:41:48;36440:44:2;;-1:-1:-1;43665:18:48;36550:16:2;43552:187:48;36381:196:2;-1:-1:-1;;;;;;;;;36590:41:2;;;36586:218;;36647:12;36662:29;36680:10;36662:17;:29::i;:::-;36745:11;;36778:15;;;43717:14:48;;43710:22;36778:15:2;;;43692:41:48;36745:11:2;;-1:-1:-1;36745:11:2;;43665:18:48;36778:15:2;43552:187:48;36586:218:2;36813:41;;-1:-1:-1;;;36813:41:2;;104163:2:48;36813:41:2;;;104145:21:48;104202:2;104182:18;;;104175:30;104241:33;104221:18;;;104214:61;104292:18;;36813:41:2;103961:355:48;42406:225:2;42461:17;42490:12;42505:31;42526:8;42505:13;:31::i;:::-;42490:46;;42546:19;42599:4;42586:17;;42620:4;42614:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42480:151;;42406:225;;;:::o;7661:361::-;7839:51;;-1:-1:-1;;;7737:28:2;:15;;7839:51;;7737:28;;:15;;7877:12;;7839:51;;;:::i;:::-;;;;;;;;;;;;;7831:60;;;:::i;:::-;7998:11;;8011:1;7994:19;7981:33;;-1:-1:-1;;;7661:361:2:o;40879:229::-;41059:41;;40945:7;;-1:-1:-1;;;40982:25:2;40945:7;;41059:41;;40982:25;;40945:7;;41091:8;;41059:41;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;372:331:48:-;477:9;488;530:8;518:10;515:24;512:44;;;552:1;549;542:12;512:44;581:6;571:8;568:20;565:40;;;601:1;598;591:12;565:40;-1:-1:-1;;627:23:48;;;672:25;;;;;-1:-1:-1;372:331:48:o;708:338::-;828:19;;-1:-1:-1;;;;;;865:29:48;;;914:1;906:10;;903:137;;;-1:-1:-1;;;;;;975:1:48;971:11;;;968:1;964:19;960:46;;;952:55;;948:82;;-1:-1:-1;903:137:48;;708:338;;;;:::o;1410:374::-;1531:19;;-1:-1:-1;;;;;;1568:40:48;;;1628:2;1620:11;;1617:161;;;-1:-1:-1;;;;;;1690:2:48;1686:12;;;;1683:1;1679:20;1675:58;;;1667:67;1663:105;;;;1410:374;-1:-1:-1;;1410:374:48:o;2147:131::-;-1:-1:-1;;;;;2222:31:48;;2212:42;;2202:70;;2268:1;2265;2258:12;2202:70;2147:131;:::o;2283:134::-;2351:20;;2380:31;2351:20;2380:31;:::i;:::-;2283:134;;;:::o;2422:367::-;2490:6;2498;2551:2;2539:9;2530:7;2526:23;2522:32;2519:52;;;2567:1;2564;2557:12;2519:52;2606:9;2593:23;2625:31;2650:5;2625:31;:::i;:::-;2675:5;2753:2;2738:18;;;;2725:32;;-1:-1:-1;;;2422:367:48:o;3289:388::-;3357:6;3365;3418:2;3406:9;3397:7;3393:23;3389:32;3386:52;;;3434:1;3431;3424:12;3386:52;3473:9;3460:23;3492:31;3517:5;3492:31;:::i;:::-;3542:5;-1:-1:-1;3599:2:48;3584:18;;3571:32;3612:33;3571:32;3612:33;:::i;:::-;3664:7;3654:17;;;3289:388;;;;;:::o;3875:508::-;3952:6;3960;3968;4021:2;4009:9;4000:7;3996:23;3992:32;3989:52;;;4037:1;4034;4027:12;3989:52;4076:9;4063:23;4095:31;4120:5;4095:31;:::i;:::-;4145:5;-1:-1:-1;4202:2:48;4187:18;;4174:32;4215:33;4174:32;4215:33;:::i;:::-;3875:508;;4267:7;;-1:-1:-1;;;4347:2:48;4332:18;;;;4319:32;;3875:508::o;4388:127::-;4449:10;4444:3;4440:20;4437:1;4430:31;4480:4;4477:1;4470:15;4504:4;4501:1;4494:15;4520:258;4593:4;4587:11;;;4625:17;;-1:-1:-1;;;;;4657:34:48;;4693:22;;;4654:62;4651:88;;;4719:18;;:::i;:::-;4755:4;4748:24;4520:258;:::o;4783:254::-;4856:2;4850:9;4898:4;4886:17;;-1:-1:-1;;;;;4918:34:48;;4954:22;;;4915:62;4912:88;;;4980:18;;:::i;5042:254::-;5115:2;5109:9;5157:4;5145:17;;-1:-1:-1;;;;;5177:34:48;;5213:22;;;5174:62;5171:88;;;5239:18;;:::i;5301:256::-;5374:2;5368:9;5416:6;5404:19;;-1:-1:-1;;;;;5438:34:48;;5474:22;;;5435:62;5432:88;;;5500:18;;:::i;5562:254::-;5635:2;5629:9;5677:4;5665:17;;-1:-1:-1;;;;;5697:34:48;;5733:22;;;5694:62;5691:88;;;5759:18;;:::i;5821:275::-;5892:2;5886:9;5957:2;5938:13;;-1:-1:-1;;5934:27:48;5922:40;;-1:-1:-1;;;;;5977:34:48;;6013:22;;;5974:62;5971:88;;;6039:18;;:::i;:::-;6075:2;6068:22;5821:275;;-1:-1:-1;5821:275:48:o;6101:187::-;6150:4;-1:-1:-1;;;;;6175:6:48;6172:30;6169:56;;;6205:18;;:::i;:::-;-1:-1:-1;6271:2:48;6250:15;-1:-1:-1;;6246:29:48;6277:4;6242:40;;6101:187::o;6293:518::-;6336:5;6389:3;6382:4;6374:6;6370:17;6366:27;6356:55;;6407:1;6404;6397:12;6356:55;6447:6;6434:20;6486:4;6478:6;6474:17;6515:1;6536:53;6552:36;6581:6;6552:36;:::i;:::-;6536:53;:::i;:::-;6525:64;;6614:6;6605:7;6598:23;6654:3;6645:6;6640:3;6636:16;6633:25;6630:45;;;6671:1;6668;6661:12;6630:45;6722:6;6717:3;6710:4;6701:7;6697:18;6684:45;6778:1;6749:20;;;6771:4;6745:31;6738:42;;;;-1:-1:-1;6753:7:48;6293:518;-1:-1:-1;;;6293:518:48:o;6816:118::-;6902:5;6895:13;6888:21;6881:5;6878:32;6868:60;;6924:1;6921;6914:12;6939:128;7004:20;;7033:28;7004:20;7033:28;:::i;7072:118::-;7159:5;7156:1;7145:20;7138:5;7135:31;7125:59;;7180:1;7177;7170:12;7195:130;7261:20;;7290:29;7261:20;7290:29;:::i;7330:191::-;7398:4;-1:-1:-1;;;;;7423:6:48;7420:30;7417:56;;;7453:18;;:::i;:::-;-1:-1:-1;7498:1:48;7494:14;7510:4;7490:25;;7330:191::o;7526:2143::-;7588:5;7641:3;7634:4;7626:6;7622:17;7618:27;7608:55;;7659:1;7656;7649:12;7608:55;7699:6;7686:20;7726:72;7742:55;7790:6;7742:55;:::i;7726:72::-;7822:3;7846:6;7841:3;7834:19;7878:4;7873:3;7869:14;7862:21;;7939:4;7929:6;7926:1;7922:14;7914:6;7910:27;7906:38;7892:52;;7967:3;7959:6;7956:15;7953:35;;;7984:1;7981;7974:12;7953:35;8020:4;8012:6;8008:17;8034:1604;8050:6;8045:3;8042:15;8034:1604;;;8138:3;8125:17;-1:-1:-1;;;;;8161:11:48;8158:35;8155:55;;;8206:1;8203;8196:12;8155:55;8233:24;;8305:4;8281:12;;;-1:-1:-1;;8277:26:48;8273:37;8270:57;;;8323:1;8320;8313:12;8270:57;8353:23;;:::i;:::-;8450:4;8442:13;;8429:27;8469:22;;8541:4;8533:13;;8520:27;-1:-1:-1;;;;;8563:32:48;;8560:52;;;8608:1;8605;8598:12;8560:52;8658:4;8647:8;8643:2;8639:17;8635:28;8625:38;;;8697:4;8692:2;8687:3;8683:12;8679:23;8676:43;;;8715:1;8712;8705:12;8676:43;8747:23;;:::i;:::-;8811:2;8798:16;8827:30;8849:7;8827:30;:::i;:::-;8870:24;;8943:4;8935:13;;8922:27;8962:33;8922:27;8962:33;:::i;:::-;9028:4;9015:18;;9008:35;9093:4;9085:13;;9072:27;-1:-1:-1;;;;;9115:32:48;;9112:52;;;9160:1;9157;9150:12;9112:52;9204:41;9241:3;9230:8;9226:2;9222:17;9204:41;:::i;:::-;9197:4;9188:7;9184:18;9177:69;;9296:2;9292;9288:11;9275:25;-1:-1:-1;;;;;9319:8:48;9316:32;9313:52;;;9361:1;9358;9351:12;9313:52;9403:41;9440:3;9429:8;9425:2;9421:17;9403:41;:::i;:::-;9398:2;9389:7;9385:16;9378:67;;9484:32;9511:3;9507:2;9503:12;9484:32;:::i;:::-;9478:3;9469:7;9465:17;9458:59;9555:7;9548:4;9541:5;9537:16;9530:33;;9588:5;9583:3;9576:18;;;9623:4;9618:3;9614:14;9607:21;;8076:4;8071:3;8067:14;8060:21;;8034:1604;;;-1:-1:-1;9656:7:48;7526:2143;-1:-1:-1;;;;;7526:2143:48:o;9674:562::-;9727:5;9775:4;9763:9;9758:3;9754:19;9750:30;9747:50;;;9793:1;9790;9783:12;9747:50;9815:23;;:::i;:::-;9806:32;;9875:9;9862:23;9894:31;9917:7;9894:31;:::i;:::-;9934:22;;10008:2;9993:18;;9980:32;10021:33;9980:32;10021:33;:::i;:::-;10081:2;10070:14;;10063:31;10146:2;10131:18;;10118:32;10159:31;10118:32;10159:31;:::i;:::-;10217:2;10206:14;;10199:31;10210:5;9674:562;-1:-1:-1;;9674:562:48:o;10241:1336::-;10299:5;10347:6;10335:9;10330:3;10326:19;10322:32;10319:52;;;10367:1;10364;10357:12;10319:52;10389:23;;:::i;:::-;10380:32;;10448:9;10435:23;-1:-1:-1;;;;;10473:6:48;10470:30;10467:50;;;10513:1;10510;10503:12;10467:50;10540:46;10582:3;10573:6;10562:9;10558:22;10540:46;:::i;:::-;10533:5;10526:61;;10640:2;10629:9;10625:18;10612:32;-1:-1:-1;;;;;10659:8:48;10656:32;10653:52;;;10701:1;10698;10691:12;10653:52;10737:48;10781:3;10770:8;10759:9;10755:24;10737:48;:::i;:::-;10732:2;10725:5;10721:14;10714:72;;10818:38;10852:2;10841:9;10837:18;10818:38;:::i;:::-;10813:2;10806:5;10802:14;10795:62;10910:2;10899:9;10895:18;10882:32;-1:-1:-1;;;;;10929:8:48;10926:32;10923:52;;;10971:1;10968;10961:12;10923:52;11007:48;11051:3;11040:8;11029:9;11025:24;11007:48;:::i;:::-;11002:2;10995:5;10991:14;10984:72;;11089:36;11120:3;11109:9;11105:19;11089:36;:::i;:::-;11083:3;11076:5;11072:15;11065:61;11159:37;11191:3;11180:9;11176:19;11159:37;:::i;:::-;11153:3;11146:5;11142:15;11135:62;11230:36;11261:3;11250:9;11246:19;11230:36;:::i;:::-;11224:3;11217:5;11213:15;11206:61;11320:3;11309:9;11305:19;11292:33;-1:-1:-1;;;;;11340:8:48;11337:32;11334:52;;;11382:1;11379;11372:12;11334:52;11419:67;11482:3;11471:8;11460:9;11456:24;11419:67;:::i;:::-;11413:3;11406:5;11402:15;11395:92;;11520:50;11566:3;11560;11549:9;11545:19;11520:50;:::i;:::-;11514:3;11507:5;11503:15;11496:75;10241:1336;;;;:::o;11582:118::-;11669:5;11666:1;11655:20;11648:5;11645:31;11635:59;;11690:1;11687;11680:12;11705:130;11771:20;;11800:29;11771:20;11800:29;:::i;11840:621::-;11942:6;11950;11958;12011:2;11999:9;11990:7;11986:23;11982:32;11979:52;;;12027:1;12024;12017:12;11979:52;12067:9;12054:23;-1:-1:-1;;;;;12092:6:48;12089:30;12086:50;;;12132:1;12129;12122:12;12086:50;12155:62;12209:7;12200:6;12189:9;12185:22;12155:62;:::i;:::-;12145:72;;;12267:2;12256:9;12252:18;12239:32;12280:29;12303:5;12280:29;:::i;:::-;12328:5;-1:-1:-1;12385:2:48;12370:18;;12357:32;12398:31;12357:32;12398:31;:::i;:::-;12448:7;12438:17;;;11840:621;;;;;:::o;12466:650::-;12552:6;12560;12568;12576;12629:3;12617:9;12608:7;12604:23;12600:33;12597:53;;;12646:1;12643;12636:12;12597:53;12685:9;12672:23;12704:31;12729:5;12704:31;:::i;:::-;12754:5;-1:-1:-1;12811:2:48;12796:18;;12783:32;12824:33;12783:32;12824:33;:::i;:::-;12876:7;-1:-1:-1;12935:2:48;12920:18;;12907:32;12948:33;12907:32;12948:33;:::i;:::-;12466:650;;;;-1:-1:-1;13000:7:48;;13080:2;13065:18;13052:32;;-1:-1:-1;;12466:650:48:o;13121:247::-;13180:6;13233:2;13221:9;13212:7;13208:23;13204:32;13201:52;;;13249:1;13246;13239:12;13201:52;13288:9;13275:23;13307:31;13332:5;13307:31;:::i;:::-;13357:5;13121:247;-1:-1:-1;;;13121:247:48:o;13743:289::-;13785:3;13823:5;13817:12;13850:6;13845:3;13838:19;13906:6;13899:4;13892:5;13888:16;13881:4;13876:3;13872:14;13866:47;13958:1;13951:4;13942:6;13937:3;13933:16;13929:27;13922:38;14021:4;14014:2;14010:7;14005:2;13997:6;13993:15;13989:29;13984:3;13980:39;13976:50;13969:57;;;13743:289;;;;:::o;14037:622::-;14138:5;14132:12;14125:20;14118:28;14113:3;14106:41;14225:1;14221;14216:3;14212:11;14208:19;14200:4;14193:5;14189:16;14183:23;14179:49;14172:4;14167:3;14163:14;14156:73;14088:3;14275:4;14268:5;14264:16;14258:23;14313:4;14306;14301:3;14297:14;14290:28;14339:47;14380:4;14375:3;14371:14;14357:12;14339:47;:::i;:::-;14327:59;;14434:4;14427:5;14423:16;14417:23;14482:3;14476:4;14472:14;14465:4;14460:3;14456:14;14449:38;14510:39;14544:4;14528:14;14510:39;:::i;:::-;14602:4;14591:16;;;14585:23;-1:-1:-1;;;;;14581:49:48;14565:14;;;;14558:73;;;;-1:-1:-1;14496:53:48;;14037:622;-1:-1:-1;;14037:622:48:o;14664:774::-;14725:3;14756;14788:5;14782:12;14815:6;14810:3;14803:19;14847:4;14842:3;14838:14;14831:21;;14905:4;14895:6;14892:1;14888:14;14881:5;14877:26;14873:37;14944:4;14937:5;14933:16;14967:1;14977:435;14991:6;14988:1;14985:13;14977:435;;;15078:2;15074:7;15066:5;15060:4;15056:16;15052:30;15047:3;15040:43;15112:6;15106:13;15151:2;15145:9;15139:4;15132:23;15202:4;15198:2;15194:13;15188:20;15168:40;;15245:4;15238;15232;15228:15;15221:29;15271:57;15322:4;15316;15312:15;15298:12;15271:57;:::i;:::-;15363:4;15388:14;;;;15263:65;;-1:-1:-1;15351:17:48;;;;;-1:-1:-1;15013:1:48;15006:9;14977:435;;;-1:-1:-1;15428:4:48;;14664:774;-1:-1:-1;;;;;;14664:774:48:o;15707:1313::-;15761:3;15805:5;15799:12;15832:6;15827:3;15820:19;15860:49;15901:6;15896:3;15892:16;15878:12;15860:49;:::i;:::-;15848:61;;15957:4;15950:5;15946:16;15940:23;16005:3;15999:4;15995:14;15988:4;15983:3;15979:14;15972:38;16033:39;16067:4;16051:14;16033:39;:::i;:::-;16019:53;;;16120:4;16113:5;16109:16;16103:23;16135:50;16179:4;16174:3;16170:14;16154;-1:-1:-1;;;;;2956:31:48;2944:44;;2890:104;16135:50;;16233:4;16226:5;16222:16;16216:23;16283:3;16275:6;16271:16;16264:4;16259:3;16255:14;16248:40;16311:41;16345:6;16329:14;16311:41;:::i;:::-;16297:55;;;16400:4;16393:5;16389:16;16383:23;16415:47;16456:4;16451:3;16447:14;16431;13443:13;13436:21;13424:34;;13373:91;16415:47;;16510:4;16503:5;16499:16;16493:23;16525:48;16567:4;16562:3;16558:14;16542;2869:1;2858:20;2846:33;;2794:91;16525:48;;16621:4;16614:5;16610:16;16604:23;16636:47;16677:4;16672:3;16668:14;16652;13443:13;13436:21;13424:34;;13373:91;16636:47;;16731:4;16724:5;16720:16;16714:23;16781:3;16773:6;16769:16;16762:4;16757:3;16753:14;16746:40;16809:60;16862:6;16846:14;16809:60;:::i;:::-;16795:74;;;16917:6;16910:5;16906:18;16900:25;16934:58;16984:6;16979:3;16975:16;16959:14;15529:12;;15526:1;15515:27;;;15503:40;;15596:4;15585:16;;;15579:23;-1:-1:-1;;;;;15575:49:48;15559:14;;;15552:73;15688:4;15677:16;;;15671:23;15657:38;;15641:14;;15634:62;15443:259;16934:58;-1:-1:-1;17008:6:48;15707:1313;-1:-1:-1;;;15707:1313:48:o;17025:856::-;17086:3;17124:5;17118:12;17151:6;17146:3;17139:19;17183:4;17178:3;17174:14;17167:21;;17222:4;17215:5;17211:16;17245:1;17255:601;17269:6;17266:1;17263:13;17255:601;;;17328:13;;17412:9;;17409:1;17398:24;17386:37;;17477:4;17469:13;;;17463:20;-1:-1:-1;;;;;17459:46:48;;;17443:14;;;17436:70;17570:4;17562:13;;;17556:20;17549:28;17542:36;17526:14;;;17519:60;17643:4;17635:13;;;17629:20;17622:28;17615:36;17599:14;;;17592:60;17706:4;17698:13;;;17692:20;17688:46;17672:14;;;17665:70;;;;17493:3;17762:14;;;;17829:17;;;;17502:1;17284:9;17255:601;;;-1:-1:-1;17872:3:48;;17025:856;-1:-1:-1;;;;17025:856:48:o;17886:921::-;17952:3;17990:5;17984:12;18017:6;18012:3;18005:19;18049:4;18044:3;18040:14;18033:21;;18088:4;18081:5;18077:16;18111:1;18121:661;18135:6;18132:1;18129:13;18121:661;;;18200:6;18194:13;18238:1;18284:2;18278:9;18275:1;18264:24;18259:3;18252:37;18353:4;18349:2;18345:13;18339:20;18336:1;18325:35;18318:4;18313:3;18309:14;18302:59;18425:4;18421:2;18417:13;18411:20;18408:1;18397:35;18390:4;18385:3;18381:14;18374:59;18497:4;18493:2;18489:13;18483:20;18480:1;18469:35;18462:4;18457:3;18453:14;18446:59;18569:4;18565:2;18561:13;18555:20;18548:28;18541:36;18534:4;18529:3;18525:14;18518:60;18657:1;18653;18648:3;18644:11;18640:19;18632:4;18628:2;18624:13;18618:20;18614:46;18607:4;18602:3;18598:14;18591:70;18697:4;18692:3;18688:14;18674:28;;18722:10;18715:17;;;;18767:4;18759:6;18755:17;18745:27;;18157:1;18154;18150:9;18145:14;;18121:661;;18812:929;18875:3;18913:5;18907:12;18940:6;18935:3;18928:19;18972:4;18967:3;18963:14;18956:21;;19011:4;19004:5;19000:16;19034:1;19044:672;19058:6;19055:1;19052:13;19044:672;;;19123:6;19117:13;19161:1;19207:2;19201:9;19198:1;19187:24;19182:3;19175:37;19276:4;19272:2;19268:13;19262:20;19259:1;19248:35;19241:4;19236:3;19232:14;19225:59;19348:4;19344:2;19340:13;19334:20;19331:1;19320:35;19313:4;19308:3;19304:14;19297:59;19435:1;19431;19426:3;19422:11;19418:19;19410:4;19406:2;19402:13;19396:20;19392:46;19385:4;19380:3;19376:14;19369:70;19503:4;19499:2;19495:13;19489:20;19482:28;19475:36;19468:4;19463:3;19459:14;19452:60;19591:1;19587;19582:3;19578:11;19574:19;19566:4;19562:2;19558:13;19552:20;19548:46;19541:4;19536:3;19532:14;19525:70;19631:4;19626:3;19622:14;19608:28;;19656:10;19649:17;;;;19701:4;19693:6;19689:17;19679:27;;19080:1;19077;19073:9;19068:14;;19044:672;;19746:1384;19798:3;19842:5;19836:12;19869:6;19864:3;19857:19;19897:61;19950:6;19945:3;19941:16;19927:12;19897:61;:::i;:::-;19885:73;;20006:4;19999:5;19995:16;19989:23;20021:48;20063:4;20058:3;20054:14;20038;2869:1;2858:20;2846:33;;2794:91;20021:48;;20117:4;20110:5;20106:16;20100:23;20132:47;20173:4;20168:3;20164:14;20148;13443:13;13436:21;13424:34;;13373:91;20132:47;;20227:4;20220:5;20216:16;20210:23;20242:47;20283:4;20278:3;20274:14;20258;13443:13;13436:21;13424:34;;13373:91;20242:47;;20337:4;20330:5;20326:16;20320:23;20352:47;20393:4;20388:3;20384:14;20368;13443:13;13436:21;13424:34;;13373:91;20352:47;;20447:4;20440:5;20436:16;20430:23;20495:3;20489:4;20485:14;20478:4;20473:3;20469:14;20462:38;20523:58;20576:4;20560:14;20523:58;:::i;:::-;20509:72;;;20629:4;20622:5;20618:16;20612:23;20679:3;20671:6;20667:16;20660:4;20655:3;20651:14;20644:40;20707:65;20765:6;20749:14;20707:65;:::i;:::-;20693:79;;;20820:4;20813:5;20809:16;20803:23;20870:3;20862:6;20858:16;20851:4;20846:3;20842:14;20835:40;20898:62;20953:6;20937:14;20898:62;:::i;:::-;20884:76;;;21008:6;21001:5;20997:18;20991:25;21062:3;21054:6;21050:16;21041:6;21036:3;21032:16;21025:42;21083:41;21117:6;21101:14;21083:41;:::i;21135:346::-;21356:6;21353:1;21342:21;21331:9;21324:40;21400:2;21395;21384:9;21380:18;21373:30;21305:4;21420:55;21471:2;21460:9;21456:18;21448:6;21420:55;:::i;21486:384::-;21552:6;21560;21613:2;21601:9;21592:7;21588:23;21584:32;21581:52;;;21629:1;21626;21619:12;21581:52;21668:9;21655:23;21687:31;21712:5;21687:31;:::i;:::-;21737:5;-1:-1:-1;21794:2:48;21779:18;;21766:32;21807:31;21766:32;21807:31;:::i;21875:1002::-;22118:6;22115:1;22104:21;22093:9;22086:40;22162:2;22157;22146:9;22142:18;22135:30;22067:4;22200:6;22194:13;22243:4;22238:2;22227:9;22223:18;22216:32;22271:62;22328:3;22317:9;22313:19;22299:12;22271:62;:::i;:::-;22257:76;;22401:2;22393:6;22389:15;22383:22;22380:1;22369:37;22364:2;22353:9;22349:18;22342:65;22489:1;22485;22480:3;22476:11;22472:19;22466:2;22458:6;22454:15;22448:22;22444:48;22438:3;22427:9;22423:19;22416:77;22562:2;22554:6;22550:15;22544:22;22541:1;22530:37;22524:3;22513:9;22509:19;22502:66;22617:3;22609:6;22605:16;22599:23;22692:2;22688:7;22676:9;22668:6;22664:22;22660:36;22653:4;22642:9;22638:20;22631:66;22720:41;22754:6;22738:14;22720:41;:::i;:::-;22835:3;22808:16;;;;22802:23;-1:-1:-1;;;;;22798:49:48;22792:3;22777:19;;;;22770:78;;;;-1:-1:-1;22706:55:48;;21875:1002;-1:-1:-1;;;21875:1002:48:o;22882:1482::-;22944:5;22997:3;22990:4;22982:6;22978:17;22974:27;22964:55;;23015:1;23012;23005:12;22964:55;23055:6;23042:20;23082:72;23098:55;23146:6;23098:55;:::i;23082:72::-;23178:3;23202:6;23197:3;23190:19;23234:4;23229:3;23225:14;23218:21;;23298:4;23290;23282:6;23278:17;23270:6;23266:30;23262:41;23248:55;;23326:3;23318:6;23315:15;23312:35;;;23343:1;23340;23333:12;23312:35;23379:4;23371:6;23367:17;23393:940;23409:6;23404:3;23401:15;23393:940;;;23487:4;23481:3;23476;23472:13;23468:24;23465:44;;;23505:1;23502;23495:12;23465:44;23535:23;;:::i;:::-;23599:3;23586:17;23616:31;23639:7;23616:31;:::i;:::-;23660:22;;23732:4;23723:14;;23710:28;23751:33;23710:28;23751:33;:::i;:::-;23815:4;23804:16;;23797:33;23880:2;23871:12;;23858:26;23897:30;23858:26;23897:30;:::i;:::-;23958:2;23947:14;;23940:31;24021:2;24012:12;;23999:26;24038:30;23999:26;24038:30;:::i;:::-;24099:2;24088:14;;24081:31;24162:3;24153:13;;24140:27;24180:33;24140:27;24180:33;:::i;:::-;24244:3;24233:15;;24226:32;24271:18;;24318:4;24309:14;;;;23435:4;23426:14;23393:940;;24369:1630;24436:5;24489:3;24482:4;24474:6;24470:17;24466:27;24456:55;;24507:1;24504;24497:12;24456:55;24547:6;24534:20;24574:72;24590:55;24638:6;24590:55;:::i;24574:72::-;24670:3;24694:6;24689:3;24682:19;24726:4;24721:3;24717:14;24710:21;;24790:4;24782;24774:6;24770:17;24762:6;24758:30;24754:41;24740:55;;24818:3;24810:6;24807:15;24804:35;;;24835:1;24832;24825:12;24804:35;24871:4;24863:6;24859:17;24885:1083;24901:6;24896:3;24893:15;24885:1083;;;24979:4;24973:3;24968;24964:13;24960:24;24957:44;;;24997:1;24994;24987:12;24957:44;25027:23;;:::i;:::-;25091:3;25078:17;25108:31;25131:7;25108:31;:::i;:::-;25152:22;;25224:4;25215:14;;25202:28;25243:31;25202:28;25243:31;:::i;:::-;25305:4;25294:16;;25287:33;25370:2;25361:12;;25348:26;25387:31;25348:26;25387:31;:::i;:::-;25449:2;25438:14;;25431:31;25512:2;25503:12;;25490:26;25529:31;25490:26;25529:31;:::i;:::-;25591:2;25580:14;;25573:31;25654:3;25645:13;;25632:27;25672:30;25632:27;25672:30;:::i;:::-;25733:3;25722:15;;25715:32;25797:3;25788:13;;25775:27;25815:33;25775:27;25815:33;:::i;:::-;25879:3;25868:15;;25861:32;25906:18;;25953:4;25944:14;;;;24927:4;24918:14;24885:1083;;26004:1185;26231:6;26239;26247;26255;26263;26316:3;26304:9;26295:7;26291:23;26287:33;26284:53;;;26333:1;26330;26323:12;26284:53;26373:9;26360:23;-1:-1:-1;;;;;26398:6:48;26395:30;26392:50;;;26438:1;26435;26428:12;26392:50;26461:62;26515:7;26506:6;26495:9;26491:22;26461:62;:::i;:::-;26451:72;;;26573:2;26562:9;26558:18;26545:32;26586:29;26609:5;26586:29;:::i;:::-;26634:5;-1:-1:-1;26691:2:48;26676:18;;26663:32;26704:31;26663:32;26704:31;:::i;:::-;26754:7;-1:-1:-1;26814:2:48;26799:18;;26786:32;-1:-1:-1;;;;;26830:32:48;;26827:52;;;26875:1;26872;26865:12;26827:52;26898:71;26961:7;26950:8;26939:9;26935:24;26898:71;:::i;:::-;26888:81;;;27022:3;27011:9;27007:19;26994:33;-1:-1:-1;;;;;27042:8:48;27039:32;27036:52;;;27084:1;27081;27074:12;27036:52;27107:76;27175:7;27164:8;27153:9;27149:24;27107:76;:::i;:::-;27097:86;;;26004:1185;;;;;;;;:::o;27194:752::-;27248:5;27301:3;27294:4;27286:6;27282:17;27278:27;27268:55;;27319:1;27316;27309:12;27268:55;27359:6;27346:20;27386:72;27402:55;27450:6;27402:55;:::i;27386:72::-;27482:3;27506:6;27501:3;27494:19;27538:4;27533:3;27529:14;27522:21;;27599:4;27589:6;27586:1;27582:14;27574:6;27570:27;27566:38;27552:52;;27627:3;27619:6;27616:15;27613:35;;;27644:1;27641;27634:12;27613:35;27680:4;27672:6;27668:17;27694:221;27710:6;27705:3;27702:15;27694:221;;;27792:3;27779:17;27809:31;27834:5;27809:31;:::i;:::-;27853:18;;27900:4;27891:14;;;;27727;27694:221;;27951:748;28003:5;28056:3;28049:4;28041:6;28037:17;28033:27;28023:55;;28074:1;28071;28064:12;28023:55;28114:6;28101:20;28141:72;28157:55;28205:6;28157:55;:::i;28141:72::-;28237:3;28261:6;28256:3;28249:19;28293:4;28288:3;28284:14;28277:21;;28354:4;28344:6;28341:1;28337:14;28329:6;28325:27;28321:38;28307:52;;28382:3;28374:6;28371:15;28368:35;;;28399:1;28396;28389:12;28368:35;28435:4;28427:6;28423:17;28449:219;28465:6;28460:3;28457:15;28449:219;;;28547:3;28534:17;28564:29;28587:5;28564:29;:::i;:::-;28606:18;;28653:4;28644:14;;;;28482;28449:219;;28704:964;28863:6;28871;28879;28887;28940:3;28928:9;28919:7;28915:23;28911:33;28908:53;;;28957:1;28954;28947:12;28908:53;28996:9;28983:23;29015:31;29040:5;29015:31;:::i;:::-;29065:5;-1:-1:-1;29121:2:48;29106:18;;29093:32;-1:-1:-1;;;;;29137:30:48;;29134:50;;;29180:1;29177;29170:12;29134:50;29203:61;29256:7;29247:6;29236:9;29232:22;29203:61;:::i;:::-;29193:71;;;29317:2;29306:9;29302:18;29289:32;-1:-1:-1;;;;;29336:8:48;29333:32;29330:52;;;29378:1;29375;29368:12;29330:52;29401:63;29456:7;29445:8;29434:9;29430:24;29401:63;:::i;:::-;29391:73;;;29517:2;29506:9;29502:18;29489:32;-1:-1:-1;;;;;29536:8:48;29533:32;29530:52;;;29578:1;29575;29568:12;29530:52;29601:61;29654:7;29643:8;29632:9;29628:24;29601:61;:::i;:::-;29591:71;;;28704:964;;;;;;;:::o;29673:483::-;29766:6;29774;29827:2;29815:9;29806:7;29802:23;29798:32;29795:52;;;29843:1;29840;29833:12;29795:52;29882:9;29869:23;29901:31;29926:5;29901:31;:::i;:::-;29951:5;-1:-1:-1;30007:2:48;29992:18;;29979:32;-1:-1:-1;;;;;30023:30:48;;30020:50;;;30066:1;30063;30056:12;30020:50;30089:61;30142:7;30133:6;30122:9;30118:22;30089:61;:::i;:::-;30079:71;;;29673:483;;;;;:::o;30161:523::-;30235:6;30243;30251;30304:2;30292:9;30283:7;30279:23;30275:32;30272:52;;;30320:1;30317;30310:12;30272:52;30359:9;30346:23;30378:31;30403:5;30378:31;:::i;:::-;30428:5;-1:-1:-1;30485:2:48;30470:18;;30457:32;30498:33;30457:32;30498:33;:::i;:::-;30550:7;-1:-1:-1;30609:2:48;30594:18;;30581:32;30622:30;30581:32;30622:30;:::i;30689:343::-;30908:6;30905:1;30894:21;30883:9;30876:40;30952:2;30947;30936:9;30932:18;30925:30;30857:4;30972:54;31022:2;31011:9;31007:18;30999:6;30972:54;:::i;31037:553::-;31274:6;31271:1;31260:21;31249:9;31242:40;31318:2;31313;31302:9;31298:18;31291:30;31223:4;31356:6;31350:13;31399:2;31394;31383:9;31379:18;31372:30;31425:62;31482:3;31471:9;31467:19;31453:12;31425:62;:::i;:::-;31411:76;;31555:2;31547:6;31543:15;31537:22;31534:1;31523:37;31518:2;31507:9;31503:18;31496:65;31578:6;31570:14;;;31037:553;;;;;:::o;31595:667::-;31679:6;31687;31695;31703;31756:3;31744:9;31735:7;31731:23;31727:33;31724:53;;;31773:1;31770;31763:12;31724:53;31812:9;31799:23;31831:31;31856:5;31831:31;:::i;:::-;31881:5;-1:-1:-1;31938:2:48;31923:18;;31910:32;31951:33;31910:32;31951:33;:::i;:::-;32003:7;-1:-1:-1;32062:2:48;32047:18;;32034:32;32075:33;32034:32;32075:33;:::i;:::-;32127:7;-1:-1:-1;32186:2:48;32171:18;;32158:32;32199:31;32158:32;32199:31;:::i;:::-;31595:667;;;;-1:-1:-1;31595:667:48;;-1:-1:-1;;31595:667:48:o;32267:721::-;32392:6;32400;32408;32461:2;32449:9;32440:7;32436:23;32432:32;32429:52;;;32477:1;32474;32467:12;32429:52;32516:9;32503:23;32535:31;32560:5;32535:31;:::i;:::-;32585:5;-1:-1:-1;32641:2:48;32626:18;;32613:32;-1:-1:-1;;;;;32657:30:48;;32654:50;;;32700:1;32697;32690:12;32654:50;32723:61;32776:7;32767:6;32756:9;32752:22;32723:61;:::i;:::-;32713:71;;;32837:2;32826:9;32822:18;32809:32;-1:-1:-1;;;;;32856:8:48;32853:32;32850:52;;;32898:1;32895;32888:12;32850:52;32921:61;32974:7;32963:8;32952:9;32948:24;32921:61;:::i;:::-;32911:71;;;32267:721;;;;;:::o;32993:529::-;33070:6;33078;33086;33139:2;33127:9;33118:7;33114:23;33110:32;33107:52;;;33155:1;33152;33145:12;33107:52;33194:9;33181:23;33213:31;33238:5;33213:31;:::i;:::-;33263:5;-1:-1:-1;33320:2:48;33305:18;;33292:32;33333:33;33292:32;33333:33;:::i;:::-;33385:7;-1:-1:-1;33444:2:48;33429:18;;33416:32;33457:33;33416:32;33457:33;:::i;34066:1629::-;34130:5;34183:3;34176:4;34168:6;34164:17;34160:27;34150:55;;34201:1;34198;34191:12;34150:55;34241:6;34228:20;34268:72;34284:55;34332:6;34284:55;:::i;34268:72::-;34364:3;34388:6;34383:3;34376:19;34420:4;34415:3;34411:14;34404:21;;34484:4;34476;34468:6;34464:17;34456:6;34452:30;34448:41;34434:55;;34512:3;34504:6;34501:15;34498:35;;;34529:1;34526;34519:12;34498:35;34565:4;34557:6;34553:17;34579:1085;34595:6;34590:3;34587:15;34579:1085;;;34673:4;34667:3;34662;34658:13;34654:24;34651:44;;;34691:1;34688;34681:12;34651:44;34721:23;;:::i;:::-;34785:3;34772:17;34802:31;34825:7;34802:31;:::i;:::-;34846:22;;34918:4;34909:14;;34896:28;34937:31;34896:28;34937:31;:::i;:::-;34999:4;34988:16;;34981:33;35064:2;35055:12;;35042:26;35081:31;35042:26;35081:31;:::i;:::-;35143:2;35132:14;;35125:31;35206:2;35197:12;;35184:26;35223:33;35184:26;35223:33;:::i;:::-;35287:2;35276:14;;35269:31;35350:3;35341:13;;35328:27;35368:30;35328:27;35368:30;:::i;:::-;35429:3;35418:15;;35411:32;35493:3;35484:13;;35471:27;35511:33;35471:27;35511:33;:::i;:::-;35575:3;35564:15;;35557:32;35602:18;;35649:4;35640:14;;;;34621:4;34612:14;34579:1085;;35700:909;35910:6;35918;35926;35979:2;35967:9;35958:7;35954:23;35950:32;35947:52;;;35995:1;35992;35985:12;35947:52;36035:9;36022:23;-1:-1:-1;;;;;36060:6:48;36057:30;36054:50;;;36100:1;36097;36090:12;36054:50;36123:62;36177:7;36168:6;36157:9;36153:22;36123:62;:::i;:::-;36113:72;;;36238:2;36227:9;36223:18;36210:32;-1:-1:-1;;;;;36257:8:48;36254:32;36251:52;;;36299:1;36296;36289:12;36251:52;36322:71;36385:7;36374:8;36363:9;36359:24;36322:71;:::i;:::-;36312:81;;;36446:2;36435:9;36431:18;36418:32;-1:-1:-1;;;;;36465:8:48;36462:32;36459:52;;;36507:1;36504;36497:12;36459:52;36530:73;36595:7;36584:8;36573:9;36569:24;36530:73;:::i;36614:954::-;37157:6;37154:1;37143:21;37132:9;37125:40;37201:3;37196:2;37185:9;37181:18;37174:31;37106:4;37228:65;37288:3;37277:9;37273:19;37265:6;37228:65;:::i;:::-;37341:9;37333:6;37329:22;37324:2;37313:9;37309:18;37302:50;37375:57;37425:6;37417;37375:57;:::i;:::-;37361:71;;37480:9;37472:6;37468:22;37463:2;37452:9;37448:18;37441:50;37508:54;37555:6;37547;37508:54;:::i;37573:326::-;37821:1;37810:21;;;37792:40;;37779:3;37764:19;;37841:52;37889:2;37874:18;;37866:6;15529:12;;15526:1;15515:27;;;15503:40;;15596:4;15585:16;;;15579:23;-1:-1:-1;;;;;15575:49:48;15559:14;;;15552:73;15688:4;15677:16;;;15671:23;15657:38;;15641:14;;15634:62;15443:259;37904:616;38002:6;38010;38018;38071:2;38059:9;38050:7;38046:23;38042:32;38039:52;;;38087:1;38084;38077:12;38039:52;38126:9;38113:23;38145:31;38170:5;38145:31;:::i;:::-;38195:5;-1:-1:-1;38252:2:48;38237:18;;38224:32;38265:31;38224:32;38265:31;:::i;:::-;38315:7;-1:-1:-1;38373:2:48;38358:18;;38345:32;-1:-1:-1;;;;;38389:30:48;;38386:50;;;38432:1;38429;38422:12;38800:1982;38912:6;38920;38928;38981:2;38969:9;38960:7;38956:23;38952:32;38949:52;;;38997:1;38994;38987:12;38949:52;39037:9;39024:23;-1:-1:-1;;;;;39062:6:48;39059:30;39056:50;;;39102:1;39099;39092:12;39056:50;39125;39167:7;39158:6;39147:9;39143:22;39125:50;:::i;:::-;39115:60;;;39228:2;39217:9;39213:18;39200:32;-1:-1:-1;;;;;39247:8:48;39244:32;39241:52;;;39289:1;39286;39279:12;39241:52;39312:24;;39370:6;39352:16;;;39348:29;39345:49;;;39390:1;39387;39380:12;39345:49;39416:23;;:::i;:::-;39477:2;39464:16;-1:-1:-1;;;;;39495:8:48;39492:32;39489:52;;;39537:1;39534;39527:12;39489:52;39564:57;39613:7;39602:8;39598:2;39594:17;39564:57;:::i;:::-;39557:5;39550:72;;39654:29;39679:2;39675;39671:11;39654:29;:::i;:::-;39649:2;39642:5;39638:14;39631:53;39716:28;39740:2;39736;39732:11;39716:28;:::i;:::-;39711:2;39704:5;39700:14;39693:52;39777:28;39801:2;39797;39793:11;39777:28;:::i;:::-;39772:2;39765:5;39761:14;39754:52;39839:29;39863:3;39859:2;39855:12;39839:29;:::i;:::-;39833:3;39826:5;39822:15;39815:54;39915:3;39911:2;39907:12;39894:26;-1:-1:-1;;;;;39935:8:48;39932:32;39929:52;;;39977:1;39974;39967:12;39929:52;40014:64;40070:7;40059:8;40055:2;40051:17;40014:64;:::i;:::-;40008:3;40001:5;39997:15;39990:89;;40125:3;40121:2;40117:12;40104:26;-1:-1:-1;;;;;40145:8:48;40142:32;40139:52;;;40187:1;40184;40177:12;40139:52;40224:69;40285:7;40274:8;40270:2;40266:17;40224:69;:::i;:::-;40218:3;40211:5;40207:15;40200:94;;40340:3;40336:2;40332:12;40319:26;-1:-1:-1;;;;;40360:8:48;40357:32;40354:52;;;40402:1;40399;40392:12;40354:52;40439:66;40497:7;40486:8;40482:2;40478:17;40439:66;:::i;:::-;40433:3;40426:5;40422:15;40415:91;;40552:3;40548:2;40544:12;40531:26;-1:-1:-1;;;;;40572:8:48;40569:32;40566:52;;;40614:1;40611;40604:12;40566:52;40651:45;40688:7;40677:8;40673:2;40669:17;40651:45;:::i;:::-;40645:3;40634:15;;40627:70;-1:-1:-1;40638:5:48;-1:-1:-1;40740:36:48;;-1:-1:-1;40772:2:48;40757:18;;40740:36;:::i;:::-;40730:46;;38800:1982;;;;;:::o;41065:1332::-;41174:6;41182;41190;41243:2;41231:9;41222:7;41218:23;41214:32;41211:52;;;41259:1;41256;41249:12;41211:52;41298:9;41285:23;41317:31;41342:5;41317:31;:::i;:::-;41367:5;-1:-1:-1;41424:2:48;41409:18;;41396:32;41437:31;41396:32;41437:31;:::i;:::-;41487:7;-1:-1:-1;41545:2:48;41530:18;;41517:32;-1:-1:-1;;;;;41561:30:48;;41558:50;;;41604:1;41601;41594:12;41558:50;41627:22;;41680:4;41672:13;;41668:27;-1:-1:-1;41658:55:48;;41709:1;41706;41699:12;41658:55;41749:2;41736:16;41772:72;41788:55;41836:6;41788:55;:::i;41772:72::-;41866:3;41890:6;41885:3;41878:19;41922:2;41917:3;41913:12;41906:19;;41977:2;41967:6;41964:1;41960:14;41956:2;41952:23;41948:32;41934:46;;42003:7;41995:6;41992:19;41989:39;;;42024:1;42021;42014:12;41989:39;42056:2;42052;42048:11;42068:299;42084:6;42079:3;42076:15;42068:299;;;42170:3;42157:17;-1:-1:-1;;;;;42193:11:48;42190:35;42187:55;;;42238:1;42235;42228:12;42187:55;42267:57;42316:7;42311:2;42297:11;42293:2;42289:20;42285:29;42267:57;:::i;:::-;42255:70;;-1:-1:-1;42354:2:48;42345:12;;;;42101;42068:299;;;42072:3;42386:5;42376:15;;;;;;41065:1332;;;;;:::o;42402:787::-;42588:4;42636:2;42625:9;42621:18;42680:6;42677:1;42666:21;42655:9;42648:40;42738:6;42735:1;42724:21;42719:2;42708:9;42704:18;42697:49;42782:2;42777;42766:9;42762:18;42755:30;42805:6;42840;42834:13;42871:6;42863;42856:22;42909:3;42898:9;42894:19;42887:26;;42948:2;42940:6;42936:15;42922:29;;42969:1;42979:184;42993:6;42990:1;42987:13;42979:184;;;43068:13;;43065:1;43054:28;43042:41;;43112:2;43138:15;;;;43103:12;;;;43015:1;43008:9;42979:184;;;-1:-1:-1;43180:3:48;;42402:787;-1:-1:-1;;;;;;;42402:787:48:o;43194:353::-;43282:6;43335:2;43323:9;43314:7;43310:23;43306:32;43303:52;;;43351:1;43348;43341:12;43303:52;43391:9;43378:23;-1:-1:-1;;;;;43416:6:48;43413:30;43410:50;;;43456:1;43453;43446:12;43410:50;43479:62;43533:7;43524:6;43513:9;43509:22;43479:62;:::i;43744:380::-;43823:1;43819:12;;;;43866;;;43887:61;;43941:4;43933:6;43929:17;43919:27;;43887:61;43994:2;43986:6;43983:14;43963:18;43960:38;43957:161;;44040:10;44035:3;44031:20;44028:1;44021:31;44075:4;44072:1;44065:15;44103:4;44100:1;44093:15;43957:161;;43744:380;;;:::o;44258:680::-;44311:3;44352:5;44346:12;44381:36;44407:9;44381:36;:::i;:::-;44448:1;44433:17;;44459:133;;;;44606:1;44601:331;;;;44426:506;;44459:133;-1:-1:-1;;44492:24:48;;44480:37;;44565:14;;44558:22;44546:35;;44537:45;;;-1:-1:-1;44459:133:48;;44601:331;44632:5;44629:1;44622:16;44679:4;44676:1;44666:18;44706:1;44720:166;44734:6;44731:1;44728:13;44720:166;;;44814:14;;44801:11;;;44794:35;44870:1;44857:15;;;;44756:4;44749:12;44720:166;;;44724:3;;44915:6;44910:3;44906:16;44899:23;;44426:506;;;;44258:680;;;;:::o;44943:202::-;45073:3;45098:41;45135:3;45127:6;45098:41;:::i;45954:739::-;46004:3;46045:5;46039:12;46074:36;46100:9;46074:36;:::i;:::-;46119:19;;;46169:1;46154:17;;46180:150;;;;46344:1;46339:348;;;;46147:540;;46180:150;46243:3;46239:8;46228:9;46224:24;46217:4;46212:3;46208:14;46201:48;46315:4;46303:6;46296:14;46289:22;46286:1;46282:30;46277:3;46273:40;46269:51;46262:58;;46180:150;;46339:348;46370:5;46367:1;46360:16;46417:4;46414:1;46404:18;46444:1;46458:177;46472:6;46469:1;46466:13;46458:177;;;46569:7;46563:14;46556:4;46552:1;46547:3;46543:11;46539:22;46532:46;46619:1;46610:7;46606:15;46595:26;;46494:4;46491:1;46487:12;46482:17;;46458:177;;;46659:11;;46672:4;46655:22;;-1:-1:-1;;46147:540:48;;;45954:739;;;;:::o;46840:1237::-;46909:3;46940;46972:5;46966:12;46999:6;46994:3;46987:19;47031:4;47026:3;47022:14;47015:21;;47089:4;47079:6;47076:1;47072:14;47065:5;47061:26;47057:37;47113:5;47110:1;47103:16;47155:4;47152:1;47142:18;47178:1;47188:863;47202:6;47199:1;47196:13;47188:863;;;47267:16;;;-1:-1:-1;;47263:30:48;47251:43;;47320:13;;47307:27;;47371:4;47364;47354:15;;47347:29;;;47424:1;47412:14;;47406:21;47493:4;47478:20;;47471:28;47464:36;47447:15;;;47440:61;;;;47546:1;47542:17;-1:-1:-1;;;;;47538:43:48;47531:4;47521:15;;47514:68;47569:3;47612:4;47602:15;;47595:29;47651:60;47706:3;47696:14;;47689:4;47677:17;;47651:60;:::i;:::-;47752:17;;;-1:-1:-1;;47748:31:48;47741:4;47731:15;;47724:56;47807:52;47756:6;47845:4;47833:17;;47807:52;:::i;:::-;47917:1;47905:14;;47899:21;-1:-1:-1;;;;;47895:47:48;47889:3;47879:14;;;;47872:71;;;;-1:-1:-1;48036:4:48;48027:14;;;;;48005:1;47993:14;;;;47939:1;47217:9;47188:863;;48382:1068;48474:6;48469:3;48462:19;48444:3;48502:50;48544:6;48539:3;48535:16;48528:5;48502:50;:::i;:::-;48594:3;48588:4;48584:14;48577:4;48572:3;48568:14;48561:38;48622:49;48666:4;48659;48652:5;48648:16;48622:49;:::i;:::-;48608:63;;48700:66;48759:4;48752:5;48748:16;48742:23;-1:-1:-1;;;;;46793:36:48;;46698:137;48700:66;-1:-1:-1;;;;;2956:31:48;48817:4;48808:14;;2944:44;48855:16;;;48848:4;48839:14;;48832:40;48895:51;48859:6;48932:4;48921:16;;48895:51;:::i;:::-;48881:65;;48989:4;48982:5;48978:16;48972:23;49004:53;49051:4;49046:3;49042:14;49035:4;49024:9;49020:20;13443:13;13436:21;13424:34;;13373:91;49004:53;49101:1;49097:17;;;49094:1;49083:32;49126:4;49117:14;;2846:33;49141:62;49197:4;49192:3;49188:14;49181:4;49169:9;49165:2;49161:18;49157:29;13443:13;13436:21;13424:34;;13373:91;49141:62;;49247:3;49239:6;49235:16;49228:4;49223:3;49219:14;49212:40;49275:70;49338:6;49331:4;49324:5;49320:16;49275:70;:::i;:::-;49261:84;;49354:68;49414:6;49409:3;49405:16;49398:4;49391:5;49387:16;48167:12;;48211:1;48200:24;;;48188:37;;48265:2;48261:18;;;-1:-1:-1;;;;;48257:44:48;48250:4;48241:14;;48234:68;48298:1;48352:16;;;48346:23;48332:38;;;48318:12;;48311:60;48082:295;49455:846;49524:3;49562:5;49556:12;49589:6;49584:3;49577:19;49621:4;49616:3;49612:14;49605:21;;49645:5;49642:1;49635:16;49687:4;49684:1;49674:18;49710:1;49720:556;49734:6;49731:1;49728:13;49720:556;;;49806:6;49800:13;49852:9;49849:1;49838:24;49833:3;49826:37;49940:1;49936;49931:3;49927:11;49923:19;49911:9;49907:2;49903:18;49899:44;49892:4;49887:3;49883:14;49876:68;50017:4;50005:9;50000:3;49996:19;49992:30;49985:38;49978:46;49973:2;49968:3;49964:12;49957:68;50100:4;50088:9;50083:3;50079:19;50075:30;50068:38;50061:46;50054:4;50049:3;50045:14;50038:70;;50188:1;50184;50179:3;50175:11;50171:19;50166:1;50158:6;50154:14;50148:21;50144:47;50137:4;50132:3;50128:14;50121:71;50221:4;50216:3;50212:14;50205:21;;50261:4;50253:6;50249:17;50239:27;;49756:1;49753;49749:9;49744:14;;49720:556;;50306:945;50380:3;50418:5;50412:12;50445:6;50440:3;50433:19;50477:4;50472:3;50468:14;50461:21;;50501:5;50498:1;50491:16;50543:4;50540:1;50530:18;50566:1;50576:650;50590:6;50587:1;50584:13;50576:650;;;50662:6;50656:13;50708:9;50705:1;50694:24;50689:3;50682:37;50777:9;50773:2;50769:18;50766:1;50755:33;50748:4;50743:3;50739:14;50732:57;50846:9;50841:3;50837:19;50834:1;50823:34;50818:2;50813:3;50809:12;50802:56;50917:9;50912:3;50908:19;50905:1;50894:34;50887:4;50882:3;50878:14;50871:58;;50979:1;50971:6;50967:14;50961:21;50995:54;51044:3;51039;51035:13;51028:4;51015:11;51011:22;13443:13;13436:21;13424:34;;13373:91;50995:54;51089:1;51085:19;-1:-1:-1;;;;;51081:45:48;51137:4;51128:14;;2944:44;51172:3;51163:13;;;;51211:4;51199:17;;;;;50612:1;50605:9;50576:650;;51256:1022;51327:3;51365:5;51359:12;51392:6;51387:3;51380:19;51424:4;51419:3;51415:14;51408:21;;51448:5;51445:1;51438:16;51490:4;51487:1;51477:18;51513:1;51523:730;51537:6;51534:1;51531:13;51523:730;;;51609:6;51603:13;51655:9;51652:1;51641:24;51636:3;51629:37;51724:9;51720:2;51716:18;51713:1;51702:33;51695:4;51690:3;51686:14;51679:57;51793:9;51788:3;51784:19;51781:1;51770:34;51765:2;51760:3;51756:12;51749:56;;51855:1;51847:6;51843:14;51837:21;51928:1;51924;51919:3;51915:11;51911:19;51898:11;51894:37;51887:4;51882:3;51878:14;51871:61;51945:64;52004:3;51999;51995:13;51988:4;51974:11;51969:3;51965:21;51961:32;13443:13;13436:21;13424:34;;13373:91;51945:64;-1:-1:-1;52102:4:48;52090:17;;52084:24;-1:-1:-1;;;;;46793:36:48;52164:3;52155:13;;2944:44;52198:4;52189:14;;;;52238:4;52226:17;;;;51559:1;51552:9;51523:730;;52283:1409;52501:6;52498:1;52487:21;52476:9;52469:40;52545:2;52540;52529:9;52525:18;52518:30;52584:6;52579:2;52568:9;52564:18;52557:34;52450:4;52614:66;52675:3;52664:9;52660:19;52652:6;52614:66;:::i;:::-;52724:4;52712:17;;52706:24;52767:1;52756:24;;;52797:2;52782:18;;2846:33;52810:67;52872:3;52861:9;52857:19;52850:4;52838:9;52834:2;52830:18;52826:29;13443:13;13436:21;13424:34;;13373:91;52810:67;52886;52948:3;52937:9;52933:19;52926:4;52914:9;52910:2;52906:18;52902:29;13443:13;13436:21;13424:34;;13373:91;52886:67;52962;53024:3;53013:9;53009:19;53002:4;52990:9;52986:2;52982:18;52978:29;13443:13;13436:21;13424:34;;13373:91;52962:67;-1:-1:-1;53070:22:48;;;-1:-1:-1;;53066:36:48;53060:3;53045:19;;53038:65;53126:71;53074:6;53183:4;53171:17;;53126:71;:::i;:::-;53238:22;;;-1:-1:-1;;53234:36:48;53228:3;53213:19;;53206:65;53112:85;-1:-1:-1;53294:76:48;53112:85;53356:4;53344:17;;53294:76;:::i;:::-;53414:22;;;-1:-1:-1;;53410:36:48;53401:6;53386:22;;53379:68;53280:90;-1:-1:-1;53470:73:48;53280:90;53529:4;53517:17;;53470:73;:::i;:::-;53584:22;;;-1:-1:-1;;53580:36:48;53574:3;53559:19;;53552:65;53456:87;-1:-1:-1;53634:52:48;53456:87;53672:4;53660:17;;53634:52;:::i;55581:397::-;55783:2;55765:21;;;55822:2;55802:18;;;55795:30;55861:34;55856:2;55841:18;;55834:62;-1:-1:-1;;;55927:2:48;55912:18;;55905:31;55968:3;55953:19;;55581:397::o;55983:255::-;56103:19;;56142:2;56134:11;;56131:101;;;-1:-1:-1;;56203:2:48;56199:12;;;56196:1;56192:20;56188:33;56177:45;55983:255;;;;:::o;56648:352::-;56850:2;56832:21;;;56889:2;56869:18;;;56862:30;56928;56923:2;56908:18;;56901:58;56991:2;56976:18;;56648:352::o;57547:402::-;57749:2;57731:21;;;57788:2;57768:18;;;57761:30;57827:34;57822:2;57807:18;;57800:62;-1:-1:-1;;;57893:2:48;57878:18;;57871:36;57939:3;57924:19;;57547:402::o;58721:347::-;58923:2;58905:21;;;58962:2;58942:18;;;58935:30;59001:25;58996:2;58981:18;;58974:53;59059:2;59044:18;;58721:347::o;59428:138::-;59507:13;;59529:31;59507:13;59529:31;:::i;59571:251::-;59641:6;59694:2;59682:9;59673:7;59669:23;59665:32;59662:52;;;59710:1;59707;59700:12;59662:52;59742:9;59736:16;59761:31;59786:5;59761:31;:::i;59827:127::-;59888:10;59883:3;59879:20;59876:1;59869:31;59919:4;59916:1;59909:15;59943:4;59940:1;59933:15;59959:127;60020:10;60015:3;60011:20;60008:1;60001:31;60051:4;60048:1;60041:15;60075:4;60072:1;60065:15;60091:210;60187:1;60158:16;;;60176;;;;60154:39;60251:18;60208:28;;-1:-1:-1;;60238:33:48;;60205:67;60202:93;;;60275:18;;:::i;60666:214::-;60764:1;60753:16;;;60735;;;;60731:39;-1:-1:-1;;60785:34:48;;60831:18;60821:29;;60782:69;60779:95;;;60854:18;;:::i;60885:125::-;60950:9;;;60971:10;;;60968:36;;;60984:18;;:::i;61223:301::-;61352:3;61390:6;61384:13;61436:6;61429:4;61421:6;61417:17;61412:3;61406:37;61498:1;61462:16;;61487:13;;;-1:-1:-1;61462:16:48;61223:301;-1:-1:-1;61223:301:48:o;61885:134::-;61962:13;;61984:29;61962:13;61984:29;:::i;62024:515::-;62078:5;62131:3;62124:4;62116:6;62112:17;62108:27;62098:55;;62149:1;62146;62139:12;62098:55;62182:6;62176:13;62221:4;62213:6;62209:17;62250:1;62271:53;62287:36;62316:6;62287:36;:::i;62271:53::-;62260:64;;62349:6;62340:7;62333:23;62389:3;62380:6;62375:3;62371:16;62368:25;62365:45;;;62406:1;62403;62396:12;62365:45;62450:6;62445:3;62438:4;62429:7;62425:18;62419:38;62506:1;62477:20;;;62499:4;62473:31;62466:42;;;;-1:-1:-1;62481:7:48;62024:515;-1:-1:-1;;;62024:515:48:o;62544:132::-;62620:13;;62642:28;62620:13;62642:28;:::i;62681:2131::-;62754:5;62807:3;62800:4;62792:6;62788:17;62784:27;62774:55;;62825:1;62822;62815:12;62774:55;62858:6;62852:13;62885:72;62901:55;62949:6;62901:55;:::i;62885:72::-;62981:3;63005:6;63000:3;62993:19;63037:4;63032:3;63028:14;63021:21;;63098:4;63088:6;63085:1;63081:14;63073:6;63069:27;63065:38;63051:52;;63126:3;63118:6;63115:15;63112:35;;;63143:1;63140;63133:12;63112:35;63179:4;63171:6;63167:17;63193:1588;63209:6;63204:3;63201:15;63193:1588;;;63290:3;63284:10;-1:-1:-1;;;;;63313:11:48;63310:35;63307:55;;;63358:1;63355;63348:12;63307:55;63385:24;;63457:4;63433:12;;;-1:-1:-1;;63429:26:48;63425:37;63422:57;;;63475:1;63472;63465:12;63422:57;63505:23;;:::i;:::-;63595:4;63587:13;;63581:20;63614:22;;63679:4;63671:13;;63665:20;-1:-1:-1;;;;;63701:32:48;;63698:52;;;63746:1;63743;63736:12;63698:52;63796:4;63785:8;63781:2;63777:17;63773:28;63763:38;;;63835:4;63830:2;63825:3;63821:12;63817:23;63814:43;;;63853:1;63850;63843:12;63814:43;63885:23;;:::i;:::-;63942:2;63936:9;63958:30;63980:7;63958:30;:::i;:::-;64001:24;;64067:4;64059:13;;64053:20;64086:33;64053:20;64086:33;:::i;:::-;64152:4;64139:18;;64132:35;64210:4;64202:13;;64196:20;-1:-1:-1;;;;;64232:32:48;;64229:52;;;64277:1;64274;64267:12;64229:52;64321;64369:3;64358:8;64354:2;64350:17;64321:52;:::i;:::-;64314:4;64305:7;64301:18;64294:80;;64417:2;64413;64409:11;64403:18;-1:-1:-1;;;;;64440:8:48;64437:32;64434:52;;;64482:1;64479;64472:12;64434:52;64524;64572:3;64561:8;64557:2;64553:17;64524:52;:::i;:::-;64519:2;64510:7;64506:16;64499:78;;64616:43;64654:3;64650:2;64646:12;64616:43;:::i;:::-;64610:3;64601:7;64597:17;64590:70;64698:7;64691:4;64684:5;64680:16;64673:33;;64731:5;64726:3;64719:18;;;64766:4;64761:3;64757:14;64750:21;;63235:4;63230:3;63226:14;63219:21;;63193:1588;;64817:552;64881:5;64929:4;64917:9;64912:3;64908:19;64904:30;64901:50;;;64947:1;64944;64937:12;64901:50;64969:23;;:::i;:::-;64960:32;;65022:9;65016:16;65041:31;65064:7;65041:31;:::i;:::-;65081:22;;65148:2;65133:18;;65127:25;65161:33;65127:25;65161:33;:::i;:::-;65221:2;65210:14;;65203:31;65279:2;65264:18;;65258:25;65292:31;65258:25;65292:31;:::i;65374:1418::-;65443:5;65491:6;65479:9;65474:3;65470:19;65466:32;65463:52;;;65511:1;65508;65501:12;65463:52;65533:23;;:::i;:::-;65524:32;;65585:9;65579:16;-1:-1:-1;;;;;65610:6:48;65607:30;65604:50;;;65650:1;65647;65640:12;65604:50;65677:57;65730:3;65721:6;65710:9;65706:22;65677:57;:::i;:::-;65670:5;65663:72;;65781:2;65770:9;65766:18;65760:25;-1:-1:-1;;;;;65800:8:48;65797:32;65794:52;;;65842:1;65839;65832:12;65794:52;65878:59;65933:3;65922:8;65911:9;65907:24;65878:59;:::i;:::-;65873:2;65866:5;65862:14;65855:83;;65970:49;66015:2;66004:9;66000:18;65970:49;:::i;:::-;65965:2;65958:5;65954:14;65947:73;66066:2;66055:9;66051:18;66045:25;-1:-1:-1;;;;;66085:8:48;66082:32;66079:52;;;66127:1;66124;66117:12;66079:52;66163:59;66218:3;66207:8;66196:9;66192:24;66163:59;:::i;:::-;66158:2;66151:5;66147:14;66140:83;;66256:47;66298:3;66287:9;66283:19;66256:47;:::i;:::-;66250:3;66243:5;66239:15;66232:72;66337:48;66380:3;66369:9;66365:19;66337:48;:::i;:::-;66331:3;66324:5;66320:15;66313:73;66419:47;66461:3;66450:9;66446:19;66419:47;:::i;:::-;66413:3;66406:5;66402:15;66395:72;66513:3;66502:9;66498:19;66492:26;-1:-1:-1;;;;;66533:8:48;66530:32;66527:52;;;66575:1;66572;66565:12;66527:52;66612:78;66686:3;66675:8;66664:9;66660:24;66612:78;:::i;:::-;66606:3;66599:5;66595:15;66588:103;;66724:61;66781:3;66775;66764:9;66760:19;66724:61;:::i;66797:1451::-;66870:5;66923:3;66916:4;66908:6;66904:17;66900:27;66890:55;;66941:1;66938;66931:12;66890:55;66974:6;66968:13;67001:72;67017:55;67065:6;67017:55;:::i;67001:72::-;67097:3;67121:6;67116:3;67109:19;67153:4;67148:3;67144:14;67137:21;;67217:4;67209;67201:6;67197:17;67189:6;67185:30;67181:41;67167:55;;67245:3;67237:6;67234:15;67231:35;;;67262:1;67259;67252:12;67231:35;67298:4;67290:6;67286:17;67312:905;67328:6;67323:3;67320:15;67312:905;;;67406:4;67400:3;67395;67391:13;67387:24;67384:44;;;67424:1;67421;67414:12;67384:44;67454:23;;:::i;:::-;67511:3;67505:10;67528:31;67551:7;67528:31;:::i;:::-;67572:22;;67637:4;67628:14;;67622:21;67656:33;67622:21;67656:33;:::i;:::-;67720:4;67709:16;;67702:33;67778:2;67769:12;;67763:19;67795:30;67763:19;67795:30;:::i;:::-;67856:2;67845:14;;67838:31;67912:2;67903:12;;67897:19;67929:30;67897:19;67929:30;:::i;:::-;67990:2;67979:14;;67972:31;68046:3;68037:13;;68031:20;68064:33;68031:20;68064:33;:::i;:::-;68128:3;68117:15;;68110:32;68155:18;;68202:4;68193:14;;;;67354:4;67345:14;67312:905;;68253:1592;68331:5;68384:3;68377:4;68369:6;68365:17;68361:27;68351:55;;68402:1;68399;68392:12;68351:55;68435:6;68429:13;68462:72;68478:55;68526:6;68478:55;:::i;68462:72::-;68558:3;68582:6;68577:3;68570:19;68614:4;68609:3;68605:14;68598:21;;68678:4;68670;68662:6;68658:17;68650:6;68646:30;68642:41;68628:55;;68706:3;68698:6;68695:15;68692:35;;;68723:1;68720;68713:12;68692:35;68759:4;68751:6;68747:17;68773:1041;68789:6;68784:3;68781:15;68773:1041;;;68867:4;68861:3;68856;68852:13;68848:24;68845:44;;;68885:1;68882;68875:12;68845:44;68915:23;;:::i;:::-;68972:3;68966:10;68989:31;69012:7;68989:31;:::i;:::-;69033:22;;69098:4;69089:14;;69083:21;69117:31;69083:21;69117:31;:::i;:::-;69179:4;69168:16;;69161:33;69237:2;69228:12;;69222:19;69254:31;69222:19;69254:31;:::i;:::-;69316:2;69305:14;;69298:31;69372:2;69363:12;;69357:19;69389:31;69357:19;69389:31;:::i;:::-;69451:2;69440:14;;69433:31;69507:3;69498:13;;69492:20;69525:30;69492:20;69525:30;:::i;:::-;69586:3;69575:15;;69568:32;69643:3;69634:13;;69628:20;69661:33;69628:20;69661:33;:::i;:::-;69725:3;69714:15;;69707:32;69752:18;;69799:4;69790:14;;;;68815:4;68806:14;68773:1041;;69850:1591;69925:5;69978:3;69971:4;69963:6;69959:17;69955:27;69945:55;;69996:1;69993;69986:12;69945:55;70029:6;70023:13;70056:72;70072:55;70120:6;70072:55;:::i;70056:72::-;70152:3;70176:6;70171:3;70164:19;70208:4;70203:3;70199:14;70192:21;;70272:4;70264;70256:6;70252:17;70244:6;70240:30;70236:41;70222:55;;70300:3;70292:6;70289:15;70286:35;;;70317:1;70314;70307:12;70286:35;70353:4;70345:6;70341:17;70367:1043;70383:6;70378:3;70375:15;70367:1043;;;70461:4;70455:3;70450;70446:13;70442:24;70439:44;;;70479:1;70476;70469:12;70439:44;70509:23;;:::i;:::-;70566:3;70560:10;70583:31;70606:7;70583:31;:::i;:::-;70627:22;;70692:4;70683:14;;70677:21;70711:31;70677:21;70711:31;:::i;:::-;70773:4;70762:16;;70755:33;70831:2;70822:12;;70816:19;70848:31;70816:19;70848:31;:::i;:::-;70910:2;70899:14;;70892:31;70966:2;70957:12;;70951:19;70983:33;70951:19;70983:33;:::i;:::-;71047:2;71036:14;;71029:31;71103:3;71094:13;;71088:20;71121:30;71088:20;71121:30;:::i;:::-;71182:3;71171:15;;71164:32;71239:3;71230:13;;71224:20;71257:33;71224:20;71257:33;:::i;:::-;71321:3;71310:15;;71303:32;71348:18;;71395:4;71386:14;;;;70409:4;70400:14;70367:1043;;71446:1910;71550:6;71558;71611:2;71599:9;71590:7;71586:23;71582:32;71579:52;;;71627:1;71624;71617:12;71579:52;71659:9;71653:16;71678:29;71701:5;71678:29;:::i;:::-;71775:2;71760:18;;71754:25;71726:5;;-1:-1:-1;;;;;;71791:30:48;;71788:50;;;71834:1;71831;71824:12;71788:50;71857:22;;71913:6;71895:16;;;71891:29;71888:49;;;71933:1;71930;71923:12;71888:49;71961:23;;:::i;:::-;72015:2;72009:9;-1:-1:-1;;;;;72033:8:48;72030:32;72027:52;;;72075:1;72072;72065:12;72027:52;72104:68;72164:7;72153:8;72149:2;72145:17;72104:68;:::i;:::-;72095:7;72088:85;;72207:40;72243:2;72239;72235:11;72207:40;:::i;:::-;72202:2;72193:7;72189:16;72182:66;72282:39;72317:2;72313;72309:11;72282:39;:::i;:::-;72277:2;72268:7;72264:16;72257:65;72356:39;72391:2;72387;72383:11;72356:39;:::i;:::-;72351:2;72342:7;72338:16;72331:65;72431:40;72466:3;72462:2;72458:12;72431:40;:::i;:::-;72425:3;72416:7;72412:17;72405:67;72511:3;72507:2;72503:12;72497:19;-1:-1:-1;;;;;72531:8:48;72528:32;72525:52;;;72573:1;72570;72563:12;72525:52;72612:75;72679:7;72668:8;72664:2;72660:17;72612:75;:::i;:::-;72606:3;72597:7;72593:17;72586:102;;72727:3;72723:2;72719:12;72713:19;-1:-1:-1;;;;;72747:8:48;72744:32;72741:52;;;72789:1;72786;72779:12;72741:52;72828:80;72900:7;72889:8;72885:2;72881:17;72828:80;:::i;:::-;72822:3;72813:7;72809:17;72802:107;;72948:3;72944:2;72940:12;72934:19;-1:-1:-1;;;;;72968:8:48;72965:32;72962:52;;;73010:1;73007;73000:12;72962:52;73049:77;73118:7;73107:8;73103:2;73099:17;73049:77;:::i;:::-;73043:3;73034:7;73030:17;73023:104;;73166:3;73162:2;73158:12;73152:19;-1:-1:-1;;;;;73186:8:48;73183:32;73180:52;;;73228:1;73225;73218:12;73180:52;73267:56;73315:7;73304:8;73300:2;73296:17;73267:56;:::i;:::-;73261:3;73252:7;73248:17;73241:83;;73343:7;73333:17;;;;71446:1910;;;;;:::o;76433:247::-;76501:6;76554:2;76542:9;76533:7;76529:23;76525:32;76522:52;;;76570:1;76567;76560:12;76522:52;76602:9;76596:16;76621:29;76644:5;76621:29;:::i;78303:273::-;78371:6;78424:2;78412:9;78403:7;78399:23;78395:32;78392:52;;;78440:1;78437;78430:12;78392:52;78472:9;78466:16;78522:4;78515:5;78511:16;78504:5;78501:27;78491:55;;78542:1;78539;78532:12;79055:371;-1:-1:-1;;;;;79275:32:48;;;79257:51;;79344:32;;;;79339:2;79324:18;;79317:60;79408:2;79393:18;;79386:34;;;;79245:2;79230:18;;79055:371::o;82642:230::-;82712:6;82765:2;82753:9;82744:7;82740:23;82736:32;82733:52;;;82781:1;82778;82771:12;82733:52;-1:-1:-1;82826:16:48;;82642:230;-1:-1:-1;82642:230:48:o;83235:377::-;83310:6;83318;83371:2;83359:9;83350:7;83346:23;83342:32;83339:52;;;83387:1;83384;83377:12;83339:52;83419:9;83413:16;83438:29;83461:5;83438:29;:::i;:::-;83536:2;83521:18;;83515:25;83486:5;;-1:-1:-1;83549:31:48;83515:25;83549:31;:::i;85443:518::-;85545:2;85540:3;85537:11;85534:421;;;85581:5;85578:1;85571:16;85625:4;85622:1;85612:18;85695:2;85683:10;85679:19;85676:1;85672:27;85666:4;85662:38;85731:4;85719:10;85716:20;85713:47;;;-1:-1:-1;85754:4:48;85713:47;85809:2;85804:3;85800:12;85797:1;85793:20;85787:4;85783:31;85773:41;;85864:81;85882:2;85875:5;85872:13;85864:81;;;85941:1;85927:16;;85908:1;85897:13;85864:81;;;85868:3;;85443:518;;;:::o;86137:1302::-;86263:3;86257:10;-1:-1:-1;;;;;86282:6:48;86279:30;86276:56;;;86312:18;;:::i;:::-;86341:97;86431:6;86391:38;86423:4;86417:11;86391:38;:::i;:::-;86385:4;86341:97;:::i;:::-;86487:4;86518:2;86507:14;;86535:1;86530:652;;;;87226:1;87243:6;87240:89;;;-1:-1:-1;87295:19:48;;;87289:26;87240:89;-1:-1:-1;;86094:1:48;86090:11;;;86086:24;86082:29;86072:40;86118:1;86114:11;;;86069:57;87342:81;;86500:933;;86530:652;44205:1;44198:14;;;44242:4;44229:18;;-1:-1:-1;;86566:20:48;;;86687:222;86701:7;86698:1;86695:14;86687:222;;;86783:19;;;86777:26;86762:42;;86890:4;86875:20;;;;86843:1;86831:14;;;;86717:12;86687:222;;;86691:3;86937:6;86928:7;86925:19;86922:201;;;86998:19;;;86992:26;-1:-1:-1;;87081:1:48;87077:14;;;87093:3;87073:24;87069:37;87065:42;87050:58;87035:74;;86922:201;-1:-1:-1;;;;87169:1:48;87153:14;;;87149:22;87136:36;;-1:-1:-1;86137:1302:48:o;89106:237::-;89144:7;89221:1;89218;89207:16;89203:1;89200;89189:16;89185:39;89258:11;89255:1;89244:26;89233:37;;89301:11;89292:7;89289:24;89279:58;;89317:18;;:::i;90062:245::-;90129:6;90182:2;90170:9;90161:7;90157:23;90153:32;90150:52;;;90198:1;90195;90188:12;90150:52;90230:9;90224:16;90249:28;90271:5;90249:28;:::i;90312:408::-;90387:6;90395;90448:2;90436:9;90427:7;90423:23;90419:32;90416:52;;;90464:1;90461;90454:12;90416:52;90496:9;90490:16;90546:10;90539:5;90535:22;90528:5;90525:33;90515:61;;90572:1;90569;90562:12;90515:61;90645:2;90630:18;;90624:25;90595:5;;-1:-1:-1;90658:30:48;90624:25;90658:30;:::i;90725:410::-;-1:-1:-1;;;;;;90918:33:48;;;90906:46;;90989:2;90985:15;;;;-1:-1:-1;;90981:45:48;90977:1;90968:11;;90961:66;90934:3;91061:16;91057:43;;;91052:2;91043:12;;91036:65;91126:2;91117:12;;90725:410::o;91140:297::-;91258:12;;91305:4;91294:16;;;91288:23;;91258:12;91323:16;;91320:111;;;-1:-1:-1;;91397:4:48;91393:17;;;;91390:1;91386:25;91382:38;91371:50;;91140:297;-1:-1:-1;91140:297:48:o;94658:225::-;94804:2;94793:9;94786:21;94767:4;94824:53;94873:2;94862:9;94858:18;94850:6;94824:53;:::i;96870:220::-;97019:2;97008:9;97001:21;96982:4;97039:45;97080:2;97069:9;97065:18;97057:6;97039:45;:::i;100455:207::-;100494:3;-1:-1:-1;;;;;100527:31:48;;-1:-1:-1;;;;;;100570:32:48;;100567:58;;100605:18;;:::i;:::-;100654:1;100641:15;;100455:207;-1:-1:-1;;100455:207:48:o;100667:509::-;100922:2;100911:9;100904:21;100885:4;100948:45;100989:2;100978:9;100974:18;100966:6;100948:45;:::i;:::-;101041:9;101033:6;101029:22;101024:2;101013:9;101009:18;101002:50;101069:43;101105:6;101097;101069:43;:::i;:::-;101061:51;;;101162:6;101159:1;101148:21;101143:2;101132:9;101128:18;101121:49;100667:509;;;;;;:::o;101181:426::-;-1:-1:-1;;;;;;101374:33:48;;;;101362:46;;101463:3;101441:16;;;;-1:-1:-1;;;;;;101437:51:48;101433:1;101424:11;;101417:72;101527:2;101523:15;-1:-1:-1;;;;;;101519:53:48;101514:2;101505:12;;101498:75;101598:2;101589:12;;101181:426::o;103438:518::-;-1:-1:-1;;;;;;103657:33:48;;;103645:46;;103728:2;103724:15;;;;-1:-1:-1;;;;;;103720:53:48;103716:1;103707:11;;103700:74;103673:3;103808:16;;;103804:43;;103799:2;103790:12;;103783:65;103882:16;;103878:43;;;103873:2;103864:12;;103857:65;103947:2;103938:12;;103438:518::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "__setTokenInfo(string,((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)),int64,bool,bool,bool,(int64,address,bool,bool,address)[],(int64,int64,int64,int64,bool,address)[],(int64,int64,int64,address,bool,address)[],string),int32)": "d86fec72",
        "_update(address,address,uint256)": "0bb3bfa8",
        "allowance(address,address,address)": "927da105",
        "approve(address,address,uint256)": "e1f21c67",
        "approveNFT(address,address,uint256)": "7336aaf0",
        "associateToken(address,address)": "49146bde",
        "associateTokens(address,address[])": "2e63879b",
        "burnToken(address,int64,int64[])": "d6910d06",
        "createFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)),int64,int32)": "0fb65bf3",
        "createFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)),int64,int32,(int64,address,bool,bool,address)[],(int64,int64,int64,int64,bool,address)[])": "2af0c59a",
        "createNonFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)))": "ea83f293",
        "createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)),(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])": "abb54eb5",
        "dissociateToken(address,address)": "099794e8",
        "dissociateTokens(address,address[])": "78b63918",
        "getAccountId(address)": "e0b490f7",
        "getApproved(address,uint256)": "098f2366",
        "getFungibleTokenInfo(address)": "3f28a19b",
        "getNonFungibleTokenInfo(address,int64)": "287e1da8",
        "getTokenCustomFees(address)": "ae7611a0",
        "getTokenDefaultFreezeStatus(address)": "a7daa18d",
        "getTokenDefaultKycStatus(address)": "335e04c1",
        "getTokenExpiryInfo(address)": "d614cdb8",
        "getTokenInfo(address)": "1f69565f",
        "getTokenKey(address,uint256)": "3c4dd32e",
        "getTokenType(address)": "93272baf",
        "isApprovedForAll(address,address,address)": "f49f40db",
        "isToken(address)": "19f37361",
        "mintToken(address,int64,bytes[])": "e0f4059a",
        "setApprovalForAll(address,address,bool)": "367605ca",
        "transferFrom(address,address,address,uint256)": "15dacbea",
        "transferFromNFT(address,address,address,uint256)": "9b23d3d9",
        "transferNFT(address,address,address,int64)": "5cfc9011",
        "transferNFTs(address,address[],address[],int64[])": "2c4ba191",
        "transferToken(address,address,address,int64)": "eca36917",
        "transferTokens(address,address[],int64[])": "82bba493"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenType_\",\"type\":\"string\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int32\",\"name\":\"decimals_\",\"type\":\"int32\"}],\"name\":\"__setTokenInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"approveNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"associateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"associateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"\",\"type\":\"int64[]\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"initialTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"decimals_\",\"type\":\"int32\"}],\"name\":\"createFungibleToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"initialTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"decimals_\",\"type\":\"int32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"}],\"name\":\"createFungibleTokenWithCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"}],\"name\":\"createNonFungibleToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"}],\"name\":\"createNonFungibleTokenWithCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"dissociateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"dissociateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"accountId\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int32\",\"name\":\"decimals\",\"type\":\"int32\"}],\"internalType\":\"struct IHederaTokenService.FungibleTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"getNonFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"ownerId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"creationTime\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"spenderId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.NonFungibleTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultFreezeStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultKycStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenExpiryInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"getTokenKey\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"transferFromNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"transferNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"sender\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"receiver\",\"type\":\"address[]\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumber\",\"type\":\"int64[]\"}],\"name\":\"transferNFTs\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"}],\"name\":\"transferToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accountId\",\"type\":\"address[]\"},{\"internalType\":\"int64[]\",\"name\":\"amount\",\"type\":\"int64[]\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when an operator {operator} is enabled or disabled {approved} for an owner {owner}. The operator {operator} can than manage all NFTs of the owner {owner}. This event should be emitted by the `setApprovalForAll` method. See https://ethereum.org/en/developers/docs/standards/tokens/erc-721/#events for more information.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"params\":{\"owner\":\"the owner of the tokens to be spent\",\"spender\":\"the spender of the tokens\",\"token\":\"The Hedera token address to check the allowance of\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"The amount which spender is still allowed to withdraw from owner.\"}},\"approve(address,address,uint256)\":{\"params\":{\"amount\":\"the amount of tokens authorized to spend.\",\"spender\":\"the account address authorized to spend\",\"token\":\"The hedera token address to approve\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"approveNFT(address,address,uint256)\":{\"params\":{\"approved\":\"The new approved NFT controller.  To revoke approvals pass in the zero address.\",\"serialNumber\":\"The NFT serial number  to approve\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"associateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"associateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be associated with the provided tokens\",\"tokens\":\"The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"createNonFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)))\":{\"params\":{\"token\":\"the basic properties of the token being created\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenAddress\":\"the created token's address\"}},\"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)),(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])\":{\"params\":{\"fixedFees\":\"list of fixed fees to apply to the token\",\"royaltyFees\":\"list of royalty fees to apply to the token\",\"token\":\"the basic properties of the token being created\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenAddress\":\"the created token's address\"}},\"dissociateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"dissociateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be dissociated from the provided tokens\",\"tokens\":\"The tokens to be dissociated from the provided account.\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getAccountId(address)\":{\"details\":\"Returns the Account ID and a flag indicating whether the account exists on the forked network (if any). - `accountId` a `uint32` representing the Account ID (excluding both shard and realm numbers) for the given `address`.   The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm   numbers are zero, allowing them to be omitted from the Account ID. - `exists` a boolean flag indicating whether the account exists on the forked network. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties.\"},\"getApproved(address,uint256)\":{\"params\":{\"serialNumber\":\"The NFT to find the approved address for\",\"token\":\"The Hedera NFT token address to check approval\"},\"returns\":{\"approved\":\"The approved address for this NFT, or the zero address if there is none\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getFungibleTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"FungibleTokenInfo info for `token`\"}},\"getNonFungibleTokenInfo(address,int64)\":{\"params\":{\"serialNumber\":\"The NFT serialNumber to check\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"NonFungibleTokenInfo info for `token` `serialNumber`\"}},\"getTokenCustomFees(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"Set of fixed fees for `token`\",\"_2\":\"Set of fractional fees for `token`\",\"_3\":\"Set of royalty fees for `token`\"}},\"getTokenDefaultFreezeStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default freeze status is frozen.\"}},\"getTokenDefaultKycStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default kyc status is KycNotApplicable and false if Revoked.\"}},\"getTokenExpiryInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"expiry\":\"Expiry info for `token`\"}},\"getTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"TokenInfo info for `token`\"}},\"getTokenKey(address,uint256)\":{\"params\":{\"keyType\":\"The keyType of the desired KeyValue\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"KeyValue info for key of type `keyType`\"}},\"getTokenType(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\"}},\"isApprovedForAll(address,address,address)\":{\"params\":{\"operator\":\"The address that acts on behalf of the owner\",\"owner\":\"The address that owns the NFTs\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `operator` is an approved operator for `owner`, false otherwise\"}},\"isToken(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if valid token found for the given address\"}},\"setApprovalForAll(address,address,bool)\":{\"params\":{\"approved\":\"True if the operator is approved, false to revoke approval\",\"operator\":\"Address to add to the set of authorized operators\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"transferFromNFT(address,address,address,uint256)\":{\"params\":{\"from\":\"The account address of the owner of `serialNumber` of `token`\",\"serialNumber\":\"The NFT serial number to transfer\",\"to\":\"The account address of the receiver of `serialNumber`\",\"token\":\"The address of the non-fungible Hedera token to transfer\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"transferNFT(address,address,address,int64)\":{\"params\":{\"recipient\":\"The receiver of the transaction\",\"sender\":\"The sender for the transaction\",\"serialNumber\":\"The serial number of the NFT to transfer.\",\"token\":\"The token to transfer to/from\"}},\"transferNFTs(address,address[],address[],int64[])\":{\"params\":{\"receiver\":\"the receiver of the nft sent by the same index at sender\",\"sender\":\"the sender of an nft\",\"serialNumber\":\"the serial number of the nft sent by the same index at sender\",\"token\":\"The ID of the token as a solidity address\"}},\"transferToken(address,address,address,int64)\":{\"params\":{\"amount\":\"Non-negative value to send. a negative value will result in a failure.\",\"recipient\":\"The receiver of the transaction\",\"sender\":\"The sender for the transaction\",\"token\":\"The token to transfer to/from\"}},\"transferTokens(address,address[],int64[])\":{\"params\":{\"accountId\":\"account to do a transfer to/from\",\"amount\":\"The amount from the accountId at the same index\",\"token\":\"The ID of the token as a solidity address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"Returns the amount which spender is still allowed to withdraw from owner. Only Applicable to Fungible Tokens\"},\"approve(address,address,uint256)\":{\"notice\":\"Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called again it overwrites the current allowance with value. Only Applicable to Fungible Tokens\"},\"approveNFT(address,address,uint256)\":{\"notice\":\"Allow or reaffirm the approved address to transfer an NFT the approved address does not own. Only Applicable to NFT Tokens\"},\"associateToken(address,address)\":{\"notice\":\"Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\"},\"associateTokens(address,address[])\":{\"notice\":\"Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens.\"},\"createNonFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)))\":{\"notice\":\"Creates an Non Fungible Unique Token with the specified properties\"},\"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)),(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])\":{\"notice\":\"Creates an Non Fungible Unique Token with the specified properties\"},\"dissociateToken(address,address)\":{\"notice\":\"Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\"},\"dissociateTokens(address,address[])\":{\"notice\":\"Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed.\"},\"getApproved(address,uint256)\":{\"notice\":\"Get the approved address for a single NFT Only Applicable to NFT Tokens\"},\"getFungibleTokenInfo(address)\":{\"notice\":\"Query fungible token info\"},\"getNonFungibleTokenInfo(address,int64)\":{\"notice\":\"Query non fungible token info\"},\"getTokenCustomFees(address)\":{\"notice\":\"Query token custom fees\"},\"getTokenDefaultFreezeStatus(address)\":{\"notice\":\"Query token default freeze status\"},\"getTokenDefaultKycStatus(address)\":{\"notice\":\"Query token default kyc status\"},\"getTokenExpiryInfo(address)\":{\"notice\":\"Query token expiry info\"},\"getTokenInfo(address)\":{\"notice\":\"Query token info\"},\"getTokenKey(address,uint256)\":{\"notice\":\"Query token KeyValue\"},\"getTokenType(address)\":{\"notice\":\"Query to return the token type for a given address\"},\"isApprovedForAll(address,address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address Only Applicable to NFT Tokens\"},\"isToken(address)\":{\"notice\":\"Query if valid token found for the given address\"},\"setApprovalForAll(address,address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"transferFromNFT(address,address,address,uint256)\":{\"notice\":\"Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens\"},\"transferNFT(address,address,address,int64)\":{\"notice\":\"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)\"},\"transferNFTs(address,address[],address[],int64[])\":{\"notice\":\"Initiates a Non-Fungable Token Transfer\"},\"transferToken(address,address,address,int64)\":{\"notice\":\"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)\"},\"transferTokens(address,address[],int64[])\":{\"notice\":\"Initiates a Fungible Token Transfer\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HtsSystemContract.sol\":\"HtsSystemContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":surl/=lib/surl/\"]},\"sources\":{\"contracts/HederaResponseCodes.sol\":{\"keccak256\":\"0x635d72d9214ccc915f3ecb0ea0fedafd98c6992518e48cf8e07451dbd7964c22\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2777f5f70649100c98df85828d0e31cd31832fdf18e38f6de380efe34f7655fe\",\"dweb:/ipfs/QmbGSxEoonE9i6mpvRMjvZ8DtqTs49sKWGWtFfdoqsVm2q\"]},\"contracts/HtsSystemContract.sol\":{\"keccak256\":\"0x8fbc77d1bec6e3c687d7f3bd7c754bb9de68be6deb610efb52d317eee4abd6bf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://23b4245495b5846eeb229ae12b97d3d369f547233d8e01a24af7523ea7bcd99d\",\"dweb:/ipfs/QmThnMBRdAEGn9qn6ua4RVcSZQCsAhegt3AXbsuSKM8wzf\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xd8be8782375e9d4d8a2419bf4c778f2c1bb0a0387043de05d6fdddfe9f98a96a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://77e8ebe78b55e844de7262d3c8db345db37c705922b1296e3f9aaf95e4d6293b\",\"dweb:/ipfs/Qmbm92mPRbzXc2aUV6AxoUhCpEsyQoK3dk34ZNkJJRftR5\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0x77851a5f37f37b98d062b9e9c6eb1cee1fe9bcaeb0229de0a1941b04f1011f9a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7eb684ca15eaf29cb9f0a2464a8e1006fb93c48bf05180444d57801b072f25ff\",\"dweb:/ipfs/QmTWzfsvTqnZJMzEPQ8CJDNQupssJNjUg2Gj1iiSQqzsX7\"]},\"contracts/IHRC719.sol\":{\"keccak256\":\"0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d\",\"dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD\"]},\"contracts/IHederaTokenService.sol\":{\"keccak256\":\"0x2c702a4ff543d4cac362622fec0a3038d48d05f88505f04da40eca5fc81444b9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://53d05e294c773427e08d9c7b3d4e1c17f26569619f62a84073ad498a8556cd26\",\"dweb:/ipfs/QmXknNMxfwe85Qg2y96hLXGrS4GstwGKsGukeZygeUjUZv\"]},\"contracts/KeyLib.sol\":{\"keccak256\":\"0x3d1b2dec519060ddcb40bf3bb7f1d4c22b8ace1edfb46edee501a06c27edf168\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0973cb0874908e639677808cb3a70d212b990dd71814ccad3def4eb293835eb9\",\"dweb:/ipfs/QmdTeVAw834k58pGpzoJv8DEKm83tUTd9kxYQXJFGRnuMN\"]}},\"version\":1}",
    "metadata": {
        "compiler": { "version": "0.8.28+commit.7893614a" },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "approved",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "tokenId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "approved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ApprovalForAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "tokenId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                { "inputs": [], "stateMutability": "nonpayable", "type": "fallback" },
                {
                    "inputs": [
                        { "internalType": "string", "name": "tokenType_", "type": "string" },
                        {
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "name": "token",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "string",
                                            "name": "name",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "symbol",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "treasury",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "memo",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "tokenSupplyType",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maxSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "freezeDefault",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "uint256",
                                                    "name": "keyType",
                                                    "type": "uint256"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "bool",
                                                            "name": "inheritAccountKey",
                                                            "type": "bool"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "contractId",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ed25519",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "delegatableContractId",
                                                            "type": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "name": "expiry",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "second",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "autoRenewAccount",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "internalType": "int64", "name": "totalSupply", "type": "int64" },
                                { "internalType": "bool", "name": "deleted", "type": "bool" },
                                {
                                    "internalType": "bool",
                                    "name": "defaultKycStatus",
                                    "type": "bool"
                                },
                                { "internalType": "bool", "name": "pauseStatus", "type": "bool" },
                                {
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "minimumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maximumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "netOfTransfers",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                { "internalType": "string", "name": "ledgerId", "type": "string" }
                            ]
                        },
                        { "internalType": "int32", "name": "decimals_", "type": "int32" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "__setTokenInfo"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "from", "type": "address" },
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "amount", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "_update"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "owner", "type": "address" },
                        { "internalType": "address", "name": "spender", "type": "address" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "allowance",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "uint256", "name": "", "type": "uint256" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "spender", "type": "address" },
                        { "internalType": "uint256", "name": "amount", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approve",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "approved", "type": "address" },
                        { "internalType": "uint256", "name": "serialNumber", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approveNFT",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address", "name": "token", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "associateToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address[]", "name": "tokens", "type": "address[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "associateTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "int64[]", "name": "", "type": "int64[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "name": "token",
                            "type": "tuple",
                            "components": [
                                { "internalType": "string", "name": "name", "type": "string" },
                                { "internalType": "string", "name": "symbol", "type": "string" },
                                {
                                    "internalType": "address",
                                    "name": "treasury",
                                    "type": "address"
                                },
                                { "internalType": "string", "name": "memo", "type": "string" },
                                {
                                    "internalType": "bool",
                                    "name": "tokenSupplyType",
                                    "type": "bool"
                                },
                                { "internalType": "int64", "name": "maxSupply", "type": "int64" },
                                { "internalType": "bool", "name": "freezeDefault", "type": "bool" },
                                {
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "uint256",
                                            "name": "keyType",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "name": "key",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "bool",
                                                    "name": "inheritAccountKey",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "contractId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "ed25519",
                                                    "type": "bytes"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "delegatableContractId",
                                                    "type": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "name": "expiry",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "second",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "autoRenewAccount",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "autoRenewPeriod",
                                            "type": "int64"
                                        }
                                    ]
                                }
                            ]
                        },
                        { "internalType": "int64", "name": "initialTotalSupply", "type": "int64" },
                        { "internalType": "int32", "name": "decimals_", "type": "int32" }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "createFungibleToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "address", "name": "tokenAddress", "type": "address" }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "name": "token",
                            "type": "tuple",
                            "components": [
                                { "internalType": "string", "name": "name", "type": "string" },
                                { "internalType": "string", "name": "symbol", "type": "string" },
                                {
                                    "internalType": "address",
                                    "name": "treasury",
                                    "type": "address"
                                },
                                { "internalType": "string", "name": "memo", "type": "string" },
                                {
                                    "internalType": "bool",
                                    "name": "tokenSupplyType",
                                    "type": "bool"
                                },
                                { "internalType": "int64", "name": "maxSupply", "type": "int64" },
                                { "internalType": "bool", "name": "freezeDefault", "type": "bool" },
                                {
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "uint256",
                                            "name": "keyType",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "name": "key",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "bool",
                                                    "name": "inheritAccountKey",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "contractId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "ed25519",
                                                    "type": "bytes"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "delegatableContractId",
                                                    "type": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "name": "expiry",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "second",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "autoRenewAccount",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "autoRenewPeriod",
                                            "type": "int64"
                                        }
                                    ]
                                }
                            ]
                        },
                        { "internalType": "int64", "name": "initialTotalSupply", "type": "int64" },
                        { "internalType": "int32", "name": "decimals_", "type": "int32" },
                        {
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "name": "fixedFees",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "name": "fractionalFees",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                {
                                    "internalType": "int64",
                                    "name": "minimumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "maximumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "netOfTransfers",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "createFungibleTokenWithCustomFees",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "address", "name": "tokenAddress", "type": "address" }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "name": "token",
                            "type": "tuple",
                            "components": [
                                { "internalType": "string", "name": "name", "type": "string" },
                                { "internalType": "string", "name": "symbol", "type": "string" },
                                {
                                    "internalType": "address",
                                    "name": "treasury",
                                    "type": "address"
                                },
                                { "internalType": "string", "name": "memo", "type": "string" },
                                {
                                    "internalType": "bool",
                                    "name": "tokenSupplyType",
                                    "type": "bool"
                                },
                                { "internalType": "int64", "name": "maxSupply", "type": "int64" },
                                { "internalType": "bool", "name": "freezeDefault", "type": "bool" },
                                {
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "uint256",
                                            "name": "keyType",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "name": "key",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "bool",
                                                    "name": "inheritAccountKey",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "contractId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "ed25519",
                                                    "type": "bytes"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "delegatableContractId",
                                                    "type": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "name": "expiry",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "second",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "autoRenewAccount",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "autoRenewPeriod",
                                            "type": "int64"
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "createNonFungibleToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "address", "name": "tokenAddress", "type": "address" }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "name": "token",
                            "type": "tuple",
                            "components": [
                                { "internalType": "string", "name": "name", "type": "string" },
                                { "internalType": "string", "name": "symbol", "type": "string" },
                                {
                                    "internalType": "address",
                                    "name": "treasury",
                                    "type": "address"
                                },
                                { "internalType": "string", "name": "memo", "type": "string" },
                                {
                                    "internalType": "bool",
                                    "name": "tokenSupplyType",
                                    "type": "bool"
                                },
                                { "internalType": "int64", "name": "maxSupply", "type": "int64" },
                                { "internalType": "bool", "name": "freezeDefault", "type": "bool" },
                                {
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "uint256",
                                            "name": "keyType",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "name": "key",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "bool",
                                                    "name": "inheritAccountKey",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "contractId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "ed25519",
                                                    "type": "bytes"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "delegatableContractId",
                                                    "type": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "name": "expiry",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "second",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "autoRenewAccount",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "autoRenewPeriod",
                                            "type": "int64"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "name": "fixedFees",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "name": "royaltyFees",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "createNonFungibleTokenWithCustomFees",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "address", "name": "tokenAddress", "type": "address" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address", "name": "token", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "dissociateToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address[]", "name": "tokens", "type": "address[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "dissociateTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAccountId",
                    "outputs": [
                        { "internalType": "uint32", "name": "accountId", "type": "uint32" },
                        { "internalType": "bool", "name": "exists", "type": "bool" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "serialNumber", "type": "uint256" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getApproved",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "address", "name": "approved", "type": "address" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getFungibleTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.FungibleTokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.TokenInfo",
                                    "name": "tokenInfo",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IHederaTokenService.HederaToken",
                                            "name": "token",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "string",
                                                    "name": "name",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "symbol",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "treasury",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "memo",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "tokenSupplyType",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maxSupply",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "freezeDefault",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                                    "name": "tokenKeys",
                                                    "type": "tuple[]",
                                                    "components": [
                                                        {
                                                            "internalType": "uint256",
                                                            "name": "keyType",
                                                            "type": "uint256"
                                                        },
                                                        {
                                                            "internalType": "struct IHederaTokenService.KeyValue",
                                                            "name": "key",
                                                            "type": "tuple",
                                                            "components": [
                                                                {
                                                                    "internalType": "bool",
                                                                    "name": "inheritAccountKey",
                                                                    "type": "bool"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "contractId",
                                                                    "type": "address"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ed25519",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ECDSA_secp256k1",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "delegatableContractId",
                                                                    "type": "address"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.Expiry",
                                                    "name": "expiry",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "int64",
                                                            "name": "second",
                                                            "type": "int64"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "autoRenewAccount",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "int64",
                                                            "name": "autoRenewPeriod",
                                                            "type": "int64"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "totalSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "deleted",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "defaultKycStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "pauseStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FixedFee[]",
                                            "name": "fixedFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useCurrentTokenForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                                            "name": "fractionalFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "minimumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maximumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "netOfTransfers",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                            "name": "royaltyFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "ledgerId",
                                            "type": "string"
                                        }
                                    ]
                                },
                                { "internalType": "int32", "name": "decimals", "type": "int32" }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "serialNumber", "type": "int64" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getNonFungibleTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.TokenInfo",
                                    "name": "tokenInfo",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IHederaTokenService.HederaToken",
                                            "name": "token",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "string",
                                                    "name": "name",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "symbol",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "treasury",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "memo",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "tokenSupplyType",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maxSupply",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "freezeDefault",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                                    "name": "tokenKeys",
                                                    "type": "tuple[]",
                                                    "components": [
                                                        {
                                                            "internalType": "uint256",
                                                            "name": "keyType",
                                                            "type": "uint256"
                                                        },
                                                        {
                                                            "internalType": "struct IHederaTokenService.KeyValue",
                                                            "name": "key",
                                                            "type": "tuple",
                                                            "components": [
                                                                {
                                                                    "internalType": "bool",
                                                                    "name": "inheritAccountKey",
                                                                    "type": "bool"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "contractId",
                                                                    "type": "address"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ed25519",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ECDSA_secp256k1",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "delegatableContractId",
                                                                    "type": "address"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.Expiry",
                                                    "name": "expiry",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "int64",
                                                            "name": "second",
                                                            "type": "int64"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "autoRenewAccount",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "int64",
                                                            "name": "autoRenewPeriod",
                                                            "type": "int64"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "totalSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "deleted",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "defaultKycStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "pauseStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FixedFee[]",
                                            "name": "fixedFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useCurrentTokenForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                                            "name": "fractionalFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "minimumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maximumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "netOfTransfers",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                            "name": "royaltyFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "ledgerId",
                                            "type": "string"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "int64",
                                    "name": "serialNumber",
                                    "type": "int64"
                                },
                                { "internalType": "address", "name": "ownerId", "type": "address" },
                                {
                                    "internalType": "int64",
                                    "name": "creationTime",
                                    "type": "int64"
                                },
                                { "internalType": "bytes", "name": "metadata", "type": "bytes" },
                                {
                                    "internalType": "address",
                                    "name": "spenderId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getTokenCustomFees",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                {
                                    "internalType": "int64",
                                    "name": "minimumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "maximumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "netOfTransfers",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getTokenDefaultFreezeStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getTokenDefaultKycStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getTokenExpiryInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.Expiry",
                            "name": "expiry",
                            "type": "tuple",
                            "components": [
                                { "internalType": "int64", "name": "second", "type": "int64" },
                                {
                                    "internalType": "address",
                                    "name": "autoRenewAccount",
                                    "type": "address"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "autoRenewPeriod",
                                    "type": "int64"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "name": "token",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "string",
                                            "name": "name",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "symbol",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "treasury",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "memo",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "tokenSupplyType",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maxSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "freezeDefault",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "uint256",
                                                    "name": "keyType",
                                                    "type": "uint256"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "bool",
                                                            "name": "inheritAccountKey",
                                                            "type": "bool"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "contractId",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ed25519",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "delegatableContractId",
                                                            "type": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "name": "expiry",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "second",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "autoRenewAccount",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "internalType": "int64", "name": "totalSupply", "type": "int64" },
                                { "internalType": "bool", "name": "deleted", "type": "bool" },
                                {
                                    "internalType": "bool",
                                    "name": "defaultKycStatus",
                                    "type": "bool"
                                },
                                { "internalType": "bool", "name": "pauseStatus", "type": "bool" },
                                {
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "minimumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maximumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "netOfTransfers",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                { "internalType": "string", "name": "ledgerId", "type": "string" }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "keyType", "type": "uint256" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getTokenKey",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.KeyValue",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "inheritAccountKey",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "contractId",
                                    "type": "address"
                                },
                                { "internalType": "bytes", "name": "ed25519", "type": "bytes" },
                                {
                                    "internalType": "bytes",
                                    "name": "ECDSA_secp256k1",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatableContractId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getTokenType",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "int32", "name": "", "type": "int32" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "owner", "type": "address" },
                        { "internalType": "address", "name": "operator", "type": "address" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isApprovedForAll",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isToken",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "bytes[]", "name": "", "type": "bytes[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" },
                        { "internalType": "int64[]", "name": "serialNumbers", "type": "int64[]" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "operator", "type": "address" },
                        { "internalType": "bool", "name": "approved", "type": "bool" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setApprovalForAll",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "sender", "type": "address" },
                        { "internalType": "address", "name": "recipient", "type": "address" },
                        { "internalType": "uint256", "name": "amount", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferFrom",
                    "outputs": [{ "internalType": "int64", "name": "", "type": "int64" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "from", "type": "address" },
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "serialNumber", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferFromNFT",
                    "outputs": [{ "internalType": "int64", "name": "", "type": "int64" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "sender", "type": "address" },
                        { "internalType": "address", "name": "recipient", "type": "address" },
                        { "internalType": "int64", "name": "serialNumber", "type": "int64" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferNFT",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address[]", "name": "sender", "type": "address[]" },
                        { "internalType": "address[]", "name": "receiver", "type": "address[]" },
                        { "internalType": "int64[]", "name": "serialNumber", "type": "int64[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferNFTs",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "sender", "type": "address" },
                        { "internalType": "address", "name": "recipient", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address[]", "name": "accountId", "type": "address[]" },
                        { "internalType": "int64[]", "name": "amount", "type": "int64[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "allowance(address,address,address)": {
                        "params": {
                            "owner": "the owner of the tokens to be spent",
                            "spender": "the spender of the tokens",
                            "token": "The Hedera token address to check the allowance of"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "The amount which spender is still allowed to withdraw from owner."
                        }
                    },
                    "approve(address,address,uint256)": {
                        "params": {
                            "amount": "the amount of tokens authorized to spend.",
                            "spender": "the account address authorized to spend",
                            "token": "The hedera token address to approve"
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "approveNFT(address,address,uint256)": {
                        "params": {
                            "approved": "The new approved NFT controller.  To revoke approvals pass in the zero address.",
                            "serialNumber": "The NFT serial number  to approve",
                            "token": "The Hedera NFT token address to approve"
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "associateToken(address,address)": {
                        "params": {
                            "account": "The account to be associated with the provided token",
                            "token": "The token to be associated with the provided account"
                        }
                    },
                    "associateTokens(address,address[])": {
                        "params": {
                            "account": "The account to be associated with the provided tokens",
                            "tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "createNonFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)))": {
                        "params": { "token": "the basic properties of the token being created" },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenAddress": "the created token's address"
                        }
                    },
                    "createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)),(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])": {
                        "params": {
                            "fixedFees": "list of fixed fees to apply to the token",
                            "royaltyFees": "list of royalty fees to apply to the token",
                            "token": "the basic properties of the token being created"
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenAddress": "the created token's address"
                        }
                    },
                    "dissociateToken(address,address)": {
                        "params": {
                            "account": "The account to be associated with the provided token",
                            "token": "The token to be associated with the provided account"
                        }
                    },
                    "dissociateTokens(address,address[])": {
                        "params": {
                            "account": "The account to be dissociated from the provided tokens",
                            "tokens": "The tokens to be dissociated from the provided account."
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getAccountId(address)": {
                        "details": "Returns the Account ID and a flag indicating whether the account exists on the forked network (if any). - `accountId` a `uint32` representing the Account ID (excluding both shard and realm numbers) for the given `address`.   The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm   numbers are zero, allowing them to be omitted from the Account ID. - `exists` a boolean flag indicating whether the account exists on the forked network. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
                    },
                    "getApproved(address,uint256)": {
                        "params": {
                            "serialNumber": "The NFT to find the approved address for",
                            "token": "The Hedera NFT token address to check approval"
                        },
                        "returns": {
                            "approved": "The approved address for this NFT, or the zero address if there is none",
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getFungibleTokenInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "FungibleTokenInfo info for `token`"
                        }
                    },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "params": {
                            "serialNumber": "The NFT serialNumber to check",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                        }
                    },
                    "getTokenCustomFees(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "Set of fixed fees for `token`",
                            "_2": "Set of fractional fees for `token`",
                            "_3": "Set of royalty fees for `token`"
                        }
                    },
                    "getTokenDefaultFreezeStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default freeze status is frozen."
                        }
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                        }
                    },
                    "getTokenExpiryInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "expiry": "Expiry info for `token`"
                        }
                    },
                    "getTokenInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "TokenInfo info for `token`"
                        }
                    },
                    "getTokenKey(address,uint256)": {
                        "params": {
                            "keyType": "The keyType of the desired KeyValue",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "KeyValue info for key of type `keyType`"
                        }
                    },
                    "getTokenType(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                        }
                    },
                    "isApprovedForAll(address,address,address)": {
                        "params": {
                            "operator": "The address that acts on behalf of the owner",
                            "owner": "The address that owns the NFTs",
                            "token": "The Hedera NFT token address to approve"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                        }
                    },
                    "isToken(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if valid token found for the given address"
                        }
                    },
                    "setApprovalForAll(address,address,bool)": {
                        "params": {
                            "approved": "True if the operator is approved, false to revoke approval",
                            "operator": "Address to add to the set of authorized operators",
                            "token": "The Hedera NFT token address to approve"
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "transferFromNFT(address,address,address,uint256)": {
                        "params": {
                            "from": "The account address of the owner of `serialNumber` of `token`",
                            "serialNumber": "The NFT serial number to transfer",
                            "to": "The account address of the receiver of `serialNumber`",
                            "token": "The address of the non-fungible Hedera token to transfer"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "transferNFT(address,address,address,int64)": {
                        "params": {
                            "recipient": "The receiver of the transaction",
                            "sender": "The sender for the transaction",
                            "serialNumber": "The serial number of the NFT to transfer.",
                            "token": "The token to transfer to/from"
                        }
                    },
                    "transferNFTs(address,address[],address[],int64[])": {
                        "params": {
                            "receiver": "the receiver of the nft sent by the same index at sender",
                            "sender": "the sender of an nft",
                            "serialNumber": "the serial number of the nft sent by the same index at sender",
                            "token": "The ID of the token as a solidity address"
                        }
                    },
                    "transferToken(address,address,address,int64)": {
                        "params": {
                            "amount": "Non-negative value to send. a negative value will result in a failure.",
                            "recipient": "The receiver of the transaction",
                            "sender": "The sender for the transaction",
                            "token": "The token to transfer to/from"
                        }
                    },
                    "transferTokens(address,address[],int64[])": {
                        "params": {
                            "accountId": "account to do a transfer to/from",
                            "amount": "The amount from the accountId at the same index",
                            "token": "The ID of the token as a solidity address"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "allowance(address,address,address)": {
                        "notice": "Returns the amount which spender is still allowed to withdraw from owner. Only Applicable to Fungible Tokens"
                    },
                    "approve(address,address,uint256)": {
                        "notice": "Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called again it overwrites the current allowance with value. Only Applicable to Fungible Tokens"
                    },
                    "approveNFT(address,address,uint256)": {
                        "notice": "Allow or reaffirm the approved address to transfer an NFT the approved address does not own. Only Applicable to NFT Tokens"
                    },
                    "associateToken(address,address)": {
                        "notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
                    },
                    "associateTokens(address,address[])": {
                        "notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
                    },
                    "createNonFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)))": {
                        "notice": "Creates an Non Fungible Unique Token with the specified properties"
                    },
                    "createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)),(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])": {
                        "notice": "Creates an Non Fungible Unique Token with the specified properties"
                    },
                    "dissociateToken(address,address)": {
                        "notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
                    },
                    "dissociateTokens(address,address[])": {
                        "notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
                    },
                    "getApproved(address,uint256)": {
                        "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
                    },
                    "getFungibleTokenInfo(address)": { "notice": "Query fungible token info" },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "notice": "Query non fungible token info"
                    },
                    "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
                    "getTokenDefaultFreezeStatus(address)": {
                        "notice": "Query token default freeze status"
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "notice": "Query token default kyc status"
                    },
                    "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
                    "getTokenInfo(address)": { "notice": "Query token info" },
                    "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
                    "getTokenType(address)": {
                        "notice": "Query to return the token type for a given address"
                    },
                    "isApprovedForAll(address,address,address)": {
                        "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
                    },
                    "isToken(address)": {
                        "notice": "Query if valid token found for the given address"
                    },
                    "setApprovalForAll(address,address,bool)": {
                        "notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
                    },
                    "transferFromNFT(address,address,address,uint256)": {
                        "notice": "Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens"
                    },
                    "transferNFT(address,address,address,int64)": {
                        "notice": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"
                    },
                    "transferNFTs(address,address[],address[],int64[])": {
                        "notice": "Initiates a Non-Fungable Token Transfer"
                    },
                    "transferToken(address,address,address,int64)": {
                        "notice": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"
                    },
                    "transferTokens(address,address[],int64[])": {
                        "notice": "Initiates a Fungible Token Transfer"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/",
                "forge-std/=lib/forge-std/src/",
                "solidity-stringutils/=lib/surl/lib/solidity-stringutils/",
                "surl/=lib/surl/"
            ],
            "optimizer": { "enabled": true, "runs": 200 },
            "metadata": { "bytecodeHash": "ipfs" },
            "compilationTarget": { "contracts/HtsSystemContract.sol": "HtsSystemContract" },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "contracts/HederaResponseCodes.sol": {
                "keccak256": "0x635d72d9214ccc915f3ecb0ea0fedafd98c6992518e48cf8e07451dbd7964c22",
                "urls": [
                    "bzz-raw://2777f5f70649100c98df85828d0e31cd31832fdf18e38f6de380efe34f7655fe",
                    "dweb:/ipfs/QmbGSxEoonE9i6mpvRMjvZ8DtqTs49sKWGWtFfdoqsVm2q"
                ],
                "license": "Apache-2.0"
            },
            "contracts/HtsSystemContract.sol": {
                "keccak256": "0x8fbc77d1bec6e3c687d7f3bd7c754bb9de68be6deb610efb52d317eee4abd6bf",
                "urls": [
                    "bzz-raw://23b4245495b5846eeb229ae12b97d3d369f547233d8e01a24af7523ea7bcd99d",
                    "dweb:/ipfs/QmThnMBRdAEGn9qn6ua4RVcSZQCsAhegt3AXbsuSKM8wzf"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC20.sol": {
                "keccak256": "0xd8be8782375e9d4d8a2419bf4c778f2c1bb0a0387043de05d6fdddfe9f98a96a",
                "urls": [
                    "bzz-raw://77e8ebe78b55e844de7262d3c8db345db37c705922b1296e3f9aaf95e4d6293b",
                    "dweb:/ipfs/Qmbm92mPRbzXc2aUV6AxoUhCpEsyQoK3dk34ZNkJJRftR5"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC721.sol": {
                "keccak256": "0x77851a5f37f37b98d062b9e9c6eb1cee1fe9bcaeb0229de0a1941b04f1011f9a",
                "urls": [
                    "bzz-raw://7eb684ca15eaf29cb9f0a2464a8e1006fb93c48bf05180444d57801b072f25ff",
                    "dweb:/ipfs/QmTWzfsvTqnZJMzEPQ8CJDNQupssJNjUg2Gj1iiSQqzsX7"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHRC719.sol": {
                "keccak256": "0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd",
                "urls": [
                    "bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d",
                    "dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHederaTokenService.sol": {
                "keccak256": "0x2c702a4ff543d4cac362622fec0a3038d48d05f88505f04da40eca5fc81444b9",
                "urls": [
                    "bzz-raw://53d05e294c773427e08d9c7b3d4e1c17f26569619f62a84073ad498a8556cd26",
                    "dweb:/ipfs/QmXknNMxfwe85Qg2y96hLXGrS4GstwGKsGukeZygeUjUZv"
                ],
                "license": "Apache-2.0"
            },
            "contracts/KeyLib.sol": {
                "keccak256": "0x3d1b2dec519060ddcb40bf3bb7f1d4c22b8ace1edfb46edee501a06c27edf168",
                "urls": [
                    "bzz-raw://0973cb0874908e639677808cb3a70d212b990dd71814ccad3def4eb293835eb9",
                    "dweb:/ipfs/QmdTeVAw834k58pGpzoJv8DEKm83tUTd9kxYQXJFGRnuMN"
                ],
                "license": "Apache-2.0"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 104,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "tokenType",
                "offset": 0,
                "slot": "0",
                "type": "t_string_storage"
            },
            {
                "astId": 106,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "decimals",
                "offset": 0,
                "slot": "1",
                "type": "t_uint8"
            },
            {
                "astId": 109,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "_tokenInfo",
                "offset": 0,
                "slot": "2",
                "type": "t_struct(TokenInfo)8346_storage"
            }
        ],
        "types": {
            "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
            "t_array(t_struct(FixedFee)8388_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FixedFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FixedFee)8388_storage"
            },
            "t_array(t_struct(FractionalFee)8402_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FractionalFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FractionalFee)8402_storage"
            },
            "t_array(t_struct(RoyaltyFee)8416_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.RoyaltyFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(RoyaltyFee)8416_storage"
            },
            "t_array(t_struct(TokenKey)8287_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.TokenKey[]",
                "numberOfBytes": "32",
                "base": "t_struct(TokenKey)8287_storage"
            },
            "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
            "t_bytes_storage": { "encoding": "bytes", "label": "bytes", "numberOfBytes": "32" },
            "t_int64": { "encoding": "inplace", "label": "int64", "numberOfBytes": "8" },
            "t_string_storage": { "encoding": "bytes", "label": "string", "numberOfBytes": "32" },
            "t_struct(Expiry)8268_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.Expiry",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 8263,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "second",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 8265,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewAccount",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 8267,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewPeriod",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_int64"
                    }
                ]
            },
            "t_struct(FixedFee)8388_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FixedFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 8379,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 8381,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 8383,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 28,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 8385,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useCurrentTokenForPayment",
                        "offset": 29,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 8387,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(FractionalFee)8402_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FractionalFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 8391,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 8393,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 8395,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "minimumAmount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 8397,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maximumAmount",
                        "offset": 24,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 8399,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "netOfTransfers",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 8401,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 1,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(HederaToken)8310_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.HederaToken",
                "numberOfBytes": "256",
                "members": [
                    {
                        "astId": 8290,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "name",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 8292,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "symbol",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 8294,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "treasury",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    },
                    {
                        "astId": 8296,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "memo",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 8298,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenSupplyType",
                        "offset": 0,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 8300,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maxSupply",
                        "offset": 1,
                        "slot": "4",
                        "type": "t_int64"
                    },
                    {
                        "astId": 8302,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "freezeDefault",
                        "offset": 9,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 8306,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenKeys",
                        "offset": 0,
                        "slot": "5",
                        "type": "t_array(t_struct(TokenKey)8287_storage)dyn_storage"
                    },
                    {
                        "astId": 8309,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "expiry",
                        "offset": 0,
                        "slot": "6",
                        "type": "t_struct(Expiry)8268_storage"
                    }
                ]
            },
            "t_struct(KeyValue)8280_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.KeyValue",
                "numberOfBytes": "128",
                "members": [
                    {
                        "astId": 8271,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "inheritAccountKey",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 8273,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "contractId",
                        "offset": 1,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 8275,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ed25519",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 8277,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ECDSA_secp256k1",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 8279,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "delegatableContractId",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(RoyaltyFee)8416_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.RoyaltyFee",
                "numberOfBytes": "96",
                "members": [
                    {
                        "astId": 8405,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 8407,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 8409,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 8411,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    },
                    {
                        "astId": 8413,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 20,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 8415,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(TokenInfo)8346_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenInfo",
                "numberOfBytes": "416",
                "members": [
                    {
                        "astId": 8315,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "token",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_struct(HederaToken)8310_storage"
                    },
                    {
                        "astId": 8318,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "totalSupply",
                        "offset": 0,
                        "slot": "8",
                        "type": "t_int64"
                    },
                    {
                        "astId": 8321,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "deleted",
                        "offset": 8,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 8324,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "defaultKycStatus",
                        "offset": 9,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 8327,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "pauseStatus",
                        "offset": 10,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 8332,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fixedFees",
                        "offset": 0,
                        "slot": "9",
                        "type": "t_array(t_struct(FixedFee)8388_storage)dyn_storage"
                    },
                    {
                        "astId": 8337,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fractionalFees",
                        "offset": 0,
                        "slot": "10",
                        "type": "t_array(t_struct(FractionalFee)8402_storage)dyn_storage"
                    },
                    {
                        "astId": 8342,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "royaltyFees",
                        "offset": 0,
                        "slot": "11",
                        "type": "t_array(t_struct(RoyaltyFee)8416_storage)dyn_storage"
                    },
                    {
                        "astId": 8345,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ledgerId",
                        "offset": 0,
                        "slot": "12",
                        "type": "t_string_storage"
                    }
                ]
            },
            "t_struct(TokenKey)8287_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenKey",
                "numberOfBytes": "160",
                "members": [
                    {
                        "astId": 8283,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "keyType",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 8286,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "key",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_struct(KeyValue)8280_storage"
                    }
                ]
            },
            "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" },
            "t_uint8": { "encoding": "inplace", "label": "uint8", "numberOfBytes": "1" }
        }
    },
    "userdoc": {
        "version": 1,
        "kind": "user",
        "methods": {
            "allowance(address,address,address)": {
                "notice": "Returns the amount which spender is still allowed to withdraw from owner. Only Applicable to Fungible Tokens"
            },
            "approve(address,address,uint256)": {
                "notice": "Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called again it overwrites the current allowance with value. Only Applicable to Fungible Tokens"
            },
            "approveNFT(address,address,uint256)": {
                "notice": "Allow or reaffirm the approved address to transfer an NFT the approved address does not own. Only Applicable to NFT Tokens"
            },
            "associateToken(address,address)": {
                "notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
            },
            "associateTokens(address,address[])": {
                "notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
            },
            "createNonFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)))": {
                "notice": "Creates an Non Fungible Unique Token with the specified properties"
            },
            "createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)),(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])": {
                "notice": "Creates an Non Fungible Unique Token with the specified properties"
            },
            "dissociateToken(address,address)": {
                "notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
            },
            "dissociateTokens(address,address[])": {
                "notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
            },
            "getApproved(address,uint256)": {
                "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
            },
            "getFungibleTokenInfo(address)": { "notice": "Query fungible token info" },
            "getNonFungibleTokenInfo(address,int64)": { "notice": "Query non fungible token info" },
            "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
            "getTokenDefaultFreezeStatus(address)": {
                "notice": "Query token default freeze status"
            },
            "getTokenDefaultKycStatus(address)": { "notice": "Query token default kyc status" },
            "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
            "getTokenInfo(address)": { "notice": "Query token info" },
            "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
            "getTokenType(address)": {
                "notice": "Query to return the token type for a given address"
            },
            "isApprovedForAll(address,address,address)": {
                "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
            },
            "isToken(address)": { "notice": "Query if valid token found for the given address" },
            "setApprovalForAll(address,address,bool)": {
                "notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
            },
            "transferFromNFT(address,address,address,uint256)": {
                "notice": "Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens"
            },
            "transferNFT(address,address,address,int64)": {
                "notice": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"
            },
            "transferNFTs(address,address[],address[],int64[])": {
                "notice": "Initiates a Non-Fungable Token Transfer"
            },
            "transferToken(address,address,address,int64)": {
                "notice": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"
            },
            "transferTokens(address,address[],int64[])": {
                "notice": "Initiates a Fungible Token Transfer"
            }
        }
    },
    "devdoc": {
        "version": 1,
        "kind": "dev",
        "methods": {
            "allowance(address,address,address)": {
                "params": {
                    "owner": "the owner of the tokens to be spent",
                    "spender": "the spender of the tokens",
                    "token": "The Hedera token address to check the allowance of"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "The amount which spender is still allowed to withdraw from owner."
                }
            },
            "approve(address,address,uint256)": {
                "params": {
                    "amount": "the amount of tokens authorized to spend.",
                    "spender": "the account address authorized to spend",
                    "token": "The hedera token address to approve"
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "approveNFT(address,address,uint256)": {
                "params": {
                    "approved": "The new approved NFT controller.  To revoke approvals pass in the zero address.",
                    "serialNumber": "The NFT serial number  to approve",
                    "token": "The Hedera NFT token address to approve"
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "associateToken(address,address)": {
                "params": {
                    "account": "The account to be associated with the provided token",
                    "token": "The token to be associated with the provided account"
                }
            },
            "associateTokens(address,address[])": {
                "params": {
                    "account": "The account to be associated with the provided tokens",
                    "tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "createNonFungibleToken((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)))": {
                "params": { "token": "the basic properties of the token being created" },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenAddress": "the created token's address"
                }
            },
            "createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(uint256,(bool,address,bytes,bytes,address))[],(int64,address,int64)),(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])": {
                "params": {
                    "fixedFees": "list of fixed fees to apply to the token",
                    "royaltyFees": "list of royalty fees to apply to the token",
                    "token": "the basic properties of the token being created"
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenAddress": "the created token's address"
                }
            },
            "dissociateToken(address,address)": {
                "params": {
                    "account": "The account to be associated with the provided token",
                    "token": "The token to be associated with the provided account"
                }
            },
            "dissociateTokens(address,address[])": {
                "params": {
                    "account": "The account to be dissociated from the provided tokens",
                    "tokens": "The tokens to be dissociated from the provided account."
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "getAccountId(address)": {
                "details": "Returns the Account ID and a flag indicating whether the account exists on the forked network (if any). - `accountId` a `uint32` representing the Account ID (excluding both shard and realm numbers) for the given `address`.   The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm   numbers are zero, allowing them to be omitted from the Account ID. - `exists` a boolean flag indicating whether the account exists on the forked network. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
            },
            "getApproved(address,uint256)": {
                "params": {
                    "serialNumber": "The NFT to find the approved address for",
                    "token": "The Hedera NFT token address to check approval"
                },
                "returns": {
                    "approved": "The approved address for this NFT, or the zero address if there is none",
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "getFungibleTokenInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "FungibleTokenInfo info for `token`"
                }
            },
            "getNonFungibleTokenInfo(address,int64)": {
                "params": {
                    "serialNumber": "The NFT serialNumber to check",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                }
            },
            "getTokenCustomFees(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "Set of fixed fees for `token`",
                    "_2": "Set of fractional fees for `token`",
                    "_3": "Set of royalty fees for `token`"
                }
            },
            "getTokenDefaultFreezeStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default freeze status is frozen."
                }
            },
            "getTokenDefaultKycStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                }
            },
            "getTokenExpiryInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "expiry": "Expiry info for `token`"
                }
            },
            "getTokenInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "TokenInfo info for `token`"
                }
            },
            "getTokenKey(address,uint256)": {
                "params": {
                    "keyType": "The keyType of the desired KeyValue",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "KeyValue info for key of type `keyType`"
                }
            },
            "getTokenType(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                }
            },
            "isApprovedForAll(address,address,address)": {
                "params": {
                    "operator": "The address that acts on behalf of the owner",
                    "owner": "The address that owns the NFTs",
                    "token": "The Hedera NFT token address to approve"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                }
            },
            "isToken(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if valid token found for the given address"
                }
            },
            "setApprovalForAll(address,address,bool)": {
                "params": {
                    "approved": "True if the operator is approved, false to revoke approval",
                    "operator": "Address to add to the set of authorized operators",
                    "token": "The Hedera NFT token address to approve"
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "transferFromNFT(address,address,address,uint256)": {
                "params": {
                    "from": "The account address of the owner of `serialNumber` of `token`",
                    "serialNumber": "The NFT serial number to transfer",
                    "to": "The account address of the receiver of `serialNumber`",
                    "token": "The address of the non-fungible Hedera token to transfer"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "transferNFT(address,address,address,int64)": {
                "params": {
                    "recipient": "The receiver of the transaction",
                    "sender": "The sender for the transaction",
                    "serialNumber": "The serial number of the NFT to transfer.",
                    "token": "The token to transfer to/from"
                }
            },
            "transferNFTs(address,address[],address[],int64[])": {
                "params": {
                    "receiver": "the receiver of the nft sent by the same index at sender",
                    "sender": "the sender of an nft",
                    "serialNumber": "the serial number of the nft sent by the same index at sender",
                    "token": "The ID of the token as a solidity address"
                }
            },
            "transferToken(address,address,address,int64)": {
                "params": {
                    "amount": "Non-negative value to send. a negative value will result in a failure.",
                    "recipient": "The receiver of the transaction",
                    "sender": "The sender for the transaction",
                    "token": "The token to transfer to/from"
                }
            },
            "transferTokens(address,address[],int64[])": {
                "params": {
                    "accountId": "account to do a transfer to/from",
                    "amount": "The amount from the accountId at the same index",
                    "token": "The ID of the token as a solidity address"
                }
            }
        },
        "events": {
            "ApprovalForAll(address,address,bool)": {
                "details": "Emitted when an operator {operator} is enabled or disabled {approved} for an owner {owner}. The operator {operator} can than manage all NFTs of the owner {owner}. This event should be emitted by the `setApprovalForAll` method. See https://ethereum.org/en/developers/docs/standards/tokens/erc-721/#events for more information."
            }
        }
    },
    "id": 2
}
