{
    "abi": [
        { "type": "fallback", "stateMutability": "nonpayable" },
        {
            "type": "function",
            "name": "_transferAsHTS",
            "inputs": [
                { "name": "from", "type": "address", "internalType": "address" },
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "_transferNFTAsHTS",
            "inputs": [
                { "name": "from", "type": "address", "internalType": "address" },
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "serialId", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "_update",
            "inputs": [
                { "name": "from", "type": "address", "internalType": "address" },
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "approve",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "spender", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "approveNFT",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "approved", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "associateToken",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "token", "type": "address", "internalType": "address" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "associateTokens",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "tokens", "type": "address[]", "internalType": "address[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "burnToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int64[]", "internalType": "int64[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "cryptoTransfer",
            "inputs": [
                {
                    "name": "transferList",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.TransferList",
                    "components": [
                        {
                            "name": "transfers",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.AccountAmount[]",
                            "components": [
                                {
                                    "name": "accountID",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "isApproval", "type": "bool", "internalType": "bool" }
                            ]
                        }
                    ]
                },
                {
                    "name": "tokenTransfers",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.TokenTransferList[]",
                    "components": [
                        { "name": "token", "type": "address", "internalType": "address" },
                        {
                            "name": "transfers",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.AccountAmount[]",
                            "components": [
                                {
                                    "name": "accountID",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "isApproval", "type": "bool", "internalType": "bool" }
                            ]
                        },
                        {
                            "name": "nftTransfers",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.NftTransfer[]",
                            "components": [
                                {
                                    "name": "senderAccountID",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "receiverAccountID",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "serialNumber",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                { "name": "isApproval", "type": "bool", "internalType": "bool" }
                            ]
                        }
                    ]
                }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "dissociateToken",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "token", "type": "address", "internalType": "address" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "dissociateTokens",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "tokens", "type": "address[]", "internalType": "address[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getAccountId",
            "inputs": [{ "name": "account", "type": "address", "internalType": "address" }],
            "outputs": [{ "name": "accountId", "type": "uint32", "internalType": "uint32" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getApproved",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "approved", "type": "address", "internalType": "address" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getFungibleTokenInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.FungibleTokenInfo",
                    "components": [
                        {
                            "name": "tokenInfo",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "components": [
                                {
                                    "name": "token",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "components": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "symbol",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "treasury",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "memo",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "tokenSupplyType",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "maxSupply",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "freezeDefault",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "components": [
                                                {
                                                    "name": "keyType",
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                {
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "components": [
                                                        {
                                                            "name": "inheritAccountKey",
                                                            "type": "bool",
                                                            "internalType": "bool"
                                                        },
                                                        {
                                                            "name": "contractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        },
                                                        {
                                                            "name": "ed25519",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "delegatableContractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "expiry",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "components": [
                                                {
                                                    "name": "second",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                },
                                                {
                                                    "name": "autoRenewAccount",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                                { "name": "deleted", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "defaultKycStatus",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "components": [
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "minimumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "maximumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "netOfTransfers",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                { "name": "ledgerId", "type": "string", "internalType": "string" }
                            ]
                        },
                        { "name": "decimals", "type": "int32", "internalType": "int32" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getNonFungibleTokenInfo",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "int64", "internalType": "int64" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                    "components": [
                        {
                            "name": "tokenInfo",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "components": [
                                {
                                    "name": "token",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "components": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "symbol",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "treasury",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "memo",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "tokenSupplyType",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "maxSupply",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "freezeDefault",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "components": [
                                                {
                                                    "name": "keyType",
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                {
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "components": [
                                                        {
                                                            "name": "inheritAccountKey",
                                                            "type": "bool",
                                                            "internalType": "bool"
                                                        },
                                                        {
                                                            "name": "contractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        },
                                                        {
                                                            "name": "ed25519",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "delegatableContractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "expiry",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "components": [
                                                {
                                                    "name": "second",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                },
                                                {
                                                    "name": "autoRenewAccount",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                                { "name": "deleted", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "defaultKycStatus",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "components": [
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "minimumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "maximumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "netOfTransfers",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                { "name": "ledgerId", "type": "string", "internalType": "string" }
                            ]
                        },
                        { "name": "serialNumber", "type": "int64", "internalType": "int64" },
                        { "name": "ownerId", "type": "address", "internalType": "address" },
                        { "name": "creationTime", "type": "int64", "internalType": "int64" },
                        { "name": "metadata", "type": "bytes", "internalType": "bytes" },
                        { "name": "spenderId", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenCustomFees",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FixedFee[]",
                    "components": [
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        {
                            "name": "useCurrentTokenForPayment",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "minimumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "maximumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "netOfTransfers", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenDefaultFreezeStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenDefaultKycStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenExpiryInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.Expiry",
                    "components": [
                        { "name": "second", "type": "int64", "internalType": "int64" },
                        {
                            "name": "autoRenewAccount",
                            "type": "address",
                            "internalType": "address"
                        },
                        { "name": "autoRenewPeriod", "type": "int64", "internalType": "int64" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.TokenInfo",
                    "components": [
                        {
                            "name": "token",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "components": [
                                { "name": "name", "type": "string", "internalType": "string" },
                                { "name": "symbol", "type": "string", "internalType": "string" },
                                {
                                    "name": "treasury",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                { "name": "memo", "type": "string", "internalType": "string" },
                                {
                                    "name": "tokenSupplyType",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "maxSupply", "type": "int64", "internalType": "int64" },
                                { "name": "freezeDefault", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "components": [
                                        {
                                            "name": "keyType",
                                            "type": "uint256",
                                            "internalType": "uint256"
                                        },
                                        {
                                            "name": "key",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "components": [
                                                {
                                                    "name": "inheritAccountKey",
                                                    "type": "bool",
                                                    "internalType": "bool"
                                                },
                                                {
                                                    "name": "contractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "ed25519",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "delegatableContractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "expiry",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "components": [
                                        {
                                            "name": "second",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "autoRenewAccount",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "autoRenewPeriod",
                                            "type": "int64",
                                            "internalType": "int64"
                                        }
                                    ]
                                }
                            ]
                        },
                        { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                        { "name": "deleted", "type": "bool", "internalType": "bool" },
                        { "name": "defaultKycStatus", "type": "bool", "internalType": "bool" },
                        { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                        {
                            "name": "fixedFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "components": [
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "fractionalFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                {
                                    "name": "minimumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "maximumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "netOfTransfers",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "royaltyFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        { "name": "ledgerId", "type": "string", "internalType": "string" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenKey",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "keyType", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.KeyValue",
                    "components": [
                        { "name": "inheritAccountKey", "type": "bool", "internalType": "bool" },
                        { "name": "contractId", "type": "address", "internalType": "address" },
                        { "name": "ed25519", "type": "bytes", "internalType": "bytes" },
                        { "name": "ECDSA_secp256k1", "type": "bytes", "internalType": "bytes" },
                        {
                            "name": "delegatableContractId",
                            "type": "address",
                            "internalType": "address"
                        }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenType",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int32", "internalType": "int32" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isApprovedForAll",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "owner", "type": "address", "internalType": "address" },
                { "name": "operator", "type": "address", "internalType": "address" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isToken",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bytes[]", "internalType": "bytes[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" },
                { "name": "serialNumbers", "type": "int64[]", "internalType": "int64[]" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferFrom",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "sender", "type": "address", "internalType": "address" },
                { "name": "recipient", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [{ "name": "", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferFromNFT",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "from", "type": "address", "internalType": "address" },
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [{ "name": "", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferNFT",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "sender", "type": "address", "internalType": "address" },
                { "name": "recipient", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "int64", "internalType": "int64" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferNFTs",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "sender", "type": "address[]", "internalType": "address[]" },
                { "name": "receiver", "type": "address[]", "internalType": "address[]" },
                { "name": "serialNumber", "type": "int64[]", "internalType": "int64[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "sender", "type": "address", "internalType": "address" },
                { "name": "recipient", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferTokens",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "accountId", "type": "address[]", "internalType": "address[]" },
                { "name": "amount", "type": "int64[]", "internalType": "int64[]" }
            ],
            "outputs": [{ "name": "responseCode", "type": "int64", "internalType": "int64" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ApprovalForAll",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "389:39979:1:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "389:39979:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19202:12;19635:2;19616:21;;;19608:63;;;;-1:-1:-1;;;19608:63:1;;216:2:39;19608:63:1;;;198:21:39;255:2;235:18;;;228:30;294:31;274:18;;;267:59;343:18;;19608:63:1;;;;;;;;;19682:24;19723:13;19734:1;19682:24;19723:8;19682:24;19723:13;:::i;:::-;19716:21;;;:::i;:::-;19709:29;;;-1:-1:-1;19776:10:1;19756:30;;19748:73;;;;-1:-1:-1;;;19748:73:1;;1253:2:39;19748:73:1;;;1235:21:39;1292:2;1272:18;;;1265:30;1331:32;1311:18;;;1304:60;1381:18;;19748:73:1;1051:354:39;19748:73:1;19832:13;19864:14;19875:2;19873:1;19864:8;19832:13;19864:14;:::i;:::-;19856:23;;;:::i;:::-;19848:32;;;-1:-1:-1;19915:4:1;19898:22;;19890:64;;;;-1:-1:-1;;;19890:64:1;;1991:2:39;19890:64:1;;;1973:21:39;2030:2;2010:18;;;2003:30;2069:31;2049:18;;;2042:59;2118:18;;19890:64:1;1789:353:39;19890:64:1;20133:20;:18;:20::i;:::-;389:39979;;;-1:-1:-1;389:39979:1;;;-1:-1:-1;;;;389:39979:1;11946:300;;;;;;:::i;:::-;;:::i;:::-;;;;3059:1:39;3048:21;;;;3030:40;;-1:-1:-1;;;;;3106:32:39;;;3101:2;3086:18;;3079:60;3003:18;11946:300:1;;;;;;;;11408:239;;;;;;:::i;:::-;;:::i;:::-;;;3714:1:39;3703:21;;;;3685:40;;3673:2;3658:18;11408:239:1;3543:188:39;37584:962:1;;;;;;:::i;:::-;;:::i;:::-;;1985:2260;;;;;;:::i;:::-;;:::i;7266:245::-;;;;;;:::i;:::-;;:::i;14284:284::-;;;;;;:::i;:::-;;:::i;:::-;;;;13092:1:39;13081:21;;;;13063:40;;13146:14;;13139:22;13134:2;13119:18;;13112:50;13036:18;14284:284:1;12899:269:39;1707:272:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4251:1028::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;9031:723::-;;;;;;:::i;:::-;;:::i;5903:746::-;;;;;;:::i;:::-;;:::i;35900:183::-;;;;;;:::i;:::-;;:::i;13143:253::-;;;;;;:::i;:::-;;:::i;13402:652::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5285:612::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;36089:193::-;;;;;;:::i;:::-;;:::i;11165:237::-;;;;;;:::i;:::-;;:::i;9760:638::-;;;;;;:::i;:::-;;:::i;8766:259::-;;;;;;:::i;:::-;;:::i;10404:755::-;;;;;;:::i;:::-;;:::i;6655:605::-;;;;;;:::i;:::-;;:::i;14060:218::-;;;;;;:::i;:::-;;:::i;:::-;;;;27788:1:39;27777:21;;;;27759:40;;27846:1;27835:21;;;;27830:2;27815:18;;27808:49;27732:18;14060:218:1;27593:270:39;7517:240:1;;;;;;:::i;:::-;;:::i;12564:262::-;;;;;;:::i;:::-;;:::i;12832:305::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;11653:287::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;15582:924::-;;;;;;:::i;:::-;;:::i;:::-;;;;29974:1:39;29963:21;;;29945:40;;30021:21;;;;30016:2;30001:18;;29994:49;29918:18;15582:924:1;29779:270:39;1398:303:1;;;;;;:::i;:::-;;:::i;:::-;;;30228:10:39;30216:23;;;30198:42;;30186:2;30171:18;1398:303:1;30054:192:39;14574:1002:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;8521:239::-;;;;;;:::i;:::-;;:::i;7763:752::-;;;;;;:::i;:::-;;:::i;12252:306::-;;;;;;:::i;:::-;;:::i;20262:5667::-;20318:12;20342:15;20367;20379:2;20376;20367:8;20342:15;20367;:::i;:::-;20360:23;;;:::i;:::-;20342:41;;20466:18;;;;;;;;;;;-1:-1:-1;;;20466:18:1;;;;;20425:27;20456:29;;20425:27;;-1:-1:-1;;20425:27:1;:::i;:::-;;;;;;;;:60;20421:134;;20501:43;;-1:-1:-1;;;20501:43:1;;35024:2:39;20501:43:1;;;35006:21:39;35063:2;35043:18;;;35036:30;35102:34;35082:18;;;35075:62;-1:-1:-1;;;35153:18:39;;;35146:31;35194:19;;20501:43:1;34822:397:39;20421:134:1;-1:-1:-1;;20616:10:1;:25;20612:4789;;-1:-1:-1;;;;;;;;;20661:38:1;;;20657:195;;20746:2;20727:8;:21;;20719:67;;;;-1:-1:-1;;;20719:67:1;;35426:2:39;20719:67:1;;;35408:21:39;35465:2;35445:18;;;35438:30;35504:34;35484:18;;;35477:62;-1:-1:-1;;;35555:18:39;;;35548:31;35596:19;;20719:67:1;35224:397:39;20719:67:1;20822:2;20826:10;20811:26;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20804:33;;;20262:5667;:::o;20657:195::-;-1:-1:-1;;;;;;;;;20869:44:1;;;20865:268;;20960:2;20941:8;:21;;20933:73;;;;-1:-1:-1;;;20933:73:1;;43785:2:39;20933:73:1;;;43767:21:39;43824:2;43804:18;;;43797:30;43863:34;43843:18;;;43836:62;-1:-1:-1;;;43914:18:39;;;43907:37;43961:19;;20933:73:1;43583:403:39;20933:73:1;21031:87;;;;21042:2;;21046:20;;21068:25;;21095:22;;21031:87;;;:::i;20865:268::-;-1:-1:-1;;;;;;;;;21150:50:1;;;21146:236;;21247:2;21228:8;:21;;21220:79;;;;-1:-1:-1;;;21220:79:1;;45165:2:39;21220:79:1;;;45147:21:39;45204:2;45184:18;;;45177:30;45243:34;45223:18;;;45216:62;-1:-1:-1;;;45294:18:39;;;45287:43;45347:19;;21220:79:1;44963:409:39;21220:79:1;21339:27;;21324:43;;;21335:2;21324:43;;;45552:36:39;-1:-1:-1;;;21339:27:1;;;;;45631:14:39;45624:22;45604:18;;;45597:50;45525:18;;21324:43:1;45377:276:39;21146:236:1;-1:-1:-1;;;;;;;;;21399:53:1;;;21395:245;;21499:2;21480:8;:21;;21472:82;;;;-1:-1:-1;;;21472:82:1;;45860:2:39;21472:82:1;;;45842:21:39;45899:2;45879:18;;;45872:30;45938:34;45918:18;;;45911:62;-1:-1:-1;;;45989:18:39;;;45982:46;46045:19;;21472:82:1;45658:412:39;21472:82:1;21594:30;;21579:46;;;21590:2;21579:46;;;45552:36:39;-1:-1:-1;;;21594:30:1;;;;;45631:14:39;45624:22;45604:18;;;45597:50;45525:18;;21579:46:1;45377:276:39;21395:245:1;-1:-1:-1;;;;;;;;;21657:44:1;;;21653:220;;21748:2;21729:8;:21;;21721:73;;;;-1:-1:-1;;;21721:73:1;;46277:2:39;21721:73:1;;;46259:21:39;46316:2;46296:18;;;46289:30;46355:34;46335:18;;;46328:62;-1:-1:-1;;;46406:18:39;;;46399:37;46453:19;;21721:73:1;46075:403:39;21721:73:1;21819:39;;;;21830:2;;21834:23;;21819:39;;;:::i;21653:220::-;-1:-1:-1;;;;;;;;;21890:40:1;;;21886:363;;21977:2;21958:8;:21;;21950:69;;;;-1:-1:-1;;;21950:69:1;;47028:2:39;21950:69:1;;;47010:21:39;47067:2;47047:18;;;47040:30;47106:34;47086:18;;;47079:62;-1:-1:-1;;;47157:18:39;;;47150:33;47200:19;;21950:69:1;46826:399:39;21950:69:1;22037:15;22071;22083:2;22080;22071:8;22037:15;22071;:::i;:::-;22063:24;;;:::i;:::-;22055:33;;22037:51;;22106:12;22121:26;22139:7;22121:17;:26::i;:::-;22189:4;22176:18;;22220:14;;;22231:2;22220:14;;;47383:36:39;22106:41:1;;-1:-1:-1;47356:18:39;22220:14:1;;;;;;;;;;;;;22213:21;;;;;20262:5667;:::o;21886:363::-;-1:-1:-1;;;;;;;;;22266:41:1;;;22262:366;;22354:2;22335:8;:21;;22327:70;;;;-1:-1:-1;;;22327:70:1;;47632:2:39;22327:70:1;;;47614:21:39;47671:2;47651:18;;;47644:30;47710:34;47690:18;;;47683:62;-1:-1:-1;;;47761:18:39;;;47754:34;47805:19;;22327:70:1;47430:400:39;22327:70:1;22415:15;22449;22461:2;22458;22449:8;22415:15;22449;:::i;:::-;22441:24;;;:::i;:::-;22433:33;;22415:51;;22484:12;22499:26;22517:7;22499:17;:26::i;:::-;22567:5;22554:19;;22599:14;;;22610:2;22599:14;;;47383:36:39;22484:41:1;;-1:-1:-1;47356:18:39;22599:14:1;47230:195:39;22262:366:1;-1:-1:-1;;;;;;;;;22645:38:1;;;22641:528;;22730:2;22711:8;:21;;22703:67;;;;-1:-1:-1;;;22703:67:1;;48037:2:39;22703:67:1;;;48019:21:39;48076:2;48056:18;;;48049:30;48115:34;48095:18;;;48088:62;-1:-1:-1;;;48166:18:39;;;48159:31;48207:19;;22703:67:1;47835:397:39;22703:67:1;22834:28;22819:9;22802:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;22792:38;;;;;;:70;22788:148;;22893:24;;;22904:2;22893:24;;;48619:36:39;22914:1:1;48671:18:39;;;48664:49;;;;48592:18;;22893:24:1;48442:277:39;22788:148:1;22999:32;22984:9;22967:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;22957:38;;;;;;:74;22953:152;;23062:24;;;23073:2;23062:24;;;48619:36:39;23083:1:1;48671:18:39;;;48664:49;;;;48592:18;;23062:24:1;48442:277:39;22953:152:1;23129:25;;;23140:2;23129:25;;;48619:36:39;-1:-1:-1;;48671:18:39;;;48664:49;;;;48592:18;;23129:25:1;48442:277:39;22641:528:1;-1:-1:-1;;;;;;;;;23186:40:1;;;23182:438;;23273:3;23254:8;:22;;23246:69;;;;-1:-1:-1;;;23246:69:1;;48926:2:39;23246:69:1;;;48908:21:39;48965:2;48945:18;;;48938:30;49004:34;48984:18;;;48977:62;-1:-1:-1;;;49055:18:39;;;49048:32;49097:19;;23246:69:1;48724:398:39;23246:69:1;23333:12;23364:15;23376:2;23373;23364:8;23333:12;23364:15;:::i;:::-;23356:24;;;:::i;:::-;23348:33;;;-1:-1:-1;23399:10:1;23428:15;23440:2;23437;23428:8;23399:10;23428:15;:::i;:::-;23420:24;;;:::i;:::-;23412:33;;;-1:-1:-1;23463:14:1;23496:16;23508:3;23505:2;23496:8;23463:14;23496:16;:::i;:::-;23488:25;;;:::i;:::-;23480:34;-1:-1:-1;23532:32:1;23547:4;23553:2;23480:34;23532:14;:32::i;:::-;23589:16;;;23600:4;23589:16;;;49527:41:39;49500:18;23589:16:1;;;;;;;;;;;;;23582:23;;;;;;20262:5667;:::o;23182:438::-;-1:-1:-1;;;;;;;;;23637:43:1;;;23633:451;;23727:3;23708:8;:22;;23700:72;;;;-1:-1:-1;;;23700:72:1;;49781:2:39;23700:72:1;;;49763:21:39;49820:2;49800:18;;;49793:30;49859:34;49839:18;;;49832:62;-1:-1:-1;;;49910:18:39;;;49903:35;49955:19;;23700:72:1;49579:401:39;23700:72:1;23790:12;23821:15;23833:2;23830;23821:8;23790:12;23821:15;:::i;:::-;23813:24;;;:::i;:::-;23805:33;;;-1:-1:-1;23856:10:1;23885:15;23897:2;23894;23885:8;23856:10;23885:15;:::i;:::-;23877:24;;;:::i;:::-;23869:33;;;-1:-1:-1;23920:16:1;23955;23967:3;23964:2;23955:8;23920:16;23955;:::i;:::-;23947:25;;;:::i;:::-;23939:34;-1:-1:-1;23991:37:1;24009:4;24015:2;23939:34;23991:17;:37::i;23633:451::-;-1:-1:-1;;;;;;;;;24101:33:1;;;24097:419;;24181:3;24162:8;:22;;24154:63;;;;-1:-1:-1;;;24154:63:1;;;;;;;:::i;:::-;24235:12;24266:15;24278:2;24275;24266:8;24235:12;24266:15;:::i;:::-;24258:24;;;:::i;:::-;24250:33;;;-1:-1:-1;24301:10:1;24330:15;24342:2;24339;24330:8;24301:10;24330:15;:::i;:::-;24322:24;;;:::i;:::-;24314:33;;;-1:-1:-1;24365:14:1;24398:16;24410:3;24407:2;24398:8;24365:14;24398:16;:::i;:::-;24390:25;;;:::i;:::-;24382:34;-1:-1:-1;24434:26:1;24443:4;24449:2;24382:34;24434:8;:26::i;24097:419::-;-1:-1:-1;;;;;;;;;24533:36:1;;;24529:432;;24616:3;24597:8;:22;;24589:66;;;;-1:-1:-1;;;24589:66:1;;50544:2:39;24589:66:1;;;50526:21:39;50583:2;50563:18;;;50556:30;50622:33;50602:18;;;50595:61;50673:18;;24589:66:1;50342:355:39;24589:66:1;24673:12;24704:15;24716:2;24713;24704:8;24673:12;24704:15;:::i;:::-;24696:24;;;:::i;:::-;24688:33;;;-1:-1:-1;24739:10:1;24768:15;24780:2;24777;24768:8;24739:10;24768:15;:::i;:::-;24760:24;;;:::i;:::-;24752:33;;;-1:-1:-1;24803:14:1;24836:16;24848:3;24845:2;24836:8;24803:14;24836:16;:::i;:::-;24828:25;;;:::i;:::-;24930:16;;;24941:4;24930:16;;;49527:41:39;24820:34:1;;-1:-1:-1;49500:18:39;24930:16:1;49387:187:39;24529:432:1;-1:-1:-1;;;;;;;;;24978:33:1;;;24974:417;;25058:3;25039:8;:22;;25031:62;;;;-1:-1:-1;;;25031:62:1;;50904:2:39;25031:62:1;;;50886:21:39;50943:2;50923:18;;;50916:30;50982:29;50962:18;;;50955:57;51029:18;;25031:62:1;50702:351:39;25031:62:1;25111:12;25142:15;25154:2;25151;25142:8;25111:12;25142:15;:::i;:::-;25134:24;;;:::i;:::-;25126:33;;;-1:-1:-1;25177:10:1;25206:15;25218:2;25215;25206:8;25177:10;25206:15;:::i;:::-;25198:24;;;:::i;:::-;25190:33;;;-1:-1:-1;25241:14:1;25274:16;25286:3;25283:2;25274:8;25241:14;25274:16;:::i;:::-;25266:25;;;:::i;:::-;25258:34;-1:-1:-1;25310:25:1;25318:4;25324:2;25258:34;25310:7;:25::i;24974:417::-;25539:24;;;;;;;;;;;-1:-1:-1;;;25539:24:1;;;;;25498:27;25529:35;;25498:27;;-1:-1:-1;;25498:27:1;:::i;:::-;;;;;;;;:66;25494:131;;25587:27;25605:8;25587:17;:27::i;:::-;25580:34;;;20262:5667;:::o;25494:131::-;25768:28;;;;;;;;;;;-1:-1:-1;;;25768:28:1;;;;;25727:27;25758:39;;25727:27;;-1:-1:-1;;25727:27:1;:::i;:::-;;;;;;;;:70;25723:136;;25820:28;25839:8;25820:18;:28::i;25723:136::-;25869:53;;-1:-1:-1;;;25869:53:1;;51260:2:39;25869:53:1;;;51242:21:39;51299:2;51279:18;;;51272:30;51338:34;51318:18;;;51311:62;-1:-1:-1;;;51389:18:39;;;51382:40;51439:19;;25869:53:1;51058:406:39;11946:300:1;12043:18;;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;12099:19:1;::::1;12091:58;;;::::0;-1:-1:-1;;;12091:58:1;;52023:2:39;12091:58:1::1;::::0;::::1;52005:21:39::0;52062:2;52042:18;;;52035:30;52101:28;52081:18;;;52074:56;52147:18;;12091:58:1::1;51821:350:39::0;12091:58:1::1;12198:40;::::0;-1:-1:-1;;;12198:40:1;;::::1;::::0;::::1;52322:25:39::0;;;12193:2:1::1;::::0;-1:-1:-1;;;;;12198:26:1;::::1;::::0;::::1;::::0;52295:18:39;;12198:40:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12159:80:::0;;;;-1:-1:-1;11946:300:1;-1:-1:-1;;;11946:300:1:o;11408:239::-;11491:18;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;11547:16:::1;::::0;;11561:1:::1;11547:16:::0;;;;;::::1;::::0;;;11521:23:::1;::::0;11547:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;11547:16:1::1;11521:42;;11585:5;11573:6;11580:1;11573:9;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1::0;;;;;11573:17:1::1;;;-1:-1:-1::0;;;;;11573:17:1::1;;;::::0;::::1;11607:33;11624:7;11633:6;11607:16;:33::i;:::-;11600:40;;;973:1;11408:239:::0;;;;:::o;37584:962::-;-1:-1:-1;;;;;37664:18:1;;37660:376;;37713:6;37698:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;37660:376:1;;-1:-1:-1;37660:376:1;;37750:16;37769:20;37784:4;37769:14;:20::i;:::-;37862:15;;37750:39;;-1:-1:-1;37900:21:1;;;;37892:65;;;;-1:-1:-1;;;37892:65:1;;53353:2:39;37892:65:1;;;53335:21:39;53392:2;53372:18;;;53365:30;53431:33;53411:18;;;53404:61;53482:18;;37892:65:1;53151:355:39;37892:65:1;37999:24;;;37982:42;;37660:376;-1:-1:-1;;;;;38050:16:1;;38046:494;;38097:6;38082:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;38046:494:1;;-1:-1:-1;38046:494:1;;38134:14;38151:18;38166:2;38151:14;:18::i;:::-;38238:13;;38134:35;;-1:-1:-1;38183:17:1;38457:18;38469:6;38238:13;38457:18;:::i;:::-;38500:28;;;-1:-1:-1;;38046:494:1;37584:962;;;:::o;1985:2260::-;2120:18;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;2857:18:::1;2852:1336;2894:14;:21;2881:10;:34;2852:1336;;;2997:1;-1:-1:-1::0;;;;;2953:46:1::1;:14;2968:10;2953:26;;;;;;;;:::i;:::-;;;;;;;:32;;;-1:-1:-1::0;;;;;2953:46:1::1;::::0;2945:88:::1;;;::::0;-1:-1:-1;;;2945:88:1;;53846:2:39;2945:88:1::1;::::0;::::1;53828:21:39::0;53885:2;53865:18;;;53858:30;53924:31;53904:18;;;53897:59;53973:18;;2945:88:1::1;53644:353:39::0;2945:88:1::1;3052:15;3047:517;3083:14;3098:10;3083:26;;;;;;;;:::i;:::-;;;;;;;:36;;;:43;3073:7;:53;3047:517;;;3162:14;3177:10;3162:26;;;;;;;;:::i;:::-;;;;;;;:36;;;3199:7;3162:45;;;;;;;;:::i;:::-;;;;;;;:56;;;3157:393;;3243:288;3282:14;3297:10;3282:26;;;;;;;;:::i;:::-;;;;;;;:32;;;3340:10;3376:14;3391:10;3376:26;;;;;;;;:::i;:::-;;;;;;;:36;;;3413:7;3376:45;;;;;;;;:::i;:::-;;;;;;;:55;;;3457:14;3472:10;3457:26;;;;;;;;:::i;:::-;;;;;;;:36;;;3494:7;3457:45;;;;;;;;:::i;:::-;;;;;;;:52;;;3243:13;:288::i;:::-;;3157:393;3128:9;;3047:517;;;-1:-1:-1::0;3582:16:1::1;3577:601;3615:14;3630:10;3615:26;;;;;;;;:::i;:::-;;;;;;;:39;;;:46;3604:8;:57;3577:601;;;3698:14;3713:10;3698:26;;;;;;;;:::i;:::-;;;;;;;:39;;;3738:8;3698:49;;;;;;;;:::i;:::-;;;;;;;:60;;;3693:471;;3782:363;3819:14;3834:10;3819:26;;;;;;;;:::i;:::-;;;;;;;:32;;;3877:14;3892:10;3877:26;;;;;;;;:::i;:::-;;;;;;;:39;;;3917:8;3877:49;;;;;;;;:::i;:::-;;;;;;;:65;;;3968:14;3983:10;3968:26;;;;;;;;:::i;:::-;;;;;;;:39;;;4008:8;3968:49;;;;;;;;:::i;:::-;;;;;;;:67;;;4061:14;4076:10;4061:26;;;;;;;;:::i;:::-;;;;;;;:39;;;4101:8;4061:49;;;;;;;;:::i;:::-;;;;;;;:62;;;3782:11;:363::i;:::-;;3693:471;3663:10;;3577:601;;;-1:-1:-1::0;2917:12:1::1;;2852:1336;;;-1:-1:-1::0;4205:2:1::1;::::0;1985:2260;-1:-1:-1;;;1985:2260:1:o;7266:245::-;7418:5;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;7442:62:::1;7456:5;7463:6;7471:9;7495:6;7442:13;:62::i;:::-;7435:69:::0;7266:245;-1:-1:-1;;;;;7266:245:1:o;14284:284::-;14380:55;;-1:-1:-1;;;;;54166:32:39;;14380:55:1;;;54148:51:39;14334:5:1;;;;;;54121:18:39;;14380:55:1;;;-1:-1:-1;;14380:55:1;;;;;;;;;;;;;;-1:-1:-1;;;;;14380:55:1;-1:-1:-1;;;14380:55:1;;;14487:19;14380:55;;-1:-1:-1;;;;;;;;;;14487:10:1;;;:19;;14380:55;;14487:19;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14445:61;;;;14524:2;14528:7;:32;;;;;14559:1;14539:10;:17;:21;14528:32;14516:45;;;;;;;14284:284;;;:::o;1707:272::-;1770:18;1790:26;;:::i;:::-;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1836:19:1;::::1;1828:59;;;::::0;-1:-1:-1;;;1828:59:1;;54718:2:39;1828:59:1::1;::::0;::::1;54700:21:39::0;54757:2;54737:18;;;54730:30;54796:29;54776:18;;;54769:57;54843:18;;1828:59:1::1;54516:351:39::0;1828:59:1::1;1926:46;::::0;-1:-1:-1;;;1926:46:1;;-1:-1:-1;;;;;1926:39:1;::::1;:46;::::0;::::1;54148:51:39::0;;;1926:39:1;::::1;::::0;54121:18:39;;1926:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1926:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1898:74:::0;;;;-1:-1:-1;1707:272:1;-1:-1:-1;;1707:272:1:o;4251:1028::-;4361:5;4368:27;;:::i;:::-;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;4415:19:1;::::1;4407:70;;;::::0;-1:-1:-1;;;4407:70:1;;66569:2:39;4407:70:1::1;::::0;::::1;66551:21:39::0;66608:2;66588:18;;;66581:30;66647:34;66627:18;;;66620:62;-1:-1:-1;;;66698:18:39;;;66691:36;66744:19;;4407:70:1::1;66367:402:39::0;4407:70:1::1;4539:46;::::0;-1:-1:-1;;;4539:46:1;;-1:-1:-1;;;;;4539:39:1;::::1;:46;::::0;::::1;54148:51:39::0;;;4489:18:1::1;::::0;;;4539:39;::::1;::::0;54121:18:39;;4539:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;4539:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;4488:97;;;;4603:12;:18;;4619:2;4603:18;4595:80;;;::::0;-1:-1:-1;;;4595:80:1;;66976:2:39;4595:80:1::1;::::0;::::1;66958:21:39::0;67015:2;66995:18;;;66988:30;67054:34;67034:18;;;67027:62;-1:-1:-1;;;67105:18:39;;;67098:47;67162:19;;4595:80:1::1;66774:413:39::0;4595:80:1::1;4685:48;;:::i;:::-;4743:42:::0;;;4795:48:::1;::::0;;::::1;:33;::::0;::::1;:48:::0;4886:57:::1;::::0;-1:-1:-1;;;4886:57:1;;-1:-1:-1;;;;;4913:29:1;::::1;4886:57;::::0;::::1;52322:25:39::0;-1:-1:-1;;;;;4886:26:1;::::1;::::0;::::1;::::0;52295:18:39;;4886:57:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4853:90:1;;::::1;:30;::::0;::::1;:90:::0;4984:53:::1;::::0;-1:-1:-1;;;4984:53:1;;-1:-1:-1;;;;;5007:29:1;::::1;4984:53;::::0;::::1;52322:25:39::0;4984:22:1;;::::1;::::0;::::1;::::0;52295:18:39;;4984:53:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4953:84:1::1;:28;::::0;::::1;:84:::0;5237:12;;-1:-1:-1;4953:20:1;;-1:-1:-1;;973:1:1::1;4251:1028:::0;;;;;:::o;9031:723::-;9213:18;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;9251:19:1;::::1;9243:59;;;::::0;-1:-1:-1;;;9243:59:1;;67394:2:39;9243:59:1::1;::::0;::::1;67376:21:39::0;67433:2;67413:18;;;67406:30;67472:29;67452:18;;;67445:57;67519:18;;9243:59:1::1;67192:351:39::0;9243:59:1::1;9336:1;9320:6;:13;:17;9312:62;;;::::0;-1:-1:-1;;;9312:62:1;;67750:2:39;9312:62:1::1;::::0;::::1;67732:21:39::0;;;67769:18;;;67762:30;67828:34;67808:18;;;67801:62;67880:18;;9312:62:1::1;67548:356:39::0;9312:62:1::1;9411:6;:13;9392:8;:15;:32;9384:77;;;::::0;-1:-1:-1;;;9384:77:1;;68111:2:39;9384:77:1::1;::::0;::::1;68093:21:39::0;;;68130:18;;;68123:30;68189:34;68169:18;;;68162:62;68241:18;;9384:77:1::1;67909:356:39::0;9384:77:1::1;9502:6;:13;9479:12;:19;:36;9471:81;;;::::0;-1:-1:-1;;;9471:81:1;;68111:2:39;9471:81:1::1;::::0;::::1;68093:21:39::0;;;68130:18;;;68123:30;68189:34;68169:18;;;68162:62;68241:18;;9471:81:1::1;67909:356:39::0;9471:81:1::1;9567:9;9562:128;9586:6;:13;9582:1;:17;9562:128;;;9620:59;9632:5;9639:6;9646:1;9639:9;;;;;;;;:::i;:::-;;;;;;;9650:8;9659:1;9650:11;;;;;;;;:::i;:::-;;;;;;;9663:12;9676:1;9663:15;;;;;;;;:::i;:::-;;;;;;;9620:11;:59::i;:::-;-1:-1:-1::0;9601:3:1::1;;9562:128;;;-1:-1:-1::0;9714:2:1::1;::::0;9031:723;-1:-1:-1;;;;;9031:723:1:o;5903:746::-;5994:18;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;6048:1:::1;6032:6;:13;:17;6024:61;;;::::0;-1:-1:-1;;;6024:61:1;;68472:2:39;6024:61:1::1;::::0;::::1;68454:21:39::0;68511:2;68491:18;;;68484:30;68550:33;68530:18;;;68523:61;68601:18;;6024:61:1::1;68270:355:39::0;6024:61:1::1;-1:-1:-1::0;;;;;6103:21:1;::::1;6114:10;6103:21;6095:136;;;::::0;-1:-1:-1;;;6095:136:1;;68832:2:39;6095:136:1::1;::::0;::::1;68814:21:39::0;68871:3;68851:18;;;68844:31;68911:34;68891:18;;;68884:62;68982:34;68962:18;;;68955:62;69054:34;69033:19;;;69026:63;-1:-1:-1;;;69105:19:39;;;69098:37;69152:19;;6095:136:1::1;68630:547:39::0;6095:136:1::1;6246:9;6241:344;6265:6;:13;6261:1;:17;6241:344;;;6328:1;-1:-1:-1::0;;;;;6307:23:1::1;:6;6314:1;6307:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;6307:23:1::1;::::0;6299:66:::1;;;::::0;-1:-1:-1;;;6299:66:1;;69384:2:39;6299:66:1::1;::::0;::::1;69366:21:39::0;69423:2;69403:18;;;69396:30;69462:32;69442:18;;;69435:60;69512:18;;6299:66:1::1;69182:354:39::0;6299:66:1::1;6379:29;6431:6;6438:1;6431:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;6411:45:1::1;;6457:7;6466:6;6473:1;6466:9;;;;;;;;:::i;:::-;;;;;;;6411:65;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;69733:32:39;;;69715:51;;69802:32;;69797:2;69782:18;;69775:60;69703:2;69688:18;;69541:300;6411:65:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6379:97;;6498:23;:29;;6525:2;6498:29;6490:84;;;::::0;-1:-1:-1;;;6490:84:1;;70300:2:39;6490:84:1::1;::::0;::::1;70282:21:39::0;70339:2;70319:18;;;70312:30;70378:34;70358:18;;;70351:62;-1:-1:-1;;;70429:18:39;;;70422:40;70479:19;;6490:84:1::1;70098:406:39::0;6490:84:1::1;-1:-1:-1::0;6280:3:1::1;;6241:344;;35900:183:::0;35991:10;380:5;35991:25;35983:56;;;;-1:-1:-1;;;35983:56:1;;70711:2:39;35983:56:1;;;70693:21:39;70750:2;70730:18;;;70723:30;-1:-1:-1;;;70769:18:39;;;70762:48;70827:18;;35983:56:1;70509:342:39;35983:56:1;36049:27;36059:4;36065:2;36069:6;36049:9;:27::i;13143:253::-;13218:5;;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;13249:19:1;::::1;13241:73;;;::::0;-1:-1:-1;;;13241:73:1;;71058:2:39;13241:73:1::1;::::0;::::1;71040:21:39::0;71097:2;71077:18;;;71070:30;71136:34;71116:18;;;71109:62;-1:-1:-1;;;71187:18:39;;;71180:39;71236:19;;13241:73:1::1;70856:405:39::0;13241:73:1::1;13331:58;::::0;-1:-1:-1;;;13331:58:1;;-1:-1:-1;;;;;13331:51:1;::::1;:58;::::0;::::1;54148:51:39::0;;;13331::1;::::1;::::0;54121:18:39;;13331:58:1::1;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13324:65;;;;13143:253:::0;;;:::o;13402:652::-;13478:5;13485:15;;:::i;:::-;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;13520:19:1;::::1;13512:58;;;::::0;-1:-1:-1;;;13512:58:1;;71848:2:39;13512:58:1::1;::::0;::::1;71830:21:39::0;71887:2;71867:18;;;71860:30;71926:28;71906:18;;;71899:56;71972:18;;13512:58:1::1;71646:350:39::0;13512:58:1::1;13631:46;::::0;-1:-1:-1;;;13631:46:1;;-1:-1:-1;;;;;13631:39:1;::::1;:46;::::0;::::1;54148:51:39::0;;;13581:18:1::1;::::0;;;13631:39;::::1;::::0;54121:18:39;;13631:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;13631:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;13580:97;;;;13695:12;:18;;13711:2;13695:18;13687:68;;;::::0;-1:-1:-1;;;13687:68:1;;72203:2:39;13687:68:1::1;::::0;::::1;72185:21:39::0;72242:2;72222:18;;;72215:30;72281:34;72261:18;;;72254:62;-1:-1:-1;;;72332:18:39;;;72325:35;72377:19;;13687:68:1::1;72001:401:39::0;13687:68:1::1;13770:9;13765:218;13789:15:::0;;:25:::1;;::::0;:32;13785:36;::::1;13765:218;;;13886:7;13846:9;:15;;;:25;;;13872:1;13846:28;;;;;;;;:::i;:::-;;;;;;;:36;;;:47:::0;13842:131:::1;;13921:2;13925:9;:15;;;:25;;;13951:1;13925:28;;;;;;;;:::i;:::-;;;;;;;:32;;;13913:45;;;;;;;;;13842:131;13823:3;;13765:218;;;;13992:24;;:::i;:::-;14034:2;::::0;14038:8;;-1:-1:-1;13402:652:1;-1:-1:-1;;;;;13402:652:1:o;5285:612::-;5356:5;5363:24;;:::i;:::-;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;5407:19:1;::::1;5399:67;;;::::0;-1:-1:-1;;;5399:67:1;;72609:2:39;5399:67:1::1;::::0;::::1;72591:21:39::0;72648:2;72628:18;;;72621:30;72687:34;72667:18;;;72660:62;-1:-1:-1;;;72738:18:39;;;72731:33;72781:19;;5399:67:1::1;72407:399:39::0;5399:67:1::1;5528:46;::::0;-1:-1:-1;;;5528:46:1;;-1:-1:-1;;;;;5528:39:1;::::1;:46;::::0;::::1;54148:51:39::0;;;5478:18:1::1;::::0;;;5528:39;::::1;::::0;54121:18:39;;5528:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;5528:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;5477:97;;;;5592:12;:18;;5608:2;5592:18;5584:77;;;::::0;-1:-1:-1;;;5584:77:1;;73013:2:39;5584:77:1::1;::::0;::::1;72995:21:39::0;73052:2;73032:18;;;73025:30;73091:34;73071:18;;;73064:62;-1:-1:-1;;;73142:18:39;;;73135:44;73196:19;;5584:77:1::1;72811:410:39::0;5584:77:1::1;5671:42;;:::i;:::-;5753:9;5723:17;:27;;:39;;;;5820:5;-1:-1:-1::0;;;;;5813:22:1::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5802:37;;5772:26;::::0;::::1;:67:::0;5858:12;;-1:-1:-1;5772:17:1;;-1:-1:-1;;5285:612:1;;;:::o;36089:193::-;36185:10;380:5;36185:25;36177:56;;;;-1:-1:-1;;;36177:56:1;;70711:2:39;36177:56:1;;;70693:21:39;70750:2;70730:18;;;70723:30;-1:-1:-1;;;70769:18:39;;;70762:48;70827:18;;36177:56:1;70509:342:39;36177:56:1;36243:32;36256:4;36262:2;36266:8;36243:12;:32::i;11165:237::-;11247:18;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;11303:16:::1;::::0;;11317:1:::1;11303:16:::0;;;;;::::1;::::0;;;11277:23:::1;::::0;11303:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;11303:16:1::1;11277:42;;11341:5;11329:6;11336:1;11329:9;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1::0;;;;;11329:17:1::1;;;-1:-1:-1::0;;;;;11329:17:1::1;;;::::0;::::1;11363:32;11379:7;11388:6;11363:15;:32::i;9760:638::-:0;9913:18;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;10022:32:::1;::::0;-1:-1:-1;;;10022:32:1;;-1:-1:-1;;;;;9962:29:1;::::1;10022:32;::::0;::::1;52322:25:39::0;;;9962:29:1;10058:10:::1;::::0;-1:-1:-1;;;;;10022:22:1;::::1;::::0;::::1;::::0;52295:18:39;;10022:32:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10022:46:1::1;;:112;;;-1:-1:-1::0;10084:36:1::1;::::0;-1:-1:-1;;;10084:36:1;;::::1;::::0;::::1;52322:25:39::0;;;10124:10:1::1;::::0;-1:-1:-1;;;;;10084:26:1;::::1;::::0;::::1;::::0;52295:18:39;;10084:36:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10084:50:1::1;;10022:112;:179;;;-1:-1:-1::0;10150:51:1::1;::::0;-1:-1:-1;;;10150:51:1;;-1:-1:-1;;;;;69733:32:39;;;10150:51:1::1;::::0;::::1;69715::39::0;10190:10:1::1;69782:18:39::0;;;69775:60;10150:31:1;::::1;::::0;::::1;::::0;69688:18:39;;10150:51:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10001:251;;;::::0;-1:-1:-1;;;10001:251:1;;73956:2:39;10001:251:1::1;::::0;::::1;73938:21:39::0;73995:2;73975:18;;;73968:30;-1:-1:-1;;;74014:18:39;;;74007:55;74079:18;;10001:251:1::1;73754:349:39::0;10001:251:1::1;10262:71;::::0;-1:-1:-1;;;10262:71:1;;-1:-1:-1;;;;;10262:42:1;::::1;::::0;::::1;::::0;:71:::1;::::0;10305:6;;10313:9;;10324:8;;10262:71:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;10358:2:1::1;::::0;9760:638;-1:-1:-1;;;;;;;;;9760:638:1:o;8766:259::-;8889:71;;-1:-1:-1;;;8889:71:1;;8859:18;;-1:-1:-1;;;;;8889:35:1;;;;;:71;;8925:10;;8937:8;;8947:12;;8889:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8985:2:1;;8766:259;-1:-1:-1;;;;8766:259:1:o;10404:755::-;10496:18;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;10550:1:::1;10534:6;:13;:17;10526:62;;;::::0;-1:-1:-1;;;10526:62:1;;74686:2:39;10526:62:1::1;::::0;::::1;74668:21:39::0;;;74705:18;;;74698:30;74764:34;74744:18;;;74737:62;74816:18;;10526:62:1::1;74484:356:39::0;10526:62:1::1;-1:-1:-1::0;;;;;10606:21:1;::::1;10617:10;10606:21;10598:137;;;::::0;-1:-1:-1;;;10598:137:1;;75047:2:39;10598:137:1::1;::::0;::::1;75029:21:39::0;75086:3;75066:18;;;75059:31;75126:34;75106:18;;;75099:62;75197:34;75177:18;;;75170:62;75269:34;75248:19;;;75241:63;-1:-1:-1;;;75320:19:39;;;75313:38;75368:19;;10598:137:1::1;74845:548:39::0;10598:137:1::1;10750:9;10745:350;10769:6;:13;10765:1;:17;10745:350;;;10832:1;-1:-1:-1::0;;;;;10811:23:1::1;:6;10818:1;10811:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;10811:23:1::1;::::0;10803:67:::1;;;::::0;-1:-1:-1;;;10803:67:1;;75600:2:39;10803:67:1::1;::::0;::::1;75582:21:39::0;75639:2;75619:18;;;75612:30;75678:33;75658:18;;;75651:61;75729:18;;10803:67:1::1;75398:355:39::0;10803:67:1::1;10884:30;10937:6;10944:1;10937:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;10917:46:1::1;;10964:7;10973:6;10980:1;10973:9;;;;;;;;:::i;:::-;;;;;;;10917:66;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;69733:32:39;;;69715:51;;69802:32;;69797:2;69782:18;;69775:60;69703:2;69688:18;;69541:300;10917:66:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10884:99;;11005:24;:30;;11033:2;11005:30;10997:87;;;::::0;-1:-1:-1;;;10997:87:1;;75960:2:39;10997:87:1::1;::::0;::::1;75942:21:39::0;75999:2;75979:18;;;75972:30;76038:34;76018:18;;;76011:62;-1:-1:-1;;;76089:18:39;;;76082:42;76141:19;;10997:87:1::1;75758:408:39::0;10997:87:1::1;-1:-1:-1::0;10784:3:1::1;;10745:350;;6655:605:::0;6799:18;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6837:19:1;::::1;6829:61;;;::::0;-1:-1:-1;;;6829:61:1;;76373:2:39;6829:61:1::1;::::0;::::1;76355:21:39::0;76412:2;76392:18;;;76385:30;76451:31;76431:18;;;76424:59;76500:18;;6829:61:1::1;76171:353:39::0;6829:61:1::1;6927:1;6908:9;:16;:20;6900:67;;;::::0;-1:-1:-1;;;6900:67:1;;76731:2:39;6900:67:1::1;::::0;::::1;76713:21:39::0;76770:2;76750:18;;;76743:30;76809:34;76789:18;;;76782:62;-1:-1:-1;;;76860:18:39;;;76853:32;76902:19;;6900:67:1::1;76529:398:39::0;6900:67:1::1;7002:9;:16;6985:6;:13;:33;6977:80;;;::::0;-1:-1:-1;;;6977:80:1;;77134:2:39;6977:80:1::1;::::0;::::1;77116:21:39::0;77173:2;77153:18;;;77146:30;77212:34;77192:18;;;77185:62;-1:-1:-1;;;77263:18:39;;;77256:32;77305:19;;6977:80:1::1;76932:398:39::0;6977:80:1::1;7072:9;7067:129;7091:9;:16;7087:1;:20;7067:129;;;7128:57;7142:5;7149:10;7161:9;7171:1;7161:12;;;;;;;;:::i;:::-;;;;;;;7175:6;7182:1;7175:9;;;;;;;;:::i;:::-;;;;;;;7128:13;:57::i;:::-;-1:-1:-1::0;7109:3:1::1;;7067:129;;14060:218:::0;14123:5;;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;14155:19:1;::::1;14147:61;;;::::0;-1:-1:-1;;;14147:61:1;;77537:2:39;14147:61:1::1;::::0;::::1;77519:21:39::0;77576:2;77556:18;;;77549:30;77615:31;77595:18;;;77588:59;77664:18;;14147:61:1::1;77335:353:39::0;14147:61:1::1;14225:46;::::0;-1:-1:-1;;;14225:46:1;;-1:-1:-1;;;;;14225:39:1;::::1;:46;::::0;::::1;54148:51:39::0;;;14225:39:1;::::1;::::0;54121:18:39;;14225:46:1::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7517:240::-:0;7669:5;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;7693:57:::1;7705:5;7712:4;7718:2;7735:12;7693:11;:57::i;12564:262::-:0;12642:5;;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;12673:19:1;::::1;12665:76;;;::::0;-1:-1:-1;;;12665:76:1;;78309:2:39;12665:76:1::1;::::0;::::1;78291:21:39::0;78348:2;78328:18;;;78321:30;78387:34;78367:18;;;78360:62;-1:-1:-1;;;78438:18:39;;;78431:42;78490:19;;12665:76:1::1;78107:408:39::0;12665:76:1::1;12758:61;::::0;-1:-1:-1;;;12758:61:1;;-1:-1:-1;;;;;12758:54:1;::::1;:61;::::0;::::1;54148:51:39::0;;;12758:54:1;::::1;::::0;54121:18:39;;12758:61:1::1;54002:203:39::0;12832:305:1;12915:5;12922:17;;;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;13004:19:1;::::1;12996:65;;;::::0;-1:-1:-1;;;12996:65:1;;78722:2:39;12996:65:1::1;::::0;::::1;78704:21:39::0;78761:2;78741:18;;;78734:30;78800:34;78780:18;;;78773:62;-1:-1:-1;;;78851:18:39;;;78844:31;78892:19;;12996:65:1::1;78520:397:39::0;12996:65:1::1;13078:52;::::0;-1:-1:-1;;;13078:52:1;;-1:-1:-1;;;;;13078:45:1;::::1;:52;::::0;::::1;54148:51:39::0;;;13078:45:1;::::1;::::0;54121:18:39;;13078:52:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;13078:52:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;13071:59;;;;;;;;12832:305:::0;;;;;:::o;11653:287::-;-1:-1:-1;;;;;;;;11722:18:1;-1:-1:-1;;;;;;;;;;;;;;;915:4:1;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;11785:19:1;::::1;11777:65;;;::::0;-1:-1:-1;;;11777:65:1;;80225:2:39;11777:65:1::1;::::0;::::1;80207:21:39::0;80264:2;80244:18;;;80237:30;80303:34;80283:18;;;80276:62;-1:-1:-1;;;80354:18:39;;;80347:31;80395:19;;11777:65:1::1;80023:397:39::0;11777:65:1::1;11881:52;::::0;-1:-1:-1;;;11881:52:1;;-1:-1:-1;;;;;11881:45:1;::::1;:52;::::0;::::1;54148:51:39::0;;;11881:45:1;::::1;::::0;54121:18:39;;11881:52:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;15582:924::-:0;15681:18;;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;15754:19:1;::::1;15746:56;;;::::0;-1:-1:-1;;;15746:56:1;;81004:2:39;15746:56:1::1;::::0;::::1;80986:21:39::0;81043:2;81023:18;;;81016:30;81082:26;81062:18;;;81055:54;81126:18;;15746:56:1::1;80802:348:39::0;15746:56:1::1;15829:1;15820:6;:10;;;15812:48;;;::::0;-1:-1:-1;;;15812:48:1;;81357:2:39;15812:48:1::1;::::0;::::1;81339:21:39::0;81396:2;81376:18;;;81369:30;81435:27;81415:18;;;81408:55;81480:18;;15812:48:1::1;81155:349:39::0;15812:48:1::1;15931:46;::::0;-1:-1:-1;;;15931:46:1;;-1:-1:-1;;;;;15931:39:1;::::1;:46;::::0;::::1;54148:51:39::0;;;15872:27:1::1;::::0;;;15931:39;::::1;::::0;54121:18:39;;15931:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;15931:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;15871:106;;;;15995:21;:27;;16020:2;15995:27;15987:75;;;::::0;-1:-1:-1;;;15987:75:1;;81711:2:39;15987:75:1::1;::::0;::::1;81693:21:39::0;81750:2;81730:18;;;81723:30;81789:34;81769:18;;;81762:62;-1:-1:-1;;;81840:18:39;;;81833:33;81883:19;;15987:75:1::1;81509:399:39::0;15987:75:1::1;16099:15:::0;;:24:::1;;::::0;-1:-1:-1;;;;;16141:29:1;::::1;16133:68;;;::::0;-1:-1:-1;;;16133:68:1;;82115:2:39;16133:68:1::1;::::0;::::1;82097:21:39::0;82154:2;82134:18;;;82127:30;82193:28;82173:18;;;82166:56;82239:18;;16133:68:1::1;81913:350:39::0;16133:68:1::1;16212:86;::::0;-1:-1:-1;;;16212:86:1;;-1:-1:-1;;;;;16212:32:1;::::1;::::0;::::1;::::0;:86:::1;::::0;16245:15;;16270:1:::1;::::0;-1:-1:-1;;;;;16274:23:1;::::1;::::0;16212:86:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16324:2;16309:17;;16404:5;-1:-1:-1::0;;;;;16397:25:1::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16367:59;;16462:1;16444:14;:19;;;;16436:63;;;::::0;-1:-1:-1;;;16436:63:1;;82705:2:39;16436:63:1::1;::::0;::::1;82687:21:39::0;82744:2;82724:18;;;82717:30;82783:33;82763:18;;;82756:61;82834:18;;16436:63:1::1;82503:355:39::0;16436:63:1::1;15736:770;;;15582:924:::0;;;;;;:::o;1398:303::-;1476:16;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;1607:40:::1;::::0;;-1:-1:-1;;;1607:40:1::1;::::0;::::1;83044:46:39::0;;;1504:15:1::1;83106:11:39::0;;;83099:72;;;-1:-1:-1;;;;;;83209:2:39;83205:15;;;83201:53;83187:12;;;83180:75;1522:26:1;;1504:15;;;;83271:12:39;1607:40:1::1;;;;;;;;;;;;1599:49;;;:::i;:::-;1682:11:::0;;1398:303;-1:-1:-1;;;;;1398:303:1:o;14574:1002::-;14673:18;;14731:28;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;14784:19:1;::::1;14776:56;;;::::0;-1:-1:-1;;;14776:56:1;;83798:2:39;14776:56:1::1;::::0;::::1;83780:21:39::0;83837:2;83817:18;;;83810:30;83876:26;83856:18;;;83849:54;83920:18;;14776:56:1::1;83596:348:39::0;14776:56:1::1;14859:1;14850:6;:10;;;14842:48;;;::::0;-1:-1:-1;;;14842:48:1;;84151:2:39;14842:48:1::1;::::0;::::1;84133:21:39::0;84190:2;84170:18;;;84163:30;84229:27;84209:18;;;84202:55;84274:18;;14842:48:1::1;83949:349:39::0;14842:48:1::1;14961:46;::::0;-1:-1:-1;;;14961:46:1;;-1:-1:-1;;;;;14961:39:1;::::1;:46;::::0;::::1;54148:51:39::0;;;14902:27:1::1;::::0;;;14961:39;::::1;::::0;54121:18:39;;14961:46:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;14961:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;14901:106;;;;15025:21;:27;;15050:2;15025:27;15017:75;;;::::0;-1:-1:-1;;;15017:75:1;;84505:2:39;15017:75:1::1;::::0;::::1;84487:21:39::0;84544:2;84524:18;;;84517:30;84583:34;84563:18;;;84556:62;-1:-1:-1;;;84634:18:39;;;84627:33;84677:19;;15017:75:1::1;84303:399:39::0;15017:75:1::1;15129:15:::0;;:24:::1;;::::0;-1:-1:-1;;;;;15171:29:1;::::1;15163:68;;;::::0;-1:-1:-1;;;15163:68:1;;84909:2:39;15163:68:1::1;::::0;::::1;84891:21:39::0;84948:2;84928:18;;;84921:30;84987:28;84967:18;;;84960:56;85033:18;;15163:68:1::1;84707:350:39::0;15163:68:1::1;15242:86;::::0;-1:-1:-1;;;15242:86:1;;-1:-1:-1;;;;;15242:32:1;::::1;::::0;::::1;::::0;:86:::1;::::0;15283:1:::1;::::0;15287:15;;-1:-1:-1;;;;;15304:23:1;::::1;::::0;15242:86:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15354:2;15339:17;;15434:5;-1:-1:-1::0;;;;;15427:25:1::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15482:14;::::0;;15494:1:::1;15482:14:::0;;;::::1;::::0;::::1;::::0;;;15397:59;;-1:-1:-1;15482:14:1::1;15466:30;;15532:1;15514:14;:19;;;;15506:63;;;::::0;-1:-1:-1;;;15506:63:1;;85264:2:39;15506:63:1::1;::::0;::::1;85246:21:39::0;85303:2;85283:18;;;85276:30;85342:33;85322:18;;;85315:61;85393:18;;15506:63:1::1;85062:355:39::0;15506:63:1::1;14766:810;;;14574:1002:::0;;;;;;;:::o;8521:239::-;8634:61;;-1:-1:-1;;;8634:61:1;;8604:18;;-1:-1:-1;;;;;8634:32:1;;;;;:61;;8667:10;;8679:7;;8688:6;;8634:61;;;:::i;7763:752::-;7912:18;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7950:19:1;::::1;7942:60;;;::::0;-1:-1:-1;;;7942:60:1;;85624:2:39;7942:60:1::1;::::0;::::1;85606:21:39::0;85663:2;85643:18;;;85636:30;85702;85682:18;;;85675:58;85750:18;;7942:60:1::1;85422:352:39::0;7942:60:1::1;8027:6:::0;8056:9;8012:12:::1;8079:10;::::0;;::::1;;8075:108;;;-1:-1:-1::0;8112:9:1;;-1:-1:-1;8140:6:1;8160:12:::1;-1:-1:-1::0;;8160:12:1;::::1;:::i;:::-;;;8075:108;-1:-1:-1::0;;;;;8213:18:1;::::1;8221:10;8213:18;::::0;:102:::1;;-1:-1:-1::0;8247:41:1::1;::::0;-1:-1:-1;;;8247:41:1;;-1:-1:-1;;;;;69733:32:39;;;8247:41:1::1;::::0;::::1;69715:51:39::0;8277:10:1::1;69782:18:39::0;;;69775:60;-1:-1:-1;;;;;8292:23:1;::::1;::::0;8247;;::::1;::::0;::::1;::::0;69688:18:39;;8247:41:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;8213:102;8192:174;;;::::0;-1:-1:-1;;;8192:174:1;;73956:2:39;8192:174:1::1;::::0;::::1;73938:21:39::0;73995:2;73975:18;;;73968:30;-1:-1:-1;;;74014:18:39;;;74007:55;74079:18;;8192:174:1::1;73754:349:39::0;8192:174:1::1;8376:74;::::0;-1:-1:-1;;;8376:74:1;;-1:-1:-1;;;;;8376:39:1;::::1;::::0;::::1;::::0;:74:::1;::::0;8416:4;;8422:2;;-1:-1:-1;;;;;8426:23:1;::::1;::::0;8376:74:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;8475:2:1::1;::::0;7763:752;-1:-1:-1;;;;;;;;;;7763:752:1:o;12252:306::-;12387:5;;915:4;380:5;907:28;899:64;;;;-1:-1:-1;;;899:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;12418:19:1;::::1;12410:63;;;::::0;-1:-1:-1;;;12410:63:1;;86223:2:39;12410:63:1::1;::::0;::::1;86205:21:39::0;86262:2;86242:18;;;86235:30;86301:33;86281:18;;;86274:61;86352:18;;12410:63:1::1;86021:355:39::0;12410:63:1::1;12502:48;::::0;-1:-1:-1;;;12502:48:1;;-1:-1:-1;;;;;69733:32:39;;;12502:48:1::1;::::0;::::1;69715:51:39::0;69802:32;;;69782:18;;;69775:60;12497:2:1::1;::::0;12502:31;;::::1;::::0;::::1;::::0;69688:18:39;;12502:48:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12483:68;;;;12252:306:::0;;;;;;:::o;32949:319::-;33141:52;;-1:-1:-1;;;33141:52:1;;-1:-1:-1;;;;;54166:32:39;;33141:52:1;;;54148:51:39;33019:7:1;;-1:-1:-1;;;33056:29:1;33019:7;;;;380:5;;33141:43;;54121:18:39;;33141:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33122:71;;33235:8;33245:3;33250:9;33218:42;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;33210:51;;;:::i;38552:330::-;-1:-1:-1;;;;;38644:19:1;;38636:55;;;;-1:-1:-1;;;38636:55:1;;87283:2:39;38636:55:1;;;87265:21:39;87322:2;87302:18;;;87295:30;87361:25;87341:18;;;87334:53;87404:18;;38636:55:1;87081:347:39;38636:55:1;-1:-1:-1;;;;;38709:21:1;;38701:59;;;;-1:-1:-1;;;38701:59:1;;87635:2:39;38701:59:1;;;87617:21:39;87674:2;87654:18;;;87647:30;87713:27;87693:18;;;87686:55;87758:18;;38701:59:1;87433:349:39;38701:59:1;38770:21;38794:30;38809:5;38816:7;38794:14;:30::i;:::-;38845:29;;;;-1:-1:-1;;;38552:330:1:o;25935:2453::-;25996:12;-1:-1:-1;;;;;;;;;26024:32:1;;;26020:86;;26090:4;26079:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;26072:23;;25935:2453;;;:::o;26020:86::-;-1:-1:-1;;;;;;;;;26119:36:1;;;26115:94;;26189:8;;26178:20;;;26189:8;;;;26178:20;;;47383:36:39;47356:18;26178:20:1;47230:195:39;26115:94:1;-1:-1:-1;;;;;;;;;26222:39:1;;;26218:100;;26295:11;;26284:23;;;;;;52322:25:39;;52310:2;52295:18;;52176:177;26218:100:1;-1:-1:-1;;;;;;;;;26331:34:1;;;26327:90;;26399:6;26388:18;;;;;;;;:::i;26327:90::-;-1:-1:-1;;;;;;;;;26430:37:1;;;26426:251;;26510:2;26491:8;:21;;26483:64;;;;-1:-1:-1;;;26483:64:1;;88408:2:39;26483:64:1;;;88390:21:39;88447:2;88427:18;;;88420:30;88486:32;88466:18;;;88459:60;88536:18;;26483:64:1;88206:354:39;26483:64:1;26562:15;26596;26608:2;26605;26596:8;26562:15;26596;:::i;:::-;26588:24;;;:::i;:::-;26580:33;;26562:51;;26645:20;26657:7;26645:11;:20::i;:::-;26634:32;;;;;;52322:25:39;;52310:2;52295:18;;52176:177;26634:32:1;;;;;;;;;;;;;26627:39;;;25935:2453;;;:::o;26426:251::-;-1:-1:-1;;;;;;;;;26690:36:1;;;26686:374;;26769:2;26750:8;:21;;26742:63;;;;-1:-1:-1;;;26742:63:1;;88767:2:39;26742:63:1;;;88749:21:39;88806:2;88786:18;;;88779:30;88845:31;88825:18;;;88818:59;88894:18;;26742:63:1;88565:353:39;26742:63:1;26820:10;26849:15;26861:2;26858;26849:8;26820:10;26849:15;:::i;:::-;26841:24;;;:::i;:::-;26833:33;;;-1:-1:-1;26880:14:1;26913:15;26925:2;26922;26913:8;26880:14;26913:15;:::i;:::-;26905:24;;;:::i;:::-;26897:33;-1:-1:-1;26960:10:1;26984:28;26960:10;27001:2;26897:33;26984:9;:28::i;:::-;27033:16;;;27044:4;27033:16;;;49527:41:39;49500:18;27033:16:1;;;;;;;;;;;;;27026:23;;;;;25935:2453;;;:::o;26686:374::-;-1:-1:-1;;;;;;;;;27073:40:1;;;27069:497;;27156:3;27137:8;:22;;27129:65;;;;-1:-1:-1;;;27129:65:1;;89125:2:39;27129:65:1;;;89107:21:39;89164:2;89144:18;;;89137:30;89203:32;89183:18;;;89176:60;89253:18;;27129:65:1;88923:354:39;27129:65:1;27209:12;27240:15;27252:2;27249;27240:8;27209:12;27240:15;:::i;:::-;27232:24;;;:::i;:::-;27224:33;;;-1:-1:-1;27271:10:1;27300:15;27312:2;27309;27300:8;27271:10;27300:15;:::i;:::-;27292:24;;;:::i;:::-;27284:33;;;-1:-1:-1;27331:14:1;27364:16;27376:3;27373:2;27364:8;27331:14;27364:16;:::i;:::-;27356:25;;;:::i;:::-;27348:34;-1:-1:-1;27414:10:1;27439:38;27455:4;27414:10;27348:34;27439:15;:38::i;:::-;27491:27;27501:4;27507:2;27511:6;27491:9;:27::i;:::-;27539:16;;;27550:4;27539:16;;;49527:41:39;49500:18;27539:16:1;;;;;;;;;;;;27532:23;;;;;;25935:2453;;;:::o;27069:497::-;-1:-1:-1;;;;;;;;;27579:37:1;;;27575:321;;27659:2;27640:8;:21;;27632:64;;;;-1:-1:-1;;;27632:64:1;;89484:2:39;27632:64:1;;;89466:21:39;89523:2;89503:18;;;89496:30;89562:32;89542:18;;;89535:60;89612:18;;27632:64:1;89282:354:39;27632:64:1;27711:13;27743:15;27755:2;27752;27743:8;27711:13;27743:15;:::i;:::-;27735:24;;;:::i;:::-;27727:33;;;-1:-1:-1;27774:15:1;27808;27820:2;27817;27808:8;27774:15;27808;:::i;:::-;27800:24;;;:::i;:::-;27792:33;;27774:51;;27857:27;27869:5;27876:7;27857:11;:27::i;:::-;27846:39;;;;;;52322:25:39;;52310:2;52295:18;;52176:177;27846:39:1;;;;;;;;;;;;;27839:46;;;;25935:2453;;;:::o;27575:321::-;-1:-1:-1;;;;;;;;;27909:35:1;;;27905:432;;27987:2;27968:8;:21;;27960:62;;;;-1:-1:-1;;;27960:62:1;;;;;;;:::i;:::-;28037:15;28071;28083:2;28080;28071:8;28037:15;28071;:::i;:::-;28063:24;;;:::i;:::-;28055:33;;;-1:-1:-1;28102:14:1;28135:15;28147:2;28144;28135:8;28102:14;28135:15;:::i;:::-;28127:24;;;:::i;:::-;28119:33;-1:-1:-1;28182:10:1;28206:32;28182:10;28222:7;28119:33;28206:8;:32::i;:::-;28273:7;-1:-1:-1;;;;;28257:32:1;28266:5;-1:-1:-1;;;;;28257:32:1;;28282:6;28257:32;;;;52322:25:39;;52310:2;52295:18;;52176:177;28257:32:1;;;;;;;;28310:16;;;28321:4;28310:16;;;49527:41:39;49500:18;28310:16:1;49387:187:39;27905:432:1;28353:28;28372:8;28353:18;:28::i;28394:2981::-;28456:12;-1:-1:-1;;;;;;;;;28484:33:1;;;28480:87;;28551:4;28540:16;;;;;;;;:::i;28480:87::-;-1:-1:-1;;;;;;;;;28580:35:1;;;28576:91;;28649:6;28638:18;;;;;;;;:::i;28576:91::-;-1:-1:-1;;;;;;;;;28680:37:1;;;28676:250;;28760:2;28741:8;:21;;28733:63;;;;-1:-1:-1;;;28733:63:1;;89843:2:39;28733:63:1;;;89825:21:39;89882:2;89862:18;;;89855:30;89921:31;89901:18;;;89894:59;89970:18;;28733:63:1;89641:353:39;28733:63:1;28810:16;28845:15;28857:2;28854;28845:8;28810:16;28845:15;:::i;:::-;28837:24;;;:::i;:::-;28829:33;-1:-1:-1;28894:20:1;28829:33;28894:10;:20::i;:::-;28883:32;;;;;;;;:::i;28676:250::-;-1:-1:-1;;;;;;;;;28939:40:1;;;28935:101;;29013:11;;29002:23;;;;;;52322:25:39;;52310:2;52295:18;;52176:177;28935:101:1;-1:-1:-1;;;;;;;;;29049:38:1;;;29045:247;;29130:2;29111:8;:21;;29103:64;;;;-1:-1:-1;;;29103:64:1;;88408:2:39;29103:64:1;;;88390:21:39;88447:2;88427:18;;;88420:30;88486:32;88466:18;;;88459:60;88536:18;;29103:64:1;88206:354:39;29045:247:1;-1:-1:-1;;;;;;;;;29305:36:1;;;29301:247;;29384:2;29365:8;:21;;29357:62;;;;-1:-1:-1;;;29357:62:1;;90426:2:39;29357:62:1;;;90408:21:39;90465:2;90445:18;;;90438:30;90504;90484:18;;;90477:58;90552:18;;29357:62:1;90224:352:39;29357:62:1;29433:16;29468:15;29480:2;29477;29468:8;29433:16;29468:15;:::i;:::-;29460:24;;;:::i;:::-;29452:33;-1:-1:-1;29517:19:1;29452:33;29517:9;:19::i;:::-;29506:31;;;-1:-1:-1;;;;;54166:32:39;;;29506:31:1;;;54148:51:39;54121:18;29506:31:1;54002:203:39;29301:247:1;-1:-1:-1;;;;;;;;;29561:41:1;;;29557:412;;29645:3;29626:8;:22;;29618:68;;;;-1:-1:-1;;;29618:68:1;;90783:2:39;29618:68:1;;;90765:21:39;90822:2;90802:18;;;90795:30;90861:34;90841:18;;;90834:62;-1:-1:-1;;;90912:18:39;;;90905:31;90953:19;;29618:68:1;90581:397:39;29618:68:1;29700:12;29731:15;29743:2;29740;29731:8;29700:12;29731:15;:::i;:::-;29723:24;;;:::i;:::-;29715:33;;;-1:-1:-1;29762:10:1;29791:15;29803:2;29800;29791:8;29762:10;29791:15;:::i;:::-;29783:24;;;:::i;:::-;29775:33;;;-1:-1:-1;29822:16:1;29857;29869:3;29866:2;29857:8;29822:16;29857;:::i;:::-;29849:25;;;:::i;:::-;29841:34;-1:-1:-1;29889:32:1;29902:4;29908:2;29841:34;29889:12;:32::i;29557:412::-;-1:-1:-1;;;;;;;;;29982:36:1;;;29978:344;;30061:2;30042:8;:21;;30034:62;;;;-1:-1:-1;;;30034:62:1;;;;;;;:::i;:::-;30110:15;30144;30156:2;30153;30144:8;30110:15;30144;:::i;:::-;30136:24;;;:::i;:::-;30128:33;;;-1:-1:-1;30175:16:1;30210:15;30222:2;30219;30210:8;30175:16;30210:15;:::i;:::-;30202:24;;;:::i;:::-;30194:33;-1:-1:-1;30241:33:1;30250:7;30194:33;30269:4;30241:8;:33::i;:::-;30295:16;;;30306:4;30295:16;;;49527:41:39;49500:18;30295:16:1;49387:187:39;29978:344:1;-1:-1:-1;;;;;;;;;30335:46:1;;;30331:372;;30424:2;30405:8;:21;;30397:72;;;;-1:-1:-1;;;30397:72:1;;91185:2:39;30397:72:1;;;91167:21:39;91224:2;91204:18;;;91197:30;91263:34;91243:18;;;91236:62;-1:-1:-1;;;91314:18:39;;;91307:36;91360:19;;30397:72:1;90983:402:39;30397:72:1;30483:16;30518:15;30530:2;30527;30518:8;30483:16;30518:15;:::i;:::-;30510:24;;;:::i;:::-;30502:33;;;-1:-1:-1;30549:13:1;30581:15;30593:2;30590;30581:8;30549:13;30581:15;:::i;:::-;30573:24;;;:::i;:::-;30602:1;30565:38;;-1:-1:-1;30617:38:1;30636:8;30565:38;30617:18;:38::i;30331:372::-;-1:-1:-1;;;;;;;;;30716:40:1;;;30712:259;;30799:2;30780:8;:21;;30772:66;;;;-1:-1:-1;;;30772:66:1;;91592:2:39;30772:66:1;;;91574:21:39;;;91611:18;;;91604:30;91670:34;91650:18;;;91643:62;91722:18;;30772:66:1;91390:356:39;30772:66:1;30852:16;30887:15;30899:2;30896;30887:8;30852:16;30887:15;:::i;:::-;30879:24;;;:::i;:::-;30871:33;-1:-1:-1;30936:23:1;30871:33;30936:13;:23::i;30712:259::-;-1:-1:-1;;;;;;;;;30984:45:1;;;30980:344;;31072:2;31053:8;:21;;31045:71;;;;-1:-1:-1;;;31045:71:1;;91953:2:39;31045:71:1;;;91935:21:39;91992:2;91972:18;;;91965:30;92031:34;92011:18;;;92004:62;-1:-1:-1;;;92082:18:39;;;92075:35;92127:19;;31045:71:1;91751:401:39;31045:71:1;31130:13;31162:15;31174:2;31171;31162:8;31130:13;31162:15;:::i;:::-;31154:24;;;:::i;:::-;31146:33;;;-1:-1:-1;31193:16:1;31228:15;31240:2;31237;31228:8;31193:16;31228:15;:::i;:::-;31220:24;;;:::i;:::-;31212:33;;31193:52;;31277:35;31296:5;31303:8;31277:18;:35::i;:::-;31266:47;;;49552:14:39;;49545:22;31266:47:1;;;49527:41:39;49500:18;31266:47:1;49387:187:39;32212:312:1;32397:52;;-1:-1:-1;;;32397:52:1;;-1:-1:-1;;;;;54166:32:39;;32397:52:1;;;54148:51:39;32279:7:1;;-1:-1:-1;;;32316:25:1;32279:7;;;;380:5;;32397:43;;54121:18:39;;32397:52:1;54002:203:39;35622:272:1;-1:-1:-1;;;;;35709:18:1;;35701:50;;;;-1:-1:-1;;;35701:50:1;;92359:2:39;35701:50:1;;;92341:21:39;92398:2;92378:18;;;92371:30;-1:-1:-1;;;92417:18:39;;;92410:49;92476:18;;35701:50:1;92157:343:39;35701:50:1;-1:-1:-1;;;;;35769:16:1;;35761:50;;;;-1:-1:-1;;;35761:50:1;;92707:2:39;35761:50:1;;;92689:21:39;92746:2;92726:18;;;92719:30;-1:-1:-1;;;92765:18:39;;;92758:51;92826:18;;35761:50:1;92505:345:39;35761:50:1;35821:25;35829:4;35835:2;35839:6;35821:7;:25::i;:::-;35876:2;-1:-1:-1;;;;;35861:26:1;35870:4;-1:-1:-1;;;;;35861:26:1;;35880:6;35861:26;;;;52322:25:39;;52310:2;52295:18;;52176:177;35861:26:1;;;;;;;;35622:272;;;:::o;36288:1290::-;-1:-1:-1;;;;;36380:18:1;;36372:50;;;;-1:-1:-1;;;36372:50:1;;92359:2:39;36372:50:1;;;92341:21:39;92398:2;92378:18;;;92371:30;-1:-1:-1;;;92417:18:39;;;92410:49;92476:18;;36372:50:1;92157:343:39;36372:50:1;-1:-1:-1;;;;;36440:16:1;;36432:50;;;;-1:-1:-1;;;36432:50:1;;92707:2:39;36432:50:1;;;92689:21:39;92746:2;92726:18;;;92719:30;-1:-1:-1;;;92765:18:39;;;92758:51;92826:18;;36432:50:1;92505:345:39;36432:50:1;36550:12;36565:30;36585:8;36565:12;:30::i;:::-;36648:11;;36550:45;;-1:-1:-1;;;;;;36678:13:1;;;;;;;36670:50;;;;-1:-1:-1;;;36670:50:1;;93057:2:39;36670:50:1;;;93039:21:39;93096:2;93076:18;;;93069:30;93135:26;93115:18;;;93108:54;93179:18;;36670:50:1;92855:348:39;36670:50:1;36748:10;-1:-1:-1;;36847:21:1;;36843:161;;36893:4;36884:13;;36929:5;-1:-1:-1;;;;;36919:15:1;:6;-1:-1:-1;;;;;36919:15:1;;:52;;;;36938:33;36957:5;36964:6;36938:18;:33::i;:::-;36911:82;;;;-1:-1:-1;;;36911:82:1;;93410:2:39;36911:82:1;;;93392:21:39;93449:2;93429:18;;;93422:30;-1:-1:-1;;;93468:18:39;;;93461:47;93525:18;;36911:82:1;93208:341:39;36911:82:1;37027:5;-1:-1:-1;;;;;37017:15:1;:6;-1:-1:-1;;;;;37017:15:1;;37013:145;;37066:23;37080:8;37066:13;:23::i;:::-;-1:-1:-1;;;;;37056:33:1;:6;-1:-1:-1;;;;;37056:33:1;;:69;;;;37093:32;37112:4;37118:6;37093:18;:32::i;:::-;37048:99;;;;-1:-1:-1;;;37048:99:1;;93410:2:39;37048:99:1;;;93392:21:39;93449:2;93429:18;;;93422:30;-1:-1:-1;;;93468:18:39;;;93461:47;93525:18;;37048:99:1;93208:341:39;37048:99:1;37194:20;37217:34;37241:8;37217:16;:34::i;:::-;37194:57;;37293:1;37279:12;37272:23;37341:28;37372:31;37394:4;37400:2;37372:21;:31::i;:::-;37341:62;;37453:5;37431:20;37424:35;37524:2;37518:4;37511:16;37558:2;-1:-1:-1;;;;;37543:28:1;37552:4;-1:-1:-1;;;;;37543:28:1;;37562:8;37543:28;;;;52322:25:39;;52310:2;52295:18;;52176:177;37543:28:1;;;;;;;;36362:1216;;;;;36288:1290;;;:::o;32530:413::-;32728:50;;-1:-1:-1;;;32728:50:1;;-1:-1:-1;;;;;54166:32:39;;32728:50:1;;;54148:51:39;32612:7:1;;-1:-1:-1;;;32649:25:1;32612:7;;;;380:5;;32728:43;;54121:18:39;;32728:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;32807:52;;-1:-1:-1;;;32807:52:1;;-1:-1:-1;;;;;54166:32:39;;32807:52:1;;;54148:51:39;32711:67:1;;-1:-1:-1;32788:16:1;;380:5;;32807:43;;54121:18:39;;32807:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;32788:71;;32901:8;32911:3;32916:9;32927:7;32884:51;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;32876:60;;;:::i;:::-;32869:67;32530:413;-1:-1:-1;;;;;;;32530:413:1:o;34421:169::-;34476:14;34502:12;34517:23;34532:7;34517:14;:23::i;:::-;34571:11;;34421:169;-1:-1:-1;;;34421:169:1:o;39580:404::-;39671:24;39698:27;39710:5;39717:7;39698:11;:27::i;:::-;39671:54;;-1:-1:-1;;39739:16:1;:37;39735:243;;39820:6;39800:16;:26;;39792:68;;;;-1:-1:-1;;;39792:68:1;;94279:2:39;39792:68:1;;;94261:21:39;94318:2;94298:18;;;94291:30;94357:31;94337:18;;;94330:59;94406:18;;39792:68:1;94077:353:39;39792:68:1;39902:51;39911:5;39918:7;39946:6;39927:16;:25;39902:8;:51::i;:::-;39661:323;39580:404;;;:::o;34596:191::-;34666:14;34692:12;34707:30;34722:5;34729:7;34707:14;:30::i;:::-;34768:11;;34596:191;-1:-1:-1;;;;34596:191:1:o;31381:769::-;31443:12;-1:-1:-1;;;;;;;;;31471:38:1;;;31467:194;;31525:12;31540:29;31558:10;31540:17;:29::i;:::-;31525:44;;31607:4;31601;31594:18;31645:4;31634:16;;;;;;49552:14:39;49545:22;49527:41;;49515:2;49500:18;;49387:187;31467:194:1;-1:-1:-1;;;;;;;;;31674:39:1;;;31670:196;;31729:12;31744:29;31762:10;31744:17;:29::i;:::-;31811:5;31798:19;;31839:16;;;31850:4;31839:16;;;49527:41:39;31729:44:1;;-1:-1:-1;49500:18:39;31839:16:1;49387:187:39;31670:196:1;-1:-1:-1;;;;;;;;;31879:41:1;;;31875:218;;31936:12;31951:29;31969:10;31951:17;:29::i;:::-;32034:11;;32067:15;;;49552:14:39;;49545:22;32067:15:1;;;49527:41:39;32034:11:1;;-1:-1:-1;32034:11:1;;49500:18:39;32067:15:1;49387:187:39;31875:218:1;32102:41;;-1:-1:-1;;;32102:41:1;;94637:2:39;32102:41:1;;;94619:21:39;94676:2;94656:18;;;94649:30;94715:33;94695:18;;;94688:61;94766:18;;32102:41:1;94435:355:39;34793:225:1;34848:17;34877:12;34892:31;34913:8;34892:13;:31::i;:::-;34877:46;;34933:19;34986:4;34973:17;;35007:4;35001:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34867:151;;34793:225;;;:::o;35024:173::-;35078:13;35103:12;35118:30;35138:8;35118:12;:30::i;38888:567::-;39045:13;39061:19;39071:8;39061:9;:19::i;:::-;39045:35;-1:-1:-1;39098:10:1;-1:-1:-1;;;;;39098:19:1;;;;:60;;-1:-1:-1;39148:10:1;39121:23;39135:8;39121:13;:23::i;:::-;-1:-1:-1;;;;;39121:37:1;;39098:60;:101;;;;39162:37;39181:5;39188:10;39162:18;:37::i;:::-;39090:136;;;;-1:-1:-1;;;39090:136:1;;94997:2:39;39090:136:1;;;94979:21:39;95036:2;95016:18;;;95009:30;-1:-1:-1;;;95055:18:39;;;95048:52;95117:18;;39090:136:1;94795:346:39;39090:136:1;39237:12;39252:34;39276:8;39252:16;:34::i;:::-;39237:49;;39296:19;39318:10;:33;;39349:1;39318:33;;;39331:7;39318:33;39296:55;;39385:11;39379:4;39372:25;39430:7;-1:-1:-1;;;;;39414:34:1;39423:5;-1:-1:-1;;;;;39414:34:1;;39439:8;39414:34;;;;52322:25:39;;52310:2;52295:18;;52176:177;39414:34:1;;;;;;;;38966:489;;;38888:567;;;:::o;39990:376::-;40085:10;-1:-1:-1;;;;;40113:22:1;;;;;;:43;;;40151:5;-1:-1:-1;;;;;40139:17:1;:8;-1:-1:-1;;;;;40139:17:1;;;40113:43;40105:91;;;;-1:-1:-1;;;40105:91:1;;95348:2:39;40105:91:1;;;95330:21:39;95387:2;95367:18;;;95360:30;95426:34;95406:18;;;95399:62;-1:-1:-1;;;95477:18:39;;;95470:33;95520:19;;40105:91:1;95146:399:39;40105:91:1;40206:12;40221:38;40243:5;40250:8;40221:21;:38::i;:::-;40206:53;;40293:8;40287:4;40280:22;40340:8;-1:-1:-1;;;;;40318:41:1;40333:5;-1:-1:-1;;;;;40318:41:1;;40350:8;40318:41;;;;49552:14:39;49545:22;49527:41;;49515:2;49500:18;;49387:187;40318:41:1;;;;;;;;40059:307;;39990:376;;:::o;35203:187::-;35261:16;35289:12;35304:34;35328:8;35304:16;:34::i;35396:220::-;35474:19;35505:12;35520:38;35542:5;35549:8;35520:21;:38::i;33509:227::-;33687:41;;33574:7;;-1:-1:-1;;;33611:24:1;33574:7;;33687:41;;33611:24;;33574:7;;33719:8;;33687:41;;;:::i;:::-;;;;;;;;;;;;;33679:50;;;:::i;:::-;33672:57;33509:227;-1:-1:-1;;;;33509:227:1:o;33742:235::-;33928:41;;33811:7;;-1:-1:-1;;;33848:28:1;33811:7;;33928:41;;33848:28;;33811:7;;33960:8;;33928:41;;;:::i;33983:432::-;34197:50;;-1:-1:-1;;;34197:50:1;;-1:-1:-1;;;;;54166:32:39;;34197:50:1;;;54148:51:39;34073:7:1;;-1:-1:-1;;;34110:33:1;34073:7;;;;380:5;;34197:43;;54121:18:39;;34197:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34277:53;;-1:-1:-1;;;34277:53:1;;-1:-1:-1;;;;;54166:32:39;;34277:53:1;;;54148:51:39;34180:67:1;;-1:-1:-1;34257:17:1;;380:5;;34277:43;;54121:18:39;;34277:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34257:73;;34372:8;34382:3;34387:7;34396:10;34355:52;;;;;;;;;;;:::i;33274:229::-;33454:41;;33340:7;;-1:-1:-1;;;33377:25:1;33340:7;;33454:41;;33377:25;;33340:7;;33486:8;;33454:41;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;372:331:39:-;477:9;488;530:8;518:10;515:24;512:44;;;552:1;549;542:12;512:44;581:6;571:8;568:20;565:40;;;601:1;598;591:12;565:40;-1:-1:-1;;627:23:39;;;672:25;;;;;-1:-1:-1;372:331:39:o;708:338::-;828:19;;-1:-1:-1;;;;;;865:29:39;;;914:1;906:10;;903:137;;;-1:-1:-1;;;;;;975:1:39;971:11;;;968:1;964:19;960:46;;;952:55;;948:82;;-1:-1:-1;903:137:39;;708:338;;;;:::o;1410:374::-;1531:19;;-1:-1:-1;;;;;;1568:40:39;;;1628:2;1620:11;;1617:161;;;-1:-1:-1;;;;;;1690:2:39;1686:12;;;;1683:1;1679:20;1675:58;;;1667:67;1663:105;;;;1410:374;-1:-1:-1;;1410:374:39:o;2147:131::-;-1:-1:-1;;;;;2222:31:39;;2212:42;;2202:70;;2268:1;2265;2258:12;2202:70;2147:131;:::o;2283:367::-;2351:6;2359;2412:2;2400:9;2391:7;2387:23;2383:32;2380:52;;;2428:1;2425;2418:12;2380:52;2467:9;2454:23;2486:31;2511:5;2486:31;:::i;:::-;2536:5;2614:2;2599:18;;;;2586:32;;-1:-1:-1;;;2283:367:39:o;3150:388::-;3218:6;3226;3279:2;3267:9;3258:7;3254:23;3250:32;3247:52;;;3295:1;3292;3285:12;3247:52;3334:9;3321:23;3353:31;3378:5;3353:31;:::i;:::-;3403:5;-1:-1:-1;3460:2:39;3445:18;;3432:32;3473:33;3432:32;3473:33;:::i;:::-;3525:7;3515:17;;;3150:388;;;;;:::o;3736:508::-;3813:6;3821;3829;3882:2;3870:9;3861:7;3857:23;3853:32;3850:52;;;3898:1;3895;3888:12;3850:52;3937:9;3924:23;3956:31;3981:5;3956:31;:::i;:::-;4006:5;-1:-1:-1;4063:2:39;4048:18;;4035:32;4076:33;4035:32;4076:33;:::i;:::-;3736:508;;4128:7;;-1:-1:-1;;;4208:2:39;4193:18;;;;4180:32;;3736:508::o;4249:127::-;4310:10;4305:3;4301:20;4298:1;4291:31;4341:4;4338:1;4331:15;4365:4;4362:1;4355:15;4381:254;4454:2;4448:9;4496:4;4484:17;;-1:-1:-1;;;;;4516:34:39;;4552:22;;;4513:62;4510:88;;;4578:18;;:::i;:::-;4614:2;4607:22;4381:254;:::o;4640:::-;4713:2;4707:9;4755:4;4743:17;;-1:-1:-1;;;;;4775:34:39;;4811:22;;;4772:62;4769:88;;;4837:18;;:::i;4899:254::-;4972:2;4966:9;5014:4;5002:17;;-1:-1:-1;;;;;5034:34:39;;5070:22;;;5031:62;5028:88;;;5096:18;;:::i;5158:258::-;5231:4;5225:11;;;5263:17;;-1:-1:-1;;;;;5295:34:39;;5331:22;;;5292:62;5289:88;;;5357:18;;:::i;5421:254::-;5494:2;5488:9;5536:4;5524:17;;-1:-1:-1;;;;;5556:34:39;;5592:22;;;5553:62;5550:88;;;5618:18;;:::i;5680:256::-;5753:2;5747:9;5795:6;5783:19;;-1:-1:-1;;;;;5817:34:39;;5853:22;;;5814:62;5811:88;;;5879:18;;:::i;5941:254::-;6014:2;6008:9;6056:4;6044:17;;-1:-1:-1;;;;;6076:34:39;;6112:22;;;6073:62;6070:88;;;6138:18;;:::i;6200:275::-;6271:2;6265:9;6336:2;6317:13;;-1:-1:-1;;6313:27:39;6301:40;;-1:-1:-1;;;;;6356:34:39;;6392:22;;;6353:62;6350:88;;;6418:18;;:::i;:::-;6454:2;6447:22;6200:275;;-1:-1:-1;6200:275:39:o;6480:196::-;6553:4;-1:-1:-1;;;;;6578:6:39;6575:30;6572:56;;;6608:18;;:::i;:::-;-1:-1:-1;6653:1:39;6649:14;6665:4;6645:25;;6480:196::o;6681:118::-;6768:5;6765:1;6754:20;6747:5;6744:31;6734:59;;6789:1;6786;6779:12;6804:118;6890:5;6883:13;6876:21;6869:5;6866:32;6856:60;;6912:1;6909;6902:12;6927:1205;6994:5;7047:3;7040:4;7032:6;7028:17;7024:27;7014:55;;7065:1;7062;7055:12;7014:55;7105:6;7092:20;7132:77;7148:60;7201:6;7148:60;:::i;:::-;7132:77;:::i;:::-;7233:3;7257:6;7252:3;7245:19;7289:4;7284:3;7280:14;7273:21;;7353:4;7345;7337:6;7333:17;7325:6;7321:30;7317:41;7303:55;;7381:3;7373:6;7370:15;7367:35;;;7398:1;7395;7388:12;7367:35;7434:4;7426:6;7422:17;7448:653;7464:6;7459:3;7456:15;7448:653;;;7542:4;7536:3;7531;7527:13;7523:24;7520:44;;;7560:1;7557;7550:12;7520:44;7590:23;;:::i;:::-;7654:3;7641:17;7671:33;7696:7;7671:33;:::i;:::-;7717:22;;7789:4;7780:14;;7767:28;7808:31;7767:28;7808:31;:::i;:::-;7870:4;7859:16;;7852:33;7935:2;7926:12;;7913:26;7952:30;7913:26;7952:30;:::i;:::-;8013:2;8002:14;;7995:31;8039:18;;8086:4;8077:14;;;;7490:4;7481:14;7448:653;;;-1:-1:-1;8119:7:39;6927:1205;-1:-1:-1;;;;;6927:1205:39:o;8137:3754::-;8295:6;8303;8356:2;8344:9;8335:7;8331:23;8327:32;8324:52;;;8372:1;8369;8362:12;8324:52;8412:9;8399:23;-1:-1:-1;;;;;8437:6:39;8434:30;8431:50;;;8477:1;8474;8467:12;8431:50;8500:22;;8556:4;8538:16;;;8534:27;8531:47;;;8574:1;8571;8564:12;8531:47;8600:23;;:::i;:::-;8661:2;8648:16;-1:-1:-1;;;;;8679:8:39;8676:32;8673:52;;;8721:1;8718;8711:12;8673:52;8748:69;8809:7;8798:8;8794:2;8790:17;8748:69;:::i;:::-;8734:84;;-1:-1:-1;8741:5:39;-1:-1:-1;;8895:4:39;8880:20;;8867:34;-1:-1:-1;;;;;8913:32:39;;8910:52;;;8958:1;8955;8948:12;8910:52;8981:24;;9036:4;9028:13;;9024:27;-1:-1:-1;9014:55:39;;9065:1;9062;9055:12;9014:55;9105:2;9092:16;9128:77;9144:60;9197:6;9144:60;:::i;9128:77::-;9227:3;9251:6;9246:3;9239:19;9283:4;9278:3;9274:14;9267:21;;9340:4;9330:6;9327:1;9323:14;9319:2;9315:23;9311:34;9297:48;;9368:7;9360:6;9357:19;9354:39;;;9389:1;9386;9379:12;9354:39;9421:4;9417:2;9413:13;9435:2426;9451:6;9446:3;9443:15;9435:2426;;;9539:3;9526:17;-1:-1:-1;;;;;9562:11:39;9559:35;9556:55;;;9607:1;9604;9597:12;9556:55;9634:20;;9706:4;9678:16;;;-1:-1:-1;;9674:30:39;9670:41;9667:61;;;9724:1;9721;9714:12;9667:61;9756:23;;:::i;:::-;9828:4;9824:2;9820:13;9807:27;9847:33;9872:7;9847:33;:::i;:::-;9893:24;;9967:2;9959:11;;9946:25;-1:-1:-1;;;;;9987:32:39;;9984:52;;;10032:1;10029;10022:12;9984:52;10076:80;10148:7;10141:4;10130:8;10126:2;10122:17;10118:28;10076:80;:::i;:::-;10069:4;10060:7;10056:18;10049:108;;10207:4;10203:2;10199:13;10186:27;-1:-1:-1;;;;;10232:8:39;10229:32;10226:52;;;10274:1;10271;10264:12;10226:52;10324:4;10313:8;10309:2;10305:17;10301:28;10291:38;;;10371:7;10364:4;10360:2;10356:13;10352:27;10342:55;;10393:1;10390;10383:12;10342:55;10439:2;10426:16;10468:79;10484:62;10537:8;10484:62;:::i;10468:79::-;10575:5;10607:8;10600:5;10593:23;10649:4;10642:5;10638:16;10629:25;;10714:4;10702:8;10699:1;10695:16;10691:2;10687:25;10683:36;10667:52;;10748:7;10738:8;10735:21;10732:41;;;10769:1;10766;10759:12;10732:41;10807:4;10803:2;10799:13;10786:26;;10825:913;10843:8;10836:5;10833:19;10825:913;;;10941:4;10933:5;10924:7;10920:19;10916:30;10913:50;;;10959:1;10956;10949:12;10913:50;10995:23;;:::i;:::-;11063:5;11050:19;11086:33;11111:7;11086:33;:::i;:::-;11136:24;;11216:4;11205:16;;11192:30;11239:33;11192:30;11239:33;:::i;:::-;11309:4;11296:18;;11289:35;11380:2;11369:14;;11356:28;11401:31;11356:28;11401:31;:::i;:::-;11469:2;11456:16;;11449:33;11538:4;11527:16;;11514:30;11561;11514;11561;:::i;:::-;11628:4;11615:18;;11608:35;11660:22;;10875:4;10864:16;;;;;11719:4;11708:16;;;;10825:913;;;11771:2;11758:16;;11751:33;-1:-1:-1;;11797:20:39;;-1:-1:-1;11846:4:39;11837:14;;;;9468;9435:2426;;;9439:3;11880:5;11870:15;;;;;;8137:3754;;;;;:::o;11896:650::-;11982:6;11990;11998;12006;12059:3;12047:9;12038:7;12034:23;12030:33;12027:53;;;12076:1;12073;12066:12;12027:53;12115:9;12102:23;12134:31;12159:5;12134:31;:::i;:::-;12184:5;-1:-1:-1;12241:2:39;12226:18;;12213:32;12254:33;12213:32;12254:33;:::i;:::-;12306:7;-1:-1:-1;12365:2:39;12350:18;;12337:32;12378:33;12337:32;12378:33;:::i;:::-;11896:650;;;;-1:-1:-1;12430:7:39;;12510:2;12495:18;12482:32;;-1:-1:-1;;11896:650:39:o;12551:247::-;12610:6;12663:2;12651:9;12642:7;12638:23;12634:32;12631:52;;;12679:1;12676;12669:12;12631:52;12718:9;12705:23;12737:31;12762:5;12737:31;:::i;:::-;12787:5;12551:247;-1:-1:-1;;;12551:247:39:o;13173:289::-;13215:3;13253:5;13247:12;13280:6;13275:3;13268:19;13336:6;13329:4;13322:5;13318:16;13311:4;13306:3;13302:14;13296:47;13388:1;13381:4;13372:6;13367:3;13363:16;13359:27;13352:38;13451:4;13444:2;13440:7;13435:2;13427:6;13423:15;13419:29;13414:3;13410:39;13406:50;13399:57;;;13173:289;;;;:::o;13467:622::-;13568:5;13562:12;13555:20;13548:28;13543:3;13536:41;13655:1;13651;13646:3;13642:11;13638:19;13630:4;13623:5;13619:16;13613:23;13609:49;13602:4;13597:3;13593:14;13586:73;13518:3;13705:4;13698:5;13694:16;13688:23;13743:4;13736;13731:3;13727:14;13720:28;13769:47;13810:4;13805:3;13801:14;13787:12;13769:47;:::i;:::-;13757:59;;13864:4;13857:5;13853:16;13847:23;13912:3;13906:4;13902:14;13895:4;13890:3;13886:14;13879:38;13940:39;13974:4;13958:14;13940:39;:::i;:::-;14032:4;14021:16;;;14015:23;-1:-1:-1;;;;;14011:49:39;13995:14;;;;13988:73;;;;-1:-1:-1;13926:53:39;;13467:622;-1:-1:-1;;13467:622:39:o;14094:774::-;14155:3;14186;14218:5;14212:12;14245:6;14240:3;14233:19;14277:4;14272:3;14268:14;14261:21;;14335:4;14325:6;14322:1;14318:14;14311:5;14307:26;14303:37;14374:4;14367:5;14363:16;14397:1;14407:435;14421:6;14418:1;14415:13;14407:435;;;14508:2;14504:7;14496:5;14490:4;14486:16;14482:30;14477:3;14470:43;14542:6;14536:13;14581:2;14575:9;14569:4;14562:23;14632:4;14628:2;14624:13;14618:20;14598:40;;14675:4;14668;14662;14658:15;14651:29;14701:57;14752:4;14746;14742:15;14728:12;14701:57;:::i;:::-;14793:4;14818:14;;;;14693:65;;-1:-1:-1;14781:17:39;;;;;-1:-1:-1;14443:1:39;14436:9;14407:435;;;-1:-1:-1;14858:4:39;;14094:774;-1:-1:-1;;;;;;14094:774:39:o;15137:1313::-;15191:3;15235:5;15229:12;15262:6;15257:3;15250:19;15290:49;15331:6;15326:3;15322:16;15308:12;15290:49;:::i;:::-;15278:61;;15387:4;15380:5;15376:16;15370:23;15435:3;15429:4;15425:14;15418:4;15413:3;15409:14;15402:38;15463:39;15497:4;15481:14;15463:39;:::i;:::-;15449:53;;;15550:4;15543:5;15539:16;15533:23;15565:50;15609:4;15604:3;15600:14;15584;-1:-1:-1;;;;;2817:31:39;2805:44;;2751:104;15565:50;;15663:4;15656:5;15652:16;15646:23;15713:3;15705:6;15701:16;15694:4;15689:3;15685:14;15678:40;15741:41;15775:6;15759:14;15741:41;:::i;:::-;15727:55;;;15830:4;15823:5;15819:16;15813:23;15845:47;15886:4;15881:3;15877:14;15861;12873:13;12866:21;12854:34;;12803:91;15845:47;;15940:4;15933:5;15929:16;15923:23;15955:48;15997:4;15992:3;15988:14;15972;2730:1;2719:20;2707:33;;2655:91;15955:48;;16051:4;16044:5;16040:16;16034:23;16066:47;16107:4;16102:3;16098:14;16082;12873:13;12866:21;12854:34;;12803:91;16066:47;;16161:4;16154:5;16150:16;16144:23;16211:3;16203:6;16199:16;16192:4;16187:3;16183:14;16176:40;16239:60;16292:6;16276:14;16239:60;:::i;:::-;16225:74;;;16347:6;16340:5;16336:18;16330:25;16364:58;16414:6;16409:3;16405:16;16389:14;14959:12;;14956:1;14945:27;;;14933:40;;15026:4;15015:16;;;15009:23;-1:-1:-1;;;;;15005:49:39;14989:14;;;14982:73;15118:4;15107:16;;;15101:23;15087:38;;15071:14;;15064:62;14873:259;16364:58;-1:-1:-1;16438:6:39;15137:1313;-1:-1:-1;;;15137:1313:39:o;16455:856::-;16516:3;16554:5;16548:12;16581:6;16576:3;16569:19;16613:4;16608:3;16604:14;16597:21;;16652:4;16645:5;16641:16;16675:1;16685:601;16699:6;16696:1;16693:13;16685:601;;;16758:13;;16842:9;;16839:1;16828:24;16816:37;;16907:4;16899:13;;;16893:20;-1:-1:-1;;;;;16889:46:39;;;16873:14;;;16866:70;17000:4;16992:13;;;16986:20;16979:28;16972:36;16956:14;;;16949:60;17073:4;17065:13;;;17059:20;17052:28;17045:36;17029:14;;;17022:60;17136:4;17128:13;;;17122:20;17118:46;17102:14;;;17095:70;;;;16923:3;17192:14;;;;17259:17;;;;16932:1;16714:9;16685:601;;;-1:-1:-1;17302:3:39;;16455:856;-1:-1:-1;;;;16455:856:39:o;17316:921::-;17382:3;17420:5;17414:12;17447:6;17442:3;17435:19;17479:4;17474:3;17470:14;17463:21;;17518:4;17511:5;17507:16;17541:1;17551:661;17565:6;17562:1;17559:13;17551:661;;;17630:6;17624:13;17668:1;17714:2;17708:9;17705:1;17694:24;17689:3;17682:37;17783:4;17779:2;17775:13;17769:20;17766:1;17755:35;17748:4;17743:3;17739:14;17732:59;17855:4;17851:2;17847:13;17841:20;17838:1;17827:35;17820:4;17815:3;17811:14;17804:59;17927:4;17923:2;17919:13;17913:20;17910:1;17899:35;17892:4;17887:3;17883:14;17876:59;17999:4;17995:2;17991:13;17985:20;17978:28;17971:36;17964:4;17959:3;17955:14;17948:60;18087:1;18083;18078:3;18074:11;18070:19;18062:4;18058:2;18054:13;18048:20;18044:46;18037:4;18032:3;18028:14;18021:70;18127:4;18122:3;18118:14;18104:28;;18152:10;18145:17;;;;18197:4;18189:6;18185:17;18175:27;;17587:1;17584;17580:9;17575:14;;17551:661;;18242:929;18305:3;18343:5;18337:12;18370:6;18365:3;18358:19;18402:4;18397:3;18393:14;18386:21;;18441:4;18434:5;18430:16;18464:1;18474:672;18488:6;18485:1;18482:13;18474:672;;;18553:6;18547:13;18591:1;18637:2;18631:9;18628:1;18617:24;18612:3;18605:37;18706:4;18702:2;18698:13;18692:20;18689:1;18678:35;18671:4;18666:3;18662:14;18655:59;18778:4;18774:2;18770:13;18764:20;18761:1;18750:35;18743:4;18738:3;18734:14;18727:59;18865:1;18861;18856:3;18852:11;18848:19;18840:4;18836:2;18832:13;18826:20;18822:46;18815:4;18810:3;18806:14;18799:70;18933:4;18929:2;18925:13;18919:20;18912:28;18905:36;18898:4;18893:3;18889:14;18882:60;19021:1;19017;19012:3;19008:11;19004:19;18996:4;18992:2;18988:13;18982:20;18978:46;18971:4;18966:3;18962:14;18955:70;19061:4;19056:3;19052:14;19038:28;;19086:10;19079:17;;;;19131:4;19123:6;19119:17;19109:27;;18510:1;18507;18503:9;18498:14;;18474:672;;19176:1384;19228:3;19272:5;19266:12;19299:6;19294:3;19287:19;19327:61;19380:6;19375:3;19371:16;19357:12;19327:61;:::i;:::-;19315:73;;19436:4;19429:5;19425:16;19419:23;19451:48;19493:4;19488:3;19484:14;19468;2730:1;2719:20;2707:33;;2655:91;19451:48;;19547:4;19540:5;19536:16;19530:23;19562:47;19603:4;19598:3;19594:14;19578;12873:13;12866:21;12854:34;;12803:91;19562:47;;19657:4;19650:5;19646:16;19640:23;19672:47;19713:4;19708:3;19704:14;19688;12873:13;12866:21;12854:34;;12803:91;19672:47;;19767:4;19760:5;19756:16;19750:23;19782:47;19823:4;19818:3;19814:14;19798;12873:13;12866:21;12854:34;;12803:91;19782:47;;19877:4;19870:5;19866:16;19860:23;19925:3;19919:4;19915:14;19908:4;19903:3;19899:14;19892:38;19953:58;20006:4;19990:14;19953:58;:::i;:::-;19939:72;;;20059:4;20052:5;20048:16;20042:23;20109:3;20101:6;20097:16;20090:4;20085:3;20081:14;20074:40;20137:65;20195:6;20179:14;20137:65;:::i;:::-;20123:79;;;20250:4;20243:5;20239:16;20233:23;20300:3;20292:6;20288:16;20281:4;20276:3;20272:14;20265:40;20328:62;20383:6;20367:14;20328:62;:::i;:::-;20314:76;;;20438:6;20431:5;20427:18;20421:25;20492:3;20484:6;20480:16;20471:6;20466:3;20462:16;20455:42;20513:41;20547:6;20531:14;20513:41;:::i;20565:346::-;20786:6;20783:1;20772:21;20761:9;20754:40;20830:2;20825;20814:9;20810:18;20803:30;20735:4;20850:55;20901:2;20890:9;20886:18;20878:6;20850:55;:::i;20916:384::-;20982:6;20990;21043:2;21031:9;21022:7;21018:23;21014:32;21011:52;;;21059:1;21056;21049:12;21011:52;21098:9;21085:23;21117:31;21142:5;21117:31;:::i;:::-;21167:5;-1:-1:-1;21224:2:39;21209:18;;21196:32;21237:31;21196:32;21237:31;:::i;21305:1002::-;21548:6;21545:1;21534:21;21523:9;21516:40;21592:2;21587;21576:9;21572:18;21565:30;21497:4;21630:6;21624:13;21673:4;21668:2;21657:9;21653:18;21646:32;21701:62;21758:3;21747:9;21743:19;21729:12;21701:62;:::i;:::-;21687:76;;21831:2;21823:6;21819:15;21813:22;21810:1;21799:37;21794:2;21783:9;21779:18;21772:65;21919:1;21915;21910:3;21906:11;21902:19;21896:2;21888:6;21884:15;21878:22;21874:48;21868:3;21857:9;21853:19;21846:77;21992:2;21984:6;21980:15;21974:22;21971:1;21960:37;21954:3;21943:9;21939:19;21932:66;22047:3;22039:6;22035:16;22029:23;22122:2;22118:7;22106:9;22098:6;22094:22;22090:36;22083:4;22072:9;22068:20;22061:66;22150:41;22184:6;22168:14;22150:41;:::i;:::-;22265:3;22238:16;;;;22232:23;-1:-1:-1;;;;;22228:49:39;22222:3;22207:19;;;;22200:78;;;;-1:-1:-1;22136:55:39;;21305:1002;-1:-1:-1;;;21305:1002:39:o;22312:757::-;22366:5;22419:3;22412:4;22404:6;22400:17;22396:27;22386:55;;22437:1;22434;22427:12;22386:55;22477:6;22464:20;22504:77;22520:60;22573:6;22520:60;:::i;22504:77::-;22605:3;22629:6;22624:3;22617:19;22661:4;22656:3;22652:14;22645:21;;22722:4;22712:6;22709:1;22705:14;22697:6;22693:27;22689:38;22675:52;;22750:3;22742:6;22739:15;22736:35;;;22767:1;22764;22757:12;22736:35;22803:4;22795:6;22791:17;22817:221;22833:6;22828:3;22825:15;22817:221;;;22915:3;22902:17;22932:31;22957:5;22932:31;:::i;:::-;22976:18;;23023:4;23014:14;;;;22850;22817:221;;23074:753;23126:5;23179:3;23172:4;23164:6;23160:17;23156:27;23146:55;;23197:1;23194;23187:12;23146:55;23237:6;23224:20;23264:77;23280:60;23333:6;23280:60;:::i;23264:77::-;23365:3;23389:6;23384:3;23377:19;23421:4;23416:3;23412:14;23405:21;;23482:4;23472:6;23469:1;23465:14;23457:6;23453:27;23449:38;23435:52;;23510:3;23502:6;23499:15;23496:35;;;23527:1;23524;23517:12;23496:35;23563:4;23555:6;23551:17;23577:219;23593:6;23588:3;23585:15;23577:219;;;23675:3;23662:17;23692:29;23715:5;23692:29;:::i;:::-;23734:18;;23781:4;23772:14;;;;23610;23577:219;;23832:964;23991:6;23999;24007;24015;24068:3;24056:9;24047:7;24043:23;24039:33;24036:53;;;24085:1;24082;24075:12;24036:53;24124:9;24111:23;24143:31;24168:5;24143:31;:::i;:::-;24193:5;-1:-1:-1;24249:2:39;24234:18;;24221:32;-1:-1:-1;;;;;24265:30:39;;24262:50;;;24308:1;24305;24298:12;24262:50;24331:61;24384:7;24375:6;24364:9;24360:22;24331:61;:::i;:::-;24321:71;;;24445:2;24434:9;24430:18;24417:32;-1:-1:-1;;;;;24464:8:39;24461:32;24458:52;;;24506:1;24503;24496:12;24458:52;24529:63;24584:7;24573:8;24562:9;24558:24;24529:63;:::i;:::-;24519:73;;;24645:2;24634:9;24630:18;24617:32;-1:-1:-1;;;;;24664:8:39;24661:32;24658:52;;;24706:1;24703;24696:12;24658:52;24729:61;24782:7;24771:8;24760:9;24756:24;24729:61;:::i;:::-;24719:71;;;23832:964;;;;;;;:::o;24801:483::-;24894:6;24902;24955:2;24943:9;24934:7;24930:23;24926:32;24923:52;;;24971:1;24968;24961:12;24923:52;25010:9;24997:23;25029:31;25054:5;25029:31;:::i;:::-;25079:5;-1:-1:-1;25135:2:39;25120:18;;25107:32;-1:-1:-1;;;;;25151:30:39;;25148:50;;;25194:1;25191;25184:12;25148:50;25217:61;25270:7;25261:6;25250:9;25246:22;25217:61;:::i;:::-;25207:71;;;24801:483;;;;;:::o;25289:343::-;25508:6;25505:1;25494:21;25483:9;25476:40;25552:2;25547;25536:9;25532:18;25525:30;25457:4;25572:54;25622:2;25611:9;25607:18;25599:6;25572:54;:::i;25637:553::-;25874:6;25871:1;25860:21;25849:9;25842:40;25918:2;25913;25902:9;25898:18;25891:30;25823:4;25956:6;25950:13;25999:2;25994;25983:9;25979:18;25972:30;26025:62;26082:3;26071:9;26067:19;26053:12;26025:62;:::i;:::-;26011:76;;26155:2;26147:6;26143:15;26137:22;26134:1;26123:37;26118:2;26107:9;26103:18;26096:65;26178:6;26170:14;;;25637:553;;;;;:::o;26195:667::-;26279:6;26287;26295;26303;26356:3;26344:9;26335:7;26331:23;26327:33;26324:53;;;26373:1;26370;26363:12;26324:53;26412:9;26399:23;26431:31;26456:5;26431:31;:::i;:::-;26481:5;-1:-1:-1;26538:2:39;26523:18;;26510:32;26551:33;26510:32;26551:33;:::i;:::-;26603:7;-1:-1:-1;26662:2:39;26647:18;;26634:32;26675:33;26634:32;26675:33;:::i;:::-;26727:7;-1:-1:-1;26786:2:39;26771:18;;26758:32;26799:31;26758:32;26799:31;:::i;:::-;26195:667;;;;-1:-1:-1;26195:667:39;;-1:-1:-1;;26195:667:39:o;26867:721::-;26992:6;27000;27008;27061:2;27049:9;27040:7;27036:23;27032:32;27029:52;;;27077:1;27074;27067:12;27029:52;27116:9;27103:23;27135:31;27160:5;27135:31;:::i;:::-;27185:5;-1:-1:-1;27241:2:39;27226:18;;27213:32;-1:-1:-1;;;;;27257:30:39;;27254:50;;;27300:1;27297;27290:12;27254:50;27323:61;27376:7;27367:6;27356:9;27352:22;27323:61;:::i;:::-;27313:71;;;27437:2;27426:9;27422:18;27409:32;-1:-1:-1;;;;;27456:8:39;27453:32;27450:52;;;27498:1;27495;27488:12;27450:52;27521:61;27574:7;27563:8;27552:9;27548:24;27521:61;:::i;:::-;27511:71;;;26867:721;;;;;:::o;27868:954::-;28411:6;28408:1;28397:21;28386:9;28379:40;28455:3;28450:2;28439:9;28435:18;28428:31;28360:4;28482:65;28542:3;28531:9;28527:19;28519:6;28482:65;:::i;:::-;28595:9;28587:6;28583:22;28578:2;28567:9;28563:18;28556:50;28629:57;28679:6;28671;28629:57;:::i;:::-;28615:71;;28734:9;28726:6;28722:22;28717:2;28706:9;28702:18;28695:50;28762:54;28809:6;28801;28762:54;:::i;28827:326::-;29075:1;29064:21;;;29046:40;;29033:3;29018:19;;29095:52;29143:2;29128:18;;29120:6;14959:12;;14956:1;14945:27;;;14933:40;;15026:4;15015:16;;;15009:23;-1:-1:-1;;;;;15005:49:39;14989:14;;;14982:73;15118:4;15107:16;;;15101:23;15087:38;;15071:14;;15064:62;14873:259;29158:616;29256:6;29264;29272;29325:2;29313:9;29304:7;29300:23;29296:32;29293:52;;;29341:1;29338;29331:12;29293:52;29380:9;29367:23;29399:31;29424:5;29399:31;:::i;:::-;29449:5;-1:-1:-1;29506:2:39;29491:18;;29478:32;29519:31;29478:32;29519:31;:::i;:::-;29569:7;-1:-1:-1;29627:2:39;29612:18;;29599:32;-1:-1:-1;;;;;29643:30:39;;29640:50;;;29686:1;29683;29676:12;30251:186;30299:4;-1:-1:-1;;;;;30324:6:39;30321:30;30318:56;;;30354:18;;:::i;:::-;-1:-1:-1;30420:2:39;30399:15;-1:-1:-1;;30395:29:39;30426:4;30391:40;;30251:186::o;30442:1772::-;30551:6;30559;30567;30620:2;30608:9;30599:7;30595:23;30591:32;30588:52;;;30636:1;30633;30626:12;30588:52;30675:9;30662:23;30694:31;30719:5;30694:31;:::i;:::-;30744:5;-1:-1:-1;30801:2:39;30786:18;;30773:32;30814:31;30773:32;30814:31;:::i;:::-;30864:7;-1:-1:-1;30922:2:39;30907:18;;30894:32;-1:-1:-1;;;;;30938:30:39;;30935:50;;;30981:1;30978;30971:12;30935:50;31004:22;;31057:4;31049:13;;31045:27;-1:-1:-1;31035:55:39;;31086:1;31083;31076:12;31035:55;31126:2;31113:16;31149:77;31165:60;31218:6;31165:60;:::i;31149:77::-;31248:3;31272:6;31267:3;31260:19;31304:2;31299:3;31295:12;31288:19;;31359:2;31349:6;31346:1;31342:14;31338:2;31334:23;31330:32;31316:46;;31385:7;31377:6;31374:19;31371:39;;;31406:1;31403;31396:12;31371:39;31438:2;31434;31430:11;31450:734;31466:6;31461:3;31458:15;31450:734;;;31552:3;31539:17;-1:-1:-1;;;;;31575:11:39;31572:35;31569:55;;;31620:1;31617;31610:12;31569:55;31647:20;;31702:2;31694:11;;31690:25;-1:-1:-1;31680:53:39;;31729:1;31726;31719:12;31680:53;31783:2;31779;31775:11;31762:25;31815:54;31831:37;31859:8;31831:37;:::i;31815:54::-;31882:25;;;31926:35;31934:17;;;31926:35;31923:48;-1:-1:-1;31920:68:39;;;31984:1;31981;31974:12;31920:68;32045:8;32040:2;32036;32032:11;32027:2;32018:7;32014:16;32001:53;32107:1;32102:2;32091:8;32082:7;32078:22;32074:31;32067:42;32134:7;32129:3;32122:20;;;;32171:2;32166:3;32162:12;32155:19;;31492:2;31487:3;31483:12;31476:19;;31450:734;;;31454:3;32203:5;32193:15;;;;;;30442:1772;;;;;:::o;32219:787::-;32405:4;32453:2;32442:9;32438:18;32497:6;32494:1;32483:21;32472:9;32465:40;32555:6;32552:1;32541:21;32536:2;32525:9;32521:18;32514:49;32599:2;32594;32583:9;32579:18;32572:30;32622:6;32657;32651:13;32688:6;32680;32673:22;32726:3;32715:9;32711:19;32704:26;;32765:2;32757:6;32753:15;32739:29;;32786:1;32796:184;32810:6;32807:1;32804:13;32796:184;;;32885:13;;32882:1;32871:28;32859:41;;32929:2;32955:15;;;;32920:12;;;;32832:1;32825:9;32796:184;;;-1:-1:-1;32997:3:39;;32219:787;-1:-1:-1;;;;;;;32219:787:39:o;33011:529::-;33088:6;33096;33104;33157:2;33145:9;33136:7;33132:23;33128:32;33125:52;;;33173:1;33170;33163:12;33125:52;33212:9;33199:23;33231:31;33256:5;33231:31;:::i;:::-;33281:5;-1:-1:-1;33338:2:39;33323:18;;33310:32;33351:33;33310:32;33351:33;:::i;:::-;33403:7;-1:-1:-1;33462:2:39;33447:18;;33434:32;33475:33;33434:32;33475:33;:::i;:::-;33527:7;33517:17;;;33011:529;;;;;:::o;33545:380::-;33624:1;33620:12;;;;33667;;;33688:61;;33742:4;33734:6;33730:17;33720:27;;33688:61;33795:2;33787:6;33784:14;33764:18;33761:38;33758:161;;33841:10;33836:3;33832:20;33829:1;33822:31;33876:4;33873:1;33866:15;33904:4;33901:1;33894:15;33758:161;;33545:380;;;:::o;33930:680::-;33983:3;34024:5;34018:12;34053:36;34079:9;34053:36;:::i;:::-;34120:1;34105:17;;34131:133;;;;34278:1;34273:331;;;;34098:506;;34131:133;-1:-1:-1;;34164:24:39;;34152:37;;34237:14;;34230:22;34218:35;;34209:45;;;-1:-1:-1;34131:133:39;;34273:331;34304:5;34301:1;34294:16;34351:4;34348:1;34338:18;34378:1;34392:166;34406:6;34403:1;34400:13;34392:166;;;34486:14;;34473:11;;;34466:35;34542:1;34529:15;;;;34428:4;34421:12;34392:166;;;34396:3;;34587:6;34582:3;34578:16;34571:23;;34098:506;;;;33930:680;;;;:::o;34615:202::-;34745:3;34770:41;34807:3;34799:6;34770:41;:::i;35626:739::-;35676:3;35717:5;35711:12;35746:36;35772:9;35746:36;:::i;:::-;35791:19;;;35841:1;35826:17;;35852:150;;;;36016:1;36011:348;;;;35819:540;;35852:150;35915:3;35911:8;35900:9;35896:24;35889:4;35884:3;35880:14;35873:48;35987:4;35975:6;35968:14;35961:22;35958:1;35954:30;35949:3;35945:40;35941:51;35934:58;;35852:150;;36011:348;36042:5;36039:1;36032:16;36089:4;36086:1;36076:18;36116:1;36130:177;36144:6;36141:1;36138:13;36130:177;;;36241:7;36235:14;36228:4;36224:1;36219:3;36215:11;36211:22;36204:46;36291:1;36282:7;36278:15;36267:26;;36166:4;36163:1;36159:12;36154:17;;36130:177;;;36331:11;;36344:4;36327:22;;-1:-1:-1;;35819:540:39;;;35626:739;;;;:::o;36512:1237::-;36581:3;36612;36644:5;36638:12;36671:6;36666:3;36659:19;36703:4;36698:3;36694:14;36687:21;;36761:4;36751:6;36748:1;36744:14;36737:5;36733:26;36729:37;36785:5;36782:1;36775:16;36827:4;36824:1;36814:18;36850:1;36860:863;36874:6;36871:1;36868:13;36860:863;;;36939:16;;;-1:-1:-1;;36935:30:39;36923:43;;36992:13;;36979:27;;37043:4;37036;37026:15;;37019:29;;;37096:1;37084:14;;37078:21;37165:4;37150:20;;37143:28;37136:36;37119:15;;;37112:61;;;;37218:1;37214:17;-1:-1:-1;;;;;37210:43:39;37203:4;37193:15;;37186:68;37241:3;37284:4;37274:15;;37267:29;37323:60;37378:3;37368:14;;37361:4;37349:17;;37323:60;:::i;:::-;37424:17;;;-1:-1:-1;;37420:31:39;37413:4;37403:15;;37396:56;37479:52;37428:6;37517:4;37505:17;;37479:52;:::i;:::-;37589:1;37577:14;;37571:21;-1:-1:-1;;;;;37567:47:39;37561:3;37551:14;;;;37544:71;;;;-1:-1:-1;37708:4:39;37699:14;;;;;37677:1;37665:14;;;;37611:1;36889:9;36860:863;;38054:1068;38146:6;38141:3;38134:19;38116:3;38174:50;38216:6;38211:3;38207:16;38200:5;38174:50;:::i;:::-;38266:3;38260:4;38256:14;38249:4;38244:3;38240:14;38233:38;38294:49;38338:4;38331;38324:5;38320:16;38294:49;:::i;:::-;38280:63;;38372:66;38431:4;38424:5;38420:16;38414:23;-1:-1:-1;;;;;36465:36:39;;36370:137;38372:66;-1:-1:-1;;;;;2817:31:39;38489:4;38480:14;;2805:44;38527:16;;;38520:4;38511:14;;38504:40;38567:51;38531:6;38604:4;38593:16;;38567:51;:::i;:::-;38553:65;;38661:4;38654:5;38650:16;38644:23;38676:53;38723:4;38718:3;38714:14;38707:4;38696:9;38692:20;12873:13;12866:21;12854:34;;12803:91;38676:53;38773:1;38769:17;;;38766:1;38755:32;38798:4;38789:14;;2707:33;38813:62;38869:4;38864:3;38860:14;38853:4;38841:9;38837:2;38833:18;38829:29;12873:13;12866:21;12854:34;;12803:91;38813:62;;38919:3;38911:6;38907:16;38900:4;38895:3;38891:14;38884:40;38947:70;39010:6;39003:4;38996:5;38992:16;38947:70;:::i;:::-;38933:84;;39026:68;39086:6;39081:3;39077:16;39070:4;39063:5;39059:16;37839:12;;37883:1;37872:24;;;37860:37;;37937:2;37933:18;;;-1:-1:-1;;;;;37929:44:39;37922:4;37913:14;;37906:68;37970:1;38024:16;;;38018:23;38004:38;;;37990:12;;37983:60;37754:295;39127:915;39196:3;39234:5;39228:12;39261:6;39256:3;39249:19;39293:4;39288:3;39284:14;39277:21;;39317:5;39314:1;39307:16;39359:4;39356:1;39346:18;39382:1;39392:625;39406:6;39403:1;39400:13;39392:625;;;39504:13;;39553:1;39542:24;;;39530:37;;39611:2;39607:18;;;-1:-1:-1;;;;;39603:44:39;;;39596:4;39587:14;;39580:68;39704:3;39700:19;;;39721:4;39696:30;;;39689:38;39682:46;39668:12;;;39661:68;;;;39787:3;39783:19;;;;39779:30;39772:38;39765:46;39758:4;39749:14;;39742:70;39644:1;39858:14;;;39852:21;39848:47;;;39841:4;39832:14;;39825:71;39635:3;39923:14;;;;40002:4;39990:17;;;;39421:9;39392:625;;40047:1014;40121:3;40159:5;40153:12;40186:6;40181:3;40174:19;40218:4;40213:3;40209:14;40202:21;;40242:5;40239:1;40232:16;40284:4;40281:1;40271:18;40307:1;40317:719;40331:6;40328:1;40325:13;40317:719;;;40398:1;40435:6;40429:13;40481:9;40478:1;40467:24;40462:3;40455:37;40550:9;40546:2;40542:18;40539:1;40528:33;40521:4;40516:3;40512:14;40505:57;40619:9;40614:3;40610:19;40607:1;40596:34;40591:2;40586:3;40582:12;40575:56;40690:9;40685:3;40681:19;40678:1;40667:34;40660:4;40655:3;40651:14;40644:58;;40752:1;40744:6;40740:14;40734:21;40768:54;40817:3;40812;40808:13;40801:4;40788:11;40784:22;12873:13;12866:21;12854:34;;12803:91;40768:54;40862:1;40858:19;-1:-1:-1;;;;;40854:45:39;40910:4;40901:14;;2805:44;-1:-1:-1;40952:3:39;40943:13;;;;41021:4;41009:17;;;;;40353:1;40346:9;40317:719;;41066:1091;41137:3;41175:5;41169:12;41202:6;41197:3;41190:19;41234:4;41229:3;41225:14;41218:21;;41258:5;41255:1;41248:16;41300:4;41297:1;41287:18;41323:1;41333:799;41347:6;41344:1;41341:13;41333:799;;;41414:1;41451:6;41445:13;41497:9;41494:1;41483:24;41478:3;41471:37;41566:9;41562:2;41558:18;41555:1;41544:33;41537:4;41532:3;41528:14;41521:57;41635:9;41630:3;41626:19;41623:1;41612:34;41607:2;41602:3;41598:12;41591:56;;41697:1;41689:6;41685:14;41679:21;41770:1;41766;41761:3;41757:11;41753:19;41740:11;41736:37;41729:4;41724:3;41720:14;41713:61;41787:64;41846:3;41841;41837:13;41830:4;41816:11;41811:3;41807:21;41803:32;12873:13;12866:21;12854:34;;12803:91;41787:64;-1:-1:-1;;41944:4:39;41932:17;;41926:24;-1:-1:-1;;;;;36465:36:39;42006:3;41997:13;;2805:44;42047:4;42038:14;;;;42117:4;42105:17;;;;41369:1;41362:9;41333:799;;42162:1416;42389:4;42381:6;42377:17;42366:9;42359:36;42431:2;42426;42415:9;42411:18;42404:30;42470:6;42465:2;42454:9;42450:18;42443:34;42340:4;42500:66;42561:3;42550:9;42546:19;42538:6;42500:66;:::i;:::-;42610:4;42598:17;;42592:24;42653:1;42642:24;;;42683:2;42668:18;;2707:33;42696:67;42758:3;42747:9;42743:19;42736:4;42724:9;42720:2;42716:18;42712:29;12873:13;12866:21;12854:34;;12803:91;42696:67;42772;42834:3;42823:9;42819:19;42812:4;42800:9;42796:2;42792:18;42788:29;12873:13;12866:21;12854:34;;12803:91;42772:67;42848;42910:3;42899:9;42895:19;42888:4;42876:9;42872:2;42868:18;42864:29;12873:13;12866:21;12854:34;;12803:91;42848:67;-1:-1:-1;42956:22:39;;;-1:-1:-1;;42952:36:39;42946:3;42931:19;;42924:65;43012:71;42960:6;43069:4;43057:17;;43012:71;:::i;:::-;43124:22;;;-1:-1:-1;;43120:36:39;43114:3;43099:19;;43092:65;42998:85;-1:-1:-1;43180:76:39;42998:85;43242:4;43230:17;;43180:76;:::i;:::-;43300:22;;;-1:-1:-1;;43296:36:39;43287:6;43272:22;;43265:68;43166:90;-1:-1:-1;43356:73:39;43166:90;43415:4;43403:17;;43356:73;:::i;:::-;43470:22;;;-1:-1:-1;;43466:36:39;43460:3;43445:19;;43438:65;43342:87;-1:-1:-1;43520:52:39;43342:87;43558:4;43546:17;;43520:52;:::i;43991:967::-;44525:4;44517:6;44513:17;44502:9;44495:36;44567:3;44562:2;44551:9;44547:18;44540:31;44476:4;44594:73;44662:3;44651:9;44647:19;44639:6;44594:73;:::i;:::-;44715:9;44707:6;44703:22;44698:2;44687:9;44683:18;44676:50;44749:65;44807:6;44799;44749:65;:::i;:::-;44735:79;;44862:9;44854:6;44850:22;44845:2;44834:9;44830:18;44823:50;44890:62;44945:6;44937;44890:62;:::i;46483:338::-;46740:4;46728:17;;46710:36;;46697:3;46682:19;;46755:60;46811:2;46796:18;;46788:6;37839:12;;37883:1;37872:24;;;37860:37;;37937:2;37933:18;;;-1:-1:-1;;;;;37929:44:39;37922:4;37913:14;;37906:68;37970:1;38024:16;;;38018:23;38004:38;;;37990:12;;37983:60;37754:295;49127:255;49247:19;;49286:2;49278:11;;49275:101;;;-1:-1:-1;;49347:2:39;49343:12;;;49340:1;49336:20;49332:33;49321:45;49127:255;;;;:::o;49985:352::-;50187:2;50169:21;;;50226:2;50206:18;;;50199:30;50265;50260:2;50245:18;;50238:58;50328:2;50313:18;;49985:352::o;51469:347::-;51671:2;51653:21;;;51710:2;51690:18;;;51683:30;51749:25;51744:2;51729:18;;51722:53;51807:2;51792:18;;51469:347::o;52358:138::-;52437:13;;52459:31;52437:13;52459:31;:::i;:::-;52358:138;;;:::o;52501:251::-;52571:6;52624:2;52612:9;52603:7;52599:23;52595:32;52592:52;;;52640:1;52637;52630:12;52592:52;52672:9;52666:16;52691:31;52716:5;52691:31;:::i;52757:127::-;52818:10;52813:3;52809:20;52806:1;52799:31;52849:4;52846:1;52839:15;52873:4;52870:1;52863:15;52889:127;52950:10;52945:3;52941:20;52938:1;52931:31;52981:4;52978:1;52971:15;53005:4;53002:1;52995:15;53021:125;53086:9;;;53107:10;;;53104:36;;;53120:18;;:::i;53511:128::-;53578:9;;;53599:11;;;53596:37;;;53613:18;;:::i;54210:301::-;54339:3;54377:6;54371:13;54423:6;54416:4;54408:6;54404:17;54399:3;54393:37;54485:1;54449:16;;54474:13;;;-1:-1:-1;54449:16:39;54210:301;-1:-1:-1;54210:301:39:o;54872:134::-;54949:13;;54971:29;54949:13;54971:29;:::i;55011:514::-;55065:5;55118:3;55111:4;55103:6;55099:17;55095:27;55085:55;;55136:1;55133;55126:12;55085:55;55169:6;55163:13;55208:4;55200:6;55196:17;55237:1;55258:52;55274:35;55302:6;55274:35;:::i;55258:52::-;55247:63;;55335:6;55326:7;55319:23;55375:3;55366:6;55361:3;55357:16;55354:25;55351:45;;;55392:1;55389;55382:12;55351:45;55436:6;55431:3;55424:4;55415:7;55411:18;55405:38;55492:1;55463:20;;;55485:4;55459:31;55452:42;;;;-1:-1:-1;55467:7:39;55011:514;-1:-1:-1;;;55011:514:39:o;55530:132::-;55606:13;;55628:28;55606:13;55628:28;:::i;55667:2136::-;55740:5;55793:3;55786:4;55778:6;55774:17;55770:27;55760:55;;55811:1;55808;55801:12;55760:55;55844:6;55838:13;55871:77;55887:60;55940:6;55887:60;:::i;55871:77::-;55972:3;55996:6;55991:3;55984:19;56028:4;56023:3;56019:14;56012:21;;56089:4;56079:6;56076:1;56072:14;56064:6;56060:27;56056:38;56042:52;;56117:3;56109:6;56106:15;56103:35;;;56134:1;56131;56124:12;56103:35;56170:4;56162:6;56158:17;56184:1588;56200:6;56195:3;56192:15;56184:1588;;;56281:3;56275:10;-1:-1:-1;;;;;56304:11:39;56301:35;56298:55;;;56349:1;56346;56339:12;56298:55;56376:24;;56448:4;56424:12;;;-1:-1:-1;;56420:26:39;56416:37;56413:57;;;56466:1;56463;56456:12;56413:57;56496:23;;:::i;:::-;56586:4;56578:13;;56572:20;56605:22;;56670:4;56662:13;;56656:20;-1:-1:-1;;;;;56692:32:39;;56689:52;;;56737:1;56734;56727:12;56689:52;56787:4;56776:8;56772:2;56768:17;56764:28;56754:38;;;56826:4;56821:2;56816:3;56812:12;56808:23;56805:43;;;56844:1;56841;56834:12;56805:43;56876:23;;:::i;:::-;56933:2;56927:9;56949:30;56971:7;56949:30;:::i;:::-;56992:24;;57058:4;57050:13;;57044:20;57077:33;57044:20;57077:33;:::i;:::-;57143:4;57130:18;;57123:35;57201:4;57193:13;;57187:20;-1:-1:-1;;;;;57223:32:39;;57220:52;;;57268:1;57265;57258:12;57220:52;57312;57360:3;57349:8;57345:2;57341:17;57312:52;:::i;:::-;57305:4;57296:7;57292:18;57285:80;;57408:2;57404;57400:11;57394:18;-1:-1:-1;;;;;57431:8:39;57428:32;57425:52;;;57473:1;57470;57463:12;57425:52;57515;57563:3;57552:8;57548:2;57544:17;57515:52;:::i;:::-;57510:2;57501:7;57497:16;57490:78;;57607:43;57645:3;57641:2;57637:12;57607:43;:::i;:::-;57601:3;57592:7;57588:17;57581:70;57689:7;57682:4;57675:5;57671:16;57664:33;;57722:5;57717:3;57710:18;;;57757:4;57752:3;57748:14;57741:21;;56226:4;56221:3;56217:14;56210:21;;56184:1588;;57808:552;57872:5;57920:4;57908:9;57903:3;57899:19;57895:30;57892:50;;;57938:1;57935;57928:12;57892:50;57960:23;;:::i;:::-;57951:32;;58013:9;58007:16;58032:31;58055:7;58032:31;:::i;:::-;58072:22;;58139:2;58124:18;;58118:25;58152:33;58118:25;58152:33;:::i;:::-;58212:2;58201:14;;58194:31;58270:2;58255:18;;58249:25;58283:31;58249:25;58283:31;:::i;:::-;58341:2;58330:14;;58323:31;58334:5;57808:552;-1:-1:-1;;57808:552:39:o;58365:1418::-;58434:5;58482:6;58470:9;58465:3;58461:19;58457:32;58454:52;;;58502:1;58499;58492:12;58454:52;58524:23;;:::i;:::-;58515:32;;58576:9;58570:16;-1:-1:-1;;;;;58601:6:39;58598:30;58595:50;;;58641:1;58638;58631:12;58595:50;58668:57;58721:3;58712:6;58701:9;58697:22;58668:57;:::i;:::-;58661:5;58654:72;;58772:2;58761:9;58757:18;58751:25;-1:-1:-1;;;;;58791:8:39;58788:32;58785:52;;;58833:1;58830;58823:12;58785:52;58869:59;58924:3;58913:8;58902:9;58898:24;58869:59;:::i;:::-;58864:2;58857:5;58853:14;58846:83;;58961:49;59006:2;58995:9;58991:18;58961:49;:::i;:::-;58956:2;58949:5;58945:14;58938:73;59057:2;59046:9;59042:18;59036:25;-1:-1:-1;;;;;59076:8:39;59073:32;59070:52;;;59118:1;59115;59108:12;59070:52;59154:59;59209:3;59198:8;59187:9;59183:24;59154:59;:::i;:::-;59149:2;59142:5;59138:14;59131:83;;59247:47;59289:3;59278:9;59274:19;59247:47;:::i;:::-;59241:3;59234:5;59230:15;59223:72;59328:48;59371:3;59360:9;59356:19;59328:48;:::i;:::-;59322:3;59315:5;59311:15;59304:73;59410:47;59452:3;59441:9;59437:19;59410:47;:::i;:::-;59404:3;59397:5;59393:15;59386:72;59504:3;59493:9;59489:19;59483:26;-1:-1:-1;;;;;59524:8:39;59521:32;59518:52;;;59566:1;59563;59556:12;59518:52;59603:78;59677:3;59666:8;59655:9;59651:24;59603:78;:::i;:::-;59597:3;59590:5;59586:15;59579:103;;59715:61;59772:3;59766;59755:9;59751:19;59715:61;:::i;:::-;59709:3;59702:5;59698:15;59691:86;58365:1418;;;;:::o;59788:1456::-;59861:5;59914:3;59907:4;59899:6;59895:17;59891:27;59881:55;;59932:1;59929;59922:12;59881:55;59965:6;59959:13;59992:77;60008:60;60061:6;60008:60;:::i;59992:77::-;60093:3;60117:6;60112:3;60105:19;60149:4;60144:3;60140:14;60133:21;;60213:4;60205;60197:6;60193:17;60185:6;60181:30;60177:41;60163:55;;60241:3;60233:6;60230:15;60227:35;;;60258:1;60255;60248:12;60227:35;60294:4;60286:6;60282:17;60308:905;60324:6;60319:3;60316:15;60308:905;;;60402:4;60396:3;60391;60387:13;60383:24;60380:44;;;60420:1;60417;60410:12;60380:44;60450:23;;:::i;:::-;60507:3;60501:10;60524:31;60547:7;60524:31;:::i;:::-;60568:22;;60633:4;60624:14;;60618:21;60652:33;60618:21;60652:33;:::i;:::-;60716:4;60705:16;;60698:33;60774:2;60765:12;;60759:19;60791:30;60759:19;60791:30;:::i;:::-;60852:2;60841:14;;60834:31;60908:2;60899:12;;60893:19;60925:30;60893:19;60925:30;:::i;:::-;60986:2;60975:14;;60968:31;61042:3;61033:13;;61027:20;61060:33;61027:20;61060:33;:::i;:::-;61124:3;61113:15;;61106:32;61151:18;;61198:4;61189:14;;;;60350:4;60341:14;60308:905;;61249:1597;61327:5;61380:3;61373:4;61365:6;61361:17;61357:27;61347:55;;61398:1;61395;61388:12;61347:55;61431:6;61425:13;61458:77;61474:60;61527:6;61474:60;:::i;61458:77::-;61559:3;61583:6;61578:3;61571:19;61615:4;61610:3;61606:14;61599:21;;61679:4;61671;61663:6;61659:17;61651:6;61647:30;61643:41;61629:55;;61707:3;61699:6;61696:15;61693:35;;;61724:1;61721;61714:12;61693:35;61760:4;61752:6;61748:17;61774:1041;61790:6;61785:3;61782:15;61774:1041;;;61868:4;61862:3;61857;61853:13;61849:24;61846:44;;;61886:1;61883;61876:12;61846:44;61916:23;;:::i;:::-;61973:3;61967:10;61990:31;62013:7;61990:31;:::i;:::-;62034:22;;62099:4;62090:14;;62084:21;62118:31;62084:21;62118:31;:::i;:::-;62180:4;62169:16;;62162:33;62238:2;62229:12;;62223:19;62255:31;62223:19;62255:31;:::i;:::-;62317:2;62306:14;;62299:31;62373:2;62364:12;;62358:19;62390:31;62358:19;62390:31;:::i;:::-;62452:2;62441:14;;62434:31;62508:3;62499:13;;62493:20;62526:30;62493:20;62526:30;:::i;:::-;62587:3;62576:15;;62569:32;62644:3;62635:13;;62629:20;62662:33;62629:20;62662:33;:::i;:::-;62726:3;62715:15;;62708:32;62753:18;;62800:4;62791:14;;;;61816:4;61807:14;61774:1041;;62851:1596;62926:5;62979:3;62972:4;62964:6;62960:17;62956:27;62946:55;;62997:1;62994;62987:12;62946:55;63030:6;63024:13;63057:77;63073:60;63126:6;63073:60;:::i;63057:77::-;63158:3;63182:6;63177:3;63170:19;63214:4;63209:3;63205:14;63198:21;;63278:4;63270;63262:6;63258:17;63250:6;63246:30;63242:41;63228:55;;63306:3;63298:6;63295:15;63292:35;;;63323:1;63320;63313:12;63292:35;63359:4;63351:6;63347:17;63373:1043;63389:6;63384:3;63381:15;63373:1043;;;63467:4;63461:3;63456;63452:13;63448:24;63445:44;;;63485:1;63482;63475:12;63445:44;63515:23;;:::i;:::-;63572:3;63566:10;63589:31;63612:7;63589:31;:::i;:::-;63633:22;;63698:4;63689:14;;63683:21;63717:31;63683:21;63717:31;:::i;:::-;63779:4;63768:16;;63761:33;63837:2;63828:12;;63822:19;63854:31;63822:19;63854:31;:::i;:::-;63916:2;63905:14;;63898:31;63972:2;63963:12;;63957:19;63989:33;63957:19;63989:33;:::i;:::-;64053:2;64042:14;;64035:31;64109:3;64100:13;;64094:20;64127:30;64094:20;64127:30;:::i;:::-;64188:3;64177:15;;64170:32;64245:3;64236:13;;64230:20;64263:33;64230:20;64263:33;:::i;:::-;64327:3;64316:15;;64309:32;64354:18;;64401:4;64392:14;;;;63415:4;63406:14;63373:1043;;64452:1910;64556:6;64564;64617:2;64605:9;64596:7;64592:23;64588:32;64585:52;;;64633:1;64630;64623:12;64585:52;64665:9;64659:16;64684:29;64707:5;64684:29;:::i;:::-;64781:2;64766:18;;64760:25;64732:5;;-1:-1:-1;;;;;;64797:30:39;;64794:50;;;64840:1;64837;64830:12;64794:50;64863:22;;64919:6;64901:16;;;64897:29;64894:49;;;64939:1;64936;64929:12;64894:49;64967:23;;:::i;:::-;65021:2;65015:9;-1:-1:-1;;;;;65039:8:39;65036:32;65033:52;;;65081:1;65078;65071:12;65033:52;65110:68;65170:7;65159:8;65155:2;65151:17;65110:68;:::i;:::-;65101:7;65094:85;;65213:40;65249:2;65245;65241:11;65213:40;:::i;:::-;65208:2;65199:7;65195:16;65188:66;65288:39;65323:2;65319;65315:11;65288:39;:::i;:::-;65283:2;65274:7;65270:16;65263:65;65362:39;65397:2;65393;65389:11;65362:39;:::i;:::-;65357:2;65348:7;65344:16;65337:65;65437:40;65472:3;65468:2;65464:12;65437:40;:::i;:::-;65431:3;65422:7;65418:17;65411:67;65517:3;65513:2;65509:12;65503:19;-1:-1:-1;;;;;65537:8:39;65534:32;65531:52;;;65579:1;65576;65569:12;65531:52;65618:75;65685:7;65674:8;65670:2;65666:17;65618:75;:::i;:::-;65612:3;65603:7;65599:17;65592:102;;65733:3;65729:2;65725:12;65719:19;-1:-1:-1;;;;;65753:8:39;65750:32;65747:52;;;65795:1;65792;65785:12;65747:52;65834:80;65906:7;65895:8;65891:2;65887:17;65834:80;:::i;:::-;65828:3;65819:7;65815:17;65808:107;;65954:3;65950:2;65946:12;65940:19;-1:-1:-1;;;;;65974:8:39;65971:32;65968:52;;;66016:1;66013;66006:12;65968:52;66055:77;66124:7;66113:8;66109:2;66105:17;66055:77;:::i;:::-;66049:3;66040:7;66036:17;66029:104;;66172:3;66168:2;66164:12;66158:19;-1:-1:-1;;;;;66192:8:39;66189:32;66186:52;;;66234:1;66231;66224:12;66186:52;66273:56;66321:7;66310:8;66306:2;66302:17;66273:56;:::i;:::-;66267:3;66258:7;66254:17;66247:83;;66349:7;66339:17;;;;64452:1910;;;;;:::o;69846:247::-;69914:6;69967:2;69955:9;69946:7;69942:23;69938:32;69935:52;;;69983:1;69980;69973:12;69935:52;70015:9;70009:16;70034:29;70057:5;70034:29;:::i;71266:375::-;71340:6;71348;71401:2;71389:9;71380:7;71376:23;71372:32;71369:52;;;71417:1;71414;71407:12;71369:52;71449:9;71443:16;71468:29;71491:5;71468:29;:::i;:::-;71566:2;71551:18;;71545:25;71516:5;;-1:-1:-1;71579:30:39;71545:25;71579:30;:::i;73226:273::-;73294:6;73347:2;73335:9;73326:7;73322:23;73318:32;73315:52;;;73363:1;73360;73353:12;73315:52;73395:9;73389:16;73445:4;73438:5;73434:16;73427:5;73424:27;73414:55;;73465:1;73462;73455:12;73504:245;73571:6;73624:2;73612:9;73603:7;73599:23;73595:32;73592:52;;;73640:1;73637;73630:12;73592:52;73672:9;73666:16;73691:28;73713:5;73691:28;:::i;74108:371::-;-1:-1:-1;;;;;74328:32:39;;;74310:51;;74397:32;;;;74392:2;74377:18;;74370:60;74461:2;74446:18;;74439:34;;;;74298:2;74283:18;;74108:371::o;77693:409::-;77768:6;77776;77829:2;77817:9;77808:7;77804:23;77800:32;77797:52;;;77845:1;77842;77835:12;77797:52;77877:9;77871:16;77896:29;77919:5;77896:29;:::i;:::-;77944:5;77934:15;;;77994:2;77983:9;77979:18;77973:25;78043:7;78040:1;78029:22;78020:7;78017:35;78007:63;;78066:1;78063;78056:12;78922:1096;79177:6;79185;79193;79201;79254:3;79242:9;79233:7;79229:23;79225:33;79222:53;;;79271:1;79268;79261:12;79222:53;79303:9;79297:16;79322:29;79345:5;79322:29;:::i;:::-;79419:2;79404:18;;79398:25;79370:5;;-1:-1:-1;;;;;;79435:30:39;;79432:50;;;79478:1;79475;79468:12;79432:50;79501:80;79573:7;79564:6;79553:9;79549:22;79501:80;:::i;:::-;79491:90;;;79627:2;79616:9;79612:18;79606:25;-1:-1:-1;;;;;79646:8:39;79643:32;79640:52;;;79688:1;79685;79678:12;79640:52;79711:87;79790:7;79779:8;79768:9;79764:24;79711:87;:::i;:::-;79701:97;;;79844:2;79833:9;79829:18;79823:25;-1:-1:-1;;;;;79863:8:39;79860:32;79857:52;;;79905:1;79902;79895:12;79857:52;79928:84;80004:7;79993:8;79982:9;79978:24;79928:84;:::i;80425:372::-;80526:6;80534;80587:3;80575:9;80566:7;80562:23;80558:33;80555:53;;;80604:1;80601;80594:12;80555:53;80636:9;80630:16;80655:29;80678:5;80655:29;:::i;:::-;80703:5;-1:-1:-1;80727:64:39;80783:7;80778:2;80763:18;;80727:64;:::i;:::-;80717:74;;80425:372;;;;;:::o;82268:230::-;82338:6;82391:2;82379:9;82370:7;82366:23;82362:32;82359:52;;;82407:1;82404;82397:12;82359:52;-1:-1:-1;82452:16:39;;82268:230;-1:-1:-1;82268:230:39:o;83294:297::-;83412:12;;83459:4;83448:16;;;83442:23;;83412:12;83477:16;;83474:111;;;-1:-1:-1;;83551:4:39;83547:17;;;;83544:1;83540:25;83536:38;83525:50;;83294:297;-1:-1:-1;83294:297:39:o;85779:237::-;85817:7;85894:1;85891;85880:16;85876:1;85873;85862:16;85858:39;85931:11;85928:1;85917:26;85906:37;;85974:11;85965:7;85962:24;85952:58;;85990:18;;:::i;86381:280::-;86450:6;86503:2;86491:9;86482:7;86478:23;86474:32;86471:52;;;86519:1;86516;86509:12;86471:52;86551:9;86545:16;86601:10;86594:5;86590:22;86583:5;86580:33;86570:61;;86627:1;86624;86617:12;86666:410;-1:-1:-1;;;;;;86859:33:39;;;86847:46;;86930:2;86926:15;;;;-1:-1:-1;;86922:45:39;86918:1;86909:11;;86902:66;86875:3;87002:16;86998:43;;;86993:2;86984:12;;86977:65;87067:2;87058:12;;86666:410::o;87787:225::-;87933:2;87922:9;87915:21;87896:4;87953:53;88002:2;87991:9;87987:18;87979:6;87953:53;:::i;89999:220::-;90148:2;90137:9;90130:21;90111:4;90168:45;90209:2;90198:9;90194:18;90186:6;90168:45;:::i;93554:518::-;-1:-1:-1;;;;;;93773:33:39;;;93761:46;;93844:2;93840:15;;;;-1:-1:-1;;;;;;93836:53:39;93832:1;93823:11;;93816:74;93789:3;93924:16;;;93920:43;;93915:2;93906:12;;93899:65;93998:16;;93994:43;;;93989:2;93980:12;;93973:65;94063:2;94054:12;;93554:518::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "_transferAsHTS(address,address,uint256)": "2fc98c7d",
        "_transferNFTAsHTS(address,address,uint256)": "4839fb75",
        "_update(address,address,uint256)": "0bb3bfa8",
        "approve(address,address,uint256)": "e1f21c67",
        "approveNFT(address,address,uint256)": "7336aaf0",
        "associateToken(address,address)": "49146bde",
        "associateTokens(address,address[])": "2e63879b",
        "burnToken(address,int64,int64[])": "d6910d06",
        "cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])": "0e71804f",
        "dissociateToken(address,address)": "099794e8",
        "dissociateTokens(address,address[])": "78b63918",
        "getAccountId(address)": "e0b490f7",
        "getApproved(address,uint256)": "098f2366",
        "getFungibleTokenInfo(address)": "3f28a19b",
        "getNonFungibleTokenInfo(address,int64)": "287e1da8",
        "getTokenCustomFees(address)": "ae7611a0",
        "getTokenDefaultFreezeStatus(address)": "a7daa18d",
        "getTokenDefaultKycStatus(address)": "335e04c1",
        "getTokenExpiryInfo(address)": "d614cdb8",
        "getTokenInfo(address)": "1f69565f",
        "getTokenKey(address,uint256)": "3c4dd32e",
        "getTokenType(address)": "93272baf",
        "isApprovedForAll(address,address,address)": "f49f40db",
        "isToken(address)": "19f37361",
        "mintToken(address,int64,bytes[])": "e0f4059a",
        "transferFrom(address,address,address,uint256)": "15dacbea",
        "transferFromNFT(address,address,address,uint256)": "9b23d3d9",
        "transferNFT(address,address,address,int64)": "5cfc9011",
        "transferNFTs(address,address[],address[],int64[])": "2c4ba191",
        "transferToken(address,address,address,int64)": "eca36917",
        "transferTokens(address,address[],int64[])": "82bba493"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_transferAsHTS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialId\",\"type\":\"uint256\"}],\"name\":\"_transferNFTAsHTS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"approveNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"associateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"associateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"\",\"type\":\"int64[]\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"accountID\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isApproval\",\"type\":\"bool\"}],\"internalType\":\"struct IHederaTokenService.AccountAmount[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IHederaTokenService.TransferList\",\"name\":\"transferList\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"accountID\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isApproval\",\"type\":\"bool\"}],\"internalType\":\"struct IHederaTokenService.AccountAmount[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"senderAccountID\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverAccountID\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isApproval\",\"type\":\"bool\"}],\"internalType\":\"struct IHederaTokenService.NftTransfer[]\",\"name\":\"nftTransfers\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IHederaTokenService.TokenTransferList[]\",\"name\":\"tokenTransfers\",\"type\":\"tuple[]\"}],\"name\":\"cryptoTransfer\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"dissociateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"dissociateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"accountId\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int32\",\"name\":\"decimals\",\"type\":\"int32\"}],\"internalType\":\"struct IHederaTokenService.FungibleTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"getNonFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"ownerId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"creationTime\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"spenderId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.NonFungibleTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultFreezeStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultKycStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenExpiryInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"getTokenKey\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"transferFromNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"transferNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"sender\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"receiver\",\"type\":\"address[]\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumber\",\"type\":\"int64[]\"}],\"name\":\"transferNFTs\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"}],\"name\":\"transferToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accountId\",\"type\":\"address[]\"},{\"internalType\":\"int64[]\",\"name\":\"amount\",\"type\":\"int64[]\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,address,uint256)\":{\"params\":{\"amount\":\"the amount of tokens authorized to spend.\",\"spender\":\"the account address authorized to spend\",\"token\":\"The hedera token address to approve\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"approveNFT(address,address,uint256)\":{\"params\":{\"approved\":\"The new approved NFT controller.  To revoke approvals pass in the zero address.\",\"serialNumber\":\"The NFT serial number  to approve\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"associateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"associateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be associated with the provided tokens\",\"tokens\":\"The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])\":{\"params\":{\"tokenTransfers\":\"the list of token transfers to do\",\"transferList\":\"the list of hbar transfers to do\"}},\"dissociateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"dissociateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be dissociated from the provided tokens\",\"tokens\":\"The tokens to be dissociated from the provided account.\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getAccountId(address)\":{\"details\":\"Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties.\"},\"getApproved(address,uint256)\":{\"params\":{\"serialNumber\":\"The NFT to find the approved address for\",\"token\":\"The Hedera NFT token address to check approval\"},\"returns\":{\"approved\":\"The approved address for this NFT, or the zero address if there is none\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getFungibleTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"FungibleTokenInfo info for `token`\"}},\"getNonFungibleTokenInfo(address,int64)\":{\"params\":{\"serialNumber\":\"The NFT serialNumber to check\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"NonFungibleTokenInfo info for `token` `serialNumber`\"}},\"getTokenCustomFees(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"Set of fixed fees for `token`\",\"_2\":\"Set of fractional fees for `token`\",\"_3\":\"Set of royalty fees for `token`\"}},\"getTokenDefaultFreezeStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default freeze status is frozen.\"}},\"getTokenDefaultKycStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default kyc status is KycNotApplicable and false if Revoked.\"}},\"getTokenExpiryInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"Expiry info for `token`\"}},\"getTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"TokenInfo info for `token`\"}},\"getTokenKey(address,uint256)\":{\"params\":{\"keyType\":\"The keyType of the desired KeyValue\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"KeyValue info for key of type `keyType`\"}},\"getTokenType(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\"}},\"isApprovedForAll(address,address,address)\":{\"params\":{\"operator\":\"The address that acts on behalf of the owner\",\"owner\":\"The address that owns the NFTs\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `operator` is an approved operator for `owner`, false otherwise\"}},\"isToken(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if valid token found for the given address\"}},\"transferFromNFT(address,address,address,uint256)\":{\"params\":{\"from\":\"The account address of the owner of `serialNumber` of `token`\",\"serialNumber\":\"The NFT serial number to transfer\",\"to\":\"The account address of the receiver of `serialNumber`\",\"token\":\"The address of the non-fungible Hedera token to transfer\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"transferNFT(address,address,address,int64)\":{\"params\":{\"recipient\":\"The receiver of the transaction\",\"sender\":\"The sender for the transaction\",\"serialNumber\":\"The serial number of the NFT to transfer.\",\"token\":\"The token to transfer to/from\"}},\"transferNFTs(address,address[],address[],int64[])\":{\"params\":{\"receiver\":\"the receiver of the nft sent by the same index at sender\",\"sender\":\"the sender of an nft\",\"serialNumber\":\"the serial number of the nft sent by the same index at sender\",\"token\":\"The ID of the token as a solidity address\"}},\"transferToken(address,address,address,int64)\":{\"params\":{\"amount\":\"Non-negative value to send. a negative value will result in a failure.\",\"recipient\":\"The receiver of the transaction\",\"sender\":\"The sender for the transaction\",\"token\":\"The token to transfer to/from\"}},\"transferTokens(address,address[],int64[])\":{\"params\":{\"accountId\":\"account to do a transfer to/from\",\"amount\":\"The amount from the accountId at the same index\",\"token\":\"The ID of the token as a solidity address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,address,uint256)\":{\"notice\":\"Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called again it overwrites the current allowance with value. Only Applicable to Fungible Tokens\"},\"approveNFT(address,address,uint256)\":{\"notice\":\"Allow or reaffirm the approved address to transfer an NFT the approved address does not own. Only Applicable to NFT Tokens\"},\"associateToken(address,address)\":{\"notice\":\"Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\"},\"associateTokens(address,address[])\":{\"notice\":\"Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens.\"},\"cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])\":{\"notice\":\"Performs transfers among combinations of tokens and hbars\"},\"dissociateToken(address,address)\":{\"notice\":\"Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\"},\"dissociateTokens(address,address[])\":{\"notice\":\"Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed.\"},\"getApproved(address,uint256)\":{\"notice\":\"Get the approved address for a single NFT Only Applicable to NFT Tokens\"},\"getFungibleTokenInfo(address)\":{\"notice\":\"Query fungible token info\"},\"getNonFungibleTokenInfo(address,int64)\":{\"notice\":\"Query non fungible token info\"},\"getTokenCustomFees(address)\":{\"notice\":\"Query token custom fees\"},\"getTokenDefaultFreezeStatus(address)\":{\"notice\":\"Query token default freeze status\"},\"getTokenDefaultKycStatus(address)\":{\"notice\":\"Query token default kyc status\"},\"getTokenExpiryInfo(address)\":{\"notice\":\"Query token expiry info\"},\"getTokenInfo(address)\":{\"notice\":\"Query token info\"},\"getTokenKey(address,uint256)\":{\"notice\":\"Query token KeyValue\"},\"getTokenType(address)\":{\"notice\":\"Query to return the token type for a given address\"},\"isApprovedForAll(address,address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address Only Applicable to NFT Tokens\"},\"isToken(address)\":{\"notice\":\"Query if valid token found for the given address\"},\"transferFromNFT(address,address,address,uint256)\":{\"notice\":\"Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens\"},\"transferNFT(address,address,address,int64)\":{\"notice\":\"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)\"},\"transferNFTs(address,address[],address[],int64[])\":{\"notice\":\"Initiates a Non-Fungable Token Transfer\"},\"transferToken(address,address,address,int64)\":{\"notice\":\"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)\"},\"transferTokens(address,address[],int64[])\":{\"notice\":\"Initiates a Fungible Token Transfer\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HtsSystemContract.sol\":\"HtsSystemContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":surl/=lib/surl/\"]},\"sources\":{\"contracts/HtsSystemContract.sol\":{\"keccak256\":\"0x6692862e922117b351e9794998e7cf8cc13f1d0c1be6d4bc00aa5be078189c74\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://24adf369a02a533094f2eb2c999c13e6bde9480c28a3ce305f94964a758c1c8a\",\"dweb:/ipfs/QmRSCVcTQGqsAKWcfr92VbNpNSfGgQUw34ymQTfQYqnt3x\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x77993e2d90d6b91d30b8721a52364902d823dd5d1020500071c4ecd7f847a00e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://776be938a4f20b2b40e95a5d58f330454d21077894659a674ac8bda378561598\",\"dweb:/ipfs/QmToUenT2jKjiJLCozN3xQp2esRVbRceyS8KVMqcd9j29W\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0x7b4a961afb96ff6326f4d2985f20edf7aa10b3ba1b68c502a0cdcd84ba26e767\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://322d92f6a244dd8a9818d5be6e4e17c6dd048a033449dd79b43229c7077da06d\",\"dweb:/ipfs/QmdFyC7EU8iGiyFzh77YsUpp6eysV8ijyLUKWsDPVKq7yG\"]},\"contracts/IHRC719.sol\":{\"keccak256\":\"0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d\",\"dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD\"]},\"contracts/IHederaTokenService.sol\":{\"keccak256\":\"0xf6d5990d31f82d3334a900ba5e9a33332be336d60945b5dfb8440e98db5877b9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f56fac72dca275c777276276835333e7196f8dfc2ca8f60e408d365330b3b7bb\",\"dweb:/ipfs/QmPvVWgM6hUbBSYWd6M6aNxRNR6n3gdacAvxg7ns9KWrDs\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]}},\"version\":1}",
    "metadata": {
        "compiler": { "version": "0.8.28+commit.7893614a" },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "approved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ApprovalForAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                { "inputs": [], "stateMutability": "nonpayable", "type": "fallback" },
                {
                    "inputs": [
                        { "internalType": "address", "name": "from", "type": "address" },
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "amount", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "_transferAsHTS"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "from", "type": "address" },
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "serialId", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "_transferNFTAsHTS"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "from", "type": "address" },
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "amount", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "_update"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "spender", "type": "address" },
                        { "internalType": "uint256", "name": "amount", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approve",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "approved", "type": "address" },
                        { "internalType": "uint256", "name": "serialNumber", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approveNFT",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address", "name": "token", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "associateToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address[]", "name": "tokens", "type": "address[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "associateTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "int64[]", "name": "", "type": "int64[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IHederaTokenService.TransferList",
                            "name": "transferList",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.AccountAmount[]",
                                    "name": "transfers",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "address",
                                            "name": "accountID",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "isApproval",
                                            "type": "bool"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.TokenTransferList[]",
                            "name": "tokenTransfers",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "address", "name": "token", "type": "address" },
                                {
                                    "internalType": "struct IHederaTokenService.AccountAmount[]",
                                    "name": "transfers",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "address",
                                            "name": "accountID",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "isApproval",
                                            "type": "bool"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.NftTransfer[]",
                                    "name": "nftTransfers",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "address",
                                            "name": "senderAccountID",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "receiverAccountID",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "serialNumber",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "isApproval",
                                            "type": "bool"
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "cryptoTransfer",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address", "name": "token", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "dissociateToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "address[]", "name": "tokens", "type": "address[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "dissociateTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAccountId",
                    "outputs": [{ "internalType": "uint32", "name": "accountId", "type": "uint32" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "serialNumber", "type": "uint256" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getApproved",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "address", "name": "approved", "type": "address" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getFungibleTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.FungibleTokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.TokenInfo",
                                    "name": "tokenInfo",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IHederaTokenService.HederaToken",
                                            "name": "token",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "string",
                                                    "name": "name",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "symbol",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "treasury",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "memo",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "tokenSupplyType",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maxSupply",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "freezeDefault",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                                    "name": "tokenKeys",
                                                    "type": "tuple[]",
                                                    "components": [
                                                        {
                                                            "internalType": "uint256",
                                                            "name": "keyType",
                                                            "type": "uint256"
                                                        },
                                                        {
                                                            "internalType": "struct IHederaTokenService.KeyValue",
                                                            "name": "key",
                                                            "type": "tuple",
                                                            "components": [
                                                                {
                                                                    "internalType": "bool",
                                                                    "name": "inheritAccountKey",
                                                                    "type": "bool"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "contractId",
                                                                    "type": "address"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ed25519",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ECDSA_secp256k1",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "delegatableContractId",
                                                                    "type": "address"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.Expiry",
                                                    "name": "expiry",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "int64",
                                                            "name": "second",
                                                            "type": "int64"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "autoRenewAccount",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "int64",
                                                            "name": "autoRenewPeriod",
                                                            "type": "int64"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "totalSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "deleted",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "defaultKycStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "pauseStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FixedFee[]",
                                            "name": "fixedFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useCurrentTokenForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                                            "name": "fractionalFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "minimumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maximumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "netOfTransfers",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                            "name": "royaltyFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "ledgerId",
                                            "type": "string"
                                        }
                                    ]
                                },
                                { "internalType": "int32", "name": "decimals", "type": "int32" }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "serialNumber", "type": "int64" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getNonFungibleTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.TokenInfo",
                                    "name": "tokenInfo",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IHederaTokenService.HederaToken",
                                            "name": "token",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "string",
                                                    "name": "name",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "symbol",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "treasury",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "memo",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "tokenSupplyType",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maxSupply",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "freezeDefault",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                                    "name": "tokenKeys",
                                                    "type": "tuple[]",
                                                    "components": [
                                                        {
                                                            "internalType": "uint256",
                                                            "name": "keyType",
                                                            "type": "uint256"
                                                        },
                                                        {
                                                            "internalType": "struct IHederaTokenService.KeyValue",
                                                            "name": "key",
                                                            "type": "tuple",
                                                            "components": [
                                                                {
                                                                    "internalType": "bool",
                                                                    "name": "inheritAccountKey",
                                                                    "type": "bool"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "contractId",
                                                                    "type": "address"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ed25519",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ECDSA_secp256k1",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "delegatableContractId",
                                                                    "type": "address"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.Expiry",
                                                    "name": "expiry",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "int64",
                                                            "name": "second",
                                                            "type": "int64"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "autoRenewAccount",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "int64",
                                                            "name": "autoRenewPeriod",
                                                            "type": "int64"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "totalSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "deleted",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "defaultKycStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "pauseStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FixedFee[]",
                                            "name": "fixedFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useCurrentTokenForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                                            "name": "fractionalFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "minimumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maximumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "netOfTransfers",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                            "name": "royaltyFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "ledgerId",
                                            "type": "string"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "int64",
                                    "name": "serialNumber",
                                    "type": "int64"
                                },
                                { "internalType": "address", "name": "ownerId", "type": "address" },
                                {
                                    "internalType": "int64",
                                    "name": "creationTime",
                                    "type": "int64"
                                },
                                { "internalType": "bytes", "name": "metadata", "type": "bytes" },
                                {
                                    "internalType": "address",
                                    "name": "spenderId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenCustomFees",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                {
                                    "internalType": "int64",
                                    "name": "minimumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "maximumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "netOfTransfers",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenDefaultFreezeStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenDefaultKycStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenExpiryInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.Expiry",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                { "internalType": "int64", "name": "second", "type": "int64" },
                                {
                                    "internalType": "address",
                                    "name": "autoRenewAccount",
                                    "type": "address"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "autoRenewPeriod",
                                    "type": "int64"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "name": "token",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "string",
                                            "name": "name",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "symbol",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "treasury",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "memo",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "tokenSupplyType",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maxSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "freezeDefault",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "uint256",
                                                    "name": "keyType",
                                                    "type": "uint256"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "bool",
                                                            "name": "inheritAccountKey",
                                                            "type": "bool"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "contractId",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ed25519",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "delegatableContractId",
                                                            "type": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "name": "expiry",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "second",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "autoRenewAccount",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "internalType": "int64", "name": "totalSupply", "type": "int64" },
                                { "internalType": "bool", "name": "deleted", "type": "bool" },
                                {
                                    "internalType": "bool",
                                    "name": "defaultKycStatus",
                                    "type": "bool"
                                },
                                { "internalType": "bool", "name": "pauseStatus", "type": "bool" },
                                {
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "minimumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maximumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "netOfTransfers",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                { "internalType": "string", "name": "ledgerId", "type": "string" }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "keyType", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenKey",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.KeyValue",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "inheritAccountKey",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "contractId",
                                    "type": "address"
                                },
                                { "internalType": "bytes", "name": "ed25519", "type": "bytes" },
                                {
                                    "internalType": "bytes",
                                    "name": "ECDSA_secp256k1",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatableContractId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenType",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "int32", "name": "", "type": "int32" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "owner", "type": "address" },
                        { "internalType": "address", "name": "operator", "type": "address" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isApprovedForAll",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "isToken",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "bytes[]", "name": "", "type": "bytes[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" },
                        { "internalType": "int64[]", "name": "serialNumbers", "type": "int64[]" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "sender", "type": "address" },
                        { "internalType": "address", "name": "recipient", "type": "address" },
                        { "internalType": "uint256", "name": "amount", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferFrom",
                    "outputs": [{ "internalType": "int64", "name": "", "type": "int64" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "from", "type": "address" },
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "serialNumber", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferFromNFT",
                    "outputs": [{ "internalType": "int64", "name": "", "type": "int64" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "sender", "type": "address" },
                        { "internalType": "address", "name": "recipient", "type": "address" },
                        { "internalType": "int64", "name": "serialNumber", "type": "int64" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferNFT",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address[]", "name": "sender", "type": "address[]" },
                        { "internalType": "address[]", "name": "receiver", "type": "address[]" },
                        { "internalType": "int64[]", "name": "serialNumber", "type": "int64[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferNFTs",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "sender", "type": "address" },
                        { "internalType": "address", "name": "recipient", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address[]", "name": "accountId", "type": "address[]" },
                        { "internalType": "int64[]", "name": "amount", "type": "int64[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferTokens",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "approve(address,address,uint256)": {
                        "params": {
                            "amount": "the amount of tokens authorized to spend.",
                            "spender": "the account address authorized to spend",
                            "token": "The hedera token address to approve"
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "approveNFT(address,address,uint256)": {
                        "params": {
                            "approved": "The new approved NFT controller.  To revoke approvals pass in the zero address.",
                            "serialNumber": "The NFT serial number  to approve",
                            "token": "The Hedera NFT token address to approve"
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "associateToken(address,address)": {
                        "params": {
                            "account": "The account to be associated with the provided token",
                            "token": "The token to be associated with the provided account"
                        }
                    },
                    "associateTokens(address,address[])": {
                        "params": {
                            "account": "The account to be associated with the provided tokens",
                            "tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])": {
                        "params": {
                            "tokenTransfers": "the list of token transfers to do",
                            "transferList": "the list of hbar transfers to do"
                        }
                    },
                    "dissociateToken(address,address)": {
                        "params": {
                            "account": "The account to be associated with the provided token",
                            "token": "The token to be associated with the provided account"
                        }
                    },
                    "dissociateTokens(address,address[])": {
                        "params": {
                            "account": "The account to be dissociated from the provided tokens",
                            "tokens": "The tokens to be dissociated from the provided account."
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getAccountId(address)": {
                        "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
                    },
                    "getApproved(address,uint256)": {
                        "params": {
                            "serialNumber": "The NFT to find the approved address for",
                            "token": "The Hedera NFT token address to check approval"
                        },
                        "returns": {
                            "approved": "The approved address for this NFT, or the zero address if there is none",
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getFungibleTokenInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "FungibleTokenInfo info for `token`"
                        }
                    },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "params": {
                            "serialNumber": "The NFT serialNumber to check",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                        }
                    },
                    "getTokenCustomFees(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "Set of fixed fees for `token`",
                            "_2": "Set of fractional fees for `token`",
                            "_3": "Set of royalty fees for `token`"
                        }
                    },
                    "getTokenDefaultFreezeStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default freeze status is frozen."
                        }
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                        }
                    },
                    "getTokenExpiryInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenInfo": "Expiry info for `token`"
                        }
                    },
                    "getTokenInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenInfo": "TokenInfo info for `token`"
                        }
                    },
                    "getTokenKey(address,uint256)": {
                        "params": {
                            "keyType": "The keyType of the desired KeyValue",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "KeyValue info for key of type `keyType`"
                        }
                    },
                    "getTokenType(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                        }
                    },
                    "isApprovedForAll(address,address,address)": {
                        "params": {
                            "operator": "The address that acts on behalf of the owner",
                            "owner": "The address that owns the NFTs",
                            "token": "The Hedera NFT token address to approve"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                        }
                    },
                    "isToken(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if valid token found for the given address"
                        }
                    },
                    "transferFromNFT(address,address,address,uint256)": {
                        "params": {
                            "from": "The account address of the owner of `serialNumber` of `token`",
                            "serialNumber": "The NFT serial number to transfer",
                            "to": "The account address of the receiver of `serialNumber`",
                            "token": "The address of the non-fungible Hedera token to transfer"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "transferNFT(address,address,address,int64)": {
                        "params": {
                            "recipient": "The receiver of the transaction",
                            "sender": "The sender for the transaction",
                            "serialNumber": "The serial number of the NFT to transfer.",
                            "token": "The token to transfer to/from"
                        }
                    },
                    "transferNFTs(address,address[],address[],int64[])": {
                        "params": {
                            "receiver": "the receiver of the nft sent by the same index at sender",
                            "sender": "the sender of an nft",
                            "serialNumber": "the serial number of the nft sent by the same index at sender",
                            "token": "The ID of the token as a solidity address"
                        }
                    },
                    "transferToken(address,address,address,int64)": {
                        "params": {
                            "amount": "Non-negative value to send. a negative value will result in a failure.",
                            "recipient": "The receiver of the transaction",
                            "sender": "The sender for the transaction",
                            "token": "The token to transfer to/from"
                        }
                    },
                    "transferTokens(address,address[],int64[])": {
                        "params": {
                            "accountId": "account to do a transfer to/from",
                            "amount": "The amount from the accountId at the same index",
                            "token": "The ID of the token as a solidity address"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "approve(address,address,uint256)": {
                        "notice": "Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called again it overwrites the current allowance with value. Only Applicable to Fungible Tokens"
                    },
                    "approveNFT(address,address,uint256)": {
                        "notice": "Allow or reaffirm the approved address to transfer an NFT the approved address does not own. Only Applicable to NFT Tokens"
                    },
                    "associateToken(address,address)": {
                        "notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
                    },
                    "associateTokens(address,address[])": {
                        "notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
                    },
                    "cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])": {
                        "notice": "Performs transfers among combinations of tokens and hbars"
                    },
                    "dissociateToken(address,address)": {
                        "notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
                    },
                    "dissociateTokens(address,address[])": {
                        "notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
                    },
                    "getApproved(address,uint256)": {
                        "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
                    },
                    "getFungibleTokenInfo(address)": { "notice": "Query fungible token info" },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "notice": "Query non fungible token info"
                    },
                    "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
                    "getTokenDefaultFreezeStatus(address)": {
                        "notice": "Query token default freeze status"
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "notice": "Query token default kyc status"
                    },
                    "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
                    "getTokenInfo(address)": { "notice": "Query token info" },
                    "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
                    "getTokenType(address)": {
                        "notice": "Query to return the token type for a given address"
                    },
                    "isApprovedForAll(address,address,address)": {
                        "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
                    },
                    "isToken(address)": {
                        "notice": "Query if valid token found for the given address"
                    },
                    "transferFromNFT(address,address,address,uint256)": {
                        "notice": "Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens"
                    },
                    "transferNFT(address,address,address,int64)": {
                        "notice": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"
                    },
                    "transferNFTs(address,address[],address[],int64[])": {
                        "notice": "Initiates a Non-Fungable Token Transfer"
                    },
                    "transferToken(address,address,address,int64)": {
                        "notice": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"
                    },
                    "transferTokens(address,address[],int64[])": {
                        "notice": "Initiates a Fungible Token Transfer"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/",
                "forge-std/=lib/forge-std/src/",
                "solidity-stringutils/=lib/surl/lib/solidity-stringutils/",
                "surl/=lib/surl/"
            ],
            "optimizer": { "enabled": true, "runs": 200 },
            "metadata": { "bytecodeHash": "ipfs" },
            "compilationTarget": { "contracts/HtsSystemContract.sol": "HtsSystemContract" },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "contracts/HtsSystemContract.sol": {
                "keccak256": "0x6692862e922117b351e9794998e7cf8cc13f1d0c1be6d4bc00aa5be078189c74",
                "urls": [
                    "bzz-raw://24adf369a02a533094f2eb2c999c13e6bde9480c28a3ce305f94964a758c1c8a",
                    "dweb:/ipfs/QmRSCVcTQGqsAKWcfr92VbNpNSfGgQUw34ymQTfQYqnt3x"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC20.sol": {
                "keccak256": "0x77993e2d90d6b91d30b8721a52364902d823dd5d1020500071c4ecd7f847a00e",
                "urls": [
                    "bzz-raw://776be938a4f20b2b40e95a5d58f330454d21077894659a674ac8bda378561598",
                    "dweb:/ipfs/QmToUenT2jKjiJLCozN3xQp2esRVbRceyS8KVMqcd9j29W"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC721.sol": {
                "keccak256": "0x7b4a961afb96ff6326f4d2985f20edf7aa10b3ba1b68c502a0cdcd84ba26e767",
                "urls": [
                    "bzz-raw://322d92f6a244dd8a9818d5be6e4e17c6dd048a033449dd79b43229c7077da06d",
                    "dweb:/ipfs/QmdFyC7EU8iGiyFzh77YsUpp6eysV8ijyLUKWsDPVKq7yG"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHRC719.sol": {
                "keccak256": "0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd",
                "urls": [
                    "bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d",
                    "dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHederaTokenService.sol": {
                "keccak256": "0xf6d5990d31f82d3334a900ba5e9a33332be336d60945b5dfb8440e98db5877b9",
                "urls": [
                    "bzz-raw://f56fac72dca275c777276276835333e7196f8dfc2ca8f60e408d365330b3b7bb",
                    "dweb:/ipfs/QmPvVWgM6hUbBSYWd6M6aNxRNR6n3gdacAvxg7ns9KWrDs"
                ],
                "license": "Apache-2.0"
            },
            "lib/forge-std/src/interfaces/IERC165.sol": {
                "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
                "urls": [
                    "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
                    "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 93,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "tokenType",
                "offset": 0,
                "slot": "0",
                "type": "t_string_storage"
            },
            {
                "astId": 95,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "name",
                "offset": 0,
                "slot": "1",
                "type": "t_string_storage"
            },
            {
                "astId": 97,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "symbol",
                "offset": 0,
                "slot": "2",
                "type": "t_string_storage"
            },
            {
                "astId": 99,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "decimals",
                "offset": 0,
                "slot": "3",
                "type": "t_uint8"
            },
            {
                "astId": 101,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "totalSupply",
                "offset": 0,
                "slot": "4",
                "type": "t_uint256"
            },
            {
                "astId": 104,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "_tokenInfo",
                "offset": 0,
                "slot": "5",
                "type": "t_struct(TokenInfo)7428_storage"
            }
        ],
        "types": {
            "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
            "t_array(t_struct(FixedFee)7470_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FixedFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FixedFee)7470_storage"
            },
            "t_array(t_struct(FractionalFee)7484_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FractionalFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FractionalFee)7484_storage"
            },
            "t_array(t_struct(RoyaltyFee)7498_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.RoyaltyFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(RoyaltyFee)7498_storage"
            },
            "t_array(t_struct(TokenKey)7369_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.TokenKey[]",
                "numberOfBytes": "32",
                "base": "t_struct(TokenKey)7369_storage"
            },
            "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
            "t_bytes_storage": { "encoding": "bytes", "label": "bytes", "numberOfBytes": "32" },
            "t_int64": { "encoding": "inplace", "label": "int64", "numberOfBytes": "8" },
            "t_string_storage": { "encoding": "bytes", "label": "string", "numberOfBytes": "32" },
            "t_struct(Expiry)7350_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.Expiry",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 7345,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "second",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 7347,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewAccount",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 7349,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewPeriod",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_int64"
                    }
                ]
            },
            "t_struct(FixedFee)7470_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FixedFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 7461,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 7463,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 7465,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 28,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 7467,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useCurrentTokenForPayment",
                        "offset": 29,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 7469,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(FractionalFee)7484_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FractionalFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 7473,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 7475,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 7477,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "minimumAmount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 7479,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maximumAmount",
                        "offset": 24,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 7481,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "netOfTransfers",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 7483,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 1,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(HederaToken)7392_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.HederaToken",
                "numberOfBytes": "256",
                "members": [
                    {
                        "astId": 7372,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "name",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 7374,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "symbol",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 7376,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "treasury",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    },
                    {
                        "astId": 7378,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "memo",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 7380,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenSupplyType",
                        "offset": 0,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 7382,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maxSupply",
                        "offset": 1,
                        "slot": "4",
                        "type": "t_int64"
                    },
                    {
                        "astId": 7384,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "freezeDefault",
                        "offset": 9,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 7388,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenKeys",
                        "offset": 0,
                        "slot": "5",
                        "type": "t_array(t_struct(TokenKey)7369_storage)dyn_storage"
                    },
                    {
                        "astId": 7391,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "expiry",
                        "offset": 0,
                        "slot": "6",
                        "type": "t_struct(Expiry)7350_storage"
                    }
                ]
            },
            "t_struct(KeyValue)7362_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.KeyValue",
                "numberOfBytes": "128",
                "members": [
                    {
                        "astId": 7353,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "inheritAccountKey",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 7355,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "contractId",
                        "offset": 1,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 7357,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ed25519",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 7359,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ECDSA_secp256k1",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 7361,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "delegatableContractId",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(RoyaltyFee)7498_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.RoyaltyFee",
                "numberOfBytes": "96",
                "members": [
                    {
                        "astId": 7487,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 7489,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 7491,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 7493,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    },
                    {
                        "astId": 7495,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 20,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 7497,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(TokenInfo)7428_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenInfo",
                "numberOfBytes": "416",
                "members": [
                    {
                        "astId": 7397,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "token",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_struct(HederaToken)7392_storage"
                    },
                    {
                        "astId": 7400,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "totalSupply",
                        "offset": 0,
                        "slot": "8",
                        "type": "t_int64"
                    },
                    {
                        "astId": 7403,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "deleted",
                        "offset": 8,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 7406,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "defaultKycStatus",
                        "offset": 9,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 7409,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "pauseStatus",
                        "offset": 10,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 7414,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fixedFees",
                        "offset": 0,
                        "slot": "9",
                        "type": "t_array(t_struct(FixedFee)7470_storage)dyn_storage"
                    },
                    {
                        "astId": 7419,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fractionalFees",
                        "offset": 0,
                        "slot": "10",
                        "type": "t_array(t_struct(FractionalFee)7484_storage)dyn_storage"
                    },
                    {
                        "astId": 7424,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "royaltyFees",
                        "offset": 0,
                        "slot": "11",
                        "type": "t_array(t_struct(RoyaltyFee)7498_storage)dyn_storage"
                    },
                    {
                        "astId": 7427,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ledgerId",
                        "offset": 0,
                        "slot": "12",
                        "type": "t_string_storage"
                    }
                ]
            },
            "t_struct(TokenKey)7369_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenKey",
                "numberOfBytes": "160",
                "members": [
                    {
                        "astId": 7365,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "keyType",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 7368,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "key",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_struct(KeyValue)7362_storage"
                    }
                ]
            },
            "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" },
            "t_uint8": { "encoding": "inplace", "label": "uint8", "numberOfBytes": "1" }
        }
    },
    "userdoc": {
        "version": 1,
        "kind": "user",
        "methods": {
            "approve(address,address,uint256)": {
                "notice": "Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called again it overwrites the current allowance with value. Only Applicable to Fungible Tokens"
            },
            "approveNFT(address,address,uint256)": {
                "notice": "Allow or reaffirm the approved address to transfer an NFT the approved address does not own. Only Applicable to NFT Tokens"
            },
            "associateToken(address,address)": {
                "notice": "Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"
            },
            "associateTokens(address,address[])": {
                "notice": "Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."
            },
            "cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])": {
                "notice": "Performs transfers among combinations of tokens and hbars"
            },
            "dissociateToken(address,address)": {
                "notice": "Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"
            },
            "dissociateTokens(address,address[])": {
                "notice": "Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."
            },
            "getApproved(address,uint256)": {
                "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
            },
            "getFungibleTokenInfo(address)": { "notice": "Query fungible token info" },
            "getNonFungibleTokenInfo(address,int64)": { "notice": "Query non fungible token info" },
            "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
            "getTokenDefaultFreezeStatus(address)": {
                "notice": "Query token default freeze status"
            },
            "getTokenDefaultKycStatus(address)": { "notice": "Query token default kyc status" },
            "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
            "getTokenInfo(address)": { "notice": "Query token info" },
            "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
            "getTokenType(address)": {
                "notice": "Query to return the token type for a given address"
            },
            "isApprovedForAll(address,address,address)": {
                "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
            },
            "isToken(address)": { "notice": "Query if valid token found for the given address" },
            "transferFromNFT(address,address,address,uint256)": {
                "notice": "Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens"
            },
            "transferNFT(address,address,address,int64)": {
                "notice": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"
            },
            "transferNFTs(address,address[],address[],int64[])": {
                "notice": "Initiates a Non-Fungable Token Transfer"
            },
            "transferToken(address,address,address,int64)": {
                "notice": "Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"
            },
            "transferTokens(address,address[],int64[])": {
                "notice": "Initiates a Fungible Token Transfer"
            }
        }
    },
    "devdoc": {
        "version": 1,
        "kind": "dev",
        "methods": {
            "approve(address,address,uint256)": {
                "params": {
                    "amount": "the amount of tokens authorized to spend.",
                    "spender": "the account address authorized to spend",
                    "token": "The hedera token address to approve"
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "approveNFT(address,address,uint256)": {
                "params": {
                    "approved": "The new approved NFT controller.  To revoke approvals pass in the zero address.",
                    "serialNumber": "The NFT serial number  to approve",
                    "token": "The Hedera NFT token address to approve"
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "associateToken(address,address)": {
                "params": {
                    "account": "The account to be associated with the provided token",
                    "token": "The token to be associated with the provided account"
                }
            },
            "associateTokens(address,address[])": {
                "params": {
                    "account": "The account to be associated with the provided tokens",
                    "tokens": "The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])": {
                "params": {
                    "tokenTransfers": "the list of token transfers to do",
                    "transferList": "the list of hbar transfers to do"
                }
            },
            "dissociateToken(address,address)": {
                "params": {
                    "account": "The account to be associated with the provided token",
                    "token": "The token to be associated with the provided account"
                }
            },
            "dissociateTokens(address,address[])": {
                "params": {
                    "account": "The account to be dissociated from the provided tokens",
                    "tokens": "The tokens to be dissociated from the provided account."
                },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "getAccountId(address)": {
                "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
            },
            "getApproved(address,uint256)": {
                "params": {
                    "serialNumber": "The NFT to find the approved address for",
                    "token": "The Hedera NFT token address to check approval"
                },
                "returns": {
                    "approved": "The approved address for this NFT, or the zero address if there is none",
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "getFungibleTokenInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "FungibleTokenInfo info for `token`"
                }
            },
            "getNonFungibleTokenInfo(address,int64)": {
                "params": {
                    "serialNumber": "The NFT serialNumber to check",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                }
            },
            "getTokenCustomFees(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "Set of fixed fees for `token`",
                    "_2": "Set of fractional fees for `token`",
                    "_3": "Set of royalty fees for `token`"
                }
            },
            "getTokenDefaultFreezeStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default freeze status is frozen."
                }
            },
            "getTokenDefaultKycStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                }
            },
            "getTokenExpiryInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenInfo": "Expiry info for `token`"
                }
            },
            "getTokenInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenInfo": "TokenInfo info for `token`"
                }
            },
            "getTokenKey(address,uint256)": {
                "params": {
                    "keyType": "The keyType of the desired KeyValue",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "KeyValue info for key of type `keyType`"
                }
            },
            "getTokenType(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                }
            },
            "isApprovedForAll(address,address,address)": {
                "params": {
                    "operator": "The address that acts on behalf of the owner",
                    "owner": "The address that owns the NFTs",
                    "token": "The Hedera NFT token address to approve"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                }
            },
            "isToken(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if valid token found for the given address"
                }
            },
            "transferFromNFT(address,address,address,uint256)": {
                "params": {
                    "from": "The account address of the owner of `serialNumber` of `token`",
                    "serialNumber": "The NFT serial number to transfer",
                    "to": "The account address of the receiver of `serialNumber`",
                    "token": "The address of the non-fungible Hedera token to transfer"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "transferNFT(address,address,address,int64)": {
                "params": {
                    "recipient": "The receiver of the transaction",
                    "sender": "The sender for the transaction",
                    "serialNumber": "The serial number of the NFT to transfer.",
                    "token": "The token to transfer to/from"
                }
            },
            "transferNFTs(address,address[],address[],int64[])": {
                "params": {
                    "receiver": "the receiver of the nft sent by the same index at sender",
                    "sender": "the sender of an nft",
                    "serialNumber": "the serial number of the nft sent by the same index at sender",
                    "token": "The ID of the token as a solidity address"
                }
            },
            "transferToken(address,address,address,int64)": {
                "params": {
                    "amount": "Non-negative value to send. a negative value will result in a failure.",
                    "recipient": "The receiver of the transaction",
                    "sender": "The sender for the transaction",
                    "token": "The token to transfer to/from"
                }
            },
            "transferTokens(address,address[],int64[])": {
                "params": {
                    "accountId": "account to do a transfer to/from",
                    "amount": "The amount from the accountId at the same index",
                    "token": "The ID of the token as a solidity address"
                }
            }
        },
        "events": {
            "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
            },
            "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
            }
        }
    },
    "id": 1
}
