{
    "abi": [
        {
            "type": "fallback",
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "_mockTokenInfo",
            "inputs": [],
            "outputs": [
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.TokenInfo",
                    "components": [
                        {
                            "name": "token",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "components": [
                                {
                                    "name": "name",
                                    "type": "string",
                                    "internalType": "string"
                                },
                                {
                                    "name": "symbol",
                                    "type": "string",
                                    "internalType": "string"
                                },
                                {
                                    "name": "treasury",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "memo",
                                    "type": "string",
                                    "internalType": "string"
                                },
                                {
                                    "name": "tokenSupplyType",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "maxSupply",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "freezeDefault",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "components": [
                                        {
                                            "name": "keyType",
                                            "type": "uint256",
                                            "internalType": "uint256"
                                        },
                                        {
                                            "name": "key",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "components": [
                                                {
                                                    "name": "inheritAccountKey",
                                                    "type": "bool",
                                                    "internalType": "bool"
                                                },
                                                {
                                                    "name": "contractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "ed25519",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "delegatableContractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "expiry",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "components": [
                                        {
                                            "name": "second",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "autoRenewAccount",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "autoRenewPeriod",
                                            "type": "int64",
                                            "internalType": "int64"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "totalSupply",
                            "type": "int64",
                            "internalType": "int64"
                        },
                        {
                            "name": "deleted",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "defaultKycStatus",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "pauseStatus",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "fixedFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "components": [
                                {
                                    "name": "amount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "tokenId",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "fractionalFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "components": [
                                {
                                    "name": "numerator",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "denominator",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "minimumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "maximumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "netOfTransfers",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "royaltyFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "components": [
                                {
                                    "name": "numerator",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "denominator",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "amount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "tokenId",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "ledgerId",
                            "type": "string",
                            "internalType": "string"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "burnToken",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "int64",
                    "internalType": "int64"
                },
                {
                    "name": "serialNumbers",
                    "type": "int64[]",
                    "internalType": "int64[]"
                }
            ],
            "outputs": [
                {
                    "name": "responseCode",
                    "type": "int64",
                    "internalType": "int64"
                },
                {
                    "name": "newTotalSupply",
                    "type": "int64",
                    "internalType": "int64"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getAccountId",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "accountId",
                    "type": "uint32",
                    "internalType": "uint32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "mintToken",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "int64",
                    "internalType": "int64"
                },
                {
                    "name": "metadata",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                }
            ],
            "outputs": [
                {
                    "name": "responseCode",
                    "type": "int64",
                    "internalType": "int64"
                },
                {
                    "name": "newTotalSupply",
                    "type": "int64",
                    "internalType": "int64"
                },
                {
                    "name": "serialNumbers",
                    "type": "int64[]",
                    "internalType": "int64[]"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Associated",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Dissociated",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        }
    ],
    "bytecode": {
        "object": "0x6080604052348015600f57600080fd5b506126f38061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063d6910d061461019a578063d699a513146101cc578063e0b490f7146101e1578063e0f4059a14610209575b6000366060601c8210156100a75760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a206e6f7420656e6f7567682063616c6c6461746100000060448201526064015b60405180910390fd5b60006100b66004823681611507565b6100bf91611531565b60e01c905063618dc65e81146101175760405162461bcd60e51b815260206004820152601e60248201527f66616c6c6261636b3a20756e737570706f727465642073656c6563746f720000604482015260640161009e565b6000610127601860043684611507565b61013091611569565b60601c90503081146101845760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a20746f6b656e206973206e6f742063616c6c6572000000604482015260640161009e565b61018c61022b565b805195506020019350505050f35b6101ad6101a83660046116be565b6107c0565b60408051600793840b81529190920b6020820152015b60405180910390f35b6101d46109d0565b6040516101c39190611b2b565b6101f46101ef366004611c02565b610ca7565b60405163ffffffff90911681526020016101c3565b61021c610217366004611c4d565b610d23565b6040516101c393929190611d6c565b6060600061023d601c60183684611507565b61024691611531565b905063f90221fd60e01b6001600160e01b03198216016102875760006040516020016102729190611dcb565b60405160208183030381529060405291505090565b63cec31a9960e01b6001600160e01b03198216016102b6576002546040805160ff909216602083015201610272565b63e7e9f22360e01b6001600160e01b03198216016102e35760035460405160200161027291815260200190565b636a2764bf60e01b6001600160e01b031982160161030d5760016040516020016102729190611dcb565b638f5f7dcf60e01b6001600160e01b03198216016103c557603c3610156103765760405162461bcd60e51b815260206004820152601e60248201527f62616c616e63654f663a204e6f7420656e6f7567682063616c6c646174610000604482015260640161009e565b6000610386603c60283684611507565b61038f91611569565b60601c905061039d81610f4a565b6040516020016103af91815260200190565b6040516020818303038152906040529250505090565b6356fa634560e01b6001600160e01b031982160161049857605c36101561042e5760405162461bcd60e51b815260206004820152601d60248201527f7472616e736665723a204e6f7420656e6f7567682063616c6c64617461000000604482015260640161009e565b600061043e603c60283684611507565b61044791611569565b60601c9050600061045c605c603c3684611507565b61046591611e79565b905033610473818484610f5e565b6040805160016020820152015b60405160208183030381529060405294505050505090565b63dc478d2360e01b6001600160e01b031982160161059457607c3610156105015760405162461bcd60e51b815260206004820152601e60248201527f7472616e73666572463a204e6f7420656e6f7567682063616c6c646174610000604482015260640161009e565b6000610511603c60283684611507565b61051a91611569565b60601c9050600061052f605c60483684611507565b61053891611569565b60601c9050600061054d607c605c3684611507565b61055691611e79565b905033610564848284611055565b61056f848484610f5e565b6040805160016020820152016040516020818303038152906040529550505050505090565b63114e896160e11b6001600160e01b031982160161066c57605c3610156105fd5760405162461bcd60e51b815260206004820152601e60248201527f616c6c6f77616e63653a204e6f7420656e6f7567682063616c6c646174610000604482015260640161009e565b600061060d603c60283684611507565b61061691611569565b60601c9050600061062b605c60483684611507565b61063491611569565b60601c905061064382826110cf565b60405160200161065591815260200190565b604051602081830303815290604052935050505090565b63f6a1584d60e01b6001600160e01b031982160161077857605c3610156106d55760405162461bcd60e51b815260206004820152601c60248201527f617070726f76653a204e6f7420656e6f7567682063616c6c6461746100000000604482015260640161009e565b60006106e5603c60283684611507565b6106ee91611569565b60601c90506000610703605c603c3684611507565b61070c91611e79565b90503361071a8184846110e5565b826001600160a01b0316816001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161075f91815260200190565b60405180910390a3604080516001602082015201610480565b60405162461bcd60e51b815260206004820152601f60248201527f7265646972656374466f72546f6b656e3a206e6f7420737570706f7274656400604482015260640161009e565b60008030610167146107e45760405162461bcd60e51b815260040161009e90611e98565b6001600160a01b03851661083a5760405162461bcd60e51b815260206004820152601860248201527f6275726e546f6b656e3a20696e76616c696420746f6b656e0000000000000000604482015260640161009e565b60008460070b1361088d5760405162461bcd60e51b815260206004820152601960248201527f6275726e546f6b656e3a20696e76616c696420616d6f756e7400000000000000604482015260640161009e565b6000306001600160a01b031663d699a5136040518163ffffffff1660e01b8152600401600060405180830381865afa1580156108cd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108f591908101906124d2565b8051604001519091506001600160a01b0381166109545760405162461bcd60e51b815260206004820152601a60248201527f6275726e546f6b656e3a20696e76616c6964206163636f756e74000000000000604482015260640161009e565b610969816000886001600160401b03166111a6565b60169350600354925060008360070b12156109c65760405162461bcd60e51b815260206004820152601f60248201527f6275726e546f6b656e3a20696e76616c696420746f74616c20737570706c7900604482015260640161009e565b5050935093915050565b610a8a60408051610240810182526060610120820181815261014083018290526000610160840181905261018084018390526101a084018190526101c084018190526101e0840181905261020084018390528451928301855280835260208301819052938201939093526102208201529081908152602001600060070b8152602001600015158152602001600015158152602001600015158152602001606081526020016060815260200160608152602001606081525090565b60408051610260810182526000610240820181815261012083019081528351602080820186528382526101408501919091526101608401839052845180820186528381526101808501526101a084018390526101c084018390526101e084018390528451838152908101909452919283929161020084019190610b23565b610b106114aa565b815260200190600190039081610b085790505b5081526040805160608082018352600080835260208084018290528385018290529485019290925293855260035460070b85840152848201819052928401839052608084018390528051838152918201905260a09092019190610bbc565b6040805160a081018252600080825260208083018290529282018190526060820181905260808201528252600019909201910181610b815790505b5081526020016000604051908082528060200260200182016040528015610c2457816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a08201528252600019909201910181610be25790505b5081526020016000604051908082528060200260200182016040528015610c8c57816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a08201528252600019909201910181610c4a5790505b50815260408051602081810190925260008152910152919050565b60003061016714610cca5760405162461bcd60e51b815260040161009e90611e98565b6040805163e0b490f760e01b602082018190526000602483018190526001600160601b0319606087901b16602c84015290929091829101604051602081830303815290604052610d1990612634565b5495945050505050565b60008060603061016714610d495760405162461bcd60e51b815260040161009e90611e98565b6001600160a01b038616610d9f5760405162461bcd60e51b815260206004820152601860248201527f6d696e74546f6b656e3a20696e76616c696420746f6b656e0000000000000000604482015260640161009e565b60008560070b13610df25760405162461bcd60e51b815260206004820152601960248201527f6d696e74546f6b656e3a20696e76616c696420616d6f756e7400000000000000604482015260640161009e565b6000306001600160a01b031663d699a5136040518163ffffffff1660e01b8152600401600060405180830381865afa158015610e32573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e5a91908101906124d2565b8051604001519091506001600160a01b038116610eb95760405162461bcd60e51b815260206004820152601a60248201527f6d696e74546f6b656e3a20696e76616c6964206163636f756e74000000000000604482015260640161009e565b610ece600082896001600160401b03166111a6565b600354604080516000808252602082019092526016975091955050925060008460070b1215610f3f5760405162461bcd60e51b815260206004820152601f60248201527f6d696e74546f6b656e3a20696e76616c696420746f74616c20737570706c7900604482015260640161009e565b505093509350939050565b600080610f5683611289565b549392505050565b6001600160a01b038316610faa5760405162461bcd60e51b8152602060048201526013602482015272343a399d1034b73b30b634b21039b2b73232b960691b604482015260640161009e565b6001600160a01b038216610ff85760405162461bcd60e51b8152602060048201526015602482015274343a399d1034b73b30b634b2103932b1b2b4bb32b960591b604482015260640161009e565b6110038383836111a6565b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161104891815260200190565b60405180910390a3505050565b600061106184846110cf565b905060001981146110c957818110156110bc5760405162461bcd60e51b815260206004820152601d60248201527f5f7370656e64416c6c6f77616e63653a20696e73756666696369656e74000000604482015260640161009e565b6110c984848484036110e5565b50505050565b6000806110dc848461135b565b54949350505050565b6001600160a01b03831661113b5760405162461bcd60e51b815260206004820152601760248201527f5f617070726f76653a20696e76616c6964206f776e6572000000000000000000604482015260640161009e565b6001600160a01b0382166111915760405162461bcd60e51b815260206004820152601960248201527f5f617070726f76653a20696e76616c6964207370656e64657200000000000000604482015260640161009e565b600061119d848461135b565b91909155505050565b6001600160a01b0383166111d15780600360008282546111c69190612671565b909155506112379050565b60006111dc84611289565b8054909150828110156112315760405162461bcd60e51b815260206004820152601f60248201527f5f7472616e736665723a20696e73756666696369656e742062616c616e636500604482015260640161009e565b82900390555b6001600160a01b0382166112625780600360008282546112579190612684565b909155506112849050565b600061126d83611289565b8054909150600061127e8483612671565b90925550505b505050565b60405163e0b490f760e01b81526001600160a01b03821660048201526000906370a0823160e01b90829081906101679063e0b490f790602401602060405180830381865afa1580156112df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113039190612697565b604080516001600160e01b0319808716602083015267ffffffffffffffff1986841b16602483015260e084901b16603c8201529192500160405160208183030381529060405261135290612634565b95945050505050565b60405163e0b490f760e01b81526001600160a01b0383166004820152600090636eb1769f60e11b90829081906101679063e0b490f790602401602060405180830381865afa1580156113b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d59190612697565b60405163e0b490f760e01b81526001600160a01b03871660048201529091506000906101679063e0b490f790602401602060405180830381865afa158015611421573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114459190612697565b604080516001600160e01b031980881660208301526001600160601b0319606088901b16602483015260e084811b8216603884015286901b16603c8201529192500160405160208183030381529060405261149f90612634565b979650505050505050565b6040518060400160405280600081526020016115026040518060a0016040528060001515815260200160006001600160a01b03168152602001606081526020016060815260200160006001600160a01b031681525090565b905290565b6000808585111561151757600080fd5b8386111561152457600080fd5b5050820193919092039150565b80356001600160e01b03198116906004841015611562576001600160e01b0319600485900360031b81901b82161691505b5092915050565b80356001600160601b03198116906014841015611562576001600160601b031960149490940360031b84901b1690921692915050565b6001600160a01b03811681146115b457600080fd5b50565b8060070b81146115b457600080fd5b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156115fe576115fe6115c6565b60405290565b60405160a081016001600160401b03811182821017156115fe576115fe6115c6565b60405161012081016001600160401b03811182821017156115fe576115fe6115c6565b60405160c081016001600160401b03811182821017156115fe576115fe6115c6565b604051601f8201601f191681016001600160401b0381118282101715611693576116936115c6565b604052919050565b60006001600160401b038211156116b4576116b46115c6565b5060051b60200190565b6000806000606084860312156116d357600080fd5b83356116de8161159f565b925060208401356116ee816115b7565b915060408401356001600160401b0381111561170957600080fd5b8401601f8101861361171a57600080fd5b803561172d6117288261169b565b61166b565b8082825260208201915060208360051b85010192508883111561174f57600080fd5b6020840193505b8284101561177a578335611769816115b7565b825260209384019390910190611756565b809450505050509250925092565b60005b838110156117a357818101518382015260200161178b565b50506000910152565b600081518084526117c4816020860160208601611788565b601f01601f19169290920160200192915050565b600082825180855260208501945060208160051b8301016020850160005b8381101561189b57848303601f1901885281518051845260209081015160408286018190528151151581870152918101516001600160a01b031660608601529081015160a0608086015261184d60e08601826117ac565b90506060820151603f198683030160a087015261186a82826117ac565b608093909301516001600160a01b031660c096909601959095525060209889019890935091909101906001016117f6565b50909695505050505050565b6000815161016084526118be6101608501826117ac565b9050602083015184820360208601526118d782826117ac565b91505060408301516118f460408601826001600160a01b03169052565b506060830151848203606086015261190c82826117ac565b9150506080830151611922608086018215159052565b5060a083015161193760a086018260070b9052565b5060c083015161194b60c086018215159052565b5060e083015184820360e086015261196382826117d8565b91505061010083015161199e6101008601828051600790810b83526020808301516001600160a01b031690840152604091820151900b910152565b509392505050565b600081518084526020840193506020830160005b82811015611a18578151805160070b87526020808201516001600160a01b03908116828a01526040808401511515908a01526060808401511515908a0152608092830151169188019190915260a090960195909101906001016119ba565b5093949350505050565b600081518084526020840193506020830160005b82811015611a18578151805160070b8752602081015160070b6020880152604081015160070b6040880152606081015160070b606088015260808101511515608088015260018060a01b0360a08201511660a08801525060c086019550602082019150600181019050611a36565b600081518084526020840193506020830160005b82811015611a18578151805160070b8752602081015160070b6020880152604081015160070b604088015260018060a01b03606082015116606088015260808101511515608088015260018060a01b0360a08201511660a08801525060c086019550602082019150600181019050611ab8565b60208152600082516101206020840152611b496101408401826118a7565b90506020840151611b5f604085018260070b9052565b5060408401518015156060850152506060840151801515608085015250608084015180151560a08501525060a0840151838203601f190160c0850152611ba582826119a6565b91505060c0840151601f198483030160e0850152611bc38282611a22565b91505060e0840151601f1984830301610100850152611be28282611aa4565b915050610100840151601f198483030161012085015261135282826117ac565b600060208284031215611c1457600080fd5b8135611c1f8161159f565b9392505050565b60006001600160401b03821115611c3f57611c3f6115c6565b50601f01601f191660200190565b600080600060608486031215611c6257600080fd5b8335611c6d8161159f565b92506020840135611c7d816115b7565b915060408401356001600160401b03811115611c9857600080fd5b8401601f81018613611ca957600080fd5b8035611cb76117288261169b565b8082825260208201915060208360051b850101925088831115611cd957600080fd5b602084015b83811015611d5d5780356001600160401b03811115611cfc57600080fd5b8501603f81018b13611d0d57600080fd5b6020810135611d1e61172882611c26565b8181526040838301018d1015611d3357600080fd5b81604084016020830137600060208383010152808652505050602083019250602081019050611cde565b50809450505050509250925092565b6000606082018560070b83528460070b60208401526060604084015280845180835260808501915060208601925060005b81811015611dbe57835160070b835260209384019390920191600101611d9d565b5090979650505050505050565b602081526000808354818160011c90506001821680611deb57607f821691505b602082108103611e0957634e487b7160e01b84526022600452602484fd5b6020860182905260408601818015611e285760018114611e3e57611e6c565b60ff198516825283151560051b82019550611e6c565b60008981526020902060005b85811015611e6657815484820152600190910190602001611e4a565b83019650505b5093979650505050505050565b80356020831015611e9257600019602084900360031b1b165b92915050565b60208082526017908201527f68747343616c6c3a2064656c6567617465642063616c6c000000000000000000604082015260600190565b600082601f830112611ee057600080fd5b8151602083016000611ef461172884611c26565b9050828152858383011115611f0857600080fd5b611352836020830184611788565b8051611f218161159f565b919050565b80518015158114611f2157600080fd5b8051611f21816115b7565b600082601f830112611f5257600080fd5b8151611f606117288261169b565b8082825260208201915060208360051b860101925085831115611f8257600080fd5b602085015b838110156120a55780516001600160401b03811115611fa557600080fd5b86016040818903601f19011215611fbb57600080fd5b611fc36115dc565b6020820151815260408201516001600160401b03811115611fe357600080fd5b60208184010192505060a0828a031215611ffc57600080fd5b612004611604565b61200d83611f26565b8152602083015161201d8161159f565b602082015260408301516001600160401b0381111561203b57600080fd5b6120478b828601611ecf565b60408301525060608301516001600160401b0381111561206657600080fd5b6120728b828601611ecf565b606083015250608083015192506120888361159f565b608081019290925260208181019290925284529283019201611f87565b5095945050505050565b6000606082840312156120c157600080fd5b604051606081016001600160401b03811182821017156120e3576120e36115c6565b806040525080915082516120f6816115b7565b815260208301516121068161159f565b60208201526040830151612119816115b7565b6040919091015292915050565b6000610160828403121561213957600080fd5b612141611626565b905081516001600160401b0381111561215957600080fd5b61216584828501611ecf565b82525060208201516001600160401b0381111561218157600080fd5b61218d84828501611ecf565b60208301525061219f60408301611f16565b604082015260608201516001600160401b038111156121bd57600080fd5b6121c984828501611ecf565b6060830152506121db60808301611f26565b60808201526121ec60a08301611f36565b60a08201526121fd60c08301611f26565b60c082015260e08201516001600160401b0381111561221b57600080fd5b61222784828501611f41565b60e08301525061223b8361010084016120af565b61010082015292915050565b600082601f83011261225857600080fd5b81516122666117288261169b565b80828252602082019150602060a0840286010192508583111561228857600080fd5b602085015b838110156120a55760a081880312156122a557600080fd5b6122ad611604565b81516122b8816115b7565b815260208201516122c88161159f565b60208201526122d960408301611f26565b60408201526122ea60608301611f26565b606082015260808201516122fd8161159f565b6080820152835260209092019160a00161228d565b600082601f83011261232357600080fd5b81516123316117288261169b565b80828252602082019150602060c0840286010192508583111561235357600080fd5b602085015b838110156120a55760c0818803121561237057600080fd5b612378611649565b8151612383816115b7565b81526020820151612393816115b7565b602082015260408201516123a6816115b7565b604082015260608201516123b9816115b7565b60608201526123ca60808301611f26565b608082015260a08201516123dd8161159f565b60a0820152835260209092019160c001612358565b600082601f83011261240357600080fd5b81516124116117288261169b565b80828252602082019150602060c0840286010192508583111561243357600080fd5b602085015b838110156120a55760c0818803121561245057600080fd5b612458611649565b8151612463816115b7565b81526020820151612473816115b7565b60208201526040820151612486816115b7565b604082015260608201516124998161159f565b60608201526124aa60808301611f26565b608082015260a08201516124bd8161159f565b60a0820152835260209092019160c001612438565b6000602082840312156124e457600080fd5b81516001600160401b038111156124fa57600080fd5b8201610120818503121561250d57600080fd5b612515611626565b81516001600160401b0381111561252b57600080fd5b61253786828501612126565b82525061254660208301611f36565b602082015261255760408301611f26565b604082015261256860608301611f26565b606082015261257960808301611f26565b608082015260a08201516001600160401b0381111561259757600080fd5b6125a386828501612247565b60a08301525060c08201516001600160401b038111156125c257600080fd5b6125ce86828501612312565b60c08301525060e08201516001600160401b038111156125ed57600080fd5b6125f9868285016123f2565b60e0830152506101008201516001600160401b0381111561261957600080fd5b61262586828501611ecf565b61010083015250949350505050565b80516020808301519190811015612655576000198160200360031b1b821691505b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611e9257611e9261265b565b81810381811115611e9257611e9261265b565b6000602082840312156126a957600080fd5b815163ffffffff81168114611c1f57600080fdfea2646970667358221220707967cb30f864a5b63a9d0ac2c044fd448c8f421f83ec3d890aaa56c2935b5d64736f6c634300081c0033",
        "sourceMap": "179:15179:23:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "179:15179:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8511:12;8944:2;8925:21;;;8917:63;;;;-1:-1:-1;;;8917:63:23;;371:2:30;8917:63:23;;;353:21:30;410:2;390:18;;;383:30;449:31;429:18;;;422:59;498:18;;8917:63:23;;;;;;;;;8991:24;9032:13;9043:1;8991:24;9032:8;8991:24;9032:13;:::i;:::-;9025:21;;;:::i;:::-;9018:29;;;-1:-1:-1;9085:10:23;9065:30;;9057:73;;;;-1:-1:-1;;;9057:73:23;;1408:2:30;9057:73:23;;;1390:21:30;1447:2;1427:18;;;1420:30;1486:32;1466:18;;;1459:60;1536:18;;9057:73:23;1206:354:30;9057:73:23;9141:13;9173:14;9184:2;9182:1;9173:8;9141:13;9173:14;:::i;:::-;9165:23;;;:::i;:::-;9157:32;;;-1:-1:-1;9224:4:23;9207:22;;9199:64;;;;-1:-1:-1;;;9199:64:23;;2146:2:30;9199:64:23;;;2128:21:30;2185:2;2165:18;;;2158:30;2224:31;2204:18;;;2197:59;2273:18;;9199:64:23;1944:353:30;9199:64:23;9442:20;:18;:20::i;:::-;179:15179;;;-1:-1:-1;179:15179:23;;;-1:-1:-1;;;;179:15179:23;5047:766;;;;;;:::i;:::-;;:::i;:::-;;;;5726:1:30;5715:21;;;5697:40;;5773:21;;;;5768:2;5753:18;;5746:49;5670:18;5047:766:23;;;;;;;;1603:765;;;:::i;:::-;;;;;;;:::i;1260:337::-;;;;;;:::i;:::-;;:::i;:::-;;;14093:10:30;14081:23;;;14063:42;;14051:2;14036:18;1260:337:23;13919:192:30;3363:839:23;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;9571:2474::-;9618:12;9642:15;9667;9679:2;9676;9667:8;9642:15;9667;:::i;:::-;9660:23;;;:::i;:::-;9642:41;-1:-1:-1;;;;;;;;;;9698:32:23;;;9694:2293;;9764:4;9753:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;9746:23;;;9571:2474;:::o;9694:2293::-;-1:-1:-1;;;;;;;;;9790:36:23;;;9786:2201;;9860:8;;9849:20;;;9860:8;;;;9849:20;;;18304:36:30;18277:18;9849:20:23;18162:184:30;9786:2201:23;-1:-1:-1;;;;;;;;;9890:39:23;;;9886:2101;;9963:11;;9952:23;;;;;;18497:25:30;;18485:2;18470:18;;18351:177;9886:2101:23;-1:-1:-1;;;;;;;;;9996:34:23;;;9992:1995;;10064:6;10053:18;;;;;;;;:::i;9992:1995::-;-1:-1:-1;;;;;;;;;10092:37:23;;;10088:1899;;10172:2;10153:8;:21;;10145:64;;;;-1:-1:-1;;;10145:64:23;;18735:2:30;10145:64:23;;;18717:21:30;18774:2;18754:18;;;18747:30;18813:32;18793:18;;;18786:60;18863:18;;10145:64:23;18533:354:30;10145:64:23;10224:15;10258;10270:2;10267;10258:8;10224:15;10258;:::i;:::-;10250:24;;;:::i;:::-;10242:33;;10224:51;;10307:20;10319:7;10307:11;:20::i;:::-;10296:32;;;;;;18497:25:30;;18485:2;18470:18;;18351:177;10296:32:23;;;;;;;;;;;;;10289:39;;;;9571:2474;:::o;10088:1899::-;-1:-1:-1;;;;;;;;;10349:36:23;;;10345:1642;;10428:2;10409:8;:21;;10401:63;;;;-1:-1:-1;;;10401:63:23;;19094:2:30;10401:63:23;;;19076:21:30;19133:2;19113:18;;;19106:30;19172:31;19152:18;;;19145:59;19221:18;;10401:63:23;18892:353:30;10401:63:23;10479:10;10508:15;10520:2;10517;10508:8;10479:10;10508:15;:::i;:::-;10500:24;;;:::i;:::-;10492:33;;;-1:-1:-1;10539:14:23;10572:15;10584:2;10581;10572:8;10539:14;10572:15;:::i;:::-;10564:24;;;:::i;:::-;10556:33;-1:-1:-1;10619:10:23;10643:28;10619:10;10660:2;10556:33;10643:9;:28::i;:::-;10692:16;;;10703:4;10692:16;;;19650:41:30;19623:18;10692:16:23;;;;;;;;;;;;;10685:23;;;;;;9571:2474;:::o;10345:1642::-;-1:-1:-1;;;;;;;;;10729:40:23;;;10725:1262;;10812:3;10793:8;:22;;10785:65;;;;-1:-1:-1;;;10785:65:23;;19904:2:30;10785:65:23;;;19886:21:30;19943:2;19923:18;;;19916:30;19982:32;19962:18;;;19955:60;20032:18;;10785:65:23;19702:354:30;10785:65:23;10865:12;10896:15;10908:2;10905;10896:8;10865:12;10896:15;:::i;:::-;10888:24;;;:::i;:::-;10880:33;;;-1:-1:-1;10927:10:23;10956:15;10968:2;10965;10956:8;10927:10;10956:15;:::i;:::-;10948:24;;;:::i;:::-;10940:33;;;-1:-1:-1;10987:14:23;11020:16;11032:3;11029:2;11020:8;10987:14;11020:16;:::i;:::-;11012:25;;;:::i;:::-;11004:34;-1:-1:-1;11070:10:23;11095:38;11111:4;11070:10;11004:34;11095:15;:38::i;:::-;11147:27;11157:4;11163:2;11167:6;11147:9;:27::i;:::-;11195:16;;;11206:4;11195:16;;;19650:41:30;19623:18;11195:16:23;;;;;;;;;;;;11188:23;;;;;;;9571:2474;:::o;10725:1262::-;-1:-1:-1;;;;;;;;;11232:37:23;;;11228:759;;11312:2;11293:8;:21;;11285:64;;;;-1:-1:-1;;;11285:64:23;;20263:2:30;11285:64:23;;;20245:21:30;20302:2;20282:18;;;20275:30;20341:32;20321:18;;;20314:60;20391:18;;11285:64:23;20061:354:30;11285:64:23;11364:13;11396:15;11408:2;11405;11396:8;11364:13;11396:15;:::i;:::-;11388:24;;;:::i;:::-;11380:33;;;-1:-1:-1;11427:15:23;11461;11473:2;11470;11461:8;11427:15;11461;:::i;:::-;11453:24;;;:::i;:::-;11445:33;;11427:51;;11510:27;11522:5;11529:7;11510:11;:27::i;:::-;11499:39;;;;;;18497:25:30;;18485:2;18470:18;;18351:177;11499:39:23;;;;;;;;;;;;;11492:46;;;;;9571:2474;:::o;11228:759::-;-1:-1:-1;;;;;;;;;11559:35:23;;;11555:432;;11637:2;11618:8;:21;;11610:62;;;;-1:-1:-1;;;11610:62:23;;20622:2:30;11610:62:23;;;20604:21:30;20661:2;20641:18;;;20634:30;20700;20680:18;;;20673:58;20748:18;;11610:62:23;20420:352:30;11610:62:23;11687:15;11721;11733:2;11730;11721:8;11687:15;11721;:::i;:::-;11713:24;;;:::i;:::-;11705:33;;;-1:-1:-1;11752:14:23;11785:15;11797:2;11794;11785:8;11752:14;11785:15;:::i;:::-;11777:24;;;:::i;:::-;11769:33;-1:-1:-1;11832:10:23;11856:32;11832:10;11872:7;11769:33;11856:8;:32::i;:::-;11923:7;-1:-1:-1;;;;;11907:32:23;11916:5;-1:-1:-1;;;;;11907:32:23;;11932:6;11907:32;;;;18497:25:30;;18485:2;18470:18;;18351:177;11907:32:23;;;;;;;;11960:16;;;11971:4;11960:16;;;19650:41:30;19623:18;11960:16:23;19510:187:30;11555:432:23;11996:42;;-1:-1:-1;;;11996:42:23;;20979:2:30;11996:42:23;;;20961:21:30;21018:2;20998:18;;;20991:30;21057:33;21037:18;;;21030:61;21108:18;;11996:42:23;20777:355:30;5047:766:23;5160:18;;776:4;297:5;768:28;760:64;;;;-1:-1:-1;;;760:64:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;5233:19:23;::::1;5225:56;;;::::0;-1:-1:-1;;;5225:56:23;;21691:2:30;5225:56:23::1;::::0;::::1;21673:21:30::0;21730:2;21710:18;;;21703:30;21769:26;21749:18;;;21742:54;21813:18;;5225:56:23::1;21489:348:30::0;5225:56:23::1;5308:1;5299:6;:10;;;5291:48;;;::::0;-1:-1:-1;;;5291:48:23;;22044:2:30;5291:48:23::1;::::0;::::1;22026:21:30::0;22083:2;22063:18;;;22056:30;22122:27;22102:18;;;22095:55;22167:18;;5291:48:23::1;21842:349:30::0;5291:48:23::1;5350:46;5399:4;-1:-1:-1::0;;;;;5399:19:23::1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;5399:21:23::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;5456:15:::0;;:24:::1;;::::0;5350:70;;-1:-1:-1;;;;;;5498:29:23;::::1;5490:68;;;::::0;-1:-1:-1;;;5490:68:23;;33756:2:30;5490:68:23::1;::::0;::::1;33738:21:30::0;33795:2;33775:18;;;33768:30;33834:28;33814:18;;;33807:56;33880:18;;5490:68:23::1;33554:350:30::0;5490:68:23::1;5569:52;5577:15;5602:1;5613:6;-1:-1:-1::0;;;;;5569:52:23::1;:7;:52::i;:::-;5647:2;5632:17;;5720:11;;5690:43;;5769:1;5751:14;:19;;;;5743:63;;;::::0;-1:-1:-1;;;5743:63:23;;34111:2:30;5743:63:23::1;::::0;::::1;34093:21:30::0;34150:2;34130:18;;;34123:30;34189:33;34169:18;;;34162:61;34240:18;;5743:63:23::1;33909:355:30::0;5743:63:23::1;5215:598;;5047:766:::0;;;;;;:::o;1603:765::-;1650:46;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1650:46:23;1720:641;;;1763:315;;;;;-1:-1:-1;1763:315:23;;;;;;1720:641;;;1763:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:37;;;;;;;;;;;1720:641;;;;;-1:-1:-1;;;;1965:37:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;1763:315:23;;2020:44;;;;;;;;;-1:-1:-1;2020:44:23;;;1763:315;2020:44;;;;;;;;;;;;1763:315;;;;;;;1720:641;;;2105:11;;2020:44;1720:641;;;;;;;;;;;;;;;;;;;;;;;2189:37;;;;;;;;;;1720:641;;;;;2189:37;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:37:23;;-1:-1:-1;;2189:37:23;;;;;;;;;;;-1:-1:-1;1720:641:23;;;;2280:1;2240:42;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:42:23;;-1:-1:-1;;2240:42:23;;;;;;;;;;;-1:-1:-1;1720:641:23;;;;2333:1;2296:39;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2296:39:23;;-1:-1:-1;;2296:39:23;;;;;;;;;;;-1:-1:-1;1720:641:23;;;;;;;;;;;;-1:-1:-1;1720:641:23;;;;;1708:653;1603:765;-1:-1:-1;1603:765:23:o;1260:337::-;1330:16;776:4;297:5;768:28;760:64;;;;-1:-1:-1;;;760:64:23;;;;;;;:::i;:::-;1482:40:::1;::::0;;-1:-1:-1;;;1482:40:23::1;::::0;::::1;34450:46:30::0;;;1358:15:23::1;34512:11:30::0;;;34505:72;;;-1:-1:-1;;;;;;34615:2:30;34611:15;;;34607:53;34593:12;;;34586:75;1376:39:23;;1358:15;;;;34677:12:30;1482:40:23::1;;;;;;;;;;;;1474:49;;;:::i;:::-;1570:11:::0;;1260:337;-1:-1:-1;;;;;1260:337:23:o;3363:839::-;3471:18;;3529:28;776:4;297:5;768:28;760:64;;;;-1:-1:-1;;;760:64:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;3582:19:23;::::1;3574:56;;;::::0;-1:-1:-1;;;3574:56:23;;35204:2:30;3574:56:23::1;::::0;::::1;35186:21:30::0;35243:2;35223:18;;;35216:30;35282:26;35262:18;;;35255:54;35326:18;;3574:56:23::1;35002:348:30::0;3574:56:23::1;3657:1;3648:6;:10;;;3640:48;;;::::0;-1:-1:-1;;;3640:48:23;;35557:2:30;3640:48:23::1;::::0;::::1;35539:21:30::0;35596:2;35576:18;;;35569:30;35635:27;35615:18;;;35608:55;35680:18;;3640:48:23::1;35355:349:30::0;3640:48:23::1;3699:46;3748:4;-1:-1:-1::0;;;;;3748:19:23::1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;3748:21:23::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;3805:15:::0;;:24:::1;;::::0;3699:70;;-1:-1:-1;;;;;;3847:29:23;::::1;3839:68;;;::::0;-1:-1:-1;;;3839:68:23;;35911:2:30;3839:68:23::1;::::0;::::1;35893:21:30::0;35950:2;35930:18;;;35923:30;35989:28;35969:18;;;35962:56;36035:18;;3839:68:23::1;35709:350:30::0;3839:68:23::1;3918:52;3934:1;3938:15;3962:6;-1:-1:-1::0;;;;;3918:52:23::1;:7;:52::i;:::-;4069:11;::::0;4108:14:::1;::::0;;4120:1:::1;4108:14:::0;;;::::1;::::0;::::1;::::0;;;3996:2:::1;::::0;-1:-1:-1;4069:11:23;;-1:-1:-1;4108:14:23::1;4092:30;;4158:1;4140:14;:19;;;;4132:63;;;::::0;-1:-1:-1;;;4132:63:23;;36266:2:30;4132:63:23::1;::::0;::::1;36248:21:30::0;36305:2;36285:18;;;36278:30;36344:33;36324:18;;;36317:61;36395:18;;4132:63:23::1;36064:355:30::0;4132:63:23::1;3564:638;;3363:839:::0;;;;;;;:::o;12808:194::-;12868:14;12894:12;12909:23;12924:7;12909:14;:23::i;:::-;12975:11;;12808:194;-1:-1:-1;;;12808:194:23:o;13230:272::-;-1:-1:-1;;;;;13317:18:23;;13309:50;;;;-1:-1:-1;;;13309:50:23;;36626:2:30;13309:50:23;;;36608:21:30;36665:2;36645:18;;;36638:30;-1:-1:-1;;;36684:18:30;;;36677:49;36743:18;;13309:50:23;36424:343:30;13309:50:23;-1:-1:-1;;;;;13377:16:23;;13369:50;;;;-1:-1:-1;;;13369:50:23;;36974:2:30;13369:50:23;;;36956:21:30;37013:2;36993:18;;;36986:30;-1:-1:-1;;;37032:18:30;;;37025:51;37093:18;;13369:50:23;36772:345:30;13369:50:23;13429:25;13437:4;13443:2;13447:6;13429:7;:25::i;:::-;13484:2;-1:-1:-1;;;;;13469:26:23;13478:4;-1:-1:-1;;;;;13469:26:23;;13488:6;13469:26;;;;18497:25:30;;18485:2;18470:18;;18351:177;13469:26:23;;;;;;;;13230:272;;;:::o;14952:404::-;15043:24;15070:27;15082:5;15089:7;15070:11;:27::i;:::-;15043:54;;-1:-1:-1;;15111:16:23;:37;15107:243;;15192:6;15172:16;:26;;15164:68;;;;-1:-1:-1;;;15164:68:23;;37324:2:30;15164:68:23;;;37306:21:30;37363:2;37343:18;;;37336:30;37402:31;37382:18;;;37375:59;37451:18;;15164:68:23;37122:353:30;15164:68:23;15274:51;15283:5;15290:7;15318:6;15299:16;:25;15274:8;:51::i;:::-;15033:323;14952:404;;;:::o;13008:216::-;13083:14;13109:12;13124:30;13139:5;13146:7;13124:14;:30::i;:::-;13197:11;;13008:216;-1:-1:-1;;;;13008:216:23:o;14477:350::-;-1:-1:-1;;;;;14569:19:23;;14561:55;;;;-1:-1:-1;;;14561:55:23;;37682:2:30;14561:55:23;;;37664:21:30;37721:2;37701:18;;;37694:30;37760:25;37740:18;;;37733:53;37803:18;;14561:55:23;37480:347:30;14561:55:23;-1:-1:-1;;;;;14634:21:23;;14626:59;;;;-1:-1:-1;;;14626:59:23;;38034:2:30;14626:59:23;;;38016:21:30;38073:2;38053:18;;;38046:30;38112:27;38092:18;;;38085:55;38157:18;;14626:59:23;37832:349:30;14626:59:23;14695:21;14719:30;14734:5;14741:7;14719:14;:30::i;:::-;14782:29;;;;-1:-1:-1;;;14477:350:23:o;13508:963::-;-1:-1:-1;;;;;13589:18:23;;13585:376;;13638:6;13623:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;13585:376:23;;-1:-1:-1;13585:376:23;;13675:16;13694:20;13709:4;13694:14;:20::i;:::-;13787:15;;13675:39;;-1:-1:-1;13825:21:23;;;;13817:65;;;;-1:-1:-1;;;13817:65:23;;38650:2:30;13817:65:23;;;38632:21:30;38689:2;38669:18;;;38662:30;38728:33;38708:18;;;38701:61;38779:18;;13817:65:23;38448:355:30;13817:65:23;13924:24;;;13907:42;;13585:376;-1:-1:-1;;;;;13975:16:23;;13971:494;;14022:6;14007:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;13971:494:23;;-1:-1:-1;13971:494:23;;14059:14;14076:18;14091:2;14076:14;:18::i;:::-;14163:13;;14059:35;;-1:-1:-1;14108:17:23;14382:18;14394:6;14163:13;14382:18;:::i;:::-;14425:28;;;-1:-1:-1;;13971:494:23;13508:963;;;:::o;12051:322::-;12237:52;;-1:-1:-1;;;12237:52:23;;-1:-1:-1;;;;;39105:32:30;;12237:52:23;;;39087:51:30;12114:12:23;;-1:-1:-1;;;12156:25:23;12114:12;;;;297:5;;12237:43;;39060:18:30;;12237:52:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12322:42;;;-1:-1:-1;;;;;;39627:33:30;;;12322:42:23;;;39615:46:30;-1:-1:-1;;39694:15:30;;;39690:45;39677:11;;;39670:66;39643:3;39770:16;;;39766:43;39752:12;;;39745:65;12218:71:23;;-1:-1:-1;39826:12:30;12322:42:23;;;;;;;;;;;;12314:51;;;:::i;:::-;12306:60;12051:322;-1:-1:-1;;;;;12051:322:23:o;12379:423::-;12578:50;;-1:-1:-1;;;12578:50:23;;-1:-1:-1;;;;;39105:32:30;;12578:50:23;;;39087:51:30;12457:12:23;;-1:-1:-1;;;12499:25:23;12457:12;;;;297:5;;12578:43;;39060:18:30;;12578:50:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12657:52;;-1:-1:-1;;;12657:52:23;;-1:-1:-1;;;;;39105:32:30;;12657:52:23;;;39087:51:30;12561:67:23;;-1:-1:-1;12638:16:23;;297:5;;12657:43;;39060:18:30;;12657:52:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12742:51;;;-1:-1:-1;;;;;;40068:33:30;;;12742:51:23;;;40056:46:30;-1:-1:-1;;;;;;40139:2:30;40135:15;;;40131:53;40118:11;;;40111:74;40084:3;40219:16;;;40215:43;;40201:12;;;40194:65;40293:16;;;40289:43;40275:12;;;40268:65;12638:71:23;;-1:-1:-1;40349:12:30;12742:51:23;;;;;;;;;;;;12734:60;;;:::i;:::-;12726:69;12379:423;-1:-1:-1;;;;;;;12379:423:23:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;527:331:30:-;632:9;643;685:8;673:10;670:24;667:44;;;707:1;704;697:12;667:44;736:6;726:8;723:20;720:40;;;756:1;753;746:12;720:40;-1:-1:-1;;782:23:30;;;827:25;;;;;-1:-1:-1;527:331:30:o;863:338::-;983:19;;-1:-1:-1;;;;;;1020:29:30;;;1069:1;1061:10;;1058:137;;;-1:-1:-1;;;;;;1130:1:30;1126:11;;;1123:1;1119:19;1115:46;;;1107:55;;1103:82;;-1:-1:-1;1058:137:30;;863:338;;;;:::o;1565:374::-;1686:19;;-1:-1:-1;;;;;;1723:40:30;;;1783:2;1775:11;;1772:161;;;-1:-1:-1;;;;;;1845:2:30;1841:12;;;;1838:1;1834:20;1830:58;;;1822:67;1818:105;;;;1565:374;-1:-1:-1;;1565:374:30:o;2302:131::-;-1:-1:-1;;;;;2377:31:30;;2367:42;;2357:70;;2423:1;2420;2413:12;2357:70;2302:131;:::o;2438:118::-;2525:5;2522:1;2511:20;2504:5;2501:31;2491:59;;2546:1;2543;2536:12;2561:127;2622:10;2617:3;2613:20;2610:1;2603:31;2653:4;2650:1;2643:15;2677:4;2674:1;2667:15;2693:257;2765:4;2759:11;;;2797:17;;-1:-1:-1;;;;;2829:34:30;;2865:22;;;2826:62;2823:88;;;2891:18;;:::i;:::-;2927:4;2920:24;2693:257;:::o;2955:253::-;3027:2;3021:9;3069:4;3057:17;;-1:-1:-1;;;;;3089:34:30;;3125:22;;;3086:62;3083:88;;;3151:18;;:::i;3213:255::-;3285:2;3279:9;3327:6;3315:19;;-1:-1:-1;;;;;3349:34:30;;3385:22;;;3346:62;3343:88;;;3411:18;;:::i;3473:253::-;3545:2;3539:9;3587:4;3575:17;;-1:-1:-1;;;;;3607:34:30;;3643:22;;;3604:62;3601:88;;;3669:18;;:::i;3731:275::-;3802:2;3796:9;3867:2;3848:13;;-1:-1:-1;;3844:27:30;3832:40;;-1:-1:-1;;;;;3887:34:30;;3923:22;;;3884:62;3881:88;;;3949:18;;:::i;:::-;3985:2;3978:22;3731:275;;-1:-1:-1;3731:275:30:o;4011:181::-;4069:4;-1:-1:-1;;;;;4094:6:30;4091:30;4088:56;;;4124:18;;:::i;:::-;-1:-1:-1;4169:1:30;4165:14;4181:4;4161:25;;4011:181::o;4197:1233::-;4295:6;4303;4311;4364:2;4352:9;4343:7;4339:23;4335:32;4332:52;;;4380:1;4377;4370:12;4332:52;4419:9;4406:23;4438:31;4463:5;4438:31;:::i;:::-;4488:5;-1:-1:-1;4545:2:30;4530:18;;4517:32;4558:31;4517:32;4558:31;:::i;:::-;4608:7;-1:-1:-1;4666:2:30;4651:18;;4638:32;-1:-1:-1;;;;;4682:30:30;;4679:50;;;4725:1;4722;4715:12;4679:50;4748:22;;4801:4;4793:13;;4789:27;-1:-1:-1;4779:55:30;;4830:1;4827;4820:12;4779:55;4870:2;4857:16;4893:62;4909:45;4947:6;4909:45;:::i;:::-;4893:62;:::i;:::-;4977:3;5001:6;4996:3;4989:19;5033:2;5028:3;5024:12;5017:19;;5088:2;5078:6;5075:1;5071:14;5067:2;5063:23;5059:32;5045:46;;5114:7;5106:6;5103:19;5100:39;;;5135:1;5132;5125:12;5100:39;5167:2;5163;5159:11;5148:22;;5179:221;5195:6;5190:3;5187:15;5179:221;;;5277:3;5264:17;5294:31;5317:7;5294:31;:::i;:::-;5338:20;;5387:2;5212:12;;;;5378;;;;5179:221;;;5419:5;5409:15;;;;;;4197:1233;;;;;:::o;5806:250::-;5891:1;5901:113;5915:6;5912:1;5909:13;5901:113;;;5991:11;;;5985:18;5972:11;;;5965:39;5937:2;5930:10;5901:113;;;-1:-1:-1;;6048:1:30;6030:16;;6023:27;5806:250::o;6061:271::-;6103:3;6141:5;6135:12;6168:6;6163:3;6156:19;6184:76;6253:6;6246:4;6241:3;6237:14;6230:4;6223:5;6219:16;6184:76;:::i;:::-;6314:2;6293:15;-1:-1:-1;;6289:29:30;6280:39;;;;6321:4;6276:50;;6061:271;-1:-1:-1;;6061:271:30:o;6542:1368::-;6603:3;6634;6666:5;6660:12;6693:6;6688:3;6681:19;6725:4;6720:3;6716:14;6709:21;;6783:4;6773:6;6770:1;6766:14;6759:5;6755:26;6751:37;6822:4;6815:5;6811:16;6845:1;6855:1029;6869:6;6866:1;6863:13;6855:1029;;;6934:16;;;-1:-1:-1;;6930:30:30;6918:43;;6984:13;;7023:9;;7010:23;;7080:4;7072:13;;;7066:20;7123:4;7106:15;;;7099:29;;;7179:19;;7172:27;7165:35;7148:15;;;7141:60;7248:23;;;7242:30;-1:-1:-1;;;;;7238:56:30;7231:4;7221:15;;7214:81;7336:23;;;7330:30;7282:3;7390:4;7380:15;;7373:29;7429:49;7473:3;7463:14;;7330:30;7429:49;:::i;:::-;7415:63;;7537:4;7523:12;7519:23;7513:30;7607:2;7603:7;7596:4;7588:6;7584:17;7580:31;7573:4;7567;7563:15;7556:56;7639:41;7673:6;7657:14;7639:41;:::i;:::-;7744:4;7726:23;;;;7720:30;-1:-1:-1;;;;;7716:56:30;7710:3;7700:14;;;;7693:80;;;;-1:-1:-1;7835:4:30;7860:14;;;;7625:55;;-1:-1:-1;7823:17:30;;;;;7769:1;6884:9;6855:1029;;;-1:-1:-1;7900:4:30;;6542:1368;-1:-1:-1;;;;;;6542:1368:30:o;8179:1313::-;8233:3;8277:5;8271:12;8304:6;8299:3;8292:19;8332:49;8373:6;8368:3;8364:16;8350:12;8332:49;:::i;:::-;8320:61;;8429:4;8422:5;8418:16;8412:23;8477:3;8471:4;8467:14;8460:4;8455:3;8451:14;8444:38;8505:39;8539:4;8523:14;8505:39;:::i;:::-;8491:53;;;8592:4;8585:5;8581:16;8575:23;8607:50;8651:4;8646:3;8642:14;8626;-1:-1:-1;;;;;6403:31:30;6391:44;;6337:104;8607:50;;8705:4;8698:5;8694:16;8688:23;8755:3;8747:6;8743:16;8736:4;8731:3;8727:14;8720:40;8783:41;8817:6;8801:14;8783:41;:::i;:::-;8769:55;;;8872:4;8865:5;8861:16;8855:23;8887:47;8928:4;8923:3;8919:14;8903;6516:13;6509:21;6497:34;;6446:91;8887:47;;8982:4;8975:5;8971:16;8965:23;8997:48;9039:4;9034:3;9030:14;9014;5510:1;5499:20;5487:33;;5435:91;8997:48;;9093:4;9086:5;9082:16;9076:23;9108:47;9149:4;9144:3;9140:14;9124;6516:13;6509:21;6497:34;;6446:91;9108:47;;9203:4;9196:5;9192:16;9186:23;9253:3;9245:6;9241:16;9234:4;9229:3;9225:14;9218:40;9281:60;9334:6;9318:14;9281:60;:::i;:::-;9267:74;;;9389:6;9382:5;9378:18;9372:25;9406:58;9456:6;9451:3;9447:16;9431:14;8001:12;;7998:1;7987:27;;;7975:40;;8068:4;8057:16;;;8051:23;-1:-1:-1;;;;;8047:49:30;8031:14;;;8024:73;8160:4;8149:16;;;8143:23;8129:38;;8113:14;;8106:62;7915:259;9406:58;-1:-1:-1;9480:6:30;8179:1313;-1:-1:-1;;;8179:1313:30:o;9497:787::-;9558:3;9596:5;9590:12;9623:6;9618:3;9611:19;9655:4;9650:3;9646:14;9639:21;;9694:4;9687:5;9683:16;9717:1;9727:532;9741:6;9738:1;9735:13;9727:532;;;9800:13;;9852:9;;9849:1;9838:24;9826:37;;9917:4;9909:13;;;9903:20;-1:-1:-1;;;;;9899:46:30;;;9883:14;;;9876:70;10010:4;10002:13;;;9996:20;9989:28;9982:36;9966:14;;;9959:60;10083:4;10075:13;;;10069:20;10062:28;10055:36;10039:14;;;10032:60;10146:4;10138:13;;;10132:20;10128:46;10112:14;;;10105:70;;;;9933:3;10195:14;;;;10232:17;;;;9942:1;9756:9;9727:532;;;-1:-1:-1;10275:3:30;;9497:787;-1:-1:-1;;;;9497:787:30:o;10289:852::-;10355:3;10393:5;10387:12;10420:6;10415:3;10408:19;10452:4;10447:3;10443:14;10436:21;;10491:4;10484:5;10480:16;10514:1;10524:592;10538:6;10535:1;10532:13;10524:592;;;10603:6;10597:13;10655:2;10649:9;10646:1;10635:24;10630:3;10623:37;10724:4;10720:2;10716:13;10710:20;10707:1;10696:35;10689:4;10684:3;10680:14;10673:59;10796:4;10792:2;10788:13;10782:20;10779:1;10768:35;10761:4;10756:3;10752:14;10745:59;10868:4;10864:2;10860:13;10854:20;10851:1;10840:35;10833:4;10828:3;10824:14;10817:59;10940:4;10936:2;10932:13;10926:20;10919:28;10912:36;10905:4;10900:3;10896:14;10889:60;11028:1;11024;11019:3;11015:11;11011:19;11003:4;10999:2;10995:13;10989:20;10985:46;10978:4;10973:3;10969:14;10962:70;;11061:4;11056:3;11052:14;11045:21;;11101:4;11093:6;11089:17;11079:27;;10560:1;10557;10553:9;10548:14;;10524:592;;11146:860;11209:3;11247:5;11241:12;11274:6;11269:3;11262:19;11306:4;11301:3;11297:14;11290:21;;11345:4;11338:5;11334:16;11368:1;11378:603;11392:6;11389:1;11386:13;11378:603;;;11457:6;11451:13;11509:2;11503:9;11500:1;11489:24;11484:3;11477:37;11578:4;11574:2;11570:13;11564:20;11561:1;11550:35;11543:4;11538:3;11534:14;11527:59;11650:4;11646:2;11642:13;11636:20;11633:1;11622:35;11615:4;11610:3;11606:14;11599:59;11737:1;11733;11728:3;11724:11;11720:19;11712:4;11708:2;11704:13;11698:20;11694:46;11687:4;11682:3;11678:14;11671:70;11805:4;11801:2;11797:13;11791:20;11784:28;11777:36;11770:4;11765:3;11761:14;11754:60;11893:1;11889;11884:3;11880:11;11876:19;11868:4;11864:2;11860:13;11854:20;11850:46;11843:4;11838:3;11834:14;11827:70;;11926:4;11921:3;11917:14;11910:21;;11966:4;11958:6;11954:17;11944:27;;11414:1;11411;11407:9;11402:14;;11378:603;;12011:1651;12196:2;12185:9;12178:21;12159:4;12234:6;12228:13;12277:6;12272:2;12261:9;12257:18;12250:34;12307:64;12366:3;12355:9;12351:19;12337:12;12307:64;:::i;:::-;12293:78;;12420:2;12412:6;12408:15;12402:22;12433:52;12481:2;12470:9;12466:18;12450:14;5510:1;5499:20;5487:33;;5435:91;12433:52;-1:-1:-1;12534:2:30;12522:15;;12516:22;6516:13;;6509:21;12594:2;12579:18;;6497:34;-1:-1:-1;12647:2:30;12635:15;;12629:22;6516:13;;6509:21;12707:3;12692:19;;6497:34;-1:-1:-1;12761:3:30;12749:16;;12743:23;6516:13;;6509:21;12822:3;12807:19;;6497:34;-1:-1:-1;12876:3:30;12864:16;;12858:23;12922:22;;;-1:-1:-1;;12918:36:30;12912:3;12897:19;;12890:65;12978:60;12926:6;12858:23;12978:60;:::i;:::-;12964:74;;;13087:3;13079:6;13075:16;13069:23;13161:2;13157:7;13145:9;13137:6;13133:22;13129:36;13123:3;13112:9;13108:19;13101:65;13189;13247:6;13231:14;13189:65;:::i;:::-;13175:79;;;13303:3;13295:6;13291:16;13285:23;13377:2;13373:7;13361:9;13353:6;13349:22;13345:36;13339:3;13328:9;13324:19;13317:65;13405:62;13460:6;13444:14;13405:62;:::i;:::-;13391:76;;;13516:3;13508:6;13504:16;13498:23;13593:2;13589:7;13577:9;13569:6;13565:22;13561:36;13552:6;13541:9;13537:22;13530:68;13615:41;13649:6;13633:14;13615:41;:::i;13667:247::-;13726:6;13779:2;13767:9;13758:7;13754:23;13750:32;13747:52;;;13795:1;13792;13785:12;13747:52;13834:9;13821:23;13853:31;13878:5;13853:31;:::i;:::-;13903:5;13667:247;-1:-1:-1;;;13667:247:30:o;14116:186::-;14164:4;-1:-1:-1;;;;;14189:6:30;14186:30;14183:56;;;14219:18;;:::i;:::-;-1:-1:-1;14285:2:30;14264:15;-1:-1:-1;;14260:29:30;14291:4;14256:40;;14116:186::o;14307:1757::-;14416:6;14424;14432;14485:2;14473:9;14464:7;14460:23;14456:32;14453:52;;;14501:1;14498;14491:12;14453:52;14540:9;14527:23;14559:31;14584:5;14559:31;:::i;:::-;14609:5;-1:-1:-1;14666:2:30;14651:18;;14638:32;14679:31;14638:32;14679:31;:::i;:::-;14729:7;-1:-1:-1;14787:2:30;14772:18;;14759:32;-1:-1:-1;;;;;14803:30:30;;14800:50;;;14846:1;14843;14836:12;14800:50;14869:22;;14922:4;14914:13;;14910:27;-1:-1:-1;14900:55:30;;14951:1;14948;14941:12;14900:55;14991:2;14978:16;15014:62;15030:45;15068:6;15030:45;:::i;15014:62::-;15098:3;15122:6;15117:3;15110:19;15154:2;15149:3;15145:12;15138:19;;15209:2;15199:6;15196:1;15192:14;15188:2;15184:23;15180:32;15166:46;;15235:7;15227:6;15224:19;15221:39;;;15256:1;15253;15246:12;15221:39;15288:2;15284;15280:11;15300:734;15316:6;15311:3;15308:15;15300:734;;;15402:3;15389:17;-1:-1:-1;;;;;15425:11:30;15422:35;15419:55;;;15470:1;15467;15460:12;15419:55;15497:20;;15552:2;15544:11;;15540:25;-1:-1:-1;15530:53:30;;15579:1;15576;15569:12;15530:53;15633:2;15629;15625:11;15612:25;15665:54;15681:37;15709:8;15681:37;:::i;15665:54::-;15732:25;;;15776:35;15784:17;;;15776:35;15773:48;-1:-1:-1;15770:68:30;;;15834:1;15831;15824:12;15770:68;15895:8;15890:2;15886;15882:11;15877:2;15868:7;15864:16;15851:53;15957:1;15952:2;15941:8;15932:7;15928:22;15924:31;15917:42;15984:7;15979:3;15972:20;;;;16021:2;16016:3;16012:12;16005:19;;15342:2;15337:3;15333:12;15326:19;;15300:734;;;15304:3;16053:5;16043:15;;;;;;14307:1757;;;;;:::o;16069:787::-;16255:4;16303:2;16292:9;16288:18;16347:6;16344:1;16333:21;16322:9;16315:40;16405:6;16402:1;16391:21;16386:2;16375:9;16371:18;16364:49;16449:2;16444;16433:9;16429:18;16422:30;16472:6;16507;16501:13;16538:6;16530;16523:22;16576:3;16565:9;16561:19;16554:26;;16615:2;16607:6;16603:15;16589:29;;16636:1;16646:184;16660:6;16657:1;16654:13;16646:184;;;16735:13;;16732:1;16721:28;16709:41;;16779:2;16805:15;;;;16770:12;;;;16682:1;16675:9;16646:184;;;-1:-1:-1;16847:3:30;;16069:787;-1:-1:-1;;;;;;;16069:787:30:o;16987:1170::-;17133:2;17122:9;17115:21;17096:4;17156:1;17189:6;17183:13;17219:3;17248:9;17245:1;17241:17;17231:27;;17308:1;17297:9;17293:17;17329:18;17319:61;;17373:4;17365:6;17361:17;17351:27;;17319:61;17426:2;17418:6;17415:14;17395:18;17392:38;17389:165;;-1:-1:-1;;;17453:33:30;;17509:4;17506:1;17499:15;17539:4;17460:3;17527:17;17389:165;17625:2;17610:18;;101:19;;;144:14;;;17653:18;17680:128;;;;17822:1;17817:314;;;;17646:485;;17680:128;-1:-1:-1;;17713:24:30;;17701:37;;17781:14;;17774:22;17771:1;17767:30;17758:40;;;-1:-1:-1;17680:128:30;;17817:314;16934:1;16927:14;;;16971:4;16958:18;;17912:1;17926:164;17940:6;17937:1;17934:13;17926:164;;;18018:14;;18005:11;;;17998:35;18074:1;18061:15;;;;17962:2;17955:10;17926:164;;;18110:11;;;-1:-1:-1;;17646:485:30;-1:-1:-1;18148:3:30;;16987:1170;-1:-1:-1;;;;;;;16987:1170:30:o;19250:255::-;19370:19;;19409:2;19401:11;;19398:101;;;-1:-1:-1;;19470:2:30;19466:12;;;19463:1;19459:20;19455:33;19444:45;19398:101;19250:255;;;;:::o;21137:347::-;21339:2;21321:21;;;21378:2;21358:18;;;21351:30;21417:25;21412:2;21397:18;;21390:53;21475:2;21460:18;;21137:347::o;22196:492::-;22250:5;22303:3;22296:4;22288:6;22284:17;22280:27;22270:55;;22321:1;22318;22311:12;22270:55;22354:6;22348:13;22393:4;22385:6;22381:17;22422:1;22443:52;22459:35;22487:6;22459:35;:::i;22443:52::-;22432:63;;22520:6;22511:7;22504:23;22560:3;22551:6;22546:3;22542:16;22539:25;22536:45;;;22577:1;22574;22567:12;22536:45;22590:67;22650:6;22643:4;22634:7;22630:18;22625:3;22590:67;:::i;22693:138::-;22772:13;;22794:31;22772:13;22794:31;:::i;:::-;22693:138;;;:::o;22836:164::-;22912:13;;22961;;22954:21;22944:32;;22934:60;;22990:1;22987;22980:12;23005:134;23082:13;;23104:29;23082:13;23104:29;:::i;23144:2059::-;23217:5;23270:3;23263:4;23255:6;23251:17;23247:27;23237:55;;23288:1;23285;23278:12;23237:55;23321:6;23315:13;23348:62;23364:45;23402:6;23364:45;:::i;23348:62::-;23434:3;23458:6;23453:3;23446:19;23490:4;23485:3;23481:14;23474:21;;23551:4;23541:6;23538:1;23534:14;23526:6;23522:27;23518:38;23504:52;;23579:3;23571:6;23568:15;23565:35;;;23596:1;23593;23586:12;23565:35;23632:4;23624:6;23620:17;23646:1526;23662:6;23657:3;23654:15;23646:1526;;;23743:3;23737:10;-1:-1:-1;;;;;23766:11:30;23763:35;23760:55;;;23811:1;23808;23801:12;23760:55;23838:24;;23910:4;23886:12;;;-1:-1:-1;;23882:26:30;23878:37;23875:57;;;23928:1;23925;23918:12;23875:57;23958:22;;:::i;:::-;24021:4;24017:2;24013:13;24007:20;24000:5;23993:35;24071:4;24067:2;24063:13;24057:20;-1:-1:-1;;;;;24096:8:30;24093:32;24090:52;;;24138:1;24135;24128:12;24090:52;24188:4;24177:8;24173:2;24169:17;24165:28;24155:38;;;24227:4;24222:2;24217:3;24213:12;24209:23;24206:43;;;24245:1;24242;24235:12;24206:43;24277:22;;:::i;:::-;24328:30;24355:2;24328:30;:::i;:::-;24319:7;24312:47;24401:4;24397:2;24393:13;24387:20;24420:33;24445:7;24420:33;:::i;:::-;24486:4;24473:18;;24466:35;24544:4;24536:13;;24530:20;-1:-1:-1;;;;;24566:32:30;;24563:52;;;24611:1;24608;24601:12;24563:52;24655;24703:3;24692:8;24688:2;24684:17;24655:52;:::i;:::-;24648:4;24639:7;24635:18;24628:80;;24751:2;24747;24743:11;24737:18;-1:-1:-1;;;;;24774:8:30;24771:32;24768:52;;;24816:1;24813;24806:12;24768:52;24858;24906:3;24895:8;24891:2;24887:17;24858:52;:::i;:::-;24853:2;24844:7;24840:16;24833:78;;24953:3;24949:2;24945:12;24939:19;24924:34;;24971:33;24996:7;24971:33;:::i;:::-;25037:3;25024:17;;25017:34;;;;25082:4;25071:16;;;25064:33;;;;25110:18;;25148:14;;;;23679;23646:1526;;;-1:-1:-1;25190:7:30;23144:2059;-1:-1:-1;;;;;23144:2059:30:o;25208:762::-;25272:5;25320:4;25308:9;25303:3;25299:19;25295:30;25292:50;;;25338:1;25335;25328:12;25292:50;25391:2;25385:9;25433:4;25421:17;;-1:-1:-1;;;;;25453:34:30;;25489:22;;;25450:62;25447:88;;;25515:18;;:::i;:::-;25555:10;25551:2;25544:22;;25584:6;25575:15;;25620:9;25614:16;25639:31;25662:7;25639:31;:::i;:::-;25679:23;;25747:2;25732:18;;25726:25;25760:33;25726:25;25760:33;:::i;:::-;25821:2;25809:15;;25802:32;25879:2;25864:18;;25858:25;25892:31;25858:25;25892:31;:::i;:::-;25951:2;25939:15;;;;25932:32;25208:762;;-1:-1:-1;;25208:762:30:o;25975:1417::-;26044:5;26092:6;26080:9;26075:3;26071:19;26067:32;26064:52;;;26112:1;26109;26102:12;26064:52;26134:22;;:::i;:::-;26125:31;;26185:9;26179:16;-1:-1:-1;;;;;26210:6:30;26207:30;26204:50;;;26250:1;26247;26240:12;26204:50;26277:57;26330:3;26321:6;26310:9;26306:22;26277:57;:::i;:::-;26270:5;26263:72;;26381:2;26370:9;26366:18;26360:25;-1:-1:-1;;;;;26400:8:30;26397:32;26394:52;;;26442:1;26439;26432:12;26394:52;26478:59;26533:3;26522:8;26511:9;26507:24;26478:59;:::i;:::-;26473:2;26466:5;26462:14;26455:83;;26570:49;26615:2;26604:9;26600:18;26570:49;:::i;:::-;26565:2;26558:5;26554:14;26547:73;26666:2;26655:9;26651:18;26645:25;-1:-1:-1;;;;;26685:8:30;26682:32;26679:52;;;26727:1;26724;26717:12;26679:52;26763:59;26818:3;26807:8;26796:9;26792:24;26763:59;:::i;:::-;26758:2;26751:5;26747:14;26740:83;;26856:47;26898:3;26887:9;26883:19;26856:47;:::i;:::-;26850:3;26843:5;26839:15;26832:72;26937:48;26980:3;26969:9;26965:19;26937:48;:::i;:::-;26931:3;26924:5;26920:15;26913:73;27019:47;27061:3;27050:9;27046:19;27019:47;:::i;:::-;27013:3;27006:5;27002:15;26995:72;27113:3;27102:9;27098:19;27092:26;-1:-1:-1;;;;;27133:8:30;27130:32;27127:52;;;27175:1;27172;27165:12;27127:52;27212:78;27286:3;27275:8;27264:9;27260:24;27212:78;:::i;:::-;27206:3;27199:5;27195:15;27188:103;;27324:61;27381:3;27375;27364:9;27360:19;27324:61;:::i;:::-;27318:3;27311:5;27307:15;27300:86;25975:1417;;;;:::o;27397:1326::-;27470:5;27523:3;27516:4;27508:6;27504:17;27500:27;27490:55;;27541:1;27538;27531:12;27490:55;27574:6;27568:13;27601:62;27617:45;27655:6;27617:45;:::i;27601:62::-;27687:3;27711:6;27706:3;27699:19;27743:4;27738:3;27734:14;27727:21;;27807:4;27799;27791:6;27787:17;27779:6;27775:30;27771:41;27757:55;;27835:3;27827:6;27824:15;27821:35;;;27852:1;27849;27842:12;27821:35;27888:4;27880:6;27876:17;27902:790;27918:6;27913:3;27910:15;27902:790;;;27996:4;27990:3;27985;27981:13;27977:24;27974:44;;;28014:1;28011;28004:12;27974:44;28044:22;;:::i;:::-;28100:3;28094:10;28117:31;28140:7;28117:31;:::i;:::-;28161:22;;28226:4;28217:14;;28211:21;28245:33;28211:21;28245:33;:::i;:::-;28309:4;28298:16;;28291:33;28360:40;28396:2;28387:12;;28360:40;:::i;:::-;28355:2;28348:5;28344:14;28337:64;28437:40;28473:2;28468:3;28464:12;28437:40;:::i;:::-;28432:2;28425:5;28421:14;28414:64;28521:3;28516;28512:13;28506:20;28539:33;28564:7;28539:33;:::i;:::-;28603:3;28592:15;;28585:32;28630:18;;28677:4;28668:14;;;;27944:4;27935:14;27902:790;;28728:1524;28806:5;28859:3;28852:4;28844:6;28840:17;28836:27;28826:55;;28877:1;28874;28867:12;28826:55;28910:6;28904:13;28937:62;28953:45;28991:6;28953:45;:::i;28937:62::-;29023:3;29047:6;29042:3;29035:19;29079:4;29074:3;29070:14;29063:21;;29143:4;29135;29127:6;29123:17;29115:6;29111:30;29107:41;29093:55;;29171:3;29163:6;29160:15;29157:35;;;29188:1;29185;29178:12;29157:35;29224:4;29216:6;29212:17;29238:983;29254:6;29249:3;29246:15;29238:983;;;29332:4;29326:3;29321;29317:13;29313:24;29310:44;;;29350:1;29347;29340:12;29310:44;29380:22;;:::i;:::-;29436:3;29430:10;29453:31;29476:7;29453:31;:::i;:::-;29497:22;;29562:4;29553:14;;29547:21;29581:31;29547:21;29581:31;:::i;:::-;29643:4;29632:16;;29625:33;29701:2;29692:12;;29686:19;29718:31;29686:19;29718:31;:::i;:::-;29780:2;29769:14;;29762:31;29836:2;29827:12;;29821:19;29853:31;29821:19;29853:31;:::i;:::-;29915:2;29904:14;;29897:31;29965:41;30001:3;29992:13;;29965:41;:::i;:::-;29959:3;29952:5;29948:15;29941:66;30050:3;30045;30041:13;30035:20;30068:33;30093:7;30068:33;:::i;:::-;30132:3;30121:15;;30114:32;30159:18;;30206:4;30197:14;;;;29280:4;29271:14;29238:983;;30257:1523;30332:5;30385:3;30378:4;30370:6;30366:17;30362:27;30352:55;;30403:1;30400;30393:12;30352:55;30436:6;30430:13;30463:62;30479:45;30517:6;30479:45;:::i;30463:62::-;30549:3;30573:6;30568:3;30561:19;30605:4;30600:3;30596:14;30589:21;;30669:4;30661;30653:6;30649:17;30641:6;30637:30;30633:41;30619:55;;30697:3;30689:6;30686:15;30683:35;;;30714:1;30711;30704:12;30683:35;30750:4;30742:6;30738:17;30764:985;30780:6;30775:3;30772:15;30764:985;;;30858:4;30852:3;30847;30843:13;30839:24;30836:44;;;30876:1;30873;30866:12;30836:44;30906:22;;:::i;:::-;30962:3;30956:10;30979:31;31002:7;30979:31;:::i;:::-;31023:22;;31088:4;31079:14;;31073:21;31107:31;31073:21;31107:31;:::i;:::-;31169:4;31158:16;;31151:33;31227:2;31218:12;;31212:19;31244:31;31212:19;31244:31;:::i;:::-;31306:2;31295:14;;31288:31;31362:2;31353:12;;31347:19;31379:33;31347:19;31379:33;:::i;:::-;31443:2;31432:14;;31425:31;31493:41;31529:3;31520:13;;31493:41;:::i;:::-;31487:3;31480:5;31476:15;31469:66;31578:3;31573;31569:13;31563:20;31596:33;31621:7;31596:33;:::i;:::-;31660:3;31649:15;;31642:32;31687:18;;31734:4;31725:14;;;;30806:4;30797:14;30764:985;;31785:1764;31883:6;31936:2;31924:9;31915:7;31911:23;31907:32;31904:52;;;31952:1;31949;31942:12;31904:52;31985:9;31979:16;-1:-1:-1;;;;;32010:6:30;32007:30;32004:50;;;32050:1;32047;32040:12;32004:50;32073:22;;32129:6;32111:16;;;32107:29;32104:49;;;32149:1;32146;32139:12;32104:49;32175:22;;:::i;:::-;32228:2;32222:9;-1:-1:-1;;;;;32246:8:30;32243:32;32240:52;;;32288:1;32285;32278:12;32240:52;32315:68;32375:7;32364:8;32360:2;32356:17;32315:68;:::i;:::-;32308:5;32301:83;;32416:40;32452:2;32448;32444:11;32416:40;:::i;:::-;32411:2;32404:5;32400:14;32393:64;32489:39;32524:2;32520;32516:11;32489:39;:::i;:::-;32484:2;32477:5;32473:14;32466:63;32561:39;32596:2;32592;32588:11;32561:39;:::i;:::-;32556:2;32549:5;32545:14;32538:63;32634:40;32669:3;32665:2;32661:12;32634:40;:::i;:::-;32628:3;32621:5;32617:15;32610:65;32714:3;32710:2;32706:12;32700:19;-1:-1:-1;;;;;32734:8:30;32731:32;32728:52;;;32776:1;32773;32766:12;32728:52;32813:75;32880:7;32869:8;32865:2;32861:17;32813:75;:::i;:::-;32807:3;32800:5;32796:15;32789:100;;32928:3;32924:2;32920:12;32914:19;-1:-1:-1;;;;;32948:8:30;32945:32;32942:52;;;32990:1;32987;32980:12;32942:52;33027:80;33099:7;33088:8;33084:2;33080:17;33027:80;:::i;:::-;33021:3;33014:5;33010:15;33003:105;;33147:3;33143:2;33139:12;33133:19;-1:-1:-1;;;;;33167:8:30;33164:32;33161:52;;;33209:1;33206;33199:12;33161:52;33246:77;33315:7;33304:8;33300:2;33296:17;33246:77;:::i;:::-;33240:3;33233:5;33229:15;33222:102;;33363:3;33359:2;33355:12;33349:19;-1:-1:-1;;;;;33383:8:30;33380:32;33377:52;;;33425:1;33422;33415:12;33377:52;33462:56;33510:7;33499:8;33495:2;33491:17;33462:56;:::i;:::-;33456:3;33445:15;;33438:81;-1:-1:-1;33449:5:30;31785:1764;-1:-1:-1;;;;31785:1764:30:o;34700:297::-;34818:12;;34865:4;34854:16;;;34848:23;;34818:12;34883:16;;34880:111;;;34977:1;34973:6;34963;34957:4;34953:17;34950:1;34946:25;34942:38;34935:5;34931:50;34922:59;;34880:111;;34700:297;;;:::o;38186:127::-;38247:10;38242:3;38238:20;38235:1;38228:31;38278:4;38275:1;38268:15;38302:4;38299:1;38292:15;38318:125;38383:9;;;38404:10;;;38401:36;;;38417:18;;:::i;38808:128::-;38875:9;;;38896:11;;;38893:37;;;38910:18;;:::i;39149:280::-;39218:6;39271:2;39259:9;39250:7;39246:23;39242:32;39239:52;;;39287:1;39284;39277:12;39239:52;39319:9;39313:16;39369:10;39362:5;39358:22;39351:5;39348:33;39338:61;;39395:1;39392;39385:12",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "_mockTokenInfo()": "d699a513",
        "burnToken(address,int64,int64[])": "d6910d06",
        "getAccountId(address)": "e0b490f7",
        "mintToken(address,int64,bytes[])": "e0f4059a"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Associated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Dissociated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"_mockTokenInfo\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"accountId\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bytes[]\",\"name\":\"metadata\",\"type\":\"bytes[]\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burnToken(address,int64,int64[])\":{\"params\":{\"amount\":\"Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.                Amount must be a positive non-zero number, not bigger than the token balance of the treasury                account (0; balance], represented in the lowest denomination.\",\"serialNumbers\":\"Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\",\"token\":\"The token for which to burn tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID\"},\"returns\":{\"newTotalSupply\":\"The new supply of tokens. For NFTs it is the total count of NFTs\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getAccountId(address)\":{\"details\":\"Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id.  See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties.\"},\"mintToken(address,int64,bytes[])\":{\"params\":{\"amount\":\"Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.               Amount must be a positive non-zero number represented in the lowest denomination of the               token. The new supply must be lower than 2^63.\",\"metadata\":\"Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.                 Maximum allowed size of each metadata is 100 bytes\",\"token\":\"The token for which to mint tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID\"},\"returns\":{\"newTotalSupply\":\"The new supply of tokens. For NFTs it is the total count of NFTs\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"serialNumbers\":\"If the token is an NFT the newly generate serial numbers, othersise empty.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burnToken(address,int64,int64[])\":{\"notice\":\"Burns an amount of the token from the defined treasury account\"},\"mintToken(address,int64,bytes[])\":{\"notice\":\"Mints an amount of the token to the defined treasury account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/HtsSystemContract.sol\":\"HtsSystemContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/HtsSystemContract.sol\":{\"keccak256\":\"0xd5cf62d3c20b0defa3aeb0e5eb86a3e394d92976b5b206d2e2ba1449b30cc54a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e0a4abe14c8dcce4f5405e455ba5d86a27ce274ce6d4d8b6886a73abfe9554\",\"dweb:/ipfs/QmV4HTEzUMnvjUPbBH91MrmBST5CHzEHfjmDmDjm1XXjjA\"]},\"src/IERC20.sol\":{\"keccak256\":\"0x73e339fdf45529d329db53345144d1ed1f9ad6a9ac169c350a550a14762ded76\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://596b618bfb51c3e8cfdf31e91a4037990fa25f23c58cf369e64ad16dd7662283\",\"dweb:/ipfs/QmRTnNftkmm1nqTV8BwSPJyxthbz3ucCqjQ22W4ydjwBkS\"]},\"src/IHederaTokenService.sol\":{\"keccak256\":\"0xaa0cc021b63c16b7530ec7f5db321625d98f40a163b53c4f87ce39f1b202d6ba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://390794b9430e8211ddc574338251998ef8aabefdacbf441def32af8a6ac7ea28\",\"dweb:/ipfs/QmeKZBAa1Yum26ANpQq8V62f6SsXvUdXUXGftePisvwfBC\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.28+commit.7893614a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "Associated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "Dissociated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "fallback"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "_mockTokenInfo",
                    "outputs": [
                        {
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "name": "token",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "string",
                                            "name": "name",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "symbol",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "treasury",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "memo",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "tokenSupplyType",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maxSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "freezeDefault",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "uint256",
                                                    "name": "keyType",
                                                    "type": "uint256"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "bool",
                                                            "name": "inheritAccountKey",
                                                            "type": "bool"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "contractId",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ed25519",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "delegatableContractId",
                                                            "type": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "name": "expiry",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "second",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "autoRenewAccount",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "internalType": "int64",
                                    "name": "totalSupply",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "deleted",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "defaultKycStatus",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "pauseStatus",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "minimumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maximumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "netOfTransfers",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "string",
                                    "name": "ledgerId",
                                    "type": "string"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        },
                        {
                            "internalType": "int64",
                            "name": "amount",
                            "type": "int64"
                        },
                        {
                            "internalType": "int64[]",
                            "name": "serialNumbers",
                            "type": "int64[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnToken",
                    "outputs": [
                        {
                            "internalType": "int64",
                            "name": "responseCode",
                            "type": "int64"
                        },
                        {
                            "internalType": "int64",
                            "name": "newTotalSupply",
                            "type": "int64"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAccountId",
                    "outputs": [
                        {
                            "internalType": "uint32",
                            "name": "accountId",
                            "type": "uint32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        },
                        {
                            "internalType": "int64",
                            "name": "amount",
                            "type": "int64"
                        },
                        {
                            "internalType": "bytes[]",
                            "name": "metadata",
                            "type": "bytes[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintToken",
                    "outputs": [
                        {
                            "internalType": "int64",
                            "name": "responseCode",
                            "type": "int64"
                        },
                        {
                            "internalType": "int64",
                            "name": "newTotalSupply",
                            "type": "int64"
                        },
                        {
                            "internalType": "int64[]",
                            "name": "serialNumbers",
                            "type": "int64[]"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "burnToken(address,int64,int64[])": {
                        "params": {
                            "amount": "Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.                Amount must be a positive non-zero number, not bigger than the token balance of the treasury                account (0; balance], represented in the lowest denomination.",
                            "serialNumbers": "Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.",
                            "token": "The token for which to burn tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID"
                        },
                        "returns": {
                            "newTotalSupply": "The new supply of tokens. For NFTs it is the total count of NFTs",
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getAccountId(address)": {
                        "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id.  See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
                    },
                    "mintToken(address,int64,bytes[])": {
                        "params": {
                            "amount": "Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.               Amount must be a positive non-zero number represented in the lowest denomination of the               token. The new supply must be lower than 2^63.",
                            "metadata": "Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.                 Maximum allowed size of each metadata is 100 bytes",
                            "token": "The token for which to mint tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID"
                        },
                        "returns": {
                            "newTotalSupply": "The new supply of tokens. For NFTs it is the total count of NFTs",
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "serialNumbers": "If the token is an NFT the newly generate serial numbers, othersise empty."
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "burnToken(address,int64,int64[])": {
                        "notice": "Burns an amount of the token from the defined treasury account"
                    },
                    "mintToken(address,int64,bytes[])": {
                        "notice": "Mints an amount of the token to the defined treasury account"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": ["forge-std/=lib/forge-std/src/"],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/HtsSystemContract.sol": "HtsSystemContract"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "src/HtsSystemContract.sol": {
                "keccak256": "0xd5cf62d3c20b0defa3aeb0e5eb86a3e394d92976b5b206d2e2ba1449b30cc54a",
                "urls": [
                    "bzz-raw://a1e0a4abe14c8dcce4f5405e455ba5d86a27ce274ce6d4d8b6886a73abfe9554",
                    "dweb:/ipfs/QmV4HTEzUMnvjUPbBH91MrmBST5CHzEHfjmDmDjm1XXjjA"
                ],
                "license": "Apache-2.0"
            },
            "src/IERC20.sol": {
                "keccak256": "0x73e339fdf45529d329db53345144d1ed1f9ad6a9ac169c350a550a14762ded76",
                "urls": [
                    "bzz-raw://596b618bfb51c3e8cfdf31e91a4037990fa25f23c58cf369e64ad16dd7662283",
                    "dweb:/ipfs/QmRTnNftkmm1nqTV8BwSPJyxthbz3ucCqjQ22W4ydjwBkS"
                ],
                "license": "Apache-2.0"
            },
            "src/IHederaTokenService.sol": {
                "keccak256": "0xaa0cc021b63c16b7530ec7f5db321625d98f40a163b53c4f87ce39f1b202d6ba",
                "urls": [
                    "bzz-raw://390794b9430e8211ddc574338251998ef8aabefdacbf441def32af8a6ac7ea28",
                    "dweb:/ipfs/QmeKZBAa1Yum26ANpQq8V62f6SsXvUdXUXGftePisvwfBC"
                ],
                "license": "Apache-2.0"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 39002,
                "contract": "src/HtsSystemContract.sol:HtsSystemContract",
                "label": "name",
                "offset": 0,
                "slot": "0",
                "type": "t_string_storage"
            },
            {
                "astId": 39004,
                "contract": "src/HtsSystemContract.sol:HtsSystemContract",
                "label": "symbol",
                "offset": 0,
                "slot": "1",
                "type": "t_string_storage"
            },
            {
                "astId": 39006,
                "contract": "src/HtsSystemContract.sol:HtsSystemContract",
                "label": "decimals",
                "offset": 0,
                "slot": "2",
                "type": "t_uint8"
            },
            {
                "astId": 39008,
                "contract": "src/HtsSystemContract.sol:HtsSystemContract",
                "label": "totalSupply",
                "offset": 0,
                "slot": "3",
                "type": "t_uint256"
            }
        ],
        "types": {
            "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            },
            "t_uint8": {
                "encoding": "inplace",
                "label": "uint8",
                "numberOfBytes": "1"
            }
        }
    },
    "id": 23
}
