{
    "abi": [
        {
            "type": "fallback",
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "_mockTokenInfo",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.TokenInfo",
                    "components": [
                        {
                            "name": "token",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "components": [
                                {
                                    "name": "name",
                                    "type": "string",
                                    "internalType": "string"
                                },
                                {
                                    "name": "symbol",
                                    "type": "string",
                                    "internalType": "string"
                                },
                                {
                                    "name": "treasury",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "memo",
                                    "type": "string",
                                    "internalType": "string"
                                },
                                {
                                    "name": "tokenSupplyType",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "maxSupply",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "freezeDefault",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "components": [
                                        {
                                            "name": "keyType",
                                            "type": "uint256",
                                            "internalType": "uint256"
                                        },
                                        {
                                            "name": "key",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "components": [
                                                {
                                                    "name": "inheritAccountKey",
                                                    "type": "bool",
                                                    "internalType": "bool"
                                                },
                                                {
                                                    "name": "contractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "ed25519",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "delegatableContractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "expiry",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "components": [
                                        {
                                            "name": "second",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "autoRenewAccount",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "autoRenewPeriod",
                                            "type": "int64",
                                            "internalType": "int64"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "totalSupply",
                            "type": "int64",
                            "internalType": "int64"
                        },
                        {
                            "name": "deleted",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "defaultKycStatus",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "pauseStatus",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "fixedFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "components": [
                                {
                                    "name": "amount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "tokenId",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "fractionalFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "components": [
                                {
                                    "name": "numerator",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "denominator",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "minimumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "maximumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "netOfTransfers",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "royaltyFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "components": [
                                {
                                    "name": "numerator",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "denominator",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "amount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "tokenId",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "ledgerId",
                            "type": "string",
                            "internalType": "string"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "burnToken",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "int64",
                    "internalType": "int64"
                },
                {
                    "name": "serialNumbers",
                    "type": "int64[]",
                    "internalType": "int64[]"
                }
            ],
            "outputs": [
                {
                    "name": "responseCode",
                    "type": "int64",
                    "internalType": "int64"
                },
                {
                    "name": "newTotalSupply",
                    "type": "int64",
                    "internalType": "int64"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getAccountId",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "accountId",
                    "type": "uint32",
                    "internalType": "uint32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getTokenInfo",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "responseCode",
                    "type": "int64",
                    "internalType": "int64"
                },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.TokenInfo",
                    "components": [
                        {
                            "name": "token",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "components": [
                                {
                                    "name": "name",
                                    "type": "string",
                                    "internalType": "string"
                                },
                                {
                                    "name": "symbol",
                                    "type": "string",
                                    "internalType": "string"
                                },
                                {
                                    "name": "treasury",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "memo",
                                    "type": "string",
                                    "internalType": "string"
                                },
                                {
                                    "name": "tokenSupplyType",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "maxSupply",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "freezeDefault",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "components": [
                                        {
                                            "name": "keyType",
                                            "type": "uint256",
                                            "internalType": "uint256"
                                        },
                                        {
                                            "name": "key",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "components": [
                                                {
                                                    "name": "inheritAccountKey",
                                                    "type": "bool",
                                                    "internalType": "bool"
                                                },
                                                {
                                                    "name": "contractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "ed25519",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "delegatableContractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "expiry",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "components": [
                                        {
                                            "name": "second",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "autoRenewAccount",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "autoRenewPeriod",
                                            "type": "int64",
                                            "internalType": "int64"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "totalSupply",
                            "type": "int64",
                            "internalType": "int64"
                        },
                        {
                            "name": "deleted",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "defaultKycStatus",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "pauseStatus",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "fixedFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "components": [
                                {
                                    "name": "amount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "tokenId",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "fractionalFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "components": [
                                {
                                    "name": "numerator",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "denominator",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "minimumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "maximumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "netOfTransfers",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "royaltyFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "components": [
                                {
                                    "name": "numerator",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "denominator",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "amount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "tokenId",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "ledgerId",
                            "type": "string",
                            "internalType": "string"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "mintToken",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "int64",
                    "internalType": "int64"
                },
                {
                    "name": "metadata",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                }
            ],
            "outputs": [
                {
                    "name": "responseCode",
                    "type": "int64",
                    "internalType": "int64"
                },
                {
                    "name": "newTotalSupply",
                    "type": "int64",
                    "internalType": "int64"
                },
                {
                    "name": "serialNumbers",
                    "type": "int64[]",
                    "internalType": "int64[]"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Associated",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Dissociated",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        }
    ],
    "bytecode": {
        "object": "0x6080604052348015600f57600080fd5b50611eb18061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631d17f55b146101a55780631f69565f146101ce578063d6910d06146101ef578063e0b490f71461021c578063e0f4059a14610244575b6000366060601c8210156100b25760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a206e6f7420656e6f7567682063616c6c6461746100000060448201526064015b60405180910390fd5b60006100c1600482368161149a565b6100ca916114c4565b60e01c905063618dc65e81146101225760405162461bcd60e51b815260206004820152601e60248201527f66616c6c6261636b3a20756e737570706f727465642073656c6563746f72000060448201526064016100a9565b600061013260186004368461149a565b61013b916114fc565b60601c905030811461018f5760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a20746f6b656e206973206e6f742063616c6c657200000060448201526064016100a9565b610197610266565b805195506020019350505050f35b6101b86101b336600461154e565b6107fb565b6040516101c591906119da565b60405180910390f35b6101e16101dc36600461154e565b610a21565b6040516101c59291906119ed565b6102026101fd366004611a8e565b610a3f565b60408051600793840b81529190920b6020820152016101c5565b61022f61022a36600461154e565b610b46565b60405163ffffffff90911681526020016101c5565b610257610252366004611b53565b610bc2565b6040516101c593929190611c8f565b60606000610278601c6018368461149a565b610281916114c4565b905063f90221fd60e01b6001600160e01b03198216016102c25760006040516020016102ad9190611cee565b60405160208183030381529060405291505090565b63cec31a9960e01b6001600160e01b03198216016102f1576002546040805160ff9092166020830152016102ad565b63e7e9f22360e01b6001600160e01b031982160161031e576003546040516020016102ad91815260200190565b636a2764bf60e01b6001600160e01b03198216016103485760016040516020016102ad9190611cee565b638f5f7dcf60e01b6001600160e01b031982160161040057603c3610156103b15760405162461bcd60e51b815260206004820152601e60248201527f62616c616e63654f663a204e6f7420656e6f7567682063616c6c64617461000060448201526064016100a9565b60006103c1603c6028368461149a565b6103ca916114fc565b60601c90506103d881610cdc565b6040516020016103ea91815260200190565b6040516020818303038152906040529250505090565b6356fa634560e01b6001600160e01b03198216016104d357605c3610156104695760405162461bcd60e51b815260206004820152601d60248201527f7472616e736665723a204e6f7420656e6f7567682063616c6c6461746100000060448201526064016100a9565b6000610479603c6028368461149a565b610482916114fc565b60601c90506000610497605c603c368461149a565b6104a091611d9c565b9050336104ae818484610cf0565b6040805160016020820152015b60405160208183030381529060405294505050505090565b63dc478d2360e01b6001600160e01b03198216016105cf57607c36101561053c5760405162461bcd60e51b815260206004820152601e60248201527f7472616e73666572463a204e6f7420656e6f7567682063616c6c64617461000060448201526064016100a9565b600061054c603c6028368461149a565b610555916114fc565b60601c9050600061056a605c6048368461149a565b610573916114fc565b60601c90506000610588607c605c368461149a565b61059191611d9c565b90503361059f848284610d9a565b6105aa848484610cf0565b6040805160016020820152016040516020818303038152906040529550505050505090565b63114e896160e11b6001600160e01b03198216016106a757605c3610156106385760405162461bcd60e51b815260206004820152601e60248201527f616c6c6f77616e63653a204e6f7420656e6f7567682063616c6c64617461000060448201526064016100a9565b6000610648603c6028368461149a565b610651916114fc565b60601c90506000610666605c6048368461149a565b61066f916114fc565b60601c905061067e8282610e14565b60405160200161069091815260200190565b604051602081830303815290604052935050505090565b63f6a1584d60e01b6001600160e01b03198216016107b357605c3610156107105760405162461bcd60e51b815260206004820152601c60248201527f617070726f76653a204e6f7420656e6f7567682063616c6c646174610000000060448201526064016100a9565b6000610720603c6028368461149a565b610729916114fc565b60601c9050600061073e605c603c368461149a565b61074791611d9c565b905033610755818484610e2a565b826001600160a01b0316816001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161079a91815260200190565b60405180910390a36040805160016020820152016104bb565b60405162461bcd60e51b815260206004820152601f60248201527f7265646972656374466f72546f6b656e3a206e6f7420737570706f727465640060448201526064016100a9565b610803611386565b60408051610260810182526000610240820181815261012083019081528351602080820186528382526101408501919091526101608401839052845180820186528381526101808501526101a084018390526101c084018390526101e08401839052845183815290810190945291928392916102008401919061089c565b61088961143d565b8152602001906001900390816108815790505b5081526040805160608082018352600080835260208084018290528385018290529485019290925293855260035460070b85840152848201819052928401839052608084018390528051838152918201905260a09092019190610935565b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816108fa5790505b508152602001600060405190808252806020026020018201604052801561099d57816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a0820152825260001990920191018161095b5790505b5081526020016000604051908082528060200260200182016040528015610a0557816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a082015282526000199092019101816109c35790505b5081526040805160208181019092526000815291015292915050565b6000610a2b611386565b60169150610a38836107fb565b9050915091565b6000803061016714610a635760405162461bcd60e51b81526004016100a990611dbb565b6001600160a01b038516610ab95760405162461bcd60e51b815260206004820152601860248201527f6275726e546f6b656e3a20696e76616c696420746f6b656e000000000000000060448201526064016100a9565b60008460070b13610b0c5760405162461bcd60e51b815260206004820152601960248201527f6275726e546f6b656e3a20696e76616c696420616d6f756e740000000000000060448201526064016100a9565b6000610b17866107fb565b9050610b358160000151604001518667ffffffffffffffff16610eeb565b505060035460169590945092505050565b60003061016714610b695760405162461bcd60e51b81526004016100a990611dbb565b6040805163e0b490f760e01b602082018190526000602483018190526001600160601b0319606087901b16602c84015290929091829101604051602081830303815290604052610bb890611df2565b5495945050505050565b60008060603061016714610be85760405162461bcd60e51b81526004016100a990611dbb565b6001600160a01b038616610c3e5760405162461bcd60e51b815260206004820152601860248201527f6d696e74546f6b656e3a20696e76616c696420746f6b656e000000000000000060448201526064016100a9565b60008560070b13610c915760405162461bcd60e51b815260206004820152601960248201527f6d696e74546f6b656e3a20696e76616c696420616d6f756e740000000000000060448201526064016100a9565b6000610c9c876107fb565b9050610cba8160000151604001518767ffffffffffffffff16610f92565b5050600354604080516000815260208101909152601697919650945092505050565b600080610ce883611035565b549392505050565b6001600160a01b038316610d3c5760405162461bcd60e51b8152602060048201526013602482015272343a399d1034b73b30b634b21039b2b73232b960691b60448201526064016100a9565b6001600160a01b038216610d8a5760405162461bcd60e51b8152602060048201526015602482015274343a399d1034b73b30b634b2103932b1b2b4bb32b960591b60448201526064016100a9565b610d95838383611107565b505050565b6000610da68484610e14565b90506000198114610e0e5781811015610e015760405162461bcd60e51b815260206004820152601d60248201527f5f7370656e64416c6c6f77616e63653a20696e73756666696369656e7400000060448201526064016100a9565b610e0e8484848403610e2a565b50505050565b600080610e218484611237565b54949350505050565b6001600160a01b038316610e805760405162461bcd60e51b815260206004820152601760248201527f5f617070726f76653a20696e76616c6964206f776e657200000000000000000060448201526064016100a9565b6001600160a01b038216610ed65760405162461bcd60e51b815260206004820152601960248201527f5f617070726f76653a20696e76616c6964207370656e6465720000000000000060448201526064016100a9565b6000610ee28484611237565b91909155505050565b6001600160a01b038216610f3a5760405162461bcd60e51b815260206004820152601660248201527517d89d5c9b8e881a5b9d985b1a59081858d8dbdd5b9d60521b60448201526064016100a9565b60008111610f825760405162461bcd60e51b815260206004820152601560248201527417d89d5c9b8e881a5b9d985b1a5908185b5bdd5b9d605a1b60448201526064016100a9565b610f8e82600083611107565b5050565b6001600160a01b038216610fe15760405162461bcd60e51b815260206004820152601660248201527517db5a5b9d0e881a5b9d985b1a59081858d8dbdd5b9d60521b60448201526064016100a9565b600081116110295760405162461bcd60e51b815260206004820152601560248201527417db5a5b9d0e881a5b9d985b1a5908185b5bdd5b9d605a1b60448201526064016100a9565b610f8e60008383611107565b60405163e0b490f760e01b81526001600160a01b03821660048201526000906370a0823160e01b90829081906101679063e0b490f790602401602060405180830381865afa15801561108b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110af9190611e19565b604080516001600160e01b0319808716602083015267ffffffffffffffff1986841b16602483015260e084901b16603c820152919250016040516020818303038152906040526110fe90611df2565b95945050505050565b6001600160a01b0383166111325780600360008282546111279190611e55565b909155506111989050565b600061113d84611035565b8054909150828110156111925760405162461bcd60e51b815260206004820152601f60248201527f5f7472616e736665723a20696e73756666696369656e742062616c616e63650060448201526064016100a9565b82900390555b6001600160a01b0382166111c35780600360008282546111b89190611e68565b909155506111e59050565b60006111ce83611035565b805490915060006111df8483611e55565b90925550505b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161122a91815260200190565b60405180910390a3505050565b60405163e0b490f760e01b81526001600160a01b0383166004820152600090636eb1769f60e11b90829081906101679063e0b490f790602401602060405180830381865afa15801561128d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b19190611e19565b60405163e0b490f760e01b81526001600160a01b03871660048201529091506000906101679063e0b490f790602401602060405180830381865afa1580156112fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113219190611e19565b604080516001600160e01b031980881660208301526001600160601b0319606088901b16602483015260e084811b8216603884015286901b16603c8201529192500160405160208183030381529060405261137b90611df2565b979650505050505050565b60408051610240810182526060610120820181815261014083018290526000610160840181905261018084018390526101a084018190526101c084018190526101e0840181905261020084018390528451928301855280835260208301819052938201939093526102208201529081908152602001600060070b8152602001600015158152602001600015158152602001600015158152602001606081526020016060815260200160608152602001606081525090565b6040518060400160405280600081526020016114956040518060a0016040528060001515815260200160006001600160a01b03168152602001606081526020016060815260200160006001600160a01b031681525090565b905290565b600080858511156114aa57600080fd5b838611156114b757600080fd5b5050820193919092039150565b80356001600160e01b031981169060048410156114f5576001600160e01b0319600485900360031b81901b82161691505b5092915050565b80356001600160601b031981169060148410156114f5576001600160601b031960149490940360031b84901b1690921692915050565b80356001600160a01b038116811461154957600080fd5b919050565b60006020828403121561156057600080fd5b61156982611532565b9392505050565b6000815180845260005b818110156115965760208185018101518683018201520161157a565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208501945060208160051b8301016020850160005b8381101561167957848303601f1901885281518051845260209081015160408286018190528151151581870152918101516001600160a01b031660608601529081015160a0608086015261162b60e0860182611570565b90506060820151603f198683030160a08701526116488282611570565b608093909301516001600160a01b031660c096909601959095525060209889019890935091909101906001016115d4565b50909695505050505050565b60008151610160845261169c610160850182611570565b9050602083015184820360208601526116b58282611570565b91505060408301516116d260408601826001600160a01b03169052565b50606083015184820360608601526116ea8282611570565b9150506080830151611700608086018215159052565b5060a083015161171560a086018260070b9052565b5060c083015161172960c086018215159052565b5060e083015184820360e086015261174182826115b6565b91505061010083015161177c6101008601828051600790810b83526020808301516001600160a01b031690840152604091820151900b910152565b509392505050565b600081518084526020840193506020830160005b828110156117f6578151805160070b87526020808201516001600160a01b03908116828a01526040808401511515908a01526060808401511515908a0152608092830151169188019190915260a09096019590910190600101611798565b5093949350505050565b600081518084526020840193506020830160005b828110156117f6578151805160070b8752602081015160070b6020880152604081015160070b6040880152606081015160070b606088015260808101511515608088015260018060a01b0360a08201511660a08801525060c086019550602082019150600181019050611814565b600081518084526020840193506020830160005b828110156117f6578151805160070b8752602081015160070b6020880152604081015160070b604088015260018060a01b03606082015116606088015260808101511515608088015260018060a01b0360a08201511660a08801525060c086019550602082019150600181019050611896565b600081516101208452611920610120850182611685565b90506020830151611936602086018260070b9052565b50604083015161194a604086018215159052565b50606083015161195e606086018215159052565b506080830151611972608086018215159052565b5060a083015184820360a086015261198a8282611784565b91505060c083015184820360c08601526119a48282611800565b91505060e083015184820360e08601526119be8282611882565b9150506101008301518482036101008601526110fe8282611570565b6020815260006115696020830184611909565b8260070b8152604060208201526000611a096040830184611909565b949350505050565b8035600781900b811461154957600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611a6257611a62611a23565b604052919050565b600067ffffffffffffffff821115611a8457611a84611a23565b5060051b60200190565b600080600060608486031215611aa357600080fd5b611aac84611532565b9250611aba60208501611a11565b9150604084013567ffffffffffffffff811115611ad657600080fd5b8401601f81018613611ae757600080fd5b8035611afa611af582611a6a565b611a39565b8082825260208201915060208360051b850101925088831115611b1c57600080fd5b6020840193505b82841015611b4557611b3484611a11565b825260209384019390910190611b23565b809450505050509250925092565b600080600060608486031215611b6857600080fd5b611b7184611532565b9250611b7f60208501611a11565b9150604084013567ffffffffffffffff811115611b9b57600080fd5b8401601f81018613611bac57600080fd5b8035611bba611af582611a6a565b8082825260208201915060208360051b850101925088831115611bdc57600080fd5b602084015b83811015611c8057803567ffffffffffffffff811115611c0057600080fd5b8501603f81018b13611c1157600080fd5b602081013567ffffffffffffffff811115611c2e57611c2e611a23565b611c41601f8201601f1916602001611a39565b8181526040838301018d1015611c5657600080fd5b81604084016020830137600060208383010152808652505050602083019250602081019050611be1565b50809450505050509250925092565b6000606082018560070b83528460070b60208401526060604084015280845180835260808501915060208601925060005b81811015611ce157835160070b835260209384019390920191600101611cc0565b5090979650505050505050565b602081526000808354818160011c90506001821680611d0e57607f821691505b602082108103611d2c57634e487b7160e01b84526022600452602484fd5b6020860182905260408601818015611d4b5760018114611d6157611d8f565b60ff198516825283151560051b82019550611d8f565b60008981526020902060005b85811015611d8957815484820152600190910190602001611d6d565b83019650505b5093979650505050505050565b80356020831015611db557600019602084900360031b1b165b92915050565b60208082526017908201527f68747343616c6c3a2064656c6567617465642063616c6c000000000000000000604082015260600190565b80516020808301519190811015611e13576000198160200360031b1b821691505b50919050565b600060208284031215611e2b57600080fd5b815163ffffffff8116811461156957600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115611db557611db5611e3f565b81810381811115611db557611db5611e3f56fea2646970667358221220a5ebde9abd8833871f6ee5dbe48a8c075c7322bbc1803a5d173fd461175e416b64736f6c634300081c0033",
        "sourceMap": "222:15785:23:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "222:15785:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8687:12;9120:2;9101:21;;;9093:63;;;;-1:-1:-1;;;9093:63:23;;371:2:30;9093:63:23;;;353:21:30;410:2;390:18;;;383:30;449:31;429:18;;;422:59;498:18;;9093:63:23;;;;;;;;;9167:24;9208:13;9219:1;9167:24;9208:8;9167:24;9208:13;:::i;:::-;9201:21;;;:::i;:::-;9194:29;;;-1:-1:-1;9261:10:23;9241:30;;9233:73;;;;-1:-1:-1;;;9233:73:23;;1408:2:30;9233:73:23;;;1390:21:30;1447:2;1427:18;;;1420:30;1486:32;1466:18;;;1459:60;1536:18;;9233:73:23;1206:354:30;9233:73:23;9317:13;9349:14;9360:2;9358:1;9349:8;9317:13;9349:14;:::i;:::-;9341:23;;;:::i;:::-;9333:32;;;-1:-1:-1;9400:4:23;9383:22;;9375:64;;;;-1:-1:-1;;;9375:64:23;;2146:2:30;9375:64:23;;;2128:21:30;2185:2;2165:18;;;2158:30;2224:31;2204:18;;;2197:59;2273:18;;9375:64:23;1944:353:30;9375:64:23;9618:20;:18;:20::i;:::-;222:15785;;;-1:-1:-1;222:15785:23;;;-1:-1:-1;;;;222:15785:23;2198:778;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1956:236;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5439:550::-;;;;;;:::i;:::-;;:::i;:::-;;;;12852:1:30;12841:21;;;12823:40;;12899:21;;;;12894:2;12879:18;;12872:49;12796:18;5439:550:23;12657:270:30;1282:337:23;;;;;;:::i;:::-;;:::i;:::-;;;13106:10:30;13094:23;;;13076:42;;13064:2;13049:18;1282:337:23;12932:192:30;3971:623:23;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;9747:2474::-;9794:12;9818:15;9843;9855:2;9852;9843:8;9818:15;9843;:::i;:::-;9836:23;;;:::i;:::-;9818:41;-1:-1:-1;;;;;;;;;;9874:32:23;;;9870:2293;;9940:4;9929:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;9922:23;;;9747:2474;:::o;9870:2293::-;-1:-1:-1;;;;;;;;;9966:36:23;;;9962:2201;;10036:8;;10025:20;;;10036:8;;;;10025:20;;;17074:36:30;17047:18;10025:20:23;16932:184:30;9962:2201:23;-1:-1:-1;;;;;;;;;10066:39:23;;;10062:2101;;10139:11;;10128:23;;;;;;17267:25:30;;17255:2;17240:18;;17121:177;10062:2101:23;-1:-1:-1;;;;;;;;;10172:34:23;;;10168:1995;;10240:6;10229:18;;;;;;;;:::i;10168:1995::-;-1:-1:-1;;;;;;;;;10268:37:23;;;10264:1899;;10348:2;10329:8;:21;;10321:64;;;;-1:-1:-1;;;10321:64:23;;17505:2:30;10321:64:23;;;17487:21:30;17544:2;17524:18;;;17517:30;17583:32;17563:18;;;17556:60;17633:18;;10321:64:23;17303:354:30;10321:64:23;10400:15;10434;10446:2;10443;10434:8;10400:15;10434;:::i;:::-;10426:24;;;:::i;:::-;10418:33;;10400:51;;10483:20;10495:7;10483:11;:20::i;:::-;10472:32;;;;;;17267:25:30;;17255:2;17240:18;;17121:177;10472:32:23;;;;;;;;;;;;;10465:39;;;;9747:2474;:::o;10264:1899::-;-1:-1:-1;;;;;;;;;10525:36:23;;;10521:1642;;10604:2;10585:8;:21;;10577:63;;;;-1:-1:-1;;;10577:63:23;;17864:2:30;10577:63:23;;;17846:21:30;17903:2;17883:18;;;17876:30;17942:31;17922:18;;;17915:59;17991:18;;10577:63:23;17662:353:30;10577:63:23;10655:10;10684:15;10696:2;10693;10684:8;10655:10;10684:15;:::i;:::-;10676:24;;;:::i;:::-;10668:33;;;-1:-1:-1;10715:14:23;10748:15;10760:2;10757;10748:8;10715:14;10748:15;:::i;:::-;10740:24;;;:::i;:::-;10732:33;-1:-1:-1;10795:10:23;10819:28;10795:10;10836:2;10732:33;10819:9;:28::i;:::-;10868:16;;;10879:4;10868:16;;;18420:41:30;18393:18;10868:16:23;;;;;;;;;;;;;10861:23;;;;;;9747:2474;:::o;10521:1642::-;-1:-1:-1;;;;;;;;;10905:40:23;;;10901:1262;;10988:3;10969:8;:22;;10961:65;;;;-1:-1:-1;;;10961:65:23;;18674:2:30;10961:65:23;;;18656:21:30;18713:2;18693:18;;;18686:30;18752:32;18732:18;;;18725:60;18802:18;;10961:65:23;18472:354:30;10961:65:23;11041:12;11072:15;11084:2;11081;11072:8;11041:12;11072:15;:::i;:::-;11064:24;;;:::i;:::-;11056:33;;;-1:-1:-1;11103:10:23;11132:15;11144:2;11141;11132:8;11103:10;11132:15;:::i;:::-;11124:24;;;:::i;:::-;11116:33;;;-1:-1:-1;11163:14:23;11196:16;11208:3;11205:2;11196:8;11163:14;11196:16;:::i;:::-;11188:25;;;:::i;:::-;11180:34;-1:-1:-1;11246:10:23;11271:38;11287:4;11246:10;11180:34;11271:15;:38::i;:::-;11323:27;11333:4;11339:2;11343:6;11323:9;:27::i;:::-;11371:16;;;11382:4;11371:16;;;18420:41:30;18393:18;11371:16:23;;;;;;;;;;;;11364:23;;;;;;;9747:2474;:::o;10901:1262::-;-1:-1:-1;;;;;;;;;11408:37:23;;;11404:759;;11488:2;11469:8;:21;;11461:64;;;;-1:-1:-1;;;11461:64:23;;19033:2:30;11461:64:23;;;19015:21:30;19072:2;19052:18;;;19045:30;19111:32;19091:18;;;19084:60;19161:18;;11461:64:23;18831:354:30;11461:64:23;11540:13;11572:15;11584:2;11581;11572:8;11540:13;11572:15;:::i;:::-;11564:24;;;:::i;:::-;11556:33;;;-1:-1:-1;11603:15:23;11637;11649:2;11646;11637:8;11603:15;11637;:::i;:::-;11629:24;;;:::i;:::-;11621:33;;11603:51;;11686:27;11698:5;11705:7;11686:11;:27::i;:::-;11675:39;;;;;;17267:25:30;;17255:2;17240:18;;17121:177;11675:39:23;;;;;;;;;;;;;11668:46;;;;;9747:2474;:::o;11404:759::-;-1:-1:-1;;;;;;;;;11735:35:23;;;11731:432;;11813:2;11794:8;:21;;11786:62;;;;-1:-1:-1;;;11786:62:23;;19392:2:30;11786:62:23;;;19374:21:30;19431:2;19411:18;;;19404:30;19470;19450:18;;;19443:58;19518:18;;11786:62:23;19190:352:30;11786:62:23;11863:15;11897;11909:2;11906;11897:8;11863:15;11897;:::i;:::-;11889:24;;;:::i;:::-;11881:33;;;-1:-1:-1;11928:14:23;11961:15;11973:2;11970;11961:8;11928:14;11961:15;:::i;:::-;11953:24;;;:::i;:::-;11945:33;-1:-1:-1;12008:10:23;12032:32;12008:10;12048:7;11945:33;12032:8;:32::i;:::-;12099:7;-1:-1:-1;;;;;12083:32:23;12092:5;-1:-1:-1;;;;;12083:32:23;;12108:6;12083:32;;;;17267:25:30;;17255:2;17240:18;;17121:177;12083:32:23;;;;;;;;12136:16;;;12147:4;12136:16;;;18420:41:30;18393:18;12136:16:23;18280:187:30;11731:432:23;12172:42;;-1:-1:-1;;;12172:42:23;;19749:2:30;12172:42:23;;;19731:21:30;19788:2;19768:18;;;19761:30;19827:33;19807:18;;;19800:61;19878:18;;12172:42:23;19547:355:30;2198:778:23;2258:46;;:::i;:::-;2328:641;;;2371:315;;;;;-1:-1:-1;2371:315:23;;;;;;2328:641;;;2371:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2573:37;;;;;;;;;;;2328:641;;;;;-1:-1:-1;;;;2573:37:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;2371:315:23;;2628:44;;;;;;;;;-1:-1:-1;2628:44:23;;;2371:315;2628:44;;;;;;;;;;;;2371:315;;;;;;;2328:641;;;2713:11;;2628:44;2328:641;;;;;;;;;;;;;;;;;;;;;;;2797:37;;;;;;;;;;2328:641;;;;;2797:37;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2797:37:23;;-1:-1:-1;;2797:37:23;;;;;;;;;;;-1:-1:-1;2328:641:23;;;;2888:1;2848:42;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2848:42:23;;-1:-1:-1;;2848:42:23;;;;;;;;;;;-1:-1:-1;2328:641:23;;;;2941:1;2904:39;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2904:39:23;;-1:-1:-1;;2904:39:23;;;;;;;;;;;-1:-1:-1;2328:641:23;;;;;;;;;;;;-1:-1:-1;2328:641:23;;;;;2316:653;2198:778;-1:-1:-1;;2198:778:23:o;1956:236::-;2016:18;2036:46;;:::i;:::-;2109:2;2094:17;;2164:21;2179:5;2164:14;:21::i;:::-;2152:33;;1956:236;;;:::o;5439:550::-;5552:18;;798:4;319:5;790:28;782:64;;;;-1:-1:-1;;;782:64:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;5625:19:23;::::1;5617:56;;;::::0;-1:-1:-1;;;5617:56:23;;20461:2:30;5617:56:23::1;::::0;::::1;20443:21:30::0;20500:2;20480:18;;;20473:30;20539:26;20519:18;;;20512:54;20583:18;;5617:56:23::1;20259:348:30::0;5617:56:23::1;5700:1;5691:6;:10;;;5683:48;;;::::0;-1:-1:-1;;;5683:48:23;;20814:2:30;5683:48:23::1;::::0;::::1;20796:21:30::0;20853:2;20833:18;;;20826:30;20892:27;20872:18;;;20865:55;20937:18;;5683:48:23::1;20612:349:30::0;5683:48:23::1;5742:46;5791:21;5806:5;5791:14;:21::i;:::-;5742:70;;5823:47;5829:9;:15;;;:24;;;5862:6;5823:47;;:5;:47::i;:::-;-1:-1:-1::0;;5969:11:23::1;::::0;5896:2:::1;::::0;5969:11;;-1:-1:-1;5439:550:23;-1:-1:-1;;;5439:550:23:o;1282:337::-;1352:16;798:4;319:5;790:28;782:64;;;;-1:-1:-1;;;782:64:23;;;;;;;:::i;:::-;1504:40:::1;::::0;;-1:-1:-1;;;1504:40:23::1;::::0;::::1;21147:46:30::0;;;1380:15:23::1;21209:11:30::0;;;21202:72;;;-1:-1:-1;;;;;;21312:2:30;21308:15;;;21304:53;21290:12;;;21283:75;1398:39:23;;1380:15;;;;21374:12:30;1504:40:23::1;;;;;;;;;;;;1496:49;;;:::i;:::-;1592:11:::0;;1282:337;-1:-1:-1;;;;;1282:337:23:o;3971:623::-;4079:18;;4137:28;798:4;319:5;790:28;782:64;;;;-1:-1:-1;;;782:64:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;4190:19:23;::::1;4182:56;;;::::0;-1:-1:-1;;;4182:56:23;;21901:2:30;4182:56:23::1;::::0;::::1;21883:21:30::0;21940:2;21920:18;;;21913:30;21979:26;21959:18;;;21952:54;22023:18;;4182:56:23::1;21699:348:30::0;4182:56:23::1;4265:1;4256:6;:10;;;4248:48;;;::::0;-1:-1:-1;;;4248:48:23;;22254:2:30;4248:48:23::1;::::0;::::1;22236:21:30::0;22293:2;22273:18;;;22266:30;22332:27;22312:18;;;22305:55;22377:18;;4248:48:23::1;22052:349:30::0;4248:48:23::1;4307:46;4356:21;4371:5;4356:14;:21::i;:::-;4307:70;;4388:47;4394:9;:15;;;:24;;;4427:6;4388:47;;:5;:47::i;:::-;-1:-1:-1::0;;4534:11:23::1;::::0;4573:14:::1;::::0;;4585:1:::1;4573:14:::0;;::::1;::::0;::::1;::::0;;;4461:2:::1;::::0;4534:11;;-1:-1:-1;4573:14:23;-1:-1:-1;3971:623:23;-1:-1:-1;;;3971:623:23:o;12984:194::-;13044:14;13070:12;13085:23;13100:7;13085:14;:23::i;:::-;13151:11;;12984:194;-1:-1:-1;;;12984:194:23:o;13878:231::-;-1:-1:-1;;;;;13965:18:23;;13957:50;;;;-1:-1:-1;;;13957:50:23;;22608:2:30;13957:50:23;;;22590:21:30;22647:2;22627:18;;;22620:30;-1:-1:-1;;;22666:18:30;;;22659:49;22725:18;;13957:50:23;22406:343:30;13957:50:23;-1:-1:-1;;;;;14025:16:23;;14017:50;;;;-1:-1:-1;;;14017:50:23;;22956:2:30;14017:50:23;;;22938:21:30;22995:2;22975:18;;;22968:30;-1:-1:-1;;;23014:18:30;;;23007:51;23075:18;;14017:50:23;22754:345:30;14017:50:23;14077:25;14085:4;14091:2;14095:6;14077:7;:25::i;:::-;13878:231;;;:::o;15601:404::-;15692:24;15719:27;15731:5;15738:7;15719:11;:27::i;:::-;15692:54;;-1:-1:-1;;15760:16:23;:37;15756:243;;15841:6;15821:16;:26;;15813:68;;;;-1:-1:-1;;;15813:68:23;;23306:2:30;15813:68:23;;;23288:21:30;23345:2;23325:18;;;23318:30;23384:31;23364:18;;;23357:59;23433:18;;15813:68:23;23104:353:30;15813:68:23;15923:51;15932:5;15939:7;15967:6;15948:16;:25;15923:8;:51::i;:::-;15682:323;15601:404;;;:::o;13184:216::-;13259:14;13285:12;13300:30;13315:5;13322:7;13300:14;:30::i;:::-;13373:11;;13184:216;-1:-1:-1;;;;13184:216:23:o;15126:350::-;-1:-1:-1;;;;;15218:19:23;;15210:55;;;;-1:-1:-1;;;15210:55:23;;23664:2:30;15210:55:23;;;23646:21:30;23703:2;23683:18;;;23676:30;23742:25;23722:18;;;23715:53;23785:18;;15210:55:23;23462:347:30;15210:55:23;-1:-1:-1;;;;;15283:21:23;;15275:59;;;;-1:-1:-1;;;15275:59:23;;24016:2:30;15275:59:23;;;23998:21:30;24055:2;24035:18;;;24028:30;24094:27;24074:18;;;24067:55;24139:18;;15275:59:23;23814:349:30;15275:59:23;15344:21;15368:30;15383:5;15390:7;15368:14;:30::i;:::-;15431:29;;;;-1:-1:-1;;;15126:350:23:o;13642:230::-;-1:-1:-1;;;;;13717:21:23;;13709:56;;;;-1:-1:-1;;;13709:56:23;;24370:2:30;13709:56:23;;;24352:21:30;24409:2;24389:18;;;24382:30;-1:-1:-1;;;24428:18:30;;;24421:52;24490:18;;13709:56:23;24168:346:30;13709:56:23;13792:1;13783:6;:10;13775:44;;;;-1:-1:-1;;;13775:44:23;;24721:2:30;13775:44:23;;;24703:21:30;24760:2;24740:18;;;24733:30;-1:-1:-1;;;24779:18:30;;;24772:51;24840:18;;13775:44:23;24519:345:30;13775:44:23;13829:36;13837:7;13854:1;13858:6;13829:7;:36::i;:::-;13642:230;;:::o;13406:::-;-1:-1:-1;;;;;13481:21:23;;13473:56;;;;-1:-1:-1;;;13473:56:23;;25071:2:30;13473:56:23;;;25053:21:30;25110:2;25090:18;;;25083:30;-1:-1:-1;;;25129:18:30;;;25122:52;25191:18;;13473:56:23;24869:346:30;13473:56:23;13556:1;13547:6;:10;13539:44;;;;-1:-1:-1;;;13539:44:23;;25422:2:30;13539:44:23;;;25404:21:30;25461:2;25441:18;;;25434:30;-1:-1:-1;;;25480:18:30;;;25473:51;25541:18;;13539:44:23;25220:345:30;13539:44:23;13593:36;13609:1;13613:7;13622:6;13593:7;:36::i;12227:322::-;12413:52;;-1:-1:-1;;;12413:52:23;;-1:-1:-1;;;;;25734:32:30;;12413:52:23;;;25716:51:30;12290:12:23;;-1:-1:-1;;;12332:25:23;12290:12;;;;319:5;;12413:43;;25689:18:30;;12413:52:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12498:42;;;-1:-1:-1;;;;;;26256:33:30;;;12498:42:23;;;26244:46:30;-1:-1:-1;;26323:15:30;;;26319:45;26306:11;;;26299:66;26272:3;26399:16;;;26395:43;26381:12;;;26374:65;12394:71:23;;-1:-1:-1;26455:12:30;12498:42:23;;;;;;;;;;;;12490:51;;;:::i;:::-;12482:60;12227:322;-1:-1:-1;;;;;12227:322:23:o;14115:1005::-;-1:-1:-1;;;;;14196:18:23;;14192:376;;14245:6;14230:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;14192:376:23;;-1:-1:-1;14192:376:23;;14282:16;14301:20;14316:4;14301:14;:20::i;:::-;14394:15;;14282:39;;-1:-1:-1;14432:21:23;;;;14424:65;;;;-1:-1:-1;;;14424:65:23;;26942:2:30;14424:65:23;;;26924:21:30;26981:2;26961:18;;;26954:30;27020:33;27000:18;;;26993:61;27071:18;;14424:65:23;26740:355:30;14424:65:23;14531:24;;;14514:42;;14192:376;-1:-1:-1;;;;;14582:16:23;;14578:494;;14629:6;14614:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;14578:494:23;;-1:-1:-1;14578:494:23;;14666:14;14683:18;14698:2;14683:14;:18::i;:::-;14770:13;;14666:35;;-1:-1:-1;14715:17:23;14989:18;15001:6;14770:13;14989:18;:::i;:::-;15032:28;;;-1:-1:-1;;14578:494:23;15102:2;-1:-1:-1;;;;;15087:26:23;15096:4;-1:-1:-1;;;;;15087:26:23;;15106:6;15087:26;;;;17267:25:30;;17255:2;17240:18;;17121:177;15087:26:23;;;;;;;;14115:1005;;;:::o;12555:423::-;12754:50;;-1:-1:-1;;;12754:50:23;;-1:-1:-1;;;;;25734:32:30;;12754:50:23;;;25716:51:30;12633:12:23;;-1:-1:-1;;;12675:25:23;12633:12;;;;319:5;;12754:43;;25689:18:30;;12754:50:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12833:52;;-1:-1:-1;;;12833:52:23;;-1:-1:-1;;;;;25734:32:30;;12833:52:23;;;25716:51:30;12737:67:23;;-1:-1:-1;12814:16:23;;319:5;;12833:43;;25689:18:30;;12833:52:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12918:51;;;-1:-1:-1;;;;;;27452:33:30;;;12918:51:23;;;27440:46:30;-1:-1:-1;;;;;;27523:2:30;27519:15;;;27515:53;27502:11;;;27495:74;27468:3;27603:16;;;27599:43;;27585:12;;;27578:65;27677:16;;;27673:43;27659:12;;;27652:65;12814:71:23;;-1:-1:-1;27733:12:30;12918:51:23;;;;;;;;;;;;12910:60;;;:::i;:::-;12902:69;12555:423;-1:-1:-1;;;;;;;12555:423:23:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;527:331:30:-;632:9;643;685:8;673:10;670:24;667:44;;;707:1;704;697:12;667:44;736:6;726:8;723:20;720:40;;;756:1;753;746:12;720:40;-1:-1:-1;;782:23:30;;;827:25;;;;;-1:-1:-1;527:331:30:o;863:338::-;983:19;;-1:-1:-1;;;;;;1020:29:30;;;1069:1;1061:10;;1058:137;;;-1:-1:-1;;;;;;1130:1:30;1126:11;;;1123:1;1119:19;1115:46;;;1107:55;;1103:82;;-1:-1:-1;1058:137:30;;863:338;;;;:::o;1565:374::-;1686:19;;-1:-1:-1;;;;;;1723:40:30;;;1783:2;1775:11;;1772:161;;;-1:-1:-1;;;;;;1845:2:30;1841:12;;;;1838:1;1834:20;1830:58;;;1822:67;1818:105;;;;1565:374;-1:-1:-1;;1565:374:30:o;2302:173::-;2370:20;;-1:-1:-1;;;;;2419:31:30;;2409:42;;2399:70;;2465:1;2462;2455:12;2399:70;2302:173;;;:::o;2480:186::-;2539:6;2592:2;2580:9;2571:7;2567:23;2563:32;2560:52;;;2608:1;2605;2598:12;2560:52;2631:29;2650:9;2631:29;:::i;:::-;2621:39;2480:186;-1:-1:-1;;;2480:186:30:o;2671:400::-;2713:3;2751:5;2745:12;2778:6;2773:3;2766:19;2803:1;2813:139;2827:6;2824:1;2821:13;2813:139;;;2935:4;2920:13;;;2916:24;;2910:31;2890:11;;;2886:22;;2879:63;2842:12;2813:139;;;2817:3;2997:1;2990:4;2981:6;2976:3;2972:16;2968:27;2961:38;3060:4;3053:2;3049:7;3044:2;3036:6;3032:15;3028:29;3023:3;3019:39;3015:50;3008:57;;;2671:400;;;;:::o;3377:1368::-;3438:3;3469;3501:5;3495:12;3528:6;3523:3;3516:19;3560:4;3555:3;3551:14;3544:21;;3618:4;3608:6;3605:1;3601:14;3594:5;3590:26;3586:37;3657:4;3650:5;3646:16;3680:1;3690:1029;3704:6;3701:1;3698:13;3690:1029;;;3769:16;;;-1:-1:-1;;3765:30:30;3753:43;;3819:13;;3858:9;;3845:23;;3915:4;3907:13;;;3901:20;3958:4;3941:15;;;3934:29;;;4014:19;;4007:27;4000:35;3983:15;;;3976:60;4083:23;;;4077:30;-1:-1:-1;;;;;4073:56:30;4066:4;4056:15;;4049:81;4171:23;;;4165:30;4117:3;4225:4;4215:15;;4208:29;4264:49;4308:3;4298:14;;4165:30;4264:49;:::i;:::-;4250:63;;4372:4;4358:12;4354:23;4348:30;4442:2;4438:7;4431:4;4423:6;4419:17;4415:31;4408:4;4402;4398:15;4391:56;4474:41;4508:6;4492:14;4474:41;:::i;:::-;4579:4;4561:23;;;;4555:30;-1:-1:-1;;;;;4551:56:30;4545:3;4535:14;;;;4528:80;;;;-1:-1:-1;4670:4:30;4695:14;;;;4460:55;;-1:-1:-1;4658:17:30;;;;;4604:1;3719:9;3690:1029;;;-1:-1:-1;4735:4:30;;3377:1368;-1:-1:-1;;;;;;3377:1368:30:o;5014:1313::-;5068:3;5112:5;5106:12;5139:6;5134:3;5127:19;5167:49;5208:6;5203:3;5199:16;5185:12;5167:49;:::i;:::-;5155:61;;5264:4;5257:5;5253:16;5247:23;5312:3;5306:4;5302:14;5295:4;5290:3;5286:14;5279:38;5340:39;5374:4;5358:14;5340:39;:::i;:::-;5326:53;;;5427:4;5420:5;5416:16;5410:23;5442:50;5486:4;5481:3;5477:14;5461;-1:-1:-1;;;;;3142:31:30;3130:44;;3076:104;5442:50;;5540:4;5533:5;5529:16;5523:23;5590:3;5582:6;5578:16;5571:4;5566:3;5562:14;5555:40;5618:41;5652:6;5636:14;5618:41;:::i;:::-;5604:55;;;5707:4;5700:5;5696:16;5690:23;5722:47;5763:4;5758:3;5754:14;5738;3255:13;3248:21;3236:34;;3185:91;5722:47;;5817:4;5810:5;5806:16;5800:23;5832:48;5874:4;5869:3;5865:14;5849;3356:1;3345:20;3333:33;;3281:91;5832:48;;5928:4;5921:5;5917:16;5911:23;5943:47;5984:4;5979:3;5975:14;5959;3255:13;3248:21;3236:34;;3185:91;5943:47;;6038:4;6031:5;6027:16;6021:23;6088:3;6080:6;6076:16;6069:4;6064:3;6060:14;6053:40;6116:60;6169:6;6153:14;6116:60;:::i;:::-;6102:74;;;6224:6;6217:5;6213:18;6207:25;6241:58;6291:6;6286:3;6282:16;6266:14;4836:12;;4833:1;4822:27;;;4810:40;;4903:4;4892:16;;;4886:23;-1:-1:-1;;;;;4882:49:30;4866:14;;;4859:73;4995:4;4984:16;;;4978:23;4964:38;;4948:14;;4941:62;4750:259;6241:58;-1:-1:-1;6315:6:30;5014:1313;-1:-1:-1;;;5014:1313:30:o;6332:787::-;6393:3;6431:5;6425:12;6458:6;6453:3;6446:19;6490:4;6485:3;6481:14;6474:21;;6529:4;6522:5;6518:16;6552:1;6562:532;6576:6;6573:1;6570:13;6562:532;;;6635:13;;6687:9;;6684:1;6673:24;6661:37;;6752:4;6744:13;;;6738:20;-1:-1:-1;;;;;6734:46:30;;;6718:14;;;6711:70;6845:4;6837:13;;;6831:20;6824:28;6817:36;6801:14;;;6794:60;6918:4;6910:13;;;6904:20;6897:28;6890:36;6874:14;;;6867:60;6981:4;6973:13;;;6967:20;6963:46;6947:14;;;6940:70;;;;6768:3;7030:14;;;;7067:17;;;;6777:1;6591:9;6562:532;;;-1:-1:-1;7110:3:30;;6332:787;-1:-1:-1;;;;6332:787:30:o;7124:852::-;7190:3;7228:5;7222:12;7255:6;7250:3;7243:19;7287:4;7282:3;7278:14;7271:21;;7326:4;7319:5;7315:16;7349:1;7359:592;7373:6;7370:1;7367:13;7359:592;;;7438:6;7432:13;7490:2;7484:9;7481:1;7470:24;7465:3;7458:37;7559:4;7555:2;7551:13;7545:20;7542:1;7531:35;7524:4;7519:3;7515:14;7508:59;7631:4;7627:2;7623:13;7617:20;7614:1;7603:35;7596:4;7591:3;7587:14;7580:59;7703:4;7699:2;7695:13;7689:20;7686:1;7675:35;7668:4;7663:3;7659:14;7652:59;7775:4;7771:2;7767:13;7761:20;7754:28;7747:36;7740:4;7735:3;7731:14;7724:60;7863:1;7859;7854:3;7850:11;7846:19;7838:4;7834:2;7830:13;7824:20;7820:46;7813:4;7808:3;7804:14;7797:70;;7896:4;7891:3;7887:14;7880:21;;7936:4;7928:6;7924:17;7914:27;;7395:1;7392;7388:9;7383:14;;7359:592;;7981:860;8044:3;8082:5;8076:12;8109:6;8104:3;8097:19;8141:4;8136:3;8132:14;8125:21;;8180:4;8173:5;8169:16;8203:1;8213:603;8227:6;8224:1;8221:13;8213:603;;;8292:6;8286:13;8344:2;8338:9;8335:1;8324:24;8319:3;8312:37;8413:4;8409:2;8405:13;8399:20;8396:1;8385:35;8378:4;8373:3;8369:14;8362:59;8485:4;8481:2;8477:13;8471:20;8468:1;8457:35;8450:4;8445:3;8441:14;8434:59;8572:1;8568;8563:3;8559:11;8555:19;8547:4;8543:2;8539:13;8533:20;8529:46;8522:4;8517:3;8513:14;8506:70;8640:4;8636:2;8632:13;8626:20;8619:28;8612:36;8605:4;8600:3;8596:14;8589:60;8728:1;8724;8719:3;8715:11;8711:19;8703:4;8699:2;8695:13;8689:20;8685:46;8678:4;8673:3;8669:14;8662:70;;8761:4;8756:3;8752:14;8745:21;;8801:4;8793:6;8789:17;8779:27;;8249:1;8246;8242:9;8237:14;;8213:603;;8846:1384;8898:3;8942:5;8936:12;8969:6;8964:3;8957:19;8997:61;9050:6;9045:3;9041:16;9027:12;8997:61;:::i;:::-;8985:73;;9106:4;9099:5;9095:16;9089:23;9121:48;9163:4;9158:3;9154:14;9138;3356:1;3345:20;3333:33;;3281:91;9121:48;;9217:4;9210:5;9206:16;9200:23;9232:47;9273:4;9268:3;9264:14;9248;3255:13;3248:21;3236:34;;3185:91;9232:47;;9327:4;9320:5;9316:16;9310:23;9342:47;9383:4;9378:3;9374:14;9358;3255:13;3248:21;3236:34;;3185:91;9342:47;;9437:4;9430:5;9426:16;9420:23;9452:47;9493:4;9488:3;9484:14;9468;3255:13;3248:21;3236:34;;3185:91;9452:47;;9547:4;9540:5;9536:16;9530:23;9595:3;9589:4;9585:14;9578:4;9573:3;9569:14;9562:38;9623:58;9676:4;9660:14;9623:58;:::i;:::-;9609:72;;;9729:4;9722:5;9718:16;9712:23;9779:3;9771:6;9767:16;9760:4;9755:3;9751:14;9744:40;9807:65;9865:6;9849:14;9807:65;:::i;:::-;9793:79;;;9920:4;9913:5;9909:16;9903:23;9970:3;9962:6;9958:16;9951:4;9946:3;9942:14;9935:40;9998:62;10053:6;10037:14;9998:62;:::i;:::-;9984:76;;;10108:6;10101:5;10097:18;10091:25;10162:3;10154:6;10150:16;10141:6;10136:3;10132:16;10125:42;10183:41;10217:6;10201:14;10183:41;:::i;10235:266::-;10420:2;10409:9;10402:21;10383:4;10440:55;10491:2;10480:9;10476:18;10468:6;10440:55;:::i;10506:348::-;10729:6;10726:1;10715:21;10704:9;10697:40;10773:2;10768;10757:9;10753:18;10746:30;10678:4;10793:55;10844:2;10833:9;10829:18;10821:6;10793:55;:::i;:::-;10785:63;10506:348;-1:-1:-1;;;;10506:348:30:o;10859:160::-;10925:20;;10985:1;10974:20;;;10964:31;;10954:59;;11009:1;11006;10999:12;11024:127;11085:10;11080:3;11076:20;11073:1;11066:31;11116:4;11113:1;11106:15;11140:4;11137:1;11130:15;11156:275;11227:2;11221:9;11292:2;11273:13;;-1:-1:-1;;11269:27:30;11257:40;;11327:18;11312:34;;11348:22;;;11309:62;11306:88;;;11374:18;;:::i;:::-;11410:2;11403:22;11156:275;;-1:-1:-1;11156:275:30:o;11436:181::-;11494:4;11527:18;11519:6;11516:30;11513:56;;;11549:18;;:::i;:::-;-1:-1:-1;11594:1:30;11590:14;11606:4;11586:25;;11436:181::o;11622:1030::-;11720:6;11728;11736;11789:2;11777:9;11768:7;11764:23;11760:32;11757:52;;;11805:1;11802;11795:12;11757:52;11828:29;11847:9;11828:29;:::i;:::-;11818:39;;11876:36;11908:2;11897:9;11893:18;11876:36;:::i;:::-;11866:46;;11963:2;11952:9;11948:18;11935:32;11990:18;11982:6;11979:30;11976:50;;;12022:1;12019;12012:12;11976:50;12045:22;;12098:4;12090:13;;12086:27;-1:-1:-1;12076:55:30;;12127:1;12124;12117:12;12076:55;12167:2;12154:16;12190:62;12206:45;12244:6;12206:45;:::i;:::-;12190:62;:::i;:::-;12274:3;12298:6;12293:3;12286:19;12330:2;12325:3;12321:12;12314:19;;12385:2;12375:6;12372:1;12368:14;12364:2;12360:23;12356:32;12342:46;;12411:7;12403:6;12400:19;12397:39;;;12432:1;12429;12422:12;12397:39;12464:2;12460;12456:11;12445:22;;12476:146;12492:6;12487:3;12484:15;12476:146;;;12558:21;12575:3;12558:21;:::i;:::-;12546:34;;12609:2;12509:12;;;;12600;;;;12476:146;;;12641:5;12631:15;;;;;;11622:1030;;;;;:::o;13129:1705::-;13238:6;13246;13254;13307:2;13295:9;13286:7;13282:23;13278:32;13275:52;;;13323:1;13320;13313:12;13275:52;13346:29;13365:9;13346:29;:::i;:::-;13336:39;;13394:36;13426:2;13415:9;13411:18;13394:36;:::i;:::-;13384:46;;13481:2;13470:9;13466:18;13453:32;13508:18;13500:6;13497:30;13494:50;;;13540:1;13537;13530:12;13494:50;13563:22;;13616:4;13608:13;;13604:27;-1:-1:-1;13594:55:30;;13645:1;13642;13635:12;13594:55;13685:2;13672:16;13708:62;13724:45;13762:6;13724:45;:::i;13708:62::-;13792:3;13816:6;13811:3;13804:19;13848:2;13843:3;13839:12;13832:19;;13903:2;13893:6;13890:1;13886:14;13882:2;13878:23;13874:32;13860:46;;13929:7;13921:6;13918:19;13915:39;;;13950:1;13947;13940:12;13915:39;13982:2;13978;13974:11;13994:810;14010:6;14005:3;14002:15;13994:810;;;14096:3;14083:17;14132:18;14119:11;14116:35;14113:55;;;14164:1;14161;14154:12;14113:55;14191:20;;14246:2;14238:11;;14234:25;-1:-1:-1;14224:53:30;;14273:1;14270;14263:12;14224:53;14327:2;14323;14319:11;14306:25;14360:18;14350:8;14347:32;14344:58;;;14382:18;;:::i;:::-;14430:59;14479:2;14454:19;;-1:-1:-1;;14450:33:30;14485:2;14446:42;14430:59;:::i;:::-;14502:25;;;14546:35;14554:17;;;14546:35;14543:48;-1:-1:-1;14540:68:30;;;14604:1;14601;14594:12;14540:68;14665:8;14660:2;14656;14652:11;14647:2;14638:7;14634:16;14621:53;14727:1;14722:2;14711:8;14702:7;14698:22;14694:31;14687:42;14754:7;14749:3;14742:20;;;;14791:2;14786:3;14782:12;14775:19;;14036:2;14031:3;14027:12;14020:19;;13994:810;;;13998:3;14823:5;14813:15;;;;;;13129:1705;;;;;:::o;14839:787::-;15025:4;15073:2;15062:9;15058:18;15117:6;15114:1;15103:21;15092:9;15085:40;15175:6;15172:1;15161:21;15156:2;15145:9;15141:18;15134:49;15219:2;15214;15203:9;15199:18;15192:30;15242:6;15277;15271:13;15308:6;15300;15293:22;15346:3;15335:9;15331:19;15324:26;;15385:2;15377:6;15373:15;15359:29;;15406:1;15416:184;15430:6;15427:1;15424:13;15416:184;;;15505:13;;15502:1;15491:28;15479:41;;15549:2;15575:15;;;;15540:12;;;;15452:1;15445:9;15416:184;;;-1:-1:-1;15617:3:30;;14839:787;-1:-1:-1;;;;;;;14839:787:30:o;15757:1170::-;15903:2;15892:9;15885:21;15866:4;15926:1;15959:6;15953:13;15989:3;16018:9;16015:1;16011:17;16001:27;;16078:1;16067:9;16063:17;16099:18;16089:61;;16143:4;16135:6;16131:17;16121:27;;16089:61;16196:2;16188:6;16185:14;16165:18;16162:38;16159:165;;-1:-1:-1;;;16223:33:30;;16279:4;16276:1;16269:15;16309:4;16230:3;16297:17;16159:165;16395:2;16380:18;;101:19;;;144:14;;;16423:18;16450:128;;;;16592:1;16587:314;;;;16416:485;;16450:128;-1:-1:-1;;16483:24:30;;16471:37;;16551:14;;16544:22;16541:1;16537:30;16528:40;;;-1:-1:-1;16450:128:30;;16587:314;15704:1;15697:14;;;15741:4;15728:18;;16682:1;16696:164;16710:6;16707:1;16704:13;16696:164;;;16788:14;;16775:11;;;16768:35;16844:1;16831:15;;;;16732:2;16725:10;16696:164;;;16880:11;;;-1:-1:-1;;16416:485:30;-1:-1:-1;16918:3:30;;15757:1170;-1:-1:-1;;;;;;;15757:1170:30:o;18020:255::-;18140:19;;18179:2;18171:11;;18168:101;;;-1:-1:-1;;18240:2:30;18236:12;;;18233:1;18229:20;18225:33;18214:45;18168:101;18020:255;;;;:::o;19907:347::-;20109:2;20091:21;;;20148:2;20128:18;;;20121:30;20187:25;20182:2;20167:18;;20160:53;20245:2;20230:18;;19907:347::o;21397:297::-;21515:12;;21562:4;21551:16;;;21545:23;;21515:12;21580:16;;21577:111;;;21674:1;21670:6;21660;21654:4;21650:17;21647:1;21643:25;21639:38;21632:5;21628:50;21619:59;;21577:111;;21397:297;;;:::o;25778:280::-;25847:6;25900:2;25888:9;25879:7;25875:23;25871:32;25868:52;;;25916:1;25913;25906:12;25868:52;25948:9;25942:16;25998:10;25991:5;25987:22;25980:5;25977:33;25967:61;;26024:1;26021;26014:12;26478:127;26539:10;26534:3;26530:20;26527:1;26520:31;26570:4;26567:1;26560:15;26594:4;26591:1;26584:15;26610:125;26675:9;;;26696:10;;;26693:36;;;26709:18;;:::i;27100:128::-;27167:9;;;27188:11;;;27185:37;;;27202:18;;:::i",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "_mockTokenInfo(address)": "1d17f55b",
        "burnToken(address,int64,int64[])": "d6910d06",
        "getAccountId(address)": "e0b490f7",
        "getTokenInfo(address)": "1f69565f",
        "mintToken(address,int64,bytes[])": "e0f4059a"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Associated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Dissociated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"_mockTokenInfo\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"accountId\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bytes[]\",\"name\":\"metadata\",\"type\":\"bytes[]\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burnToken(address,int64,int64[])\":{\"params\":{\"amount\":\"Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.                Amount must be a positive non-zero number, not bigger than the token balance of the treasury                account (0; balance], represented in the lowest denomination.\",\"serialNumbers\":\"Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\",\"token\":\"The token for which to burn tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID\"},\"returns\":{\"newTotalSupply\":\"The new supply of tokens. For NFTs it is the total count of NFTs\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getAccountId(address)\":{\"details\":\"Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id.  See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties.\"},\"getTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"TokenInfo info for `token`\"}},\"mintToken(address,int64,bytes[])\":{\"params\":{\"amount\":\"Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.               Amount must be a positive non-zero number represented in the lowest denomination of the               token. The new supply must be lower than 2^63.\",\"metadata\":\"Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.                 Maximum allowed size of each metadata is 100 bytes\",\"token\":\"The token for which to mint tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID\"},\"returns\":{\"newTotalSupply\":\"The new supply of tokens. For NFTs it is the total count of NFTs\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"serialNumbers\":\"If the token is an NFT the newly generate serial numbers, othersise empty.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burnToken(address,int64,int64[])\":{\"notice\":\"Burns an amount of the token from the defined treasury account\"},\"getTokenInfo(address)\":{\"notice\":\"TODO: This will be implemented in another PR for https://github.com/hashgraph/hedera-forking/issues/108 Query token info\"},\"mintToken(address,int64,bytes[])\":{\"notice\":\"Mints an amount of the token to the defined treasury account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/HtsSystemContract.sol\":\"HtsSystemContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"src/HtsSystemContract.sol\":{\"keccak256\":\"0x827bd1f153f735d2886cab564c86d499ba6fd9e94e5d12b190fb068e1d9d616a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bc5305de98535cbc4d154f92402c36817f9ad1b3583c83a7ec4a2ba5308ff4a7\",\"dweb:/ipfs/QmNqYzM4N2XVgUSHH5RnwenP1PTJca74jjV2wJWgioLhzN\"]},\"src/IERC20.sol\":{\"keccak256\":\"0x73e339fdf45529d329db53345144d1ed1f9ad6a9ac169c350a550a14762ded76\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://596b618bfb51c3e8cfdf31e91a4037990fa25f23c58cf369e64ad16dd7662283\",\"dweb:/ipfs/QmRTnNftkmm1nqTV8BwSPJyxthbz3ucCqjQ22W4ydjwBkS\"]},\"src/IHederaTokenService.sol\":{\"keccak256\":\"0x5740bb4cdb2dea5b2b8c9572310e340318324b7e75eee231baef532282fc1dc2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67f89f2a4f7478eabb189aa2b11573d5ee72d4d6ac16f1353cd116ed395c4642\",\"dweb:/ipfs/QmNzvnEtf3qmXkXFiprX8PEH4Yzw5fSxRRTvWH4abHHeGd\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.28+commit.7893614a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "Associated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "Dissociated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "fallback"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "_mockTokenInfo",
                    "outputs": [
                        {
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "name": "token",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "string",
                                            "name": "name",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "symbol",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "treasury",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "memo",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "tokenSupplyType",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maxSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "freezeDefault",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "uint256",
                                                    "name": "keyType",
                                                    "type": "uint256"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "bool",
                                                            "name": "inheritAccountKey",
                                                            "type": "bool"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "contractId",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ed25519",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "delegatableContractId",
                                                            "type": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "name": "expiry",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "second",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "autoRenewAccount",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "internalType": "int64",
                                    "name": "totalSupply",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "deleted",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "defaultKycStatus",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "pauseStatus",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "minimumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maximumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "netOfTransfers",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "string",
                                    "name": "ledgerId",
                                    "type": "string"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        },
                        {
                            "internalType": "int64",
                            "name": "amount",
                            "type": "int64"
                        },
                        {
                            "internalType": "int64[]",
                            "name": "serialNumbers",
                            "type": "int64[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnToken",
                    "outputs": [
                        {
                            "internalType": "int64",
                            "name": "responseCode",
                            "type": "int64"
                        },
                        {
                            "internalType": "int64",
                            "name": "newTotalSupply",
                            "type": "int64"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAccountId",
                    "outputs": [
                        {
                            "internalType": "uint32",
                            "name": "accountId",
                            "type": "uint32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getTokenInfo",
                    "outputs": [
                        {
                            "internalType": "int64",
                            "name": "responseCode",
                            "type": "int64"
                        },
                        {
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "name": "token",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "string",
                                            "name": "name",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "symbol",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "treasury",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "memo",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "tokenSupplyType",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maxSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "freezeDefault",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "uint256",
                                                    "name": "keyType",
                                                    "type": "uint256"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "bool",
                                                            "name": "inheritAccountKey",
                                                            "type": "bool"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "contractId",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ed25519",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "delegatableContractId",
                                                            "type": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "name": "expiry",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "second",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "autoRenewAccount",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "internalType": "int64",
                                    "name": "totalSupply",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "deleted",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "defaultKycStatus",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "pauseStatus",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "minimumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maximumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "netOfTransfers",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "string",
                                    "name": "ledgerId",
                                    "type": "string"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        },
                        {
                            "internalType": "int64",
                            "name": "amount",
                            "type": "int64"
                        },
                        {
                            "internalType": "bytes[]",
                            "name": "metadata",
                            "type": "bytes[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintToken",
                    "outputs": [
                        {
                            "internalType": "int64",
                            "name": "responseCode",
                            "type": "int64"
                        },
                        {
                            "internalType": "int64",
                            "name": "newTotalSupply",
                            "type": "int64"
                        },
                        {
                            "internalType": "int64[]",
                            "name": "serialNumbers",
                            "type": "int64[]"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "burnToken(address,int64,int64[])": {
                        "params": {
                            "amount": "Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.                Amount must be a positive non-zero number, not bigger than the token balance of the treasury                account (0; balance], represented in the lowest denomination.",
                            "serialNumbers": "Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.",
                            "token": "The token for which to burn tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID"
                        },
                        "returns": {
                            "newTotalSupply": "The new supply of tokens. For NFTs it is the total count of NFTs",
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getAccountId(address)": {
                        "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id.  See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
                    },
                    "getTokenInfo(address)": {
                        "params": {
                            "token": "The token address to check"
                        },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenInfo": "TokenInfo info for `token`"
                        }
                    },
                    "mintToken(address,int64,bytes[])": {
                        "params": {
                            "amount": "Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.               Amount must be a positive non-zero number represented in the lowest denomination of the               token. The new supply must be lower than 2^63.",
                            "metadata": "Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.                 Maximum allowed size of each metadata is 100 bytes",
                            "token": "The token for which to mint tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID"
                        },
                        "returns": {
                            "newTotalSupply": "The new supply of tokens. For NFTs it is the total count of NFTs",
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "serialNumbers": "If the token is an NFT the newly generate serial numbers, othersise empty."
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "burnToken(address,int64,int64[])": {
                        "notice": "Burns an amount of the token from the defined treasury account"
                    },
                    "getTokenInfo(address)": {
                        "notice": "TODO: This will be implemented in another PR for https://github.com/hashgraph/hedera-forking/issues/108 Query token info"
                    },
                    "mintToken(address,int64,bytes[])": {
                        "notice": "Mints an amount of the token to the defined treasury account"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": ["forge-std/=lib/forge-std/src/"],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/HtsSystemContract.sol": "HtsSystemContract"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "lib/forge-std/src/console.sol": {
                "keccak256": "0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a",
                "urls": [
                    "bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194",
                    "dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn"
                ],
                "license": "MIT"
            },
            "src/HtsSystemContract.sol": {
                "keccak256": "0x827bd1f153f735d2886cab564c86d499ba6fd9e94e5d12b190fb068e1d9d616a",
                "urls": [
                    "bzz-raw://bc5305de98535cbc4d154f92402c36817f9ad1b3583c83a7ec4a2ba5308ff4a7",
                    "dweb:/ipfs/QmNqYzM4N2XVgUSHH5RnwenP1PTJca74jjV2wJWgioLhzN"
                ],
                "license": "Apache-2.0"
            },
            "src/IERC20.sol": {
                "keccak256": "0x73e339fdf45529d329db53345144d1ed1f9ad6a9ac169c350a550a14762ded76",
                "urls": [
                    "bzz-raw://596b618bfb51c3e8cfdf31e91a4037990fa25f23c58cf369e64ad16dd7662283",
                    "dweb:/ipfs/QmRTnNftkmm1nqTV8BwSPJyxthbz3ucCqjQ22W4ydjwBkS"
                ],
                "license": "Apache-2.0"
            },
            "src/IHederaTokenService.sol": {
                "keccak256": "0x5740bb4cdb2dea5b2b8c9572310e340318324b7e75eee231baef532282fc1dc2",
                "urls": [
                    "bzz-raw://67f89f2a4f7478eabb189aa2b11573d5ee72d4d6ac16f1353cd116ed395c4642",
                    "dweb:/ipfs/QmNzvnEtf3qmXkXFiprX8PEH4Yzw5fSxRRTvWH4abHHeGd"
                ],
                "license": "Apache-2.0"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 39001,
                "contract": "src/HtsSystemContract.sol:HtsSystemContract",
                "label": "name",
                "offset": 0,
                "slot": "0",
                "type": "t_string_storage"
            },
            {
                "astId": 39003,
                "contract": "src/HtsSystemContract.sol:HtsSystemContract",
                "label": "symbol",
                "offset": 0,
                "slot": "1",
                "type": "t_string_storage"
            },
            {
                "astId": 39005,
                "contract": "src/HtsSystemContract.sol:HtsSystemContract",
                "label": "decimals",
                "offset": 0,
                "slot": "2",
                "type": "t_uint8"
            },
            {
                "astId": 39007,
                "contract": "src/HtsSystemContract.sol:HtsSystemContract",
                "label": "totalSupply",
                "offset": 0,
                "slot": "3",
                "type": "t_uint256"
            }
        ],
        "types": {
            "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            },
            "t_uint8": {
                "encoding": "inplace",
                "label": "uint8",
                "numberOfBytes": "1"
            }
        }
    },
    "id": 23
}
