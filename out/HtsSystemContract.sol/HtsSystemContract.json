{
  "abi": [
    {
      "type": "fallback",
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "_mockTokenInfo",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "tokenInfo",
          "type": "tuple",
          "internalType": "struct IHederaTokenService.TokenInfo",
          "components": [
            {
              "name": "token",
              "type": "tuple",
              "internalType": "struct IHederaTokenService.HederaToken",
              "components": [
                {
                  "name": "name",
                  "type": "string",
                  "internalType": "string"
                },
                {
                  "name": "symbol",
                  "type": "string",
                  "internalType": "string"
                },
                {
                  "name": "treasury",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "memo",
                  "type": "string",
                  "internalType": "string"
                },
                {
                  "name": "tokenSupplyType",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "maxSupply",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "freezeDefault",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "tokenKeys",
                  "type": "tuple[]",
                  "internalType": "struct IHederaTokenService.TokenKey[]",
                  "components": [
                    {
                      "name": "keyType",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "key",
                      "type": "tuple",
                      "internalType": "struct IHederaTokenService.KeyValue",
                      "components": [
                        {
                          "name": "inheritAccountKey",
                          "type": "bool",
                          "internalType": "bool"
                        },
                        {
                          "name": "contractId",
                          "type": "address",
                          "internalType": "address"
                        },
                        {
                          "name": "ed25519",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "ECDSA_secp256k1",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "delegatableContractId",
                          "type": "address",
                          "internalType": "address"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "expiry",
                  "type": "tuple",
                  "internalType": "struct IHederaTokenService.Expiry",
                  "components": [
                    {
                      "name": "second",
                      "type": "int64",
                      "internalType": "int64"
                    },
                    {
                      "name": "autoRenewAccount",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "autoRenewPeriod",
                      "type": "int64",
                      "internalType": "int64"
                    }
                  ]
                }
              ]
            },
            {
              "name": "totalSupply",
              "type": "int64",
              "internalType": "int64"
            },
            {
              "name": "deleted",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "defaultKycStatus",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "pauseStatus",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "fixedFees",
              "type": "tuple[]",
              "internalType": "struct IHederaTokenService.FixedFee[]",
              "components": [
                {
                  "name": "amount",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "tokenId",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "useHbarsForPayment",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "useCurrentTokenForPayment",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "feeCollector",
                  "type": "address",
                  "internalType": "address"
                }
              ]
            },
            {
              "name": "fractionalFees",
              "type": "tuple[]",
              "internalType": "struct IHederaTokenService.FractionalFee[]",
              "components": [
                {
                  "name": "numerator",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "denominator",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "minimumAmount",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "maximumAmount",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "netOfTransfers",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "feeCollector",
                  "type": "address",
                  "internalType": "address"
                }
              ]
            },
            {
              "name": "royaltyFees",
              "type": "tuple[]",
              "internalType": "struct IHederaTokenService.RoyaltyFee[]",
              "components": [
                {
                  "name": "numerator",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "denominator",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "amount",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "tokenId",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "useHbarsForPayment",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "feeCollector",
                  "type": "address",
                  "internalType": "address"
                }
              ]
            },
            {
              "name": "ledgerId",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "burnToken",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "int64",
          "internalType": "int64"
        },
        {
          "name": "serialNumbers",
          "type": "int64[]",
          "internalType": "int64[]"
        }
      ],
      "outputs": [
        {
          "name": "responseCode",
          "type": "int64",
          "internalType": "int64"
        },
        {
          "name": "newTotalSupply",
          "type": "int64",
          "internalType": "int64"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getAccountId",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "accountId",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTokenInfo",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "responseCode",
          "type": "int64",
          "internalType": "int64"
        },
        {
          "name": "tokenInfo",
          "type": "tuple",
          "internalType": "struct IHederaTokenService.TokenInfo",
          "components": [
            {
              "name": "token",
              "type": "tuple",
              "internalType": "struct IHederaTokenService.HederaToken",
              "components": [
                {
                  "name": "name",
                  "type": "string",
                  "internalType": "string"
                },
                {
                  "name": "symbol",
                  "type": "string",
                  "internalType": "string"
                },
                {
                  "name": "treasury",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "memo",
                  "type": "string",
                  "internalType": "string"
                },
                {
                  "name": "tokenSupplyType",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "maxSupply",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "freezeDefault",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "tokenKeys",
                  "type": "tuple[]",
                  "internalType": "struct IHederaTokenService.TokenKey[]",
                  "components": [
                    {
                      "name": "keyType",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "key",
                      "type": "tuple",
                      "internalType": "struct IHederaTokenService.KeyValue",
                      "components": [
                        {
                          "name": "inheritAccountKey",
                          "type": "bool",
                          "internalType": "bool"
                        },
                        {
                          "name": "contractId",
                          "type": "address",
                          "internalType": "address"
                        },
                        {
                          "name": "ed25519",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "ECDSA_secp256k1",
                          "type": "bytes",
                          "internalType": "bytes"
                        },
                        {
                          "name": "delegatableContractId",
                          "type": "address",
                          "internalType": "address"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "expiry",
                  "type": "tuple",
                  "internalType": "struct IHederaTokenService.Expiry",
                  "components": [
                    {
                      "name": "second",
                      "type": "int64",
                      "internalType": "int64"
                    },
                    {
                      "name": "autoRenewAccount",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "autoRenewPeriod",
                      "type": "int64",
                      "internalType": "int64"
                    }
                  ]
                }
              ]
            },
            {
              "name": "totalSupply",
              "type": "int64",
              "internalType": "int64"
            },
            {
              "name": "deleted",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "defaultKycStatus",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "pauseStatus",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "fixedFees",
              "type": "tuple[]",
              "internalType": "struct IHederaTokenService.FixedFee[]",
              "components": [
                {
                  "name": "amount",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "tokenId",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "useHbarsForPayment",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "useCurrentTokenForPayment",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "feeCollector",
                  "type": "address",
                  "internalType": "address"
                }
              ]
            },
            {
              "name": "fractionalFees",
              "type": "tuple[]",
              "internalType": "struct IHederaTokenService.FractionalFee[]",
              "components": [
                {
                  "name": "numerator",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "denominator",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "minimumAmount",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "maximumAmount",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "netOfTransfers",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "feeCollector",
                  "type": "address",
                  "internalType": "address"
                }
              ]
            },
            {
              "name": "royaltyFees",
              "type": "tuple[]",
              "internalType": "struct IHederaTokenService.RoyaltyFee[]",
              "components": [
                {
                  "name": "numerator",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "denominator",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "amount",
                  "type": "int64",
                  "internalType": "int64"
                },
                {
                  "name": "tokenId",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "useHbarsForPayment",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "feeCollector",
                  "type": "address",
                  "internalType": "address"
                }
              ]
            },
            {
              "name": "ledgerId",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mintToken",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "int64",
          "internalType": "int64"
        },
        {
          "name": "metadata",
          "type": "bytes[]",
          "internalType": "bytes[]"
        }
      ],
      "outputs": [
        {
          "name": "responseCode",
          "type": "int64",
          "internalType": "int64"
        },
        {
          "name": "newTotalSupply",
          "type": "int64",
          "internalType": "int64"
        },
        {
          "name": "serialNumbers",
          "type": "int64[]",
          "internalType": "int64[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Associated",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Dissociated",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x6080604052348015600f57600080fd5b506120c48061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631d17f55b146101a55780631f69565f146101ce578063d6910d06146101ef578063e0b490f71461021c578063e0f4059a14610244575b6000366060601c8210156100b25760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a206e6f7420656e6f7567682063616c6c6461746100000060448201526064015b60405180910390fd5b60006100c160048236816116ad565b6100ca916116d7565b60e01c905063618dc65e81146101225760405162461bcd60e51b815260206004820152601e60248201527f66616c6c6261636b3a20756e737570706f727465642073656c6563746f72000060448201526064016100a9565b60006101326018600436846116ad565b61013b9161170f565b60601c905030811461018f5760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a20746f6b656e206973206e6f742063616c6c657200000060448201526064016100a9565b610197610266565b805195506020019350505050f35b6101b86101b3366004611761565b610a0e565b6040516101c59190611bed565b60405180910390f35b6101e16101dc366004611761565b610c34565b6040516101c5929190611c00565b6102026101fd366004611ca1565b610c52565b60408051600793840b81529190920b6020820152016101c5565b61022f61022a366004611761565b610d59565b60405163ffffffff90911681526020016101c5565b610257610252366004611d66565b610dd5565b6040516101c593929190611ea2565b60606000610278601c601836846116ad565b610281916116d7565b905063f90221fd60e01b6001600160e01b03198216016102c25760006040516020016102ad9190611f01565b60405160208183030381529060405291505090565b63cec31a9960e01b6001600160e01b03198216016102f1576002546040805160ff9092166020830152016102ad565b63e7e9f22360e01b6001600160e01b031982160161031e576003546040516020016102ad91815260200190565b636a2764bf60e01b6001600160e01b03198216016103485760016040516020016102ad9190611f01565b638f5f7dcf60e01b6001600160e01b031982160161040057603c3610156103b15760405162461bcd60e51b815260206004820152601e60248201527f62616c616e63654f663a204e6f7420656e6f7567682063616c6c64617461000060448201526064016100a9565b60006103c1603c602836846116ad565b6103ca9161170f565b60601c90506103d881610eef565b6040516020016103ea91815260200190565b6040516020818303038152906040529250505090565b6356fa634560e01b6001600160e01b03198216016104d357605c3610156104695760405162461bcd60e51b815260206004820152601d60248201527f7472616e736665723a204e6f7420656e6f7567682063616c6c6461746100000060448201526064016100a9565b6000610479603c602836846116ad565b6104829161170f565b60601c90506000610497605c603c36846116ad565b6104a091611faf565b9050336104ae818484610f03565b6040805160016020820152015b60405160208183030381529060405294505050505090565b63dc478d2360e01b6001600160e01b03198216016105cf57607c36101561053c5760405162461bcd60e51b815260206004820152601e60248201527f7472616e73666572463a204e6f7420656e6f7567682063616c6c64617461000060448201526064016100a9565b600061054c603c602836846116ad565b6105559161170f565b60601c9050600061056a605c604836846116ad565b6105739161170f565b60601c90506000610588607c605c36846116ad565b61059191611faf565b90503361059f848284610fad565b6105aa848484610f03565b6040805160016020820152016040516020818303038152906040529550505050505090565b63114e896160e11b6001600160e01b03198216016106a757605c3610156106385760405162461bcd60e51b815260206004820152601e60248201527f616c6c6f77616e63653a204e6f7420656e6f7567682063616c6c64617461000060448201526064016100a9565b6000610648603c602836846116ad565b6106519161170f565b60601c90506000610666605c604836846116ad565b61066f9161170f565b60601c905061067e8282611027565b60405160200161069091815260200190565b604051602081830303815290604052935050505090565b63f6a1584d60e01b6001600160e01b03198216016107b357605c3610156107105760405162461bcd60e51b815260206004820152601c60248201527f617070726f76653a204e6f7420656e6f7567682063616c6c646174610000000060448201526064016100a9565b6000610720603c602836846116ad565b6107299161170f565b60601c9050600061073e605c603c36846116ad565b61074791611faf565b90503361075581848461103d565b826001600160a01b0316816001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161079a91815260200190565b60405180910390a36040805160016020820152016104bb565b63bf3ef0e760e01b6001600160e01b031982160161087057605c36101561081c5760405162461bcd60e51b815260206004820152601960248201527f6d696e743a204e6f7420656e6f7567682063616c6c646174610000000000000060448201526064016100a9565b600061082c603c602836846116ad565b6108359161170f565b60601c9050600061084a605c603c36846116ad565b61085391611faf565b905061085f82826110fe565b604080516001602082015201610690565b6317ad327360e31b6001600160e01b031982160161090f57603c3610156108d95760405162461bcd60e51b815260206004820152601960248201527f6275726e3a204e6f7420656e6f7567682063616c6c646174610000000000000060448201526064016100a9565b60006108e9603c602836846116ad565b6108f291611faf565b90506108fe33826111a5565b6040805160016020820152016103ea565b630863398760e41b6001600160e01b03198216016109c657605c3610156109785760405162461bcd60e51b815260206004820152601d60248201527f6275726e46726f6d3a204e6f7420656e6f7567682063616c6c6461746100000060448201526064016100a9565b6000610988603c602836846116ad565b6109919161170f565b60601c905060006109a6605c603c36846116ad565b6109af91611faf565b90506109bc823383610fad565b61085f82826111a5565b60405162461bcd60e51b815260206004820152601f60248201527f7265646972656374466f72546f6b656e3a206e6f7420737570706f727465640060448201526064016100a9565b610a16611599565b60408051610260810182526000610240820181815261012083019081528351602080820186528382526101408501919091526101608401839052845180820186528381526101808501526101a084018390526101c084018390526101e084018390528451838152908101909452919283929161020084019190610aaf565b610a9c611650565b815260200190600190039081610a945790505b5081526040805160608082018352600080835260208084018290528385018290529485019290925293855260035460070b85840152848201819052928401839052608084018390528051838152918201905260a09092019190610b48565b6040805160a081018252600080825260208083018290529282018190526060820181905260808201528252600019909201910181610b0d5790505b5081526020016000604051908082528060200260200182016040528015610bb057816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a08201528252600019909201910181610b6e5790505b5081526020016000604051908082528060200260200182016040528015610c1857816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a08201528252600019909201910181610bd65790505b5081526040805160208181019092526000815291015292915050565b6000610c3e611599565b60169150610c4b83610a0e565b9050915091565b6000803061016714610c765760405162461bcd60e51b81526004016100a990611fce565b6001600160a01b038516610ccc5760405162461bcd60e51b815260206004820152601860248201527f6275726e546f6b656e3a20696e76616c696420746f6b656e000000000000000060448201526064016100a9565b60008460070b13610d1f5760405162461bcd60e51b815260206004820152601960248201527f6275726e546f6b656e3a20696e76616c696420616d6f756e740000000000000060448201526064016100a9565b6000610d2a86610a0e565b9050610d488160000151604001518667ffffffffffffffff166111a5565b505060035460169590945092505050565b60003061016714610d7c5760405162461bcd60e51b81526004016100a990611fce565b6040805163e0b490f760e01b602082018190526000602483018190526001600160601b0319606087901b16602c84015290929091829101604051602081830303815290604052610dcb90612005565b5495945050505050565b60008060603061016714610dfb5760405162461bcd60e51b81526004016100a990611fce565b6001600160a01b038616610e515760405162461bcd60e51b815260206004820152601860248201527f6d696e74546f6b656e3a20696e76616c696420746f6b656e000000000000000060448201526064016100a9565b60008560070b13610ea45760405162461bcd60e51b815260206004820152601960248201527f6d696e74546f6b656e3a20696e76616c696420616d6f756e740000000000000060448201526064016100a9565b6000610eaf87610a0e565b9050610ecd8160000151604001518767ffffffffffffffff166110fe565b5050600354604080516000815260208101909152601697919650945092505050565b600080610efb83611248565b549392505050565b6001600160a01b038316610f4f5760405162461bcd60e51b8152602060048201526013602482015272343a399d1034b73b30b634b21039b2b73232b960691b60448201526064016100a9565b6001600160a01b038216610f9d5760405162461bcd60e51b8152602060048201526015602482015274343a399d1034b73b30b634b2103932b1b2b4bb32b960591b60448201526064016100a9565b610fa883838361131a565b505050565b6000610fb98484611027565b9050600019811461102157818110156110145760405162461bcd60e51b815260206004820152601d60248201527f5f7370656e64416c6c6f77616e63653a20696e73756666696369656e7400000060448201526064016100a9565b611021848484840361103d565b50505050565b600080611034848461144a565b54949350505050565b6001600160a01b0383166110935760405162461bcd60e51b815260206004820152601760248201527f5f617070726f76653a20696e76616c6964206f776e657200000000000000000060448201526064016100a9565b6001600160a01b0382166110e95760405162461bcd60e51b815260206004820152601960248201527f5f617070726f76653a20696e76616c6964207370656e6465720000000000000060448201526064016100a9565b60006110f5848461144a565b91909155505050565b6001600160a01b03821661114d5760405162461bcd60e51b815260206004820152601660248201527517db5a5b9d0e881a5b9d985b1a59081858d8dbdd5b9d60521b60448201526064016100a9565b600081116111955760405162461bcd60e51b815260206004820152601560248201527417db5a5b9d0e881a5b9d985b1a5908185b5bdd5b9d605a1b60448201526064016100a9565b6111a16000838361131a565b5050565b6001600160a01b0382166111f45760405162461bcd60e51b815260206004820152601660248201527517d89d5c9b8e881a5b9d985b1a59081858d8dbdd5b9d60521b60448201526064016100a9565b6000811161123c5760405162461bcd60e51b815260206004820152601560248201527417d89d5c9b8e881a5b9d985b1a5908185b5bdd5b9d605a1b60448201526064016100a9565b6111a18260008361131a565b60405163e0b490f760e01b81526001600160a01b03821660048201526000906370a0823160e01b90829081906101679063e0b490f790602401602060405180830381865afa15801561129e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c2919061202c565b604080516001600160e01b0319808716602083015267ffffffffffffffff1986841b16602483015260e084901b16603c8201529192500160405160208183030381529060405261131190612005565b95945050505050565b6001600160a01b03831661134557806003600082825461133a9190612068565b909155506113ab9050565b600061135084611248565b8054909150828110156113a55760405162461bcd60e51b815260206004820152601f60248201527f5f7472616e736665723a20696e73756666696369656e742062616c616e63650060448201526064016100a9565b82900390555b6001600160a01b0382166113d65780600360008282546113cb919061207b565b909155506113f89050565b60006113e183611248565b805490915060006113f28483612068565b90925550505b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161143d91815260200190565b60405180910390a3505050565b60405163e0b490f760e01b81526001600160a01b0383166004820152600090636eb1769f60e11b90829081906101679063e0b490f790602401602060405180830381865afa1580156114a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c4919061202c565b60405163e0b490f760e01b81526001600160a01b03871660048201529091506000906101679063e0b490f790602401602060405180830381865afa158015611510573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611534919061202c565b604080516001600160e01b031980881660208301526001600160601b0319606088901b16602483015260e084811b8216603884015286901b16603c8201529192500160405160208183030381529060405261158e90612005565b979650505050505050565b60408051610240810182526060610120820181815261014083018290526000610160840181905261018084018390526101a084018190526101c084018190526101e0840181905261020084018390528451928301855280835260208301819052938201939093526102208201529081908152602001600060070b8152602001600015158152602001600015158152602001600015158152602001606081526020016060815260200160608152602001606081525090565b6040518060400160405280600081526020016116a86040518060a0016040528060001515815260200160006001600160a01b03168152602001606081526020016060815260200160006001600160a01b031681525090565b905290565b600080858511156116bd57600080fd5b838611156116ca57600080fd5b5050820193919092039150565b80356001600160e01b03198116906004841015611708576001600160e01b0319600485900360031b81901b82161691505b5092915050565b80356001600160601b03198116906014841015611708576001600160601b031960149490940360031b84901b1690921692915050565b80356001600160a01b038116811461175c57600080fd5b919050565b60006020828403121561177357600080fd5b61177c82611745565b9392505050565b6000815180845260005b818110156117a95760208185018101518683018201520161178d565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208501945060208160051b8301016020850160005b8381101561188c57848303601f1901885281518051845260209081015160408286018190528151151581870152918101516001600160a01b031660608601529081015160a0608086015261183e60e0860182611783565b90506060820151603f198683030160a087015261185b8282611783565b608093909301516001600160a01b031660c096909601959095525060209889019890935091909101906001016117e7565b50909695505050505050565b6000815161016084526118af610160850182611783565b9050602083015184820360208601526118c88282611783565b91505060408301516118e560408601826001600160a01b03169052565b50606083015184820360608601526118fd8282611783565b9150506080830151611913608086018215159052565b5060a083015161192860a086018260070b9052565b5060c083015161193c60c086018215159052565b5060e083015184820360e086015261195482826117c9565b91505061010083015161198f6101008601828051600790810b83526020808301516001600160a01b031690840152604091820151900b910152565b509392505050565b600081518084526020840193506020830160005b82811015611a09578151805160070b87526020808201516001600160a01b03908116828a01526040808401511515908a01526060808401511515908a0152608092830151169188019190915260a090960195909101906001016119ab565b5093949350505050565b600081518084526020840193506020830160005b82811015611a09578151805160070b8752602081015160070b6020880152604081015160070b6040880152606081015160070b606088015260808101511515608088015260018060a01b0360a08201511660a08801525060c086019550602082019150600181019050611a27565b600081518084526020840193506020830160005b82811015611a09578151805160070b8752602081015160070b6020880152604081015160070b604088015260018060a01b03606082015116606088015260808101511515608088015260018060a01b0360a08201511660a08801525060c086019550602082019150600181019050611aa9565b600081516101208452611b33610120850182611898565b90506020830151611b49602086018260070b9052565b506040830151611b5d604086018215159052565b506060830151611b71606086018215159052565b506080830151611b85608086018215159052565b5060a083015184820360a0860152611b9d8282611997565b91505060c083015184820360c0860152611bb78282611a13565b91505060e083015184820360e0860152611bd18282611a95565b9150506101008301518482036101008601526113118282611783565b60208152600061177c6020830184611b1c565b8260070b8152604060208201526000611c1c6040830184611b1c565b949350505050565b8035600781900b811461175c57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611c7557611c75611c36565b604052919050565b600067ffffffffffffffff821115611c9757611c97611c36565b5060051b60200190565b600080600060608486031215611cb657600080fd5b611cbf84611745565b9250611ccd60208501611c24565b9150604084013567ffffffffffffffff811115611ce957600080fd5b8401601f81018613611cfa57600080fd5b8035611d0d611d0882611c7d565b611c4c565b8082825260208201915060208360051b850101925088831115611d2f57600080fd5b6020840193505b82841015611d5857611d4784611c24565b825260209384019390910190611d36565b809450505050509250925092565b600080600060608486031215611d7b57600080fd5b611d8484611745565b9250611d9260208501611c24565b9150604084013567ffffffffffffffff811115611dae57600080fd5b8401601f81018613611dbf57600080fd5b8035611dcd611d0882611c7d565b8082825260208201915060208360051b850101925088831115611def57600080fd5b602084015b83811015611e9357803567ffffffffffffffff811115611e1357600080fd5b8501603f81018b13611e2457600080fd5b602081013567ffffffffffffffff811115611e4157611e41611c36565b611e54601f8201601f1916602001611c4c565b8181526040838301018d1015611e6957600080fd5b81604084016020830137600060208383010152808652505050602083019250602081019050611df4565b50809450505050509250925092565b6000606082018560070b83528460070b60208401526060604084015280845180835260808501915060208601925060005b81811015611ef457835160070b835260209384019390920191600101611ed3565b5090979650505050505050565b602081526000808354818160011c90506001821680611f2157607f821691505b602082108103611f3f57634e487b7160e01b84526022600452602484fd5b6020860182905260408601818015611f5e5760018114611f7457611fa2565b60ff198516825283151560051b82019550611fa2565b60008981526020902060005b85811015611f9c57815484820152600190910190602001611f80565b83019650505b5093979650505050505050565b80356020831015611fc857600019602084900360031b1b165b92915050565b60208082526017908201527f68747343616c6c3a2064656c6567617465642063616c6c000000000000000000604082015260600190565b80516020808301519190811015612026576000198160200360031b1b821691505b50919050565b60006020828403121561203e57600080fd5b815163ffffffff8116811461177c57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115611fc857611fc8612052565b81810381811115611fc857611fc861205256fea26469706673582212200c37a53f6278ef33629c3f60d6f0a81aa638f98afcbf58a1f9a4d6075213385664736f6c634300081c0033",
    "sourceMap": "254:16803:23:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "254:16803:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8719:12;9152:2;9133:21;;;9125:63;;;;-1:-1:-1;;;9125:63:23;;371:2:30;9125:63:23;;;353:21:30;410:2;390:18;;;383:30;449:31;429:18;;;422:59;498:18;;9125:63:23;;;;;;;;;9199:24;9240:13;9251:1;9199:24;9240:8;9199:24;9240:13;:::i;:::-;9233:21;;;:::i;:::-;9226:29;;;-1:-1:-1;9293:10:23;9273:30;;9265:73;;;;-1:-1:-1;;;9265:73:23;;1408:2:30;9265:73:23;;;1390:21:30;1447:2;1427:18;;;1420:30;1486:32;1466:18;;;1459:60;1536:18;;9265:73:23;1206:354:30;9265:73:23;9349:13;9381:14;9392:2;9390:1;9381:8;9349:13;9381:14;:::i;:::-;9373:23;;;:::i;:::-;9365:32;;;-1:-1:-1;9432:4:23;9415:22;;9407:64;;;;-1:-1:-1;;;9407:64:23;;2146:2:30;9407:64:23;;;2128:21:30;2185:2;2165:18;;;2158:30;2224:31;2204:18;;;2197:59;2273:18;;9407:64:23;1944:353:30;9407:64:23;9650:20;:18;:20::i;:::-;254:16803;;;-1:-1:-1;254:16803:23;;;-1:-1:-1;;;;254:16803:23;2230:778;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1988:236;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5471:550::-;;;;;;:::i;:::-;;:::i;:::-;;;;12852:1:30;12841:21;;;12823:40;;12899:21;;;;12894:2;12879:18;;12872:49;12796:18;5471:550:23;12657:270:30;1314:337:23;;;;;;:::i;:::-;;:::i;:::-;;;13106:10:30;13094:23;;;13076:42;;13064:2;13049:18;1314:337:23;12932:192:30;4003:623:23;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;9779:3492::-;9826:12;9850:15;9875;9887:2;9884;9875:8;9850:15;9875;:::i;:::-;9868:23;;;:::i;:::-;9850:41;-1:-1:-1;;;;;;;;;;9906:32:23;;;9902:3311;;9972:4;9961:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;9954:23;;;9779:3492;:::o;9902:3311::-;-1:-1:-1;;;;;;;;;9998:36:23;;;9994:3219;;10068:8;;10057:20;;;10068:8;;;;10057:20;;;17074:36:30;17047:18;10057:20:23;16932:184:30;9994:3219:23;-1:-1:-1;;;;;;;;;10098:39:23;;;10094:3119;;10171:11;;10160:23;;;;;;17267:25:30;;17255:2;17240:18;;17121:177;10094:3119:23;-1:-1:-1;;;;;;;;;10204:34:23;;;10200:3013;;10272:6;10261:18;;;;;;;;:::i;10200:3013::-;-1:-1:-1;;;;;;;;;10300:37:23;;;10296:2917;;10380:2;10361:8;:21;;10353:64;;;;-1:-1:-1;;;10353:64:23;;17505:2:30;10353:64:23;;;17487:21:30;17544:2;17524:18;;;17517:30;17583:32;17563:18;;;17556:60;17633:18;;10353:64:23;17303:354:30;10353:64:23;10432:15;10466;10478:2;10475;10466:8;10432:15;10466;:::i;:::-;10458:24;;;:::i;:::-;10450:33;;10432:51;;10515:20;10527:7;10515:11;:20::i;:::-;10504:32;;;;;;17267:25:30;;17255:2;17240:18;;17121:177;10504:32:23;;;;;;;;;;;;;10497:39;;;;9779:3492;:::o;10296:2917::-;-1:-1:-1;;;;;;;;;10557:36:23;;;10553:2660;;10636:2;10617:8;:21;;10609:63;;;;-1:-1:-1;;;10609:63:23;;17864:2:30;10609:63:23;;;17846:21:30;17903:2;17883:18;;;17876:30;17942:31;17922:18;;;17915:59;17991:18;;10609:63:23;17662:353:30;10609:63:23;10687:10;10716:15;10728:2;10725;10716:8;10687:10;10716:15;:::i;:::-;10708:24;;;:::i;:::-;10700:33;;;-1:-1:-1;10747:14:23;10780:15;10792:2;10789;10780:8;10747:14;10780:15;:::i;:::-;10772:24;;;:::i;:::-;10764:33;-1:-1:-1;10827:10:23;10851:28;10827:10;10868:2;10764:33;10851:9;:28::i;:::-;10900:16;;;10911:4;10900:16;;;18420:41:30;18393:18;10900:16:23;;;;;;;;;;;;;10893:23;;;;;;9779:3492;:::o;10553:2660::-;-1:-1:-1;;;;;;;;;10937:40:23;;;10933:2280;;11020:3;11001:8;:22;;10993:65;;;;-1:-1:-1;;;10993:65:23;;18674:2:30;10993:65:23;;;18656:21:30;18713:2;18693:18;;;18686:30;18752:32;18732:18;;;18725:60;18802:18;;10993:65:23;18472:354:30;10993:65:23;11073:12;11104:15;11116:2;11113;11104:8;11073:12;11104:15;:::i;:::-;11096:24;;;:::i;:::-;11088:33;;;-1:-1:-1;11135:10:23;11164:15;11176:2;11173;11164:8;11135:10;11164:15;:::i;:::-;11156:24;;;:::i;:::-;11148:33;;;-1:-1:-1;11195:14:23;11228:16;11240:3;11237:2;11228:8;11195:14;11228:16;:::i;:::-;11220:25;;;:::i;:::-;11212:34;-1:-1:-1;11278:10:23;11303:38;11319:4;11278:10;11212:34;11303:15;:38::i;:::-;11355:27;11365:4;11371:2;11375:6;11355:9;:27::i;:::-;11403:16;;;11414:4;11403:16;;;18420:41:30;18393:18;11403:16:23;;;;;;;;;;;;11396:23;;;;;;;9779:3492;:::o;10933:2280::-;-1:-1:-1;;;;;;;;;11440:37:23;;;11436:1777;;11520:2;11501:8;:21;;11493:64;;;;-1:-1:-1;;;11493:64:23;;19033:2:30;11493:64:23;;;19015:21:30;19072:2;19052:18;;;19045:30;19111:32;19091:18;;;19084:60;19161:18;;11493:64:23;18831:354:30;11493:64:23;11572:13;11604:15;11616:2;11613;11604:8;11572:13;11604:15;:::i;:::-;11596:24;;;:::i;:::-;11588:33;;;-1:-1:-1;11635:15:23;11669;11681:2;11678;11669:8;11635:15;11669;:::i;:::-;11661:24;;;:::i;:::-;11653:33;;11635:51;;11718:27;11730:5;11737:7;11718:11;:27::i;:::-;11707:39;;;;;;17267:25:30;;17255:2;17240:18;;17121:177;11707:39:23;;;;;;;;;;;;;11700:46;;;;;9779:3492;:::o;11436:1777::-;-1:-1:-1;;;;;;;;;11767:35:23;;;11763:1450;;11845:2;11826:8;:21;;11818:62;;;;-1:-1:-1;;;11818:62:23;;19392:2:30;11818:62:23;;;19374:21:30;19431:2;19411:18;;;19404:30;19470;19450:18;;;19443:58;19518:18;;11818:62:23;19190:352:30;11818:62:23;11895:15;11929;11941:2;11938;11929:8;11895:15;11929;:::i;:::-;11921:24;;;:::i;:::-;11913:33;;;-1:-1:-1;11960:14:23;11993:15;12005:2;12002;11993:8;11960:14;11993:15;:::i;:::-;11985:24;;;:::i;:::-;11977:33;-1:-1:-1;12040:10:23;12064:32;12040:10;12080:7;11977:33;12064:8;:32::i;:::-;12131:7;-1:-1:-1;;;;;12115:32:23;12124:5;-1:-1:-1;;;;;12115:32:23;;12140:6;12115:32;;;;17267:25:30;;17255:2;17240:18;;17121:177;12115:32:23;;;;;;;;12168:16;;;12179:4;12168:16;;;18420:41:30;18393:18;12168:16:23;18280:187:30;11763:1450:23;-1:-1:-1;;;;;;;;;12205:40:23;;;12201:1012;;12288:2;12269:8;:21;;12261:59;;;;-1:-1:-1;;;12261:59:23;;19749:2:30;12261:59:23;;;19731:21:30;19788:2;19768:18;;;19761:30;19827:27;19807:18;;;19800:55;19872:18;;12261:59:23;19547:349:30;12261:59:23;12334:15;12368;12380:2;12377;12368:8;12334:15;12368;:::i;:::-;12360:24;;;:::i;:::-;12352:33;;;-1:-1:-1;12399:14:23;12432:15;12444:2;12441;12432:8;12399:14;12432:15;:::i;:::-;12424:24;;;:::i;:::-;12416:33;-1:-1:-1;12463:22:23;12469:7;12416:33;12463:5;:22::i;:::-;12506:16;;;12517:4;12506:16;;;18420:41:30;18393:18;12506:16:23;18280:187:30;12201:1012:23;-1:-1:-1;;;;;;;;;12543:40:23;;;12539:674;;12626:2;12607:8;:21;;12599:59;;;;-1:-1:-1;;;12599:59:23;;20103:2:30;12599:59:23;;;20085:21:30;20142:2;20122:18;;;20115:30;20181:27;20161:18;;;20154:55;20226:18;;12599:59:23;19901:349:30;12599:59:23;12672:14;12705:15;12717:2;12714;12705:8;12672:14;12705:15;:::i;:::-;12697:24;;;:::i;:::-;12689:33;-1:-1:-1;12736:25:23;12742:10;12689:33;12736:5;:25::i;:::-;12782:16;;;12793:4;12782:16;;;18420:41:30;18393:18;12782:16:23;18280:187:30;12539:674:23;-1:-1:-1;;;;;;;;;12819:44:23;;;12815:398;;12906:2;12887:8;:21;;12879:63;;;;-1:-1:-1;;;12879:63:23;;20457:2:30;12879:63:23;;;20439:21:30;20496:2;20476:18;;;20469:30;20535:31;20515:18;;;20508:59;20584:18;;12879:63:23;20255:353:30;12879:63:23;12956:15;12990;13002:2;12999;12990:8;12956:15;12990;:::i;:::-;12982:24;;;:::i;:::-;12974:33;;;-1:-1:-1;13021:14:23;13054:15;13066:2;13063;13054:8;13021:14;13054:15;:::i;:::-;13046:24;;;:::i;:::-;13038:33;-1:-1:-1;13085:44:23;13101:7;13110:10;13038:33;13085:15;:44::i;:::-;13143:22;13149:7;13158:6;13143:5;:22::i;12815:398::-;13222:42;;-1:-1:-1;;;13222:42:23;;20815:2:30;13222:42:23;;;20797:21:30;20854:2;20834:18;;;20827:30;20893:33;20873:18;;;20866:61;20944:18;;13222:42:23;20613:355:30;2230:778:23;2290:46;;:::i;:::-;2360:641;;;2403:315;;;;;-1:-1:-1;2403:315:23;;;;;;2360:641;;;2403:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2605:37;;;;;;;;;;;2360:641;;;;;-1:-1:-1;;;;2605:37:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;2403:315:23;;2660:44;;;;;;;;;-1:-1:-1;2660:44:23;;;2403:315;2660:44;;;;;;;;;;;;2403:315;;;;;;;2360:641;;;2745:11;;2660:44;2360:641;;;;;;;;;;;;;;;;;;;;;;;2829:37;;;;;;;;;;2360:641;;;;;2829:37;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2829:37:23;;-1:-1:-1;;2829:37:23;;;;;;;;;;;-1:-1:-1;2360:641:23;;;;2920:1;2880:42;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2880:42:23;;-1:-1:-1;;2880:42:23;;;;;;;;;;;-1:-1:-1;2360:641:23;;;;2973:1;2936:39;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2936:39:23;;-1:-1:-1;;2936:39:23;;;;;;;;;;;-1:-1:-1;2360:641:23;;;;;;;;;;;;-1:-1:-1;2360:641:23;;;;;2348:653;2230:778;-1:-1:-1;;2230:778:23:o;1988:236::-;2048:18;2068:46;;:::i;:::-;2141:2;2126:17;;2196:21;2211:5;2196:14;:21::i;:::-;2184:33;;1988:236;;;:::o;5471:550::-;5584:18;;830:4;351:5;822:28;814:64;;;;-1:-1:-1;;;814:64:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;5657:19:23;::::1;5649:56;;;::::0;-1:-1:-1;;;5649:56:23;;21527:2:30;5649:56:23::1;::::0;::::1;21509:21:30::0;21566:2;21546:18;;;21539:30;21605:26;21585:18;;;21578:54;21649:18;;5649:56:23::1;21325:348:30::0;5649:56:23::1;5732:1;5723:6;:10;;;5715:48;;;::::0;-1:-1:-1;;;5715:48:23;;21880:2:30;5715:48:23::1;::::0;::::1;21862:21:30::0;21919:2;21899:18;;;21892:30;21958:27;21938:18;;;21931:55;22003:18;;5715:48:23::1;21678:349:30::0;5715:48:23::1;5774:46;5823:21;5838:5;5823:14;:21::i;:::-;5774:70;;5855:47;5861:9;:15;;;:24;;;5894:6;5855:47;;:5;:47::i;:::-;-1:-1:-1::0;;6001:11:23::1;::::0;5928:2:::1;::::0;6001:11;;-1:-1:-1;5471:550:23;-1:-1:-1;;;5471:550:23:o;1314:337::-;1384:16;830:4;351:5;822:28;814:64;;;;-1:-1:-1;;;814:64:23;;;;;;;:::i;:::-;1536:40:::1;::::0;;-1:-1:-1;;;1536:40:23::1;::::0;::::1;22213:46:30::0;;;1412:15:23::1;22275:11:30::0;;;22268:72;;;-1:-1:-1;;;;;;22378:2:30;22374:15;;;22370:53;22356:12;;;22349:75;1430:39:23;;1412:15;;;;22440:12:30;1536:40:23::1;;;;;;;;;;;;1528:49;;;:::i;:::-;1624:11:::0;;1314:337;-1:-1:-1;;;;;1314:337:23:o;4003:623::-;4111:18;;4169:28;830:4;351:5;822:28;814:64;;;;-1:-1:-1;;;814:64:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;4222:19:23;::::1;4214:56;;;::::0;-1:-1:-1;;;4214:56:23;;22967:2:30;4214:56:23::1;::::0;::::1;22949:21:30::0;23006:2;22986:18;;;22979:30;23045:26;23025:18;;;23018:54;23089:18;;4214:56:23::1;22765:348:30::0;4214:56:23::1;4297:1;4288:6;:10;;;4280:48;;;::::0;-1:-1:-1;;;4280:48:23;;23320:2:30;4280:48:23::1;::::0;::::1;23302:21:30::0;23359:2;23339:18;;;23332:30;23398:27;23378:18;;;23371:55;23443:18;;4280:48:23::1;23118:349:30::0;4280:48:23::1;4339:46;4388:21;4403:5;4388:14;:21::i;:::-;4339:70;;4420:47;4426:9;:15;;;:24;;;4459:6;4420:47;;:5;:47::i;:::-;-1:-1:-1::0;;4566:11:23::1;::::0;4605:14:::1;::::0;;4617:1:::1;4605:14:::0;;::::1;::::0;::::1;::::0;;;4493:2:::1;::::0;4566:11;;-1:-1:-1;4605:14:23;-1:-1:-1;4003:623:23;-1:-1:-1;;;4003:623:23:o;14034:194::-;14094:14;14120:12;14135:23;14150:7;14135:14;:23::i;:::-;14201:11;;14034:194;-1:-1:-1;;;14034:194:23:o;14928:231::-;-1:-1:-1;;;;;15015:18:23;;15007:50;;;;-1:-1:-1;;;15007:50:23;;23674:2:30;15007:50:23;;;23656:21:30;23713:2;23693:18;;;23686:30;-1:-1:-1;;;23732:18:30;;;23725:49;23791:18;;15007:50:23;23472:343:30;15007:50:23;-1:-1:-1;;;;;15075:16:23;;15067:50;;;;-1:-1:-1;;;15067:50:23;;24022:2:30;15067:50:23;;;24004:21:30;24061:2;24041:18;;;24034:30;-1:-1:-1;;;24080:18:30;;;24073:51;24141:18;;15067:50:23;23820:345:30;15067:50:23;15127:25;15135:4;15141:2;15145:6;15127:7;:25::i;:::-;14928:231;;;:::o;16651:404::-;16742:24;16769:27;16781:5;16788:7;16769:11;:27::i;:::-;16742:54;;-1:-1:-1;;16810:16:23;:37;16806:243;;16891:6;16871:16;:26;;16863:68;;;;-1:-1:-1;;;16863:68:23;;24372:2:30;16863:68:23;;;24354:21:30;24411:2;24391:18;;;24384:30;24450:31;24430:18;;;24423:59;24499:18;;16863:68:23;24170:353:30;16863:68:23;16973:51;16982:5;16989:7;17017:6;16998:16;:25;16973:8;:51::i;:::-;16732:323;16651:404;;;:::o;14234:216::-;14309:14;14335:12;14350:30;14365:5;14372:7;14350:14;:30::i;:::-;14423:11;;14234:216;-1:-1:-1;;;;14234:216:23:o;16176:350::-;-1:-1:-1;;;;;16268:19:23;;16260:55;;;;-1:-1:-1;;;16260:55:23;;24730:2:30;16260:55:23;;;24712:21:30;24769:2;24749:18;;;24742:30;24808:25;24788:18;;;24781:53;24851:18;;16260:55:23;24528:347:30;16260:55:23;-1:-1:-1;;;;;16333:21:23;;16325:59;;;;-1:-1:-1;;;16325:59:23;;25082:2:30;16325:59:23;;;25064:21:30;25121:2;25101:18;;;25094:30;25160:27;25140:18;;;25133:55;25205:18;;16325:59:23;24880:349:30;16325:59:23;16394:21;16418:30;16433:5;16440:7;16418:14;:30::i;:::-;16481:29;;;;-1:-1:-1;;;16176:350:23:o;14456:230::-;-1:-1:-1;;;;;14531:21:23;;14523:56;;;;-1:-1:-1;;;14523:56:23;;25436:2:30;14523:56:23;;;25418:21:30;25475:2;25455:18;;;25448:30;-1:-1:-1;;;25494:18:30;;;25487:52;25556:18;;14523:56:23;25234:346:30;14523:56:23;14606:1;14597:6;:10;14589:44;;;;-1:-1:-1;;;14589:44:23;;25787:2:30;14589:44:23;;;25769:21:30;25826:2;25806:18;;;25799:30;-1:-1:-1;;;25845:18:30;;;25838:51;25906:18;;14589:44:23;25585:345:30;14589:44:23;14643:36;14659:1;14663:7;14672:6;14643:7;:36::i;:::-;14456:230;;:::o;14692:::-;-1:-1:-1;;;;;14767:21:23;;14759:56;;;;-1:-1:-1;;;14759:56:23;;26137:2:30;14759:56:23;;;26119:21:30;26176:2;26156:18;;;26149:30;-1:-1:-1;;;26195:18:30;;;26188:52;26257:18;;14759:56:23;25935:346:30;14759:56:23;14842:1;14833:6;:10;14825:44;;;;-1:-1:-1;;;14825:44:23;;26488:2:30;14825:44:23;;;26470:21:30;26527:2;26507:18;;;26500:30;-1:-1:-1;;;26546:18:30;;;26539:51;26607:18;;14825:44:23;26286:345:30;14825:44:23;14879:36;14887:7;14904:1;14908:6;14879:7;:36::i;13277:322::-;13463:52;;-1:-1:-1;;;13463:52:23;;-1:-1:-1;;;;;26800:32:30;;13463:52:23;;;26782:51:30;13340:12:23;;-1:-1:-1;;;13382:25:23;13340:12;;;;351:5;;13463:43;;26755:18:30;;13463:52:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13548:42;;;-1:-1:-1;;;;;;27322:33:30;;;13548:42:23;;;27310:46:30;-1:-1:-1;;27389:15:30;;;27385:45;27372:11;;;27365:66;27338:3;27465:16;;;27461:43;27447:12;;;27440:65;13444:71:23;;-1:-1:-1;27521:12:30;13548:42:23;;;;;;;;;;;;13540:51;;;:::i;:::-;13532:60;13277:322;-1:-1:-1;;;;;13277:322:23:o;15165:1005::-;-1:-1:-1;;;;;15246:18:23;;15242:376;;15295:6;15280:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;15242:376:23;;-1:-1:-1;15242:376:23;;15332:16;15351:20;15366:4;15351:14;:20::i;:::-;15444:15;;15332:39;;-1:-1:-1;15482:21:23;;;;15474:65;;;;-1:-1:-1;;;15474:65:23;;28008:2:30;15474:65:23;;;27990:21:30;28047:2;28027:18;;;28020:30;28086:33;28066:18;;;28059:61;28137:18;;15474:65:23;27806:355:30;15474:65:23;15581:24;;;15564:42;;15242:376;-1:-1:-1;;;;;15632:16:23;;15628:494;;15679:6;15664:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;15628:494:23;;-1:-1:-1;15628:494:23;;15716:14;15733:18;15748:2;15733:14;:18::i;:::-;15820:13;;15716:35;;-1:-1:-1;15765:17:23;16039:18;16051:6;15820:13;16039:18;:::i;:::-;16082:28;;;-1:-1:-1;;15628:494:23;16152:2;-1:-1:-1;;;;;16137:26:23;16146:4;-1:-1:-1;;;;;16137:26:23;;16156:6;16137:26;;;;17267:25:30;;17255:2;17240:18;;17121:177;16137:26:23;;;;;;;;15165:1005;;;:::o;13605:423::-;13804:50;;-1:-1:-1;;;13804:50:23;;-1:-1:-1;;;;;26800:32:30;;13804:50:23;;;26782:51:30;13683:12:23;;-1:-1:-1;;;13725:25:23;13683:12;;;;351:5;;13804:43;;26755:18:30;;13804:50:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13883:52;;-1:-1:-1;;;13883:52:23;;-1:-1:-1;;;;;26800:32:30;;13883:52:23;;;26782:51:30;13787:67:23;;-1:-1:-1;13864:16:23;;351:5;;13883:43;;26755:18:30;;13883:52:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13968:51;;;-1:-1:-1;;;;;;28518:33:30;;;13968:51:23;;;28506:46:30;-1:-1:-1;;;;;;28589:2:30;28585:15;;;28581:53;28568:11;;;28561:74;28534:3;28669:16;;;28665:43;;28651:12;;;28644:65;28743:16;;;28739:43;28725:12;;;28718:65;13864:71:23;;-1:-1:-1;28799:12:30;13968:51:23;;;;;;;;;;;;13960:60;;;:::i;:::-;13952:69;13605:423;-1:-1:-1;;;;;;;13605:423:23:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;527:331:30:-;632:9;643;685:8;673:10;670:24;667:44;;;707:1;704;697:12;667:44;736:6;726:8;723:20;720:40;;;756:1;753;746:12;720:40;-1:-1:-1;;782:23:30;;;827:25;;;;;-1:-1:-1;527:331:30:o;863:338::-;983:19;;-1:-1:-1;;;;;;1020:29:30;;;1069:1;1061:10;;1058:137;;;-1:-1:-1;;;;;;1130:1:30;1126:11;;;1123:1;1119:19;1115:46;;;1107:55;;1103:82;;-1:-1:-1;1058:137:30;;863:338;;;;:::o;1565:374::-;1686:19;;-1:-1:-1;;;;;;1723:40:30;;;1783:2;1775:11;;1772:161;;;-1:-1:-1;;;;;;1845:2:30;1841:12;;;;1838:1;1834:20;1830:58;;;1822:67;1818:105;;;;1565:374;-1:-1:-1;;1565:374:30:o;2302:173::-;2370:20;;-1:-1:-1;;;;;2419:31:30;;2409:42;;2399:70;;2465:1;2462;2455:12;2399:70;2302:173;;;:::o;2480:186::-;2539:6;2592:2;2580:9;2571:7;2567:23;2563:32;2560:52;;;2608:1;2605;2598:12;2560:52;2631:29;2650:9;2631:29;:::i;:::-;2621:39;2480:186;-1:-1:-1;;;2480:186:30:o;2671:400::-;2713:3;2751:5;2745:12;2778:6;2773:3;2766:19;2803:1;2813:139;2827:6;2824:1;2821:13;2813:139;;;2935:4;2920:13;;;2916:24;;2910:31;2890:11;;;2886:22;;2879:63;2842:12;2813:139;;;2817:3;2997:1;2990:4;2981:6;2976:3;2972:16;2968:27;2961:38;3060:4;3053:2;3049:7;3044:2;3036:6;3032:15;3028:29;3023:3;3019:39;3015:50;3008:57;;;2671:400;;;;:::o;3377:1368::-;3438:3;3469;3501:5;3495:12;3528:6;3523:3;3516:19;3560:4;3555:3;3551:14;3544:21;;3618:4;3608:6;3605:1;3601:14;3594:5;3590:26;3586:37;3657:4;3650:5;3646:16;3680:1;3690:1029;3704:6;3701:1;3698:13;3690:1029;;;3769:16;;;-1:-1:-1;;3765:30:30;3753:43;;3819:13;;3858:9;;3845:23;;3915:4;3907:13;;;3901:20;3958:4;3941:15;;;3934:29;;;4014:19;;4007:27;4000:35;3983:15;;;3976:60;4083:23;;;4077:30;-1:-1:-1;;;;;4073:56:30;4066:4;4056:15;;4049:81;4171:23;;;4165:30;4117:3;4225:4;4215:15;;4208:29;4264:49;4308:3;4298:14;;4165:30;4264:49;:::i;:::-;4250:63;;4372:4;4358:12;4354:23;4348:30;4442:2;4438:7;4431:4;4423:6;4419:17;4415:31;4408:4;4402;4398:15;4391:56;4474:41;4508:6;4492:14;4474:41;:::i;:::-;4579:4;4561:23;;;;4555:30;-1:-1:-1;;;;;4551:56:30;4545:3;4535:14;;;;4528:80;;;;-1:-1:-1;4670:4:30;4695:14;;;;4460:55;;-1:-1:-1;4658:17:30;;;;;4604:1;3719:9;3690:1029;;;-1:-1:-1;4735:4:30;;3377:1368;-1:-1:-1;;;;;;3377:1368:30:o;5014:1313::-;5068:3;5112:5;5106:12;5139:6;5134:3;5127:19;5167:49;5208:6;5203:3;5199:16;5185:12;5167:49;:::i;:::-;5155:61;;5264:4;5257:5;5253:16;5247:23;5312:3;5306:4;5302:14;5295:4;5290:3;5286:14;5279:38;5340:39;5374:4;5358:14;5340:39;:::i;:::-;5326:53;;;5427:4;5420:5;5416:16;5410:23;5442:50;5486:4;5481:3;5477:14;5461;-1:-1:-1;;;;;3142:31:30;3130:44;;3076:104;5442:50;;5540:4;5533:5;5529:16;5523:23;5590:3;5582:6;5578:16;5571:4;5566:3;5562:14;5555:40;5618:41;5652:6;5636:14;5618:41;:::i;:::-;5604:55;;;5707:4;5700:5;5696:16;5690:23;5722:47;5763:4;5758:3;5754:14;5738;3255:13;3248:21;3236:34;;3185:91;5722:47;;5817:4;5810:5;5806:16;5800:23;5832:48;5874:4;5869:3;5865:14;5849;3356:1;3345:20;3333:33;;3281:91;5832:48;;5928:4;5921:5;5917:16;5911:23;5943:47;5984:4;5979:3;5975:14;5959;3255:13;3248:21;3236:34;;3185:91;5943:47;;6038:4;6031:5;6027:16;6021:23;6088:3;6080:6;6076:16;6069:4;6064:3;6060:14;6053:40;6116:60;6169:6;6153:14;6116:60;:::i;:::-;6102:74;;;6224:6;6217:5;6213:18;6207:25;6241:58;6291:6;6286:3;6282:16;6266:14;4836:12;;4833:1;4822:27;;;4810:40;;4903:4;4892:16;;;4886:23;-1:-1:-1;;;;;4882:49:30;4866:14;;;4859:73;4995:4;4984:16;;;4978:23;4964:38;;4948:14;;4941:62;4750:259;6241:58;-1:-1:-1;6315:6:30;5014:1313;-1:-1:-1;;;5014:1313:30:o;6332:787::-;6393:3;6431:5;6425:12;6458:6;6453:3;6446:19;6490:4;6485:3;6481:14;6474:21;;6529:4;6522:5;6518:16;6552:1;6562:532;6576:6;6573:1;6570:13;6562:532;;;6635:13;;6687:9;;6684:1;6673:24;6661:37;;6752:4;6744:13;;;6738:20;-1:-1:-1;;;;;6734:46:30;;;6718:14;;;6711:70;6845:4;6837:13;;;6831:20;6824:28;6817:36;6801:14;;;6794:60;6918:4;6910:13;;;6904:20;6897:28;6890:36;6874:14;;;6867:60;6981:4;6973:13;;;6967:20;6963:46;6947:14;;;6940:70;;;;6768:3;7030:14;;;;7067:17;;;;6777:1;6591:9;6562:532;;;-1:-1:-1;7110:3:30;;6332:787;-1:-1:-1;;;;6332:787:30:o;7124:852::-;7190:3;7228:5;7222:12;7255:6;7250:3;7243:19;7287:4;7282:3;7278:14;7271:21;;7326:4;7319:5;7315:16;7349:1;7359:592;7373:6;7370:1;7367:13;7359:592;;;7438:6;7432:13;7490:2;7484:9;7481:1;7470:24;7465:3;7458:37;7559:4;7555:2;7551:13;7545:20;7542:1;7531:35;7524:4;7519:3;7515:14;7508:59;7631:4;7627:2;7623:13;7617:20;7614:1;7603:35;7596:4;7591:3;7587:14;7580:59;7703:4;7699:2;7695:13;7689:20;7686:1;7675:35;7668:4;7663:3;7659:14;7652:59;7775:4;7771:2;7767:13;7761:20;7754:28;7747:36;7740:4;7735:3;7731:14;7724:60;7863:1;7859;7854:3;7850:11;7846:19;7838:4;7834:2;7830:13;7824:20;7820:46;7813:4;7808:3;7804:14;7797:70;;7896:4;7891:3;7887:14;7880:21;;7936:4;7928:6;7924:17;7914:27;;7395:1;7392;7388:9;7383:14;;7359:592;;7981:860;8044:3;8082:5;8076:12;8109:6;8104:3;8097:19;8141:4;8136:3;8132:14;8125:21;;8180:4;8173:5;8169:16;8203:1;8213:603;8227:6;8224:1;8221:13;8213:603;;;8292:6;8286:13;8344:2;8338:9;8335:1;8324:24;8319:3;8312:37;8413:4;8409:2;8405:13;8399:20;8396:1;8385:35;8378:4;8373:3;8369:14;8362:59;8485:4;8481:2;8477:13;8471:20;8468:1;8457:35;8450:4;8445:3;8441:14;8434:59;8572:1;8568;8563:3;8559:11;8555:19;8547:4;8543:2;8539:13;8533:20;8529:46;8522:4;8517:3;8513:14;8506:70;8640:4;8636:2;8632:13;8626:20;8619:28;8612:36;8605:4;8600:3;8596:14;8589:60;8728:1;8724;8719:3;8715:11;8711:19;8703:4;8699:2;8695:13;8689:20;8685:46;8678:4;8673:3;8669:14;8662:70;;8761:4;8756:3;8752:14;8745:21;;8801:4;8793:6;8789:17;8779:27;;8249:1;8246;8242:9;8237:14;;8213:603;;8846:1384;8898:3;8942:5;8936:12;8969:6;8964:3;8957:19;8997:61;9050:6;9045:3;9041:16;9027:12;8997:61;:::i;:::-;8985:73;;9106:4;9099:5;9095:16;9089:23;9121:48;9163:4;9158:3;9154:14;9138;3356:1;3345:20;3333:33;;3281:91;9121:48;;9217:4;9210:5;9206:16;9200:23;9232:47;9273:4;9268:3;9264:14;9248;3255:13;3248:21;3236:34;;3185:91;9232:47;;9327:4;9320:5;9316:16;9310:23;9342:47;9383:4;9378:3;9374:14;9358;3255:13;3248:21;3236:34;;3185:91;9342:47;;9437:4;9430:5;9426:16;9420:23;9452:47;9493:4;9488:3;9484:14;9468;3255:13;3248:21;3236:34;;3185:91;9452:47;;9547:4;9540:5;9536:16;9530:23;9595:3;9589:4;9585:14;9578:4;9573:3;9569:14;9562:38;9623:58;9676:4;9660:14;9623:58;:::i;:::-;9609:72;;;9729:4;9722:5;9718:16;9712:23;9779:3;9771:6;9767:16;9760:4;9755:3;9751:14;9744:40;9807:65;9865:6;9849:14;9807:65;:::i;:::-;9793:79;;;9920:4;9913:5;9909:16;9903:23;9970:3;9962:6;9958:16;9951:4;9946:3;9942:14;9935:40;9998:62;10053:6;10037:14;9998:62;:::i;:::-;9984:76;;;10108:6;10101:5;10097:18;10091:25;10162:3;10154:6;10150:16;10141:6;10136:3;10132:16;10125:42;10183:41;10217:6;10201:14;10183:41;:::i;10235:266::-;10420:2;10409:9;10402:21;10383:4;10440:55;10491:2;10480:9;10476:18;10468:6;10440:55;:::i;10506:348::-;10729:6;10726:1;10715:21;10704:9;10697:40;10773:2;10768;10757:9;10753:18;10746:30;10678:4;10793:55;10844:2;10833:9;10829:18;10821:6;10793:55;:::i;:::-;10785:63;10506:348;-1:-1:-1;;;;10506:348:30:o;10859:160::-;10925:20;;10985:1;10974:20;;;10964:31;;10954:59;;11009:1;11006;10999:12;11024:127;11085:10;11080:3;11076:20;11073:1;11066:31;11116:4;11113:1;11106:15;11140:4;11137:1;11130:15;11156:275;11227:2;11221:9;11292:2;11273:13;;-1:-1:-1;;11269:27:30;11257:40;;11327:18;11312:34;;11348:22;;;11309:62;11306:88;;;11374:18;;:::i;:::-;11410:2;11403:22;11156:275;;-1:-1:-1;11156:275:30:o;11436:181::-;11494:4;11527:18;11519:6;11516:30;11513:56;;;11549:18;;:::i;:::-;-1:-1:-1;11594:1:30;11590:14;11606:4;11586:25;;11436:181::o;11622:1030::-;11720:6;11728;11736;11789:2;11777:9;11768:7;11764:23;11760:32;11757:52;;;11805:1;11802;11795:12;11757:52;11828:29;11847:9;11828:29;:::i;:::-;11818:39;;11876:36;11908:2;11897:9;11893:18;11876:36;:::i;:::-;11866:46;;11963:2;11952:9;11948:18;11935:32;11990:18;11982:6;11979:30;11976:50;;;12022:1;12019;12012:12;11976:50;12045:22;;12098:4;12090:13;;12086:27;-1:-1:-1;12076:55:30;;12127:1;12124;12117:12;12076:55;12167:2;12154:16;12190:62;12206:45;12244:6;12206:45;:::i;:::-;12190:62;:::i;:::-;12274:3;12298:6;12293:3;12286:19;12330:2;12325:3;12321:12;12314:19;;12385:2;12375:6;12372:1;12368:14;12364:2;12360:23;12356:32;12342:46;;12411:7;12403:6;12400:19;12397:39;;;12432:1;12429;12422:12;12397:39;12464:2;12460;12456:11;12445:22;;12476:146;12492:6;12487:3;12484:15;12476:146;;;12558:21;12575:3;12558:21;:::i;:::-;12546:34;;12609:2;12509:12;;;;12600;;;;12476:146;;;12641:5;12631:15;;;;;;11622:1030;;;;;:::o;13129:1705::-;13238:6;13246;13254;13307:2;13295:9;13286:7;13282:23;13278:32;13275:52;;;13323:1;13320;13313:12;13275:52;13346:29;13365:9;13346:29;:::i;:::-;13336:39;;13394:36;13426:2;13415:9;13411:18;13394:36;:::i;:::-;13384:46;;13481:2;13470:9;13466:18;13453:32;13508:18;13500:6;13497:30;13494:50;;;13540:1;13537;13530:12;13494:50;13563:22;;13616:4;13608:13;;13604:27;-1:-1:-1;13594:55:30;;13645:1;13642;13635:12;13594:55;13685:2;13672:16;13708:62;13724:45;13762:6;13724:45;:::i;13708:62::-;13792:3;13816:6;13811:3;13804:19;13848:2;13843:3;13839:12;13832:19;;13903:2;13893:6;13890:1;13886:14;13882:2;13878:23;13874:32;13860:46;;13929:7;13921:6;13918:19;13915:39;;;13950:1;13947;13940:12;13915:39;13982:2;13978;13974:11;13994:810;14010:6;14005:3;14002:15;13994:810;;;14096:3;14083:17;14132:18;14119:11;14116:35;14113:55;;;14164:1;14161;14154:12;14113:55;14191:20;;14246:2;14238:11;;14234:25;-1:-1:-1;14224:53:30;;14273:1;14270;14263:12;14224:53;14327:2;14323;14319:11;14306:25;14360:18;14350:8;14347:32;14344:58;;;14382:18;;:::i;:::-;14430:59;14479:2;14454:19;;-1:-1:-1;;14450:33:30;14485:2;14446:42;14430:59;:::i;:::-;14502:25;;;14546:35;14554:17;;;14546:35;14543:48;-1:-1:-1;14540:68:30;;;14604:1;14601;14594:12;14540:68;14665:8;14660:2;14656;14652:11;14647:2;14638:7;14634:16;14621:53;14727:1;14722:2;14711:8;14702:7;14698:22;14694:31;14687:42;14754:7;14749:3;14742:20;;;;14791:2;14786:3;14782:12;14775:19;;14036:2;14031:3;14027:12;14020:19;;13994:810;;;13998:3;14823:5;14813:15;;;;;;13129:1705;;;;;:::o;14839:787::-;15025:4;15073:2;15062:9;15058:18;15117:6;15114:1;15103:21;15092:9;15085:40;15175:6;15172:1;15161:21;15156:2;15145:9;15141:18;15134:49;15219:2;15214;15203:9;15199:18;15192:30;15242:6;15277;15271:13;15308:6;15300;15293:22;15346:3;15335:9;15331:19;15324:26;;15385:2;15377:6;15373:15;15359:29;;15406:1;15416:184;15430:6;15427:1;15424:13;15416:184;;;15505:13;;15502:1;15491:28;15479:41;;15549:2;15575:15;;;;15540:12;;;;15452:1;15445:9;15416:184;;;-1:-1:-1;15617:3:30;;14839:787;-1:-1:-1;;;;;;;14839:787:30:o;15757:1170::-;15903:2;15892:9;15885:21;15866:4;15926:1;15959:6;15953:13;15989:3;16018:9;16015:1;16011:17;16001:27;;16078:1;16067:9;16063:17;16099:18;16089:61;;16143:4;16135:6;16131:17;16121:27;;16089:61;16196:2;16188:6;16185:14;16165:18;16162:38;16159:165;;-1:-1:-1;;;16223:33:30;;16279:4;16276:1;16269:15;16309:4;16230:3;16297:17;16159:165;16395:2;16380:18;;101:19;;;144:14;;;16423:18;16450:128;;;;16592:1;16587:314;;;;16416:485;;16450:128;-1:-1:-1;;16483:24:30;;16471:37;;16551:14;;16544:22;16541:1;16537:30;16528:40;;;-1:-1:-1;16450:128:30;;16587:314;15704:1;15697:14;;;15741:4;15728:18;;16682:1;16696:164;16710:6;16707:1;16704:13;16696:164;;;16788:14;;16775:11;;;16768:35;16844:1;16831:15;;;;16732:2;16725:10;16696:164;;;16880:11;;;-1:-1:-1;;16416:485:30;-1:-1:-1;16918:3:30;;15757:1170;-1:-1:-1;;;;;;;15757:1170:30:o;18020:255::-;18140:19;;18179:2;18171:11;;18168:101;;;-1:-1:-1;;18240:2:30;18236:12;;;18233:1;18229:20;18225:33;18214:45;18168:101;18020:255;;;;:::o;20973:347::-;21175:2;21157:21;;;21214:2;21194:18;;;21187:30;21253:25;21248:2;21233:18;;21226:53;21311:2;21296:18;;20973:347::o;22463:297::-;22581:12;;22628:4;22617:16;;;22611:23;;22581:12;22646:16;;22643:111;;;22740:1;22736:6;22726;22720:4;22716:17;22713:1;22709:25;22705:38;22698:5;22694:50;22685:59;;22643:111;;22463:297;;;:::o;26844:280::-;26913:6;26966:2;26954:9;26945:7;26941:23;26937:32;26934:52;;;26982:1;26979;26972:12;26934:52;27014:9;27008:16;27064:10;27057:5;27053:22;27046:5;27043:33;27033:61;;27090:1;27087;27080:12;27544:127;27605:10;27600:3;27596:20;27593:1;27586:31;27636:4;27633:1;27626:15;27660:4;27657:1;27650:15;27676:125;27741:9;;;27762:10;;;27759:36;;;27775:18;;:::i;28166:128::-;28233:9;;;28254:11;;;28251:37;;;28268:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "_mockTokenInfo(address)": "1d17f55b",
    "burnToken(address,int64,int64[])": "d6910d06",
    "getAccountId(address)": "e0b490f7",
    "getTokenInfo(address)": "1f69565f",
    "mintToken(address,int64,bytes[])": "e0f4059a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Associated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Dissociated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"_mockTokenInfo\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"accountId\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bytes[]\",\"name\":\"metadata\",\"type\":\"bytes[]\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burnToken(address,int64,int64[])\":{\"params\":{\"amount\":\"Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.                Amount must be a positive non-zero number, not bigger than the token balance of the treasury                account (0; balance], represented in the lowest denomination.\",\"serialNumbers\":\"Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\",\"token\":\"The token for which to burn tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID\"},\"returns\":{\"newTotalSupply\":\"The new supply of tokens. For NFTs it is the total count of NFTs\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getAccountId(address)\":{\"details\":\"Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id.  See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties.\"},\"getTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"TokenInfo info for `token`\"}},\"mintToken(address,int64,bytes[])\":{\"params\":{\"amount\":\"Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.               Amount must be a positive non-zero number represented in the lowest denomination of the               token. The new supply must be lower than 2^63.\",\"metadata\":\"Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.                 Maximum allowed size of each metadata is 100 bytes\",\"token\":\"The token for which to mint tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID\"},\"returns\":{\"newTotalSupply\":\"The new supply of tokens. For NFTs it is the total count of NFTs\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"serialNumbers\":\"If the token is an NFT the newly generate serial numbers, othersise empty.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burnToken(address,int64,int64[])\":{\"notice\":\"Burns an amount of the token from the defined treasury account\"},\"getTokenInfo(address)\":{\"notice\":\"TODO: This will be implemented in another PR for https://github.com/hashgraph/hedera-forking/issues/108 Query token info\"},\"mintToken(address,int64,bytes[])\":{\"notice\":\"Mints an amount of the token to the defined treasury account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/HtsSystemContract.sol\":\"HtsSystemContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"src/HtsSystemContract.sol\":{\"keccak256\":\"0xd70fd841fbafd1a2dba5f36373c69bceb3fee02ed714eecc2166dd32ad7cb7e0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4be34cbd4074e3a53b58c721108bbaff737d742afcb425c4731e5eea19cbfee0\",\"dweb:/ipfs/Qmdtvc3z8dg3mLjBH9dhakpugrxhSMpxmMkE9ZPpuvbWNK\"]},\"src/IERC20.sol\":{\"keccak256\":\"0x1a21f7371de4e36c41bf14e0fd4fe6d04218e09e2c211e44a210f122faa499c6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb8f72b72373c4dfdad9f3ed850137f2bae1be7e3bcf1ff8f6caf8939d8f8746\",\"dweb:/ipfs/QmUEZ6yy3Wo7cfASdZpvAxJAWg6Z8HcQEzRfoLTjqMHEZb\"]},\"src/IHederaTokenService.sol\":{\"keccak256\":\"0x5740bb4cdb2dea5b2b8c9572310e340318324b7e75eee231baef532282fc1dc2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67f89f2a4f7478eabb189aa2b11573d5ee72d4d6ac16f1353cd116ed395c4642\",\"dweb:/ipfs/QmNzvnEtf3qmXkXFiprX8PEH4Yzw5fSxRRTvWH4abHHeGd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Associated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Dissociated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "_mockTokenInfo",
          "outputs": [
            {
              "internalType": "struct IHederaTokenService.TokenInfo",
              "name": "tokenInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IHederaTokenService.HederaToken",
                  "name": "token",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "symbol",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "treasury",
                      "type": "address"
                    },
                    {
                      "internalType": "string",
                      "name": "memo",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "tokenSupplyType",
                      "type": "bool"
                    },
                    {
                      "internalType": "int64",
                      "name": "maxSupply",
                      "type": "int64"
                    },
                    {
                      "internalType": "bool",
                      "name": "freezeDefault",
                      "type": "bool"
                    },
                    {
                      "internalType": "struct IHederaTokenService.TokenKey[]",
                      "name": "tokenKeys",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "keyType",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct IHederaTokenService.KeyValue",
                          "name": "key",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bool",
                              "name": "inheritAccountKey",
                              "type": "bool"
                            },
                            {
                              "internalType": "address",
                              "name": "contractId",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes",
                              "name": "ed25519",
                              "type": "bytes"
                            },
                            {
                              "internalType": "bytes",
                              "name": "ECDSA_secp256k1",
                              "type": "bytes"
                            },
                            {
                              "internalType": "address",
                              "name": "delegatableContractId",
                              "type": "address"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct IHederaTokenService.Expiry",
                      "name": "expiry",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int64",
                          "name": "second",
                          "type": "int64"
                        },
                        {
                          "internalType": "address",
                          "name": "autoRenewAccount",
                          "type": "address"
                        },
                        {
                          "internalType": "int64",
                          "name": "autoRenewPeriod",
                          "type": "int64"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "int64",
                  "name": "totalSupply",
                  "type": "int64"
                },
                {
                  "internalType": "bool",
                  "name": "deleted",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "defaultKycStatus",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "pauseStatus",
                  "type": "bool"
                },
                {
                  "internalType": "struct IHederaTokenService.FixedFee[]",
                  "name": "fixedFees",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "int64",
                      "name": "amount",
                      "type": "int64"
                    },
                    {
                      "internalType": "address",
                      "name": "tokenId",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "useHbarsForPayment",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "useCurrentTokenForPayment",
                      "type": "bool"
                    },
                    {
                      "internalType": "address",
                      "name": "feeCollector",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IHederaTokenService.FractionalFee[]",
                  "name": "fractionalFees",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "int64",
                      "name": "numerator",
                      "type": "int64"
                    },
                    {
                      "internalType": "int64",
                      "name": "denominator",
                      "type": "int64"
                    },
                    {
                      "internalType": "int64",
                      "name": "minimumAmount",
                      "type": "int64"
                    },
                    {
                      "internalType": "int64",
                      "name": "maximumAmount",
                      "type": "int64"
                    },
                    {
                      "internalType": "bool",
                      "name": "netOfTransfers",
                      "type": "bool"
                    },
                    {
                      "internalType": "address",
                      "name": "feeCollector",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                  "name": "royaltyFees",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "int64",
                      "name": "numerator",
                      "type": "int64"
                    },
                    {
                      "internalType": "int64",
                      "name": "denominator",
                      "type": "int64"
                    },
                    {
                      "internalType": "int64",
                      "name": "amount",
                      "type": "int64"
                    },
                    {
                      "internalType": "address",
                      "name": "tokenId",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "useHbarsForPayment",
                      "type": "bool"
                    },
                    {
                      "internalType": "address",
                      "name": "feeCollector",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "string",
                  "name": "ledgerId",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "int64",
              "name": "amount",
              "type": "int64"
            },
            {
              "internalType": "int64[]",
              "name": "serialNumbers",
              "type": "int64[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnToken",
          "outputs": [
            {
              "internalType": "int64",
              "name": "responseCode",
              "type": "int64"
            },
            {
              "internalType": "int64",
              "name": "newTotalSupply",
              "type": "int64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountId",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "accountId",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenInfo",
          "outputs": [
            {
              "internalType": "int64",
              "name": "responseCode",
              "type": "int64"
            },
            {
              "internalType": "struct IHederaTokenService.TokenInfo",
              "name": "tokenInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IHederaTokenService.HederaToken",
                  "name": "token",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "symbol",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "treasury",
                      "type": "address"
                    },
                    {
                      "internalType": "string",
                      "name": "memo",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "tokenSupplyType",
                      "type": "bool"
                    },
                    {
                      "internalType": "int64",
                      "name": "maxSupply",
                      "type": "int64"
                    },
                    {
                      "internalType": "bool",
                      "name": "freezeDefault",
                      "type": "bool"
                    },
                    {
                      "internalType": "struct IHederaTokenService.TokenKey[]",
                      "name": "tokenKeys",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "keyType",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct IHederaTokenService.KeyValue",
                          "name": "key",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "bool",
                              "name": "inheritAccountKey",
                              "type": "bool"
                            },
                            {
                              "internalType": "address",
                              "name": "contractId",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes",
                              "name": "ed25519",
                              "type": "bytes"
                            },
                            {
                              "internalType": "bytes",
                              "name": "ECDSA_secp256k1",
                              "type": "bytes"
                            },
                            {
                              "internalType": "address",
                              "name": "delegatableContractId",
                              "type": "address"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct IHederaTokenService.Expiry",
                      "name": "expiry",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int64",
                          "name": "second",
                          "type": "int64"
                        },
                        {
                          "internalType": "address",
                          "name": "autoRenewAccount",
                          "type": "address"
                        },
                        {
                          "internalType": "int64",
                          "name": "autoRenewPeriod",
                          "type": "int64"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "int64",
                  "name": "totalSupply",
                  "type": "int64"
                },
                {
                  "internalType": "bool",
                  "name": "deleted",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "defaultKycStatus",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "pauseStatus",
                  "type": "bool"
                },
                {
                  "internalType": "struct IHederaTokenService.FixedFee[]",
                  "name": "fixedFees",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "int64",
                      "name": "amount",
                      "type": "int64"
                    },
                    {
                      "internalType": "address",
                      "name": "tokenId",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "useHbarsForPayment",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "useCurrentTokenForPayment",
                      "type": "bool"
                    },
                    {
                      "internalType": "address",
                      "name": "feeCollector",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IHederaTokenService.FractionalFee[]",
                  "name": "fractionalFees",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "int64",
                      "name": "numerator",
                      "type": "int64"
                    },
                    {
                      "internalType": "int64",
                      "name": "denominator",
                      "type": "int64"
                    },
                    {
                      "internalType": "int64",
                      "name": "minimumAmount",
                      "type": "int64"
                    },
                    {
                      "internalType": "int64",
                      "name": "maximumAmount",
                      "type": "int64"
                    },
                    {
                      "internalType": "bool",
                      "name": "netOfTransfers",
                      "type": "bool"
                    },
                    {
                      "internalType": "address",
                      "name": "feeCollector",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                  "name": "royaltyFees",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "int64",
                      "name": "numerator",
                      "type": "int64"
                    },
                    {
                      "internalType": "int64",
                      "name": "denominator",
                      "type": "int64"
                    },
                    {
                      "internalType": "int64",
                      "name": "amount",
                      "type": "int64"
                    },
                    {
                      "internalType": "address",
                      "name": "tokenId",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "useHbarsForPayment",
                      "type": "bool"
                    },
                    {
                      "internalType": "address",
                      "name": "feeCollector",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "string",
                  "name": "ledgerId",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "int64",
              "name": "amount",
              "type": "int64"
            },
            {
              "internalType": "bytes[]",
              "name": "metadata",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintToken",
          "outputs": [
            {
              "internalType": "int64",
              "name": "responseCode",
              "type": "int64"
            },
            {
              "internalType": "int64",
              "name": "newTotalSupply",
              "type": "int64"
            },
            {
              "internalType": "int64[]",
              "name": "serialNumbers",
              "type": "int64[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "burnToken(address,int64,int64[])": {
            "params": {
              "amount": "Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.                Amount must be a positive non-zero number, not bigger than the token balance of the treasury                account (0; balance], represented in the lowest denomination.",
              "serialNumbers": "Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.",
              "token": "The token for which to burn tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID"
            },
            "returns": {
              "newTotalSupply": "The new supply of tokens. For NFTs it is the total count of NFTs",
              "responseCode": "The response code for the status of the request. SUCCESS is 22."
            }
          },
          "getAccountId(address)": {
            "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id.  See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
          },
          "getTokenInfo(address)": {
            "params": {
              "token": "The token address to check"
            },
            "returns": {
              "responseCode": "The response code for the status of the request. SUCCESS is 22.",
              "tokenInfo": "TokenInfo info for `token`"
            }
          },
          "mintToken(address,int64,bytes[])": {
            "params": {
              "amount": "Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.               Amount must be a positive non-zero number represented in the lowest denomination of the               token. The new supply must be lower than 2^63.",
              "metadata": "Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.                 Maximum allowed size of each metadata is 100 bytes",
              "token": "The token for which to mint tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID"
            },
            "returns": {
              "newTotalSupply": "The new supply of tokens. For NFTs it is the total count of NFTs",
              "responseCode": "The response code for the status of the request. SUCCESS is 22.",
              "serialNumbers": "If the token is an NFT the newly generate serial numbers, othersise empty."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burnToken(address,int64,int64[])": {
            "notice": "Burns an amount of the token from the defined treasury account"
          },
          "getTokenInfo(address)": {
            "notice": "TODO: This will be implemented in another PR for https://github.com/hashgraph/hedera-forking/issues/108 Query token info"
          },
          "mintToken(address,int64,bytes[])": {
            "notice": "Mints an amount of the token to the defined treasury account"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/HtsSystemContract.sol": "HtsSystemContract"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a",
        "urls": [
          "bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194",
          "dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn"
        ],
        "license": "MIT"
      },
      "src/HtsSystemContract.sol": {
        "keccak256": "0xd70fd841fbafd1a2dba5f36373c69bceb3fee02ed714eecc2166dd32ad7cb7e0",
        "urls": [
          "bzz-raw://4be34cbd4074e3a53b58c721108bbaff737d742afcb425c4731e5eea19cbfee0",
          "dweb:/ipfs/Qmdtvc3z8dg3mLjBH9dhakpugrxhSMpxmMkE9ZPpuvbWNK"
        ],
        "license": "Apache-2.0"
      },
      "src/IERC20.sol": {
        "keccak256": "0x1a21f7371de4e36c41bf14e0fd4fe6d04218e09e2c211e44a210f122faa499c6",
        "urls": [
          "bzz-raw://bb8f72b72373c4dfdad9f3ed850137f2bae1be7e3bcf1ff8f6caf8939d8f8746",
          "dweb:/ipfs/QmUEZ6yy3Wo7cfASdZpvAxJAWg6Z8HcQEzRfoLTjqMHEZb"
        ],
        "license": "Apache-2.0"
      },
      "src/IHederaTokenService.sol": {
        "keccak256": "0x5740bb4cdb2dea5b2b8c9572310e340318324b7e75eee231baef532282fc1dc2",
        "urls": [
          "bzz-raw://67f89f2a4f7478eabb189aa2b11573d5ee72d4d6ac16f1353cd116ed395c4642",
          "dweb:/ipfs/QmNzvnEtf3qmXkXFiprX8PEH4Yzw5fSxRRTvWH4abHHeGd"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 39003,
        "contract": "src/HtsSystemContract.sol:HtsSystemContract",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 39005,
        "contract": "src/HtsSystemContract.sol:HtsSystemContract",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 39007,
        "contract": "src/HtsSystemContract.sol:HtsSystemContract",
        "label": "decimals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 39009,
        "contract": "src/HtsSystemContract.sol:HtsSystemContract",
        "label": "totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "id": 23
}
