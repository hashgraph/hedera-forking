{
    "abi": [
        { "type": "fallback", "stateMutability": "nonpayable" },
        {
            "type": "function",
            "name": "_update",
            "inputs": [
                { "name": "from", "type": "address", "internalType": "address" },
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "burnToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int64[]", "internalType": "int64[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getAccountId",
            "inputs": [{ "name": "account", "type": "address", "internalType": "address" }],
            "outputs": [{ "name": "accountId", "type": "uint32", "internalType": "uint32" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getApproved",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "approved", "type": "address", "internalType": "address" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getNonFungibleTokenInfo",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "serialNumber", "type": "int64", "internalType": "int64" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                    "components": [
                        {
                            "name": "tokenInfo",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "components": [
                                {
                                    "name": "token",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "components": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "symbol",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "treasury",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "memo",
                                            "type": "string",
                                            "internalType": "string"
                                        },
                                        {
                                            "name": "tokenSupplyType",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "maxSupply",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "freezeDefault",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "components": [
                                                {
                                                    "name": "keyType",
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                {
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "components": [
                                                        {
                                                            "name": "inheritAccountKey",
                                                            "type": "bool",
                                                            "internalType": "bool"
                                                        },
                                                        {
                                                            "name": "contractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        },
                                                        {
                                                            "name": "ed25519",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes",
                                                            "internalType": "bytes"
                                                        },
                                                        {
                                                            "name": "delegatableContractId",
                                                            "type": "address",
                                                            "internalType": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "expiry",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "components": [
                                                {
                                                    "name": "second",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                },
                                                {
                                                    "name": "autoRenewAccount",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64",
                                                    "internalType": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                                { "name": "deleted", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "defaultKycStatus",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "components": [
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "minimumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "maximumAmount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "netOfTransfers",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                {
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "components": [
                                        {
                                            "name": "numerator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "denominator",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "amount",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "tokenId",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "useHbarsForPayment",
                                            "type": "bool",
                                            "internalType": "bool"
                                        },
                                        {
                                            "name": "feeCollector",
                                            "type": "address",
                                            "internalType": "address"
                                        }
                                    ]
                                },
                                { "name": "ledgerId", "type": "string", "internalType": "string" }
                            ]
                        },
                        { "name": "serialNumber", "type": "int64", "internalType": "int64" },
                        { "name": "ownerId", "type": "address", "internalType": "address" },
                        { "name": "creationTime", "type": "int64", "internalType": "int64" },
                        { "name": "metadata", "type": "bytes", "internalType": "bytes" },
                        { "name": "spenderId", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenCustomFees",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FixedFee[]",
                    "components": [
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        {
                            "name": "useCurrentTokenForPayment",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "minimumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "maximumAmount", "type": "int64", "internalType": "int64" },
                        { "name": "netOfTransfers", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                    "components": [
                        { "name": "numerator", "type": "int64", "internalType": "int64" },
                        { "name": "denominator", "type": "int64", "internalType": "int64" },
                        { "name": "amount", "type": "int64", "internalType": "int64" },
                        { "name": "tokenId", "type": "address", "internalType": "address" },
                        { "name": "useHbarsForPayment", "type": "bool", "internalType": "bool" },
                        { "name": "feeCollector", "type": "address", "internalType": "address" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenDefaultFreezeStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenDefaultKycStatus",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenExpiryInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.Expiry",
                    "components": [
                        { "name": "second", "type": "int64", "internalType": "int64" },
                        {
                            "name": "autoRenewAccount",
                            "type": "address",
                            "internalType": "address"
                        },
                        { "name": "autoRenewPeriod", "type": "int64", "internalType": "int64" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenInfo",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                {
                    "name": "tokenInfo",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.TokenInfo",
                    "components": [
                        {
                            "name": "token",
                            "type": "tuple",
                            "internalType": "struct IHederaTokenService.HederaToken",
                            "components": [
                                { "name": "name", "type": "string", "internalType": "string" },
                                { "name": "symbol", "type": "string", "internalType": "string" },
                                {
                                    "name": "treasury",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                { "name": "memo", "type": "string", "internalType": "string" },
                                {
                                    "name": "tokenSupplyType",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                { "name": "maxSupply", "type": "int64", "internalType": "int64" },
                                { "name": "freezeDefault", "type": "bool", "internalType": "bool" },
                                {
                                    "name": "tokenKeys",
                                    "type": "tuple[]",
                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                    "components": [
                                        {
                                            "name": "keyType",
                                            "type": "uint256",
                                            "internalType": "uint256"
                                        },
                                        {
                                            "name": "key",
                                            "type": "tuple",
                                            "internalType": "struct IHederaTokenService.KeyValue",
                                            "components": [
                                                {
                                                    "name": "inheritAccountKey",
                                                    "type": "bool",
                                                    "internalType": "bool"
                                                },
                                                {
                                                    "name": "contractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                },
                                                {
                                                    "name": "ed25519",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "ECDSA_secp256k1",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                },
                                                {
                                                    "name": "delegatableContractId",
                                                    "type": "address",
                                                    "internalType": "address"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "expiry",
                                    "type": "tuple",
                                    "internalType": "struct IHederaTokenService.Expiry",
                                    "components": [
                                        {
                                            "name": "second",
                                            "type": "int64",
                                            "internalType": "int64"
                                        },
                                        {
                                            "name": "autoRenewAccount",
                                            "type": "address",
                                            "internalType": "address"
                                        },
                                        {
                                            "name": "autoRenewPeriod",
                                            "type": "int64",
                                            "internalType": "int64"
                                        }
                                    ]
                                }
                            ]
                        },
                        { "name": "totalSupply", "type": "int64", "internalType": "int64" },
                        { "name": "deleted", "type": "bool", "internalType": "bool" },
                        { "name": "defaultKycStatus", "type": "bool", "internalType": "bool" },
                        { "name": "pauseStatus", "type": "bool", "internalType": "bool" },
                        {
                            "name": "fixedFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "components": [
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "fractionalFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                {
                                    "name": "minimumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "maximumAmount",
                                    "type": "int64",
                                    "internalType": "int64"
                                },
                                {
                                    "name": "netOfTransfers",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        {
                            "name": "royaltyFees",
                            "type": "tuple[]",
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "components": [
                                { "name": "numerator", "type": "int64", "internalType": "int64" },
                                { "name": "denominator", "type": "int64", "internalType": "int64" },
                                { "name": "amount", "type": "int64", "internalType": "int64" },
                                { "name": "tokenId", "type": "address", "internalType": "address" },
                                {
                                    "name": "useHbarsForPayment",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "feeCollector",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        },
                        { "name": "ledgerId", "type": "string", "internalType": "string" }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenKey",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "keyType", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IHederaTokenService.KeyValue",
                    "components": [
                        { "name": "inheritAccountKey", "type": "bool", "internalType": "bool" },
                        { "name": "contractId", "type": "address", "internalType": "address" },
                        { "name": "ed25519", "type": "bytes", "internalType": "bytes" },
                        { "name": "ECDSA_secp256k1", "type": "bytes", "internalType": "bytes" },
                        {
                            "name": "delegatableContractId",
                            "type": "address",
                            "internalType": "address"
                        }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTokenType",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "int32", "internalType": "int32" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isApprovedForAll",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "owner", "type": "address", "internalType": "address" },
                { "name": "operator", "type": "address", "internalType": "address" }
            ],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isToken",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [
                { "name": "", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bool", "internalType": "bool" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintToken",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "int64", "internalType": "int64" },
                { "name": "", "type": "bytes[]", "internalType": "bytes[]" }
            ],
            "outputs": [
                { "name": "responseCode", "type": "int64", "internalType": "int64" },
                { "name": "newTotalSupply", "type": "int64", "internalType": "int64" },
                { "name": "serialNumbers", "type": "int64[]", "internalType": "int64[]" }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ApprovalForAll",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        }
    ],
    "bytecode": {
        "object": "0x6080604052348015600e575f80fd5b506153668061001c5f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c806393272baf11610095578063d6910d0611610064578063d6910d06146103b7578063e0b490f7146103e4578063e0f4059a1461040c578063f49f40db1461042e576100f3565b806393272baf14610330578063a7daa18d14610360578063ae7611a014610373578063d614cdb814610396576100f3565b80631f69565f116100d15780631f69565f146102ba578063287e1da8146102db578063335e04c1146102fc5780633c4dd32e1461030f576100f3565b8063098f23661461023e5780630bb3bfa81461027857806319f373611461028d575b5f366060601c82101561014d5760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a206e6f7420656e6f7567682063616c6c6461746100000060448201526064015b60405180910390fd5b5f61015b6004823681613817565b6101649161383e565b60e01c905063618dc65e81146101bc5760405162461bcd60e51b815260206004820152601e60248201527f66616c6c6261636b3a20756e737570706f727465642073656c6563746f7200006044820152606401610144565b5f6101cb601860043684613817565b6101d491613876565b60601c90503081146102285760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a20746f6b656e206973206e6f742063616c6c65720000006044820152606401610144565b610230610441565b805195506020019350505050f35b61025161024c3660046138c3565b610ba7565b6040805160079390930b83526001600160a01b039091166020830152015b60405180910390f35b61028b6102863660046138ed565b610c95565b005b6102a061029b36600461392b565b610d73565b6040805160079390930b835290151560208301520161026f565b6102cd6102c836600461392b565b610e34565b60405161026f929190613dad565b6102ee6102e9366004613dd6565b610f28565b60405161026f929190613e0d565b6102a061030a36600461392b565b611208565b61032261031d3660046138c3565b611304565b60405161026f929190613e9e565b61034361033e36600461392b565b6114e3565b6040805160079390930b835260039190910b60208301520161026f565b6102a061036e36600461392b565b6115c3565b61038661038136600461392b565b61167e565b60405161026f9493929190613eb9565b6103a96103a436600461392b565b61177d565b60405161026f929190613efa565b6103ca6103c536600461402b565b611881565b60408051600793840b81529190920b60208201520161026f565b6103f76103f236600461392b565b611ba8565b60405163ffffffff909116815260200161026f565b61041f61041a366004614115565b611c22565b60405161026f9392919061422a565b6102a061043c366004614287565b611f5f565b60605f610452601c60183684613817565b61045b9161383e565b905060408051808201825260098152681393d517d193d5539160ba1b602090910152517f7bafae6429a8b3ef0db181af7c5834a6f2b1af33146a1a9ae02e833d27f2431b906104ab905f90614375565b60405180910390200361050a5760405162461bcd60e51b815260206004820152602160248201527f7265646972656374466f72546f6b656e3a20746f6b656e206e6f7420666f756e6044820152601960fa1b6064820152608401610144565b610166193301610a6e5763e096a9a160e01b6001600160e01b03198216016105b157601c3610156105875760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e496e666f3a204e6f7420656e6f7567682063616c6c6461746044820152606160f81b6064820152608401610144565b6016600560405160200161059c929190614738565b60405160208183030381529060405291505090565b63028c4f7360e51b6001600160e01b031982160161064557601c36101561062a5760405162461bcd60e51b815260206004820152602760248201527f676574546f6b656e437573746f6d466565733a204e6f7420656e6f7567682063604482015266616c6c6461746160c81b6064820152608401610144565b60405161059c90601690600e90600f90601090602001614815565b63cca1fb3f60e01b6001600160e01b03198216016106eb57601c3610156106c45760405162461bcd60e51b815260206004820152602d60248201527f676574546f6b656e44656661756c744b79635374617475733a204e6f7420656e60448201526c6f7567682063616c6c6461746160981b6064820152608401610144565b600d546040805160166020820152600160481b90920460ff1615159082015260600161059c565b6358255e7360e01b6001600160e01b031982160161079457601c36101561076d5760405162461bcd60e51b815260206004820152603060248201527f676574546f6b656e44656661756c74467265657a655374617475733a204e6f7460448201526f20656e6f7567682063616c6c6461746160801b6064820152608401610144565b6009546040805160166020820152600160481b90920460ff1615159082015260600161059c565b63053d664960e31b6001600160e01b031982160161082257601c36101561080d5760405162461bcd60e51b815260206004820152602760248201527f676574546f6b656e457870697279496e666f3a204e6f7420656e6f7567682063604482015266616c6c6461746160c81b6064820152608401610144565b60405161059c90601690600b90602001614856565b636cd8d45160e01b6001600160e01b031982160161098257601c3610156108955760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e547970653a204e6f7420656e6f7567682063616c6c6461746044820152606160f81b6064820152608401610144565b7f20081d23699eb901ca16307080f9b35e7967740755a921f749a9e037b0875c755f6040516020016108c79190614375565b60405160208183030381529060405280519060200120036108fd5760408051601660208201525f9181019190915260600161059c565b7f6c58a12b113a1ee77f554495d8bd48a419af104bca196099cdecc39fcb8989f05f60405160200161092f9190614375565b604051602081830303815290604052805190602001200361096657604080516016602082015260019181019190915260600161059c565b60408051601660208201525f199181019190915260600161059c565b631e89880b60e31b6001600160e01b0319821601610a6e57607c3610156109eb5760405162461bcd60e51b815260206004820152601b60248201527f7570646174653a204e6f7420656e6f7567682063616c6c6461746100000000006044820152606401610144565b5f6109fa603c60283684613817565b610a0391613876565b60601c90505f610a17605c60483684613817565b610a2091613876565b60601c90505f610a34607c605c3684613817565b610a3d91614892565b9050610a4a838383610c95565b60408051600160208201520160405160208183030381529060405294505050505090565b604080518082018252600f81526e232aa723a4a12622afa1a7a6a6a7a760891b602090910152517f20081d23699eb901ca16307080f9b35e7967740755a921f749a9e037b0875c7590610ac2905f90614375565b604051809103902003610ade57610ad881612058565b91505090565b60408051808201825260138152724e4f4e5f46554e4749424c455f554e4951554560681b602090910152517f6c58a12b113a1ee77f554495d8bd48a419af104bca196099cdecc39fcb8989f090610b36905f90614375565b604051809103902003610b4c57610ad881612594565b60405162461bcd60e51b815260206004820152602a60248201527f7265646972656374466f72546f6b656e3a20746f6b656e2074797065206e6f74604482015269081cdd5c1c1bdc9d195960b21b6064820152608401610144565b5f803061016714610bca5760405162461bcd60e51b8152600401610144906148af565b6001600160a01b038416610c205760405162461bcd60e51b815260206004820152601a60248201527f676574417070726f7665643a20696e76616c696420746f6b656e0000000000006044820152606401610144565b60405163020604bf60e21b8152600481018490526016906001600160a01b0386169063081812fc90602401602060405180830381865afa158015610c66573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c8a91906148f6565b909590945092505050565b6001600160a01b038316610cbf578060045f828254610cb49190614925565b90915550610d249050565b5f610cc984612b66565b805490915082811015610d1e5760405162461bcd60e51b815260206004820152601f60248201527f5f7472616e736665723a20696e73756666696369656e742062616c616e6365006044820152606401610144565b82900390555b6001600160a01b038216610d4e578060045f828254610d439190614938565b90915550610d6e9050565b5f610d5883612b66565b80549091505f610d688483614925565b90925550505b505050565b6040516001600160a01b03821660248201525f908190819060440160408051601f198184030181529181526020820180516001600160e01b03166393272baf60e01b179052519091505f9081906001600160a01b03871690610dd690859061494b565b5f604051808303815f865af19150503d805f8114610e0f576040519150601f19603f3d011682016040523d82523d5f602084013e610e14565b606091505b50915091506016828015610e2857505f8251115b94509450505050915091565b5f610e3d6136eb565b3061016714610e5e5760405162461bcd60e51b8152600401610144906148af565b6001600160a01b038316610eb45760405162461bcd60e51b815260206004820152601b60248201527f676574546f6b656e496e666f3a20696e76616c696420746f6b656e00000000006044820152606401610144565b604051631f69565f60e01b81526001600160a01b0384166004820181905290631f69565f906024015f604051808303815f875af1158015610ef7573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610f1e9190810190614f3e565b9094909350915050565b5f610f3161379d565b6001600160a01b038416610f965760405162461bcd60e51b815260206004820152602660248201527f6765744e6f6e46756e6769626c65546f6b656e496e666f3a20696e76616c6964604482015265103a37b5b2b760d11b6064820152608401610144565b604051631f69565f60e01b81526001600160a01b038516600482018190525f91829190631f69565f906024015f604051808303815f875af1158015610fdd573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526110049190810190614f3e565b915091508160070b6002146110755760405162461bcd60e51b815260206004820152603160248201527f6765744e6f6e46756e6769626c65546f6b656e496e666f3a206661696c656420604482015270746f2067657420746f6b656e206461746160781b6064820152608401610144565b61107d61379d565b818152600786900b602082015260405163020604bf60e21b81526001600160401b03871660048201526001600160a01b0388169063081812fc90602401602060405180830381865afa1580156110d5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110f991906148f6565b6001600160a01b0390811660a08301526040516331a9108f60e11b81526001600160401b038816600482015290881690636352211e90602401602060405180830381865afa15801561114d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061117191906148f6565b6001600160a01b039081166040838101919091525163c87b56dd60e01b81526001600160401b03881660048201529088169063c87b56dd906024015f60405180830381865afa1580156111c6573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111ed91908101906150ad565b60808201525f606082015260169450925050505b9250929050565b5f80306101671461122b5760405162461bcd60e51b8152600401610144906148af565b6001600160a01b0383166112935760405162461bcd60e51b815260206004820152602960248201527f676574546f6b656e44656661756c744b79635374617475733a20696e76616c6960448201526864206164647265737360b81b6064820152608401610144565b60405163335e04c160e01b81526001600160a01b038416600482018190529063335e04c1906024015b60408051808303815f875af11580156112d7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112fb91906150de565b91509150915091565b5f61130d6137d7565b306101671461132e5760405162461bcd60e51b8152600401610144906148af565b6001600160a01b0384166113845760405162461bcd60e51b815260206004820152601a60248201527f676574546f6b656e4b65793a20696e76616c696420746f6b656e0000000000006044820152606401610144565b604051631f69565f60e01b81526001600160a01b038516600482018190525f91829190631f69565f906024015f604051808303815f875af11580156113cb573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526113f29190810190614f3e565b915091508160070b6016146114575760405162461bcd60e51b815260206004820152602560248201527f676574546f6b656e4b65793a206661696c656420746f2067657420746f6b656e604482015264206461746160d81b6064820152608401610144565b5f5b815160e00151518110156114cc5785825f015160e00151828151811061148157611481615111565b60200260200101515f0151036114c4576016825f015160e0015182815181106114ac576114ac615111565b60200260200101516020015194509450505050611201565b600101611459565b506114d56137d7565b601697909650945050505050565b5f8030610167146115065760405162461bcd60e51b8152600401610144906148af565b6001600160a01b03831661155c5760405162461bcd60e51b815260206004820152601d60248201527f676574546f6b656e547970653a20696e76616c696420616464726573730000006044820152606401610144565b6040516393272baf60e01b81526001600160a01b03841660048201819052906393272baf9060240160408051808303815f875af115801561159f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112fb9190615125565b5f8030610167146115e65760405162461bcd60e51b8152600401610144906148af565b6001600160a01b0383166116515760405162461bcd60e51b815260206004820152602c60248201527f676574546f6b656e44656661756c74467265657a655374617475733a20696e7660448201526b616c6964206164647265737360a01b6064820152608401610144565b60405163a7daa18d60e01b81526001600160a01b038416600482018190529063a7daa18d906024016112bc565b5f6060808030610167146116a45760405162461bcd60e51b8152600401610144906148af565b6001600160a01b0385166117045760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e437573746f6d466565733a20696e76616c696420746f6b656044820152603760f91b6064820152608401610144565b604051630573b08d60e51b81526001600160a01b038616600482018190529063ae7611a0906024015f604051808303815f875af1158015611747573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261176e9190810190615158565b93509350935093509193509193565b604080516060810182525f8082526020820181905291810182905230610167146117b95760405162461bcd60e51b8152600401610144906148af565b6001600160a01b0383166118195760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e457870697279496e666f3a20696e76616c696420746f6b656044820152603760f91b6064820152608401610144565b604051631ac299b760e31b81526001600160a01b038416600482018190529063d614cdb8906024016080604051808303815f875af115801561185d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f1e91906151f7565b5f8030610167146118a45760405162461bcd60e51b8152600401610144906148af565b6001600160a01b0385166118fa5760405162461bcd60e51b815260206004820152601860248201527f6275726e546f6b656e3a20696e76616c696420746f6b656e00000000000000006044820152606401610144565b5f8460070b1361194c5760405162461bcd60e51b815260206004820152601960248201527f6275726e546f6b656e3a20696e76616c696420616d6f756e74000000000000006044820152606401610144565b604051631f69565f60e01b81526001600160a01b038616600482018190525f91829190631f69565f906024015f604051808303815f875af1158015611993573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526119ba9190810190614f3e565b915091508160070b601614611a1d5760405162461bcd60e51b815260206004820152602360248201527f6275726e546f6b656e3a206661696c656420746f2067657420746f6b656e20696044820152626e666f60e81b6064820152608401610144565b8051604001516001600160a01b038116611a795760405162461bcd60e51b815260206004820152601a60248201527f6275726e546f6b656e3a20696e76616c6964206163636f756e740000000000006044820152606401610144565b60405163017677f560e31b81526001600160a01b0382811660048301525f60248301526001600160401b0389166044830152891690630bb3bfa8906064015f604051808303815f87803b158015611ace575f80fd5b505af1158015611ae0573d5f803e3d5ffd5b5050505060169450876001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b24573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b489190615222565b93505f8460070b1215611b9d5760405162461bcd60e51b815260206004820152601f60248201527f6275726e546f6b656e3a20696e76616c696420746f74616c20737570706c79006044820152606401610144565b505050935093915050565b5f3061016714611bca5760405162461bcd60e51b8152600401610144906148af565b6040805163e0b490f760e01b602082018190525f602483018190526001600160601b0319606087901b16602c84015290929091829101604051602081830303815290604052611c1890615239565b5495945050505050565b5f8060603061016714611c475760405162461bcd60e51b8152600401610144906148af565b6001600160a01b038616611c9d5760405162461bcd60e51b815260206004820152601860248201527f6d696e74546f6b656e3a20696e76616c696420746f6b656e00000000000000006044820152606401610144565b5f8560070b13611cef5760405162461bcd60e51b815260206004820152601960248201527f6d696e74546f6b656e3a20696e76616c696420616d6f756e74000000000000006044820152606401610144565b604051631f69565f60e01b81526001600160a01b038716600482018190525f91829190631f69565f906024015f604051808303815f875af1158015611d36573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611d5d9190810190614f3e565b915091508160070b601614611dc05760405162461bcd60e51b815260206004820152602360248201527f6d696e74546f6b656e3a206661696c656420746f2067657420746f6b656e20696044820152626e666f60e81b6064820152608401610144565b8051604001516001600160a01b038116611e1c5760405162461bcd60e51b815260206004820152601a60248201527f6d696e74546f6b656e3a20696e76616c6964206163636f756e740000000000006044820152606401610144565b60405163017677f560e31b81525f60048201526001600160a01b0382811660248301526001600160401b038a1660448301528a1690630bb3bfa8906064015f604051808303815f87803b158015611e71575f80fd5b505af1158015611e83573d5f803e3d5ffd5b5050505060169550886001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ec7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611eeb9190615222565b604080515f808252602082019092529196505093505f8560070b1215611f535760405162461bcd60e51b815260206004820152601f60248201527f6d696e74546f6b656e3a20696e76616c696420746f74616c20737570706c79006044820152606401610144565b50505093509350939050565b5f803061016714611f825760405162461bcd60e51b8152600401610144906148af565b6001600160a01b038516611fd85760405162461bcd60e51b815260206004820152601f60248201527f6973417070726f766564466f72416c6c3a20696e76616c696420746f6b656e006044820152606401610144565b60405163e985e9c560e01b81526001600160a01b03858116600483015284811660248301526016919087169063e985e9c590604401602060405180830381865afa158015612028573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061204c919061525c565b91509150935093915050565b606063f90221fd60e01b6001600160e01b031983160161209a5760016040516020016120849190615275565b6040516020818303038152906040529050919050565b63cec31a9960e01b6001600160e01b03198316016120c9576003546040805160ff909216602083015201612084565b63e7e9f22360e01b6001600160e01b03198316016120f65760045460405160200161208491815260200190565b636a2764bf60e01b6001600160e01b03198316016121205760026040516020016120849190615275565b638f5f7dcf60e01b6001600160e01b03198316016121d857603c3610156121895760405162461bcd60e51b815260206004820152601e60248201527f62616c616e63654f663a204e6f7420656e6f7567682063616c6c6461746100006044820152606401610144565b5f612198603c60283684613817565b6121a191613876565b60601c90506121af81612c16565b6040516020016121c191815260200190565b604051602081830303815290604052915050919050565b6356fa634560e01b6001600160e01b03198316016122aa57605c3610156122415760405162461bcd60e51b815260206004820152601d60248201527f7472616e736665723a204e6f7420656e6f7567682063616c6c646174610000006044820152606401610144565b5f612250603c60283684613817565b61225991613876565b60601c90505f61226d605c603c3684613817565b61227691614892565b905033612284818484612c29565b6040805160016020820152015b6040516020818303038152906040529350505050919050565b63dc478d2360e01b6001600160e01b03198316016123a457607c3610156123135760405162461bcd60e51b815260206004820152601e60248201527f7472616e73666572463a204e6f7420656e6f7567682063616c6c6461746100006044820152606401610144565b5f612322603c60283684613817565b61232b91613876565b60601c90505f61233f605c60483684613817565b61234891613876565b60601c90505f61235c607c605c3684613817565b61236591614892565b905033612373848284612d20565b61237e848484612c29565b604080516001602082015201604051602081830303815290604052945050505050919050565b63114e896160e11b6001600160e01b031983160161247b57605c36101561240d5760405162461bcd60e51b815260206004820152601e60248201527f616c6c6f77616e63653a204e6f7420656e6f7567682063616c6c6461746100006044820152606401610144565b5f61241c603c60283684613817565b61242591613876565b60601c90505f612439605c60483684613817565b61244291613876565b60601c90506124518282612d98565b60405160200161246391815260200190565b60405160208183030381529060405292505050919050565b63f6a1584d60e01b6001600160e01b031983160161258557605c3610156124e45760405162461bcd60e51b815260206004820152601c60248201527f617070726f76653a204e6f7420656e6f7567682063616c6c64617461000000006044820152606401610144565b5f6124f3603c60283684613817565b6124fc91613876565b60601c90505f612510605c603c3684613817565b61251991614892565b905033612527818484612dad565b826001600160a01b0316816001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161256c91815260200190565b60405180910390a3604080516001602082015201612291565b61258e82612e6d565b92915050565b606063f90221fd60e01b6001600160e01b03198316016125c05760016040516020016120849190615275565b636a2764bf60e01b6001600160e01b03198316016125ea5760026040516020016120849190615275565b633784a92360e01b6001600160e01b031983160161268657603c3610156126535760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e5552493a204e6f7420656e6f7567682063616c6c646174610000006044820152606401610144565b5f612662603c601c3684613817565b61266b91614892565b905061267681612f69565b6040516020016121c19190615287565b63e7e9f22360e01b6001600160e01b03198316016126b35760045460405160200161208491815260200190565b638f5f7dcf60e01b6001600160e01b031983160161271c57603c3610156121895760405162461bcd60e51b815260206004820152601e60248201527f62616c616e63654f663a204e6f7420656e6f7567682063616c6c6461746100006044820152606401610144565b634e56ef7160e11b6001600160e01b03198316016127c257603c3610156127855760405162461bcd60e51b815260206004820152601c60248201527f6f776e65724f663a204e6f7420656e6f7567682063616c6c64617461000000006044820152606401610144565b5f612794603c601c3684613817565b61279d91614892565b90506127a88161300c565b604080516001600160a01b039092166020830152016121c1565b63dc478d2360e01b6001600160e01b031983160161289457607c3610156128355760405162461bcd60e51b815260206004820152602160248201527f7472616e7366657246726f6d3a204e6f7420656e6f7567682063616c6c6461746044820152606160f81b6064820152608401610144565b5f612844603c60283684613817565b61284d91613876565b60601c90505f612861605c60483684613817565b61286a91613876565b60601c90505f61287e607c605c3684613817565b61288791614892565b9050612284838383613017565b63f6a1584d60e01b6001600160e01b031983160161295157605c3610156128fd5760405162461bcd60e51b815260206004820152601c60248201527f617070726f76653a204e6f7420656e6f7567682063616c6c64617461000000006044820152606401610144565b5f61290c603c60283684613817565b61291591613876565b60601c90505f612929605c603c3684613817565b61293291614892565b905061294082826001613210565b604080516001602082015201612463565b635dd34b9b60e01b6001600160e01b0319831601612a0d57605c3610156129c95760405162461bcd60e51b815260206004820152602660248201527f736574417070726f76616c466f72416c6c3a204e6f7420656e6f7567682063616044820152656c6c6461746160d01b6064820152608401610144565b5f6129d8603c60283684613817565b6129e191613876565b60601c90505f6129f5605c603c3684613817565b6129fe91614892565b6001149050612940828261330c565b633df9fb4160e21b6001600160e01b0319831601612a9957603c361015612a765760405162461bcd60e51b815260206004820181905260248201527f676574417070726f7665643a204e6f7420656e6f7567682063616c6c646174616044820152606401610144565b5f612a85603c601c3684613817565b612a8e91614892565b90506127a8816133f4565b63167a163b60e01b6001600160e01b031983160161258557605c361015612b105760405162461bcd60e51b815260206004820152602560248201527f6973417070726f766564466f72416c6c3a204e6f7420656e6f7567682063616c6044820152646c6461746160d81b6064820152608401610144565b5f612b1f603c60283684613817565b612b2891613876565b60601c90505f612b3c605c60483684613817565b612b4591613876565b60601c9050612b5482826133ff565b60408051911515602083015201612463565b60405163e0b490f760e01b81526001600160a01b03821660048201525f906370a0823160e01b90829081906101679063e0b490f7906024015b602060405180830381865afa158015612bba573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612bde9190615299565b9050828282604051602001612bf5939291906152bc565b604051602081830303815290604052612c0d90615239565b95945050505050565b5f80612c2183612b66565b549392505050565b6001600160a01b038316612c755760405162461bcd60e51b8152602060048201526013602482015272343a399d1034b73b30b634b21039b2b73232b960691b6044820152606401610144565b6001600160a01b038216612cc35760405162461bcd60e51b8152602060048201526015602482015274343a399d1034b73b30b634b2103932b1b2b4bb32b960591b6044820152606401610144565b612cce838383610c95565b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612d1391815260200190565b60405180910390a3505050565b5f612d2b8484612d98565b90505f198114612d925781811015612d855760405162461bcd60e51b815260206004820152601d60248201527f5f7370656e64416c6c6f77616e63653a20696e73756666696369656e740000006044820152606401610144565b612d928484848403612dad565b50505050565b5f80612da4848461340b565b54949350505050565b6001600160a01b038316612e035760405162461bcd60e51b815260206004820152601760248201527f5f617070726f76653a20696e76616c6964206f776e65720000000000000000006044820152606401610144565b6001600160a01b038216612e595760405162461bcd60e51b815260206004820152601960248201527f5f617070726f76653a20696e76616c6964207370656e646572000000000000006044820152606401610144565b5f612e64848461340b565b91909155505050565b6060637ac5590d60e11b6001600160e01b0319831601612ead575f612e913361352b565b90506001815560016040516020016121c1911515815260200190565b63051b6f4160e51b6001600160e01b0319831601612ee6575f612ecf3361352b565b5f81556040805160016020820152919250016121c1565b63b270229360e01b6001600160e01b0319831601612f21575f612f083361352b565b8054604080518215156020820152929350909101612463565b60405162461bcd60e51b815260206004820152601f60248201527f7265646972656374466f72546f6b656e3a206e6f7420737570706f72746564006044820152606401610144565b60605f612f7583613568565b90505f819050808054612f87906142cf565b80601f0160208091040260200160405190810160405280929190818152602001828054612fb3906142cf565b8015612ffe5780601f10612fd557610100808354040283529160200191612ffe565b820191905f5260205f20905b815481529060010190602001808311612fe157829003601f168201915b505050505092505050919050565b5f80612c21836135aa565b6001600160a01b0383166130635760405162461bcd60e51b8152602060048201526013602482015272343a399d1034b73b30b634b21039b2b73232b960691b6044820152606401610144565b6001600160a01b0382166130b15760405162461bcd60e51b8152602060048201526015602482015274343a399d1034b73b30b634b2103932b1b2b4bb32b960591b6044820152606401610144565b5f6130bb826135aa565b80549091506001600160a01b038082169086161461311b5760405162461bcd60e51b815260206004820152601860248201527f6874733a2073656e646572206973206e6f74206f776e657200000000000000006044820152606401610144565b336001600160a01b0386161461319857613134836133f4565b6001600160a01b0316336001600160a01b03161480613158575061315885336133ff565b6131985760405162461bcd60e51b81526020600482015260116024820152701a1d1cce881d5b985d5d1a1bdc9a5e9959607a1b6044820152606401610144565b5f6131a2846135cc565b90505f81555f6131b287876135ee565b90505f8155858455856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040516131ff91815260200190565b60405180910390a350505050505050565b5f61321a8361300c565b9050336001600160a01b0382161480613243575033613238846133f4565b6001600160a01b0316145b80613253575061325381336133ff565b6132985760405162461bcd60e51b815260206004820152601660248201527517d85c1c1c9bdd994e881d5b985d5d1a1bdc9a5e995960521b6044820152606401610144565b5f6132a2846135cc565b90505f836132b0575f6132b2565b855b9050808255856001600160a01b0316836001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925876040516132fc91815260200190565b60405180910390a3505050505050565b336001600160a01b038316158015906133375750806001600160a01b0316836001600160a01b031614155b61338f5760405162461bcd60e51b815260206004820152602360248201527f736574417070726f76616c466f72416c6c3a20696e76616c6964206f706572616044820152623a37b960e91b6064820152608401610144565b5f61339a82856135ee565b9050828155836001600160a01b0316826001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31856040516133e6911515815260200190565b60405180910390a350505050565b5f80612c21836135cc565b5f80612da484846135ee565b60405163e0b490f760e01b81526001600160a01b03831660048201525f90636eb1769f60e11b90829081906101679063e0b490f790602401602060405180830381865afa15801561345e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906134829190615299565b60405163e0b490f760e01b81526001600160a01b03871660048201529091505f906101679063e0b490f790602401602060405180830381865afa1580156134cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906134ef9190615299565b90508383828460405160200161350894939291906152f1565b60405160208183030381529060405261352090615239565b979650505050505050565b60405163e0b490f760e01b81526001600160a01b03821660048201525f90634d8fdd6d60e01b90829081906101679063e0b490f790602401612b9f565b6040515f9063c87b56dd60e01b90829061358a908390839087906020016152bc565b6040516020818303038152906040526135a290615239565b949350505050565b6040515f906331a9108f60e11b90829061358a908390839087906020016152bc565b6040515f9063020604bf60e21b90829061358a908390839087906020016152bc565b60405163e0b490f760e01b81526001600160a01b03831660048201525f9063e985e9c560e01b90829081906101679063e0b490f790602401602060405180830381865afa158015613641573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136659190615299565b60405163e0b490f760e01b81526001600160a01b03871660048201529091505f906101679063e0b490f790602401602060405180830381865afa1580156136ae573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136d29190615299565b90508383838360405160200161350894939291906152f1565b60408051610240810182526060610120820181815261014083018290525f610160840181905261018084018390526101a084018190526101c084018190526101e08401819052610200840183905284519283018552808352602083018190529382019390935261022082015290819081526020015f60070b81526020015f151581526020015f151581526020015f15158152602001606081526020016060815260200160608152602001606081525090565b6040518060c001604052806137b06136eb565b81525f60208201819052604082018190526060808301829052608083015260a09091015290565b6040518060a001604052805f151581526020015f6001600160a01b0316815260200160608152602001606081526020015f6001600160a01b031681525090565b5f8085851115613825575f80fd5b83861115613831575f80fd5b5050820193919092039150565b80356001600160e01b0319811690600484101561386f576001600160e01b0319600485900360031b81901b82161691505b5092915050565b80356001600160601b0319811690601484101561386f576001600160601b031960149490940360031b84901b1690921692915050565b6001600160a01b03811681146138c0575f80fd5b50565b5f80604083850312156138d4575f80fd5b82356138df816138ac565b946020939093013593505050565b5f805f606084860312156138ff575f80fd5b833561390a816138ac565b9250602084013561391a816138ac565b929592945050506040919091013590565b5f6020828403121561393b575f80fd5b8135613946816138ac565b9392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b80511515825260018060a01b0360208201511660208301525f604082015160a060408501526139ad60a085018261394d565b9050606083015184820360608601526139c6828261394d565b6080948501516001600160a01b03169590940194909452509092915050565b5f82825180855260208501945060208160051b830101602085015f5b83811015613a4a57601f198584030188528151805184526020810151905060406020850152613a33604085018261397b565b6020998a0199909450929092019150600101613a01565b50909695505050505050565b5f81516101608452613a6c61016085018261394d565b905060208301518482036020860152613a85828261394d565b9150506040830151613aa260408601826001600160a01b03169052565b5060608301518482036060860152613aba828261394d565b9150506080830151613ad0608086018215159052565b5060a0830151613ae560a086018260070b9052565b5060c0830151613af960c086018215159052565b5060e083015184820360e0860152613b1182826139e5565b915050610100830151613b4c6101008601828051600790810b83526020808301516001600160a01b031690840152604091820151900b910152565b509392505050565b5f8151808452602084019350602083015f5b82811015613bc4578151805160070b87526020808201516001600160a01b03908116828a01526040808401511515908a01526060808401511515908a0152608092830151169188019190915260a09096019590910190600101613b66565b5093949350505050565b5f8151808452602084019350602083015f5b82811015613bc45781515f815160070b8852602082015160070b6020890152604082015160070b6040890152606082015160070b606089015260808201511515608089015260018060a01b0360a08301511660a089015260c0880190508097505050602082019150600181019050613be0565b5f8151808452602084019350602083015f5b82811015613bc45781515f815160070b8852602082015160070b6020890152604082015160070b604089015260018060a01b03606083015116606089015260808201511515608089015260018060a01b0360a08301511660a089015260c0880190508097505050602082019150600181019050613c65565b5f81516101208452613cf3610120850182613a56565b90506020830151613d09602086018260070b9052565b506040830151613d1d604086018215159052565b506060830151613d31606086018215159052565b506080830151613d45608086018215159052565b5060a083015184820360a0860152613d5d8282613b54565b91505060c083015184820360c0860152613d778282613bce565b91505060e083015184820360e0860152613d918282613c53565b915050610100830151848203610100860152612c0d828261394d565b8260070b8152604060208201525f6135a26040830184613cdd565b8060070b81146138c0575f80fd5b5f8060408385031215613de7575f80fd5b8235613df2816138ac565b91506020830135613e0281613dc8565b809150509250929050565b8260070b8152604060208201525f825160c06040840152613e32610100840182613cdd565b9050602084015160070b606084015260018060a01b036040850151166080840152606084015160070b60a08401526080840151603f198483030160c0850152613e7b828261394d565b60a095909501516001600160a01b031660e0949094019390935250919392505050565b8260070b8152604060208201525f6135a2604083018461397b565b8460070b8152608060208201525f613ed46080830186613b54565b8281036040840152613ee68186613bce565b905082810360608401526135208185613c53565b600783900b81526080810161394660208301848051600790810b83526020808301516001600160a01b031690840152604091820151900b910152565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b0381118282101715613f6c57613f6c613f36565b60405290565b60405160a081016001600160401b0381118282101715613f6c57613f6c613f36565b60405161012081016001600160401b0381118282101715613f6c57613f6c613f36565b60405160c081016001600160401b0381118282101715613f6c57613f6c613f36565b604051601f8201601f191681016001600160401b038111828210171561400157614001613f36565b604052919050565b5f6001600160401b0382111561402157614021613f36565b5060051b60200190565b5f805f6060848603121561403d575f80fd5b8335614048816138ac565b9250602084013561405881613dc8565b915060408401356001600160401b03811115614072575f80fd5b8401601f81018613614082575f80fd5b803561409561409082614009565b613fd9565b8082825260208201915060208360051b8501019250888311156140b6575f80fd5b6020840193505b828410156140e15783356140d081613dc8565b8252602093840193909101906140bd565b809450505050509250925092565b5f6001600160401b0382111561410757614107613f36565b50601f01601f191660200190565b5f805f60608486031215614127575f80fd5b8335614132816138ac565b9250602084013561414281613dc8565b915060408401356001600160401b0381111561415c575f80fd5b8401601f8101861361416c575f80fd5b803561417a61409082614009565b8082825260208201915060208360051b85010192508883111561419b575f80fd5b602084015b8381101561421b5780356001600160401b038111156141bd575f80fd5b8501603f81018b136141cd575f80fd5b60208101356141de614090826140ef565b8181526040838301018d10156141f2575f80fd5b816040840160208301375f602083830101528086525050506020830192506020810190506141a0565b50809450505050509250925092565b5f606082018560070b83528460070b6020840152606060408401528084518083526080850191506020860192505f5b8181101561427a57835160070b835260209384019390920191600101614259565b5090979650505050505050565b5f805f60608486031215614299575f80fd5b83356142a4816138ac565b925060208401356142b4816138ac565b915060408401356142c4816138ac565b809150509250925092565b600181811c908216806142e357607f821691505b60208210810361430157634e487b7160e01b5f52602260045260245ffd5b50919050565b5f8154614313816142cf565b60018216801561432a576001811461433f5761436c565b60ff198316865281151582028601935061436c565b845f5260205f205f5b8381101561436457815488820152600190910190602001614348565b505081860193505b50505092915050565b5f6139468284614307565b5f815461438c816142cf565b8085526001821680156143a657600181146143c25761436c565b60ff1983166020870152602082151560051b870101935061436c565b845f5260205f205f5b838110156143ed5781546020828a0101526001820191506020810190506143cb565b870160200194505050505092915050565b5f82825480855260208501945060208160051b830101845f5260205f205f5b83811015613a4a57848303601f1901885281548352604060208401819052600183015460ff811615159185019190915260081c6001600160a01b0316606084015260a0608084015261447560e0840160028401614380565b838103603f190160a085015261448e8160038501614380565b60048401546001600160a01b031660c09590950194909452506020979097019660059091019060010161441d565b61016082525f6144d0610160840183614380565b83810360208501526144e58160018501614380565b90506144fb60028401546001600160a01b031690565b6001600160a01b03166040850152838103606085015261451e8160038501614380565b905060048301546145366080860160ff831615159052565b600881901c60070b60a086015261455760c0860160ff8360481c1615159052565b5083810360e085015261456d81600585016143fe565b90506139466101008501600685018054600781810b8452604091821c6001600160a01b0316602085015260019092015490910b910152565b5f8154808452602084019350825f5260205f205f5b82811015613bc4578154600781900b8752604081811c6001600160a01b0390811660208a015260e083901c60ff9081161515928a019290925260e89290921c1615156060880152600180840154909116608088015260a090960195600290920191016145ba565b5f8154808452602084019350825f5260205f205f5b82811015613bc4575f82548060070b88528060401c60070b60208901528060801c60070b60408901528060c01d60070b60608901525060018301546146826080890160ff831615159052565b60081c6001600160a01b031660a08801525060c09095019460029190910190600101614636565b5f8154808452602084019350825f5260205f205f5b82811015613bc4575f82548060070b88528060401c60070b60208901528060801c60070b604089015250600183015460018060a01b038116606089015261470f6080890160ff8360a01c1615159052565b505060028201546001600160a01b031660a087015260c0909501946003909101906001016146be565b60ff831681526040602082015261012060408201525f61475c6101608301846144bc565b6008840154600781900b606085015261477f6080850160ff8360401c1615159052565b61479360a0850160ff8360481c1615159052565b6147a760c0850160ff8360501c1615159052565b50828103603f190160e08401526147c181600986016145a5565b838103603f190161010085015290506147dd81600a8601614621565b838103603f190161012085015290506147f981600b86016146a9565b838103603f19016101408501529050612c0d81600c8601614380565b60ff85168152608060208201525f61483060808301866145a5565b82810360408401526148428186614621565b9050828103606084015261352081856146a9565b60ff831681526080810161394660208301848054600781810b8452604091821c6001600160a01b0316602085015260019092015490910b910152565b8035602083101561258e575f19602084900360031b1b1692915050565b60208082526017908201527f68747343616c6c3a2064656c6567617465642063616c6c000000000000000000604082015260600190565b80516148f1816138ac565b919050565b5f60208284031215614906575f80fd5b8151613946816138ac565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561258e5761258e614911565b8181038181111561258e5761258e614911565b5f82518060208501845e5f920191825250919050565b80516148f181613dc8565b5f82601f83011261497b575f80fd5b8151602083015f61498e614090846140ef565b90508281528583830111156149a1575f80fd5b8282602083015e5f92810160200192909252509392505050565b805180151581146148f1575f80fd5b5f82601f8301126149d9575f80fd5b81516149e761409082614009565b8082825260208201915060208360051b860101925085831115614a08575f80fd5b602085015b83811015614b255780516001600160401b03811115614a2a575f80fd5b86016040818903601f19011215614a3f575f80fd5b614a47613f4a565b6020820151815260408201516001600160401b03811115614a66575f80fd5b60208184010192505060a0828a031215614a7e575f80fd5b614a86613f72565b614a8f836149bb565b81526020830151614a9f816138ac565b602082015260408301516001600160401b03811115614abc575f80fd5b614ac88b82860161496c565b60408301525060608301516001600160401b03811115614ae6575f80fd5b614af28b82860161496c565b60608301525060808301519250614b08836138ac565b608081019290925260208181019290925284529283019201614a0d565b5095945050505050565b5f60608284031215614b3f575f80fd5b604051606081016001600160401b0381118282101715614b6157614b61613f36565b80604052508091508251614b7481613dc8565b81526020830151614b84816138ac565b60208201526040830151614b9781613dc8565b6040919091015292915050565b5f6101608284031215614bb5575f80fd5b614bbd613f94565b905081516001600160401b03811115614bd4575f80fd5b614be08482850161496c565b82525060208201516001600160401b03811115614bfb575f80fd5b614c078482850161496c565b602083015250614c19604083016148e6565b604082015260608201516001600160401b03811115614c36575f80fd5b614c428482850161496c565b606083015250614c54608083016149bb565b6080820152614c6560a08301614961565b60a0820152614c7660c083016149bb565b60c082015260e08201516001600160401b03811115614c93575f80fd5b614c9f848285016149ca565b60e083015250614cb3836101008401614b2f565b61010082015292915050565b5f82601f830112614cce575f80fd5b8151614cdc61409082614009565b80828252602082019150602060a08402860101925085831115614cfd575f80fd5b602085015b83811015614b255760a08188031215614d19575f80fd5b614d21613f72565b8151614d2c81613dc8565b81526020820151614d3c816138ac565b6020820152614d4d604083016149bb565b6040820152614d5e606083016149bb565b60608201526080820151614d71816138ac565b6080820152835260209092019160a001614d02565b5f82601f830112614d95575f80fd5b8151614da361409082614009565b80828252602082019150602060c08402860101925085831115614dc4575f80fd5b602085015b83811015614b255760c08188031215614de0575f80fd5b614de8613fb7565b8151614df381613dc8565b81526020820151614e0381613dc8565b60208201526040820151614e1681613dc8565b60408201526060820151614e2981613dc8565b6060820152614e3a608083016149bb565b608082015260a0820151614e4d816138ac565b60a0820152835260209092019160c001614dc9565b5f82601f830112614e71575f80fd5b8151614e7f61409082614009565b80828252602082019150602060c08402860101925085831115614ea0575f80fd5b602085015b83811015614b255760c08188031215614ebc575f80fd5b614ec4613fb7565b8151614ecf81613dc8565b81526020820151614edf81613dc8565b60208201526040820151614ef281613dc8565b60408201526060820151614f05816138ac565b6060820152614f16608083016149bb565b608082015260a0820151614f29816138ac565b60a0820152835260209092019160c001614ea5565b5f8060408385031215614f4f575f80fd5b8251614f5a81613dc8565b60208401519092506001600160401b03811115614f75575f80fd5b83016101208186031215614f87575f80fd5b614f8f613f94565b81516001600160401b03811115614fa4575f80fd5b614fb087828501614ba4565b825250614fbf60208301614961565b6020820152614fd0604083016149bb565b6040820152614fe1606083016149bb565b6060820152614ff2608083016149bb565b608082015260a08201516001600160401b0381111561500f575f80fd5b61501b87828501614cbf565b60a08301525060c08201516001600160401b03811115615039575f80fd5b61504587828501614d86565b60c08301525060e08201516001600160401b03811115615063575f80fd5b61506f87828501614e62565b60e0830152506101008201516001600160401b0381111561508e575f80fd5b61509a8782850161496c565b6101008301525080925050509250929050565b5f602082840312156150bd575f80fd5b81516001600160401b038111156150d2575f80fd5b6135a28482850161496c565b5f80604083850312156150ef575f80fd5b82516150fa81613dc8565b9150615108602084016149bb565b90509250929050565b634e487b7160e01b5f52603260045260245ffd5b5f8060408385031215615136575f80fd5b825161514181613dc8565b8092505060208301518060030b8114613e02575f80fd5b5f805f806080858703121561516b575f80fd5b845161517681613dc8565b60208601519094506001600160401b03811115615191575f80fd5b61519d87828801614cbf565b93505060408501516001600160401b038111156151b8575f80fd5b6151c487828801614d86565b92505060608501516001600160401b038111156151df575f80fd5b6151eb87828801614e62565b91505092959194509250565b5f8060808385031215615208575f80fd5b825161521381613dc8565b91506151088460208501614b2f565b5f60208284031215615232575f80fd5b5051919050565b80516020808301519190811015614301575f1960209190910360031b1b16919050565b5f6020828403121561526c575f80fd5b613946826149bb565b602081525f6139466020830184614380565b602081525f613946602083018461394d565b5f602082840312156152a9575f80fd5b815163ffffffff81168114613946575f80fd5b6001600160e01b0319938416815260409290921b67ffffffffffffffff1916600483015260e01b909116601c82015260200190565b6001600160e01b0319948516815260609390931b6001600160601b031916600484015260e091821b84166018840152901b909116601c8201526020019056fea26469706673582212200af8cd04d1019603157e3e6c44e0e79a02f37a804f634c6fd33c7de012ef564c64736f6c634300081a0033",
        "sourceMap": "320:28189:1:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561000f575f80fd5b50600436106100f3575f3560e01c806393272baf11610095578063d6910d0611610064578063d6910d06146103b7578063e0b490f7146103e4578063e0f4059a1461040c578063f49f40db1461042e576100f3565b806393272baf14610330578063a7daa18d14610360578063ae7611a014610373578063d614cdb814610396576100f3565b80631f69565f116100d15780631f69565f146102ba578063287e1da8146102db578063335e04c1146102fc5780633c4dd32e1461030f576100f3565b8063098f23661461023e5780630bb3bfa81461027857806319f373611461028d575b5f366060601c82101561014d5760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a206e6f7420656e6f7567682063616c6c6461746100000060448201526064015b60405180910390fd5b5f61015b6004823681613817565b6101649161383e565b60e01c905063618dc65e81146101bc5760405162461bcd60e51b815260206004820152601e60248201527f66616c6c6261636b3a20756e737570706f727465642073656c6563746f7200006044820152606401610144565b5f6101cb601860043684613817565b6101d491613876565b60601c90503081146102285760405162461bcd60e51b815260206004820152601d60248201527f66616c6c6261636b3a20746f6b656e206973206e6f742063616c6c65720000006044820152606401610144565b610230610441565b805195506020019350505050f35b61025161024c3660046138c3565b610ba7565b6040805160079390930b83526001600160a01b039091166020830152015b60405180910390f35b61028b6102863660046138ed565b610c95565b005b6102a061029b36600461392b565b610d73565b6040805160079390930b835290151560208301520161026f565b6102cd6102c836600461392b565b610e34565b60405161026f929190613dad565b6102ee6102e9366004613dd6565b610f28565b60405161026f929190613e0d565b6102a061030a36600461392b565b611208565b61032261031d3660046138c3565b611304565b60405161026f929190613e9e565b61034361033e36600461392b565b6114e3565b6040805160079390930b835260039190910b60208301520161026f565b6102a061036e36600461392b565b6115c3565b61038661038136600461392b565b61167e565b60405161026f9493929190613eb9565b6103a96103a436600461392b565b61177d565b60405161026f929190613efa565b6103ca6103c536600461402b565b611881565b60408051600793840b81529190920b60208201520161026f565b6103f76103f236600461392b565b611ba8565b60405163ffffffff909116815260200161026f565b61041f61041a366004614115565b611c22565b60405161026f9392919061422a565b6102a061043c366004614287565b611f5f565b60605f610452601c60183684613817565b61045b9161383e565b905060408051808201825260098152681393d517d193d5539160ba1b602090910152517f7bafae6429a8b3ef0db181af7c5834a6f2b1af33146a1a9ae02e833d27f2431b906104ab905f90614375565b60405180910390200361050a5760405162461bcd60e51b815260206004820152602160248201527f7265646972656374466f72546f6b656e3a20746f6b656e206e6f7420666f756e6044820152601960fa1b6064820152608401610144565b610166193301610a6e5763e096a9a160e01b6001600160e01b03198216016105b157601c3610156105875760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e496e666f3a204e6f7420656e6f7567682063616c6c6461746044820152606160f81b6064820152608401610144565b6016600560405160200161059c929190614738565b60405160208183030381529060405291505090565b63028c4f7360e51b6001600160e01b031982160161064557601c36101561062a5760405162461bcd60e51b815260206004820152602760248201527f676574546f6b656e437573746f6d466565733a204e6f7420656e6f7567682063604482015266616c6c6461746160c81b6064820152608401610144565b60405161059c90601690600e90600f90601090602001614815565b63cca1fb3f60e01b6001600160e01b03198216016106eb57601c3610156106c45760405162461bcd60e51b815260206004820152602d60248201527f676574546f6b656e44656661756c744b79635374617475733a204e6f7420656e60448201526c6f7567682063616c6c6461746160981b6064820152608401610144565b600d546040805160166020820152600160481b90920460ff1615159082015260600161059c565b6358255e7360e01b6001600160e01b031982160161079457601c36101561076d5760405162461bcd60e51b815260206004820152603060248201527f676574546f6b656e44656661756c74467265657a655374617475733a204e6f7460448201526f20656e6f7567682063616c6c6461746160801b6064820152608401610144565b6009546040805160166020820152600160481b90920460ff1615159082015260600161059c565b63053d664960e31b6001600160e01b031982160161082257601c36101561080d5760405162461bcd60e51b815260206004820152602760248201527f676574546f6b656e457870697279496e666f3a204e6f7420656e6f7567682063604482015266616c6c6461746160c81b6064820152608401610144565b60405161059c90601690600b90602001614856565b636cd8d45160e01b6001600160e01b031982160161098257601c3610156108955760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e547970653a204e6f7420656e6f7567682063616c6c6461746044820152606160f81b6064820152608401610144565b7f20081d23699eb901ca16307080f9b35e7967740755a921f749a9e037b0875c755f6040516020016108c79190614375565b60405160208183030381529060405280519060200120036108fd5760408051601660208201525f9181019190915260600161059c565b7f6c58a12b113a1ee77f554495d8bd48a419af104bca196099cdecc39fcb8989f05f60405160200161092f9190614375565b604051602081830303815290604052805190602001200361096657604080516016602082015260019181019190915260600161059c565b60408051601660208201525f199181019190915260600161059c565b631e89880b60e31b6001600160e01b0319821601610a6e57607c3610156109eb5760405162461bcd60e51b815260206004820152601b60248201527f7570646174653a204e6f7420656e6f7567682063616c6c6461746100000000006044820152606401610144565b5f6109fa603c60283684613817565b610a0391613876565b60601c90505f610a17605c60483684613817565b610a2091613876565b60601c90505f610a34607c605c3684613817565b610a3d91614892565b9050610a4a838383610c95565b60408051600160208201520160405160208183030381529060405294505050505090565b604080518082018252600f81526e232aa723a4a12622afa1a7a6a6a7a760891b602090910152517f20081d23699eb901ca16307080f9b35e7967740755a921f749a9e037b0875c7590610ac2905f90614375565b604051809103902003610ade57610ad881612058565b91505090565b60408051808201825260138152724e4f4e5f46554e4749424c455f554e4951554560681b602090910152517f6c58a12b113a1ee77f554495d8bd48a419af104bca196099cdecc39fcb8989f090610b36905f90614375565b604051809103902003610b4c57610ad881612594565b60405162461bcd60e51b815260206004820152602a60248201527f7265646972656374466f72546f6b656e3a20746f6b656e2074797065206e6f74604482015269081cdd5c1c1bdc9d195960b21b6064820152608401610144565b5f803061016714610bca5760405162461bcd60e51b8152600401610144906148af565b6001600160a01b038416610c205760405162461bcd60e51b815260206004820152601a60248201527f676574417070726f7665643a20696e76616c696420746f6b656e0000000000006044820152606401610144565b60405163020604bf60e21b8152600481018490526016906001600160a01b0386169063081812fc90602401602060405180830381865afa158015610c66573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c8a91906148f6565b909590945092505050565b6001600160a01b038316610cbf578060045f828254610cb49190614925565b90915550610d249050565b5f610cc984612b66565b805490915082811015610d1e5760405162461bcd60e51b815260206004820152601f60248201527f5f7472616e736665723a20696e73756666696369656e742062616c616e6365006044820152606401610144565b82900390555b6001600160a01b038216610d4e578060045f828254610d439190614938565b90915550610d6e9050565b5f610d5883612b66565b80549091505f610d688483614925565b90925550505b505050565b6040516001600160a01b03821660248201525f908190819060440160408051601f198184030181529181526020820180516001600160e01b03166393272baf60e01b179052519091505f9081906001600160a01b03871690610dd690859061494b565b5f604051808303815f865af19150503d805f8114610e0f576040519150601f19603f3d011682016040523d82523d5f602084013e610e14565b606091505b50915091506016828015610e2857505f8251115b94509450505050915091565b5f610e3d6136eb565b3061016714610e5e5760405162461bcd60e51b8152600401610144906148af565b6001600160a01b038316610eb45760405162461bcd60e51b815260206004820152601b60248201527f676574546f6b656e496e666f3a20696e76616c696420746f6b656e00000000006044820152606401610144565b604051631f69565f60e01b81526001600160a01b0384166004820181905290631f69565f906024015f604051808303815f875af1158015610ef7573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610f1e9190810190614f3e565b9094909350915050565b5f610f3161379d565b6001600160a01b038416610f965760405162461bcd60e51b815260206004820152602660248201527f6765744e6f6e46756e6769626c65546f6b656e496e666f3a20696e76616c6964604482015265103a37b5b2b760d11b6064820152608401610144565b604051631f69565f60e01b81526001600160a01b038516600482018190525f91829190631f69565f906024015f604051808303815f875af1158015610fdd573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526110049190810190614f3e565b915091508160070b6002146110755760405162461bcd60e51b815260206004820152603160248201527f6765744e6f6e46756e6769626c65546f6b656e496e666f3a206661696c656420604482015270746f2067657420746f6b656e206461746160781b6064820152608401610144565b61107d61379d565b818152600786900b602082015260405163020604bf60e21b81526001600160401b03871660048201526001600160a01b0388169063081812fc90602401602060405180830381865afa1580156110d5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110f991906148f6565b6001600160a01b0390811660a08301526040516331a9108f60e11b81526001600160401b038816600482015290881690636352211e90602401602060405180830381865afa15801561114d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061117191906148f6565b6001600160a01b039081166040838101919091525163c87b56dd60e01b81526001600160401b03881660048201529088169063c87b56dd906024015f60405180830381865afa1580156111c6573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111ed91908101906150ad565b60808201525f606082015260169450925050505b9250929050565b5f80306101671461122b5760405162461bcd60e51b8152600401610144906148af565b6001600160a01b0383166112935760405162461bcd60e51b815260206004820152602960248201527f676574546f6b656e44656661756c744b79635374617475733a20696e76616c6960448201526864206164647265737360b81b6064820152608401610144565b60405163335e04c160e01b81526001600160a01b038416600482018190529063335e04c1906024015b60408051808303815f875af11580156112d7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112fb91906150de565b91509150915091565b5f61130d6137d7565b306101671461132e5760405162461bcd60e51b8152600401610144906148af565b6001600160a01b0384166113845760405162461bcd60e51b815260206004820152601a60248201527f676574546f6b656e4b65793a20696e76616c696420746f6b656e0000000000006044820152606401610144565b604051631f69565f60e01b81526001600160a01b038516600482018190525f91829190631f69565f906024015f604051808303815f875af11580156113cb573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526113f29190810190614f3e565b915091508160070b6016146114575760405162461bcd60e51b815260206004820152602560248201527f676574546f6b656e4b65793a206661696c656420746f2067657420746f6b656e604482015264206461746160d81b6064820152608401610144565b5f5b815160e00151518110156114cc5785825f015160e00151828151811061148157611481615111565b60200260200101515f0151036114c4576016825f015160e0015182815181106114ac576114ac615111565b60200260200101516020015194509450505050611201565b600101611459565b506114d56137d7565b601697909650945050505050565b5f8030610167146115065760405162461bcd60e51b8152600401610144906148af565b6001600160a01b03831661155c5760405162461bcd60e51b815260206004820152601d60248201527f676574546f6b656e547970653a20696e76616c696420616464726573730000006044820152606401610144565b6040516393272baf60e01b81526001600160a01b03841660048201819052906393272baf9060240160408051808303815f875af115801561159f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112fb9190615125565b5f8030610167146115e65760405162461bcd60e51b8152600401610144906148af565b6001600160a01b0383166116515760405162461bcd60e51b815260206004820152602c60248201527f676574546f6b656e44656661756c74467265657a655374617475733a20696e7660448201526b616c6964206164647265737360a01b6064820152608401610144565b60405163a7daa18d60e01b81526001600160a01b038416600482018190529063a7daa18d906024016112bc565b5f6060808030610167146116a45760405162461bcd60e51b8152600401610144906148af565b6001600160a01b0385166117045760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e437573746f6d466565733a20696e76616c696420746f6b656044820152603760f91b6064820152608401610144565b604051630573b08d60e51b81526001600160a01b038616600482018190529063ae7611a0906024015f604051808303815f875af1158015611747573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261176e9190810190615158565b93509350935093509193509193565b604080516060810182525f8082526020820181905291810182905230610167146117b95760405162461bcd60e51b8152600401610144906148af565b6001600160a01b0383166118195760405162461bcd60e51b815260206004820152602160248201527f676574546f6b656e457870697279496e666f3a20696e76616c696420746f6b656044820152603760f91b6064820152608401610144565b604051631ac299b760e31b81526001600160a01b038416600482018190529063d614cdb8906024016080604051808303815f875af115801561185d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f1e91906151f7565b5f8030610167146118a45760405162461bcd60e51b8152600401610144906148af565b6001600160a01b0385166118fa5760405162461bcd60e51b815260206004820152601860248201527f6275726e546f6b656e3a20696e76616c696420746f6b656e00000000000000006044820152606401610144565b5f8460070b1361194c5760405162461bcd60e51b815260206004820152601960248201527f6275726e546f6b656e3a20696e76616c696420616d6f756e74000000000000006044820152606401610144565b604051631f69565f60e01b81526001600160a01b038616600482018190525f91829190631f69565f906024015f604051808303815f875af1158015611993573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526119ba9190810190614f3e565b915091508160070b601614611a1d5760405162461bcd60e51b815260206004820152602360248201527f6275726e546f6b656e3a206661696c656420746f2067657420746f6b656e20696044820152626e666f60e81b6064820152608401610144565b8051604001516001600160a01b038116611a795760405162461bcd60e51b815260206004820152601a60248201527f6275726e546f6b656e3a20696e76616c6964206163636f756e740000000000006044820152606401610144565b60405163017677f560e31b81526001600160a01b0382811660048301525f60248301526001600160401b0389166044830152891690630bb3bfa8906064015f604051808303815f87803b158015611ace575f80fd5b505af1158015611ae0573d5f803e3d5ffd5b5050505060169450876001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b24573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b489190615222565b93505f8460070b1215611b9d5760405162461bcd60e51b815260206004820152601f60248201527f6275726e546f6b656e3a20696e76616c696420746f74616c20737570706c79006044820152606401610144565b505050935093915050565b5f3061016714611bca5760405162461bcd60e51b8152600401610144906148af565b6040805163e0b490f760e01b602082018190525f602483018190526001600160601b0319606087901b16602c84015290929091829101604051602081830303815290604052611c1890615239565b5495945050505050565b5f8060603061016714611c475760405162461bcd60e51b8152600401610144906148af565b6001600160a01b038616611c9d5760405162461bcd60e51b815260206004820152601860248201527f6d696e74546f6b656e3a20696e76616c696420746f6b656e00000000000000006044820152606401610144565b5f8560070b13611cef5760405162461bcd60e51b815260206004820152601960248201527f6d696e74546f6b656e3a20696e76616c696420616d6f756e74000000000000006044820152606401610144565b604051631f69565f60e01b81526001600160a01b038716600482018190525f91829190631f69565f906024015f604051808303815f875af1158015611d36573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611d5d9190810190614f3e565b915091508160070b601614611dc05760405162461bcd60e51b815260206004820152602360248201527f6d696e74546f6b656e3a206661696c656420746f2067657420746f6b656e20696044820152626e666f60e81b6064820152608401610144565b8051604001516001600160a01b038116611e1c5760405162461bcd60e51b815260206004820152601a60248201527f6d696e74546f6b656e3a20696e76616c6964206163636f756e740000000000006044820152606401610144565b60405163017677f560e31b81525f60048201526001600160a01b0382811660248301526001600160401b038a1660448301528a1690630bb3bfa8906064015f604051808303815f87803b158015611e71575f80fd5b505af1158015611e83573d5f803e3d5ffd5b5050505060169550886001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ec7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611eeb9190615222565b604080515f808252602082019092529196505093505f8560070b1215611f535760405162461bcd60e51b815260206004820152601f60248201527f6d696e74546f6b656e3a20696e76616c696420746f74616c20737570706c79006044820152606401610144565b50505093509350939050565b5f803061016714611f825760405162461bcd60e51b8152600401610144906148af565b6001600160a01b038516611fd85760405162461bcd60e51b815260206004820152601f60248201527f6973417070726f766564466f72416c6c3a20696e76616c696420746f6b656e006044820152606401610144565b60405163e985e9c560e01b81526001600160a01b03858116600483015284811660248301526016919087169063e985e9c590604401602060405180830381865afa158015612028573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061204c919061525c565b91509150935093915050565b606063f90221fd60e01b6001600160e01b031983160161209a5760016040516020016120849190615275565b6040516020818303038152906040529050919050565b63cec31a9960e01b6001600160e01b03198316016120c9576003546040805160ff909216602083015201612084565b63e7e9f22360e01b6001600160e01b03198316016120f65760045460405160200161208491815260200190565b636a2764bf60e01b6001600160e01b03198316016121205760026040516020016120849190615275565b638f5f7dcf60e01b6001600160e01b03198316016121d857603c3610156121895760405162461bcd60e51b815260206004820152601e60248201527f62616c616e63654f663a204e6f7420656e6f7567682063616c6c6461746100006044820152606401610144565b5f612198603c60283684613817565b6121a191613876565b60601c90506121af81612c16565b6040516020016121c191815260200190565b604051602081830303815290604052915050919050565b6356fa634560e01b6001600160e01b03198316016122aa57605c3610156122415760405162461bcd60e51b815260206004820152601d60248201527f7472616e736665723a204e6f7420656e6f7567682063616c6c646174610000006044820152606401610144565b5f612250603c60283684613817565b61225991613876565b60601c90505f61226d605c603c3684613817565b61227691614892565b905033612284818484612c29565b6040805160016020820152015b6040516020818303038152906040529350505050919050565b63dc478d2360e01b6001600160e01b03198316016123a457607c3610156123135760405162461bcd60e51b815260206004820152601e60248201527f7472616e73666572463a204e6f7420656e6f7567682063616c6c6461746100006044820152606401610144565b5f612322603c60283684613817565b61232b91613876565b60601c90505f61233f605c60483684613817565b61234891613876565b60601c90505f61235c607c605c3684613817565b61236591614892565b905033612373848284612d20565b61237e848484612c29565b604080516001602082015201604051602081830303815290604052945050505050919050565b63114e896160e11b6001600160e01b031983160161247b57605c36101561240d5760405162461bcd60e51b815260206004820152601e60248201527f616c6c6f77616e63653a204e6f7420656e6f7567682063616c6c6461746100006044820152606401610144565b5f61241c603c60283684613817565b61242591613876565b60601c90505f612439605c60483684613817565b61244291613876565b60601c90506124518282612d98565b60405160200161246391815260200190565b60405160208183030381529060405292505050919050565b63f6a1584d60e01b6001600160e01b031983160161258557605c3610156124e45760405162461bcd60e51b815260206004820152601c60248201527f617070726f76653a204e6f7420656e6f7567682063616c6c64617461000000006044820152606401610144565b5f6124f3603c60283684613817565b6124fc91613876565b60601c90505f612510605c603c3684613817565b61251991614892565b905033612527818484612dad565b826001600160a01b0316816001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161256c91815260200190565b60405180910390a3604080516001602082015201612291565b61258e82612e6d565b92915050565b606063f90221fd60e01b6001600160e01b03198316016125c05760016040516020016120849190615275565b636a2764bf60e01b6001600160e01b03198316016125ea5760026040516020016120849190615275565b633784a92360e01b6001600160e01b031983160161268657603c3610156126535760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e5552493a204e6f7420656e6f7567682063616c6c646174610000006044820152606401610144565b5f612662603c601c3684613817565b61266b91614892565b905061267681612f69565b6040516020016121c19190615287565b63e7e9f22360e01b6001600160e01b03198316016126b35760045460405160200161208491815260200190565b638f5f7dcf60e01b6001600160e01b031983160161271c57603c3610156121895760405162461bcd60e51b815260206004820152601e60248201527f62616c616e63654f663a204e6f7420656e6f7567682063616c6c6461746100006044820152606401610144565b634e56ef7160e11b6001600160e01b03198316016127c257603c3610156127855760405162461bcd60e51b815260206004820152601c60248201527f6f776e65724f663a204e6f7420656e6f7567682063616c6c64617461000000006044820152606401610144565b5f612794603c601c3684613817565b61279d91614892565b90506127a88161300c565b604080516001600160a01b039092166020830152016121c1565b63dc478d2360e01b6001600160e01b031983160161289457607c3610156128355760405162461bcd60e51b815260206004820152602160248201527f7472616e7366657246726f6d3a204e6f7420656e6f7567682063616c6c6461746044820152606160f81b6064820152608401610144565b5f612844603c60283684613817565b61284d91613876565b60601c90505f612861605c60483684613817565b61286a91613876565b60601c90505f61287e607c605c3684613817565b61288791614892565b9050612284838383613017565b63f6a1584d60e01b6001600160e01b031983160161295157605c3610156128fd5760405162461bcd60e51b815260206004820152601c60248201527f617070726f76653a204e6f7420656e6f7567682063616c6c64617461000000006044820152606401610144565b5f61290c603c60283684613817565b61291591613876565b60601c90505f612929605c603c3684613817565b61293291614892565b905061294082826001613210565b604080516001602082015201612463565b635dd34b9b60e01b6001600160e01b0319831601612a0d57605c3610156129c95760405162461bcd60e51b815260206004820152602660248201527f736574417070726f76616c466f72416c6c3a204e6f7420656e6f7567682063616044820152656c6c6461746160d01b6064820152608401610144565b5f6129d8603c60283684613817565b6129e191613876565b60601c90505f6129f5605c603c3684613817565b6129fe91614892565b6001149050612940828261330c565b633df9fb4160e21b6001600160e01b0319831601612a9957603c361015612a765760405162461bcd60e51b815260206004820181905260248201527f676574417070726f7665643a204e6f7420656e6f7567682063616c6c646174616044820152606401610144565b5f612a85603c601c3684613817565b612a8e91614892565b90506127a8816133f4565b63167a163b60e01b6001600160e01b031983160161258557605c361015612b105760405162461bcd60e51b815260206004820152602560248201527f6973417070726f766564466f72416c6c3a204e6f7420656e6f7567682063616c6044820152646c6461746160d81b6064820152608401610144565b5f612b1f603c60283684613817565b612b2891613876565b60601c90505f612b3c605c60483684613817565b612b4591613876565b60601c9050612b5482826133ff565b60408051911515602083015201612463565b60405163e0b490f760e01b81526001600160a01b03821660048201525f906370a0823160e01b90829081906101679063e0b490f7906024015b602060405180830381865afa158015612bba573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612bde9190615299565b9050828282604051602001612bf5939291906152bc565b604051602081830303815290604052612c0d90615239565b95945050505050565b5f80612c2183612b66565b549392505050565b6001600160a01b038316612c755760405162461bcd60e51b8152602060048201526013602482015272343a399d1034b73b30b634b21039b2b73232b960691b6044820152606401610144565b6001600160a01b038216612cc35760405162461bcd60e51b8152602060048201526015602482015274343a399d1034b73b30b634b2103932b1b2b4bb32b960591b6044820152606401610144565b612cce838383610c95565b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612d1391815260200190565b60405180910390a3505050565b5f612d2b8484612d98565b90505f198114612d925781811015612d855760405162461bcd60e51b815260206004820152601d60248201527f5f7370656e64416c6c6f77616e63653a20696e73756666696369656e740000006044820152606401610144565b612d928484848403612dad565b50505050565b5f80612da4848461340b565b54949350505050565b6001600160a01b038316612e035760405162461bcd60e51b815260206004820152601760248201527f5f617070726f76653a20696e76616c6964206f776e65720000000000000000006044820152606401610144565b6001600160a01b038216612e595760405162461bcd60e51b815260206004820152601960248201527f5f617070726f76653a20696e76616c6964207370656e646572000000000000006044820152606401610144565b5f612e64848461340b565b91909155505050565b6060637ac5590d60e11b6001600160e01b0319831601612ead575f612e913361352b565b90506001815560016040516020016121c1911515815260200190565b63051b6f4160e51b6001600160e01b0319831601612ee6575f612ecf3361352b565b5f81556040805160016020820152919250016121c1565b63b270229360e01b6001600160e01b0319831601612f21575f612f083361352b565b8054604080518215156020820152929350909101612463565b60405162461bcd60e51b815260206004820152601f60248201527f7265646972656374466f72546f6b656e3a206e6f7420737570706f72746564006044820152606401610144565b60605f612f7583613568565b90505f819050808054612f87906142cf565b80601f0160208091040260200160405190810160405280929190818152602001828054612fb3906142cf565b8015612ffe5780601f10612fd557610100808354040283529160200191612ffe565b820191905f5260205f20905b815481529060010190602001808311612fe157829003601f168201915b505050505092505050919050565b5f80612c21836135aa565b6001600160a01b0383166130635760405162461bcd60e51b8152602060048201526013602482015272343a399d1034b73b30b634b21039b2b73232b960691b6044820152606401610144565b6001600160a01b0382166130b15760405162461bcd60e51b8152602060048201526015602482015274343a399d1034b73b30b634b2103932b1b2b4bb32b960591b6044820152606401610144565b5f6130bb826135aa565b80549091506001600160a01b038082169086161461311b5760405162461bcd60e51b815260206004820152601860248201527f6874733a2073656e646572206973206e6f74206f776e657200000000000000006044820152606401610144565b336001600160a01b0386161461319857613134836133f4565b6001600160a01b0316336001600160a01b03161480613158575061315885336133ff565b6131985760405162461bcd60e51b81526020600482015260116024820152701a1d1cce881d5b985d5d1a1bdc9a5e9959607a1b6044820152606401610144565b5f6131a2846135cc565b90505f81555f6131b287876135ee565b90505f8155858455856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040516131ff91815260200190565b60405180910390a350505050505050565b5f61321a8361300c565b9050336001600160a01b0382161480613243575033613238846133f4565b6001600160a01b0316145b80613253575061325381336133ff565b6132985760405162461bcd60e51b815260206004820152601660248201527517d85c1c1c9bdd994e881d5b985d5d1a1bdc9a5e995960521b6044820152606401610144565b5f6132a2846135cc565b90505f836132b0575f6132b2565b855b9050808255856001600160a01b0316836001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925876040516132fc91815260200190565b60405180910390a3505050505050565b336001600160a01b038316158015906133375750806001600160a01b0316836001600160a01b031614155b61338f5760405162461bcd60e51b815260206004820152602360248201527f736574417070726f76616c466f72416c6c3a20696e76616c6964206f706572616044820152623a37b960e91b6064820152608401610144565b5f61339a82856135ee565b9050828155836001600160a01b0316826001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31856040516133e6911515815260200190565b60405180910390a350505050565b5f80612c21836135cc565b5f80612da484846135ee565b60405163e0b490f760e01b81526001600160a01b03831660048201525f90636eb1769f60e11b90829081906101679063e0b490f790602401602060405180830381865afa15801561345e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906134829190615299565b60405163e0b490f760e01b81526001600160a01b03871660048201529091505f906101679063e0b490f790602401602060405180830381865afa1580156134cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906134ef9190615299565b90508383828460405160200161350894939291906152f1565b60405160208183030381529060405261352090615239565b979650505050505050565b60405163e0b490f760e01b81526001600160a01b03821660048201525f90634d8fdd6d60e01b90829081906101679063e0b490f790602401612b9f565b6040515f9063c87b56dd60e01b90829061358a908390839087906020016152bc565b6040516020818303038152906040526135a290615239565b949350505050565b6040515f906331a9108f60e11b90829061358a908390839087906020016152bc565b6040515f9063020604bf60e21b90829061358a908390839087906020016152bc565b60405163e0b490f760e01b81526001600160a01b03831660048201525f9063e985e9c560e01b90829081906101679063e0b490f790602401602060405180830381865afa158015613641573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136659190615299565b60405163e0b490f760e01b81526001600160a01b03871660048201529091505f906101679063e0b490f790602401602060405180830381865afa1580156136ae573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136d29190615299565b90508383838360405160200161350894939291906152f1565b60408051610240810182526060610120820181815261014083018290525f610160840181905261018084018390526101a084018190526101c084018190526101e08401819052610200840183905284519283018552808352602083018190529382019390935261022082015290819081526020015f60070b81526020015f151581526020015f151581526020015f15158152602001606081526020016060815260200160608152602001606081525090565b6040518060c001604052806137b06136eb565b81525f60208201819052604082018190526060808301829052608083015260a09091015290565b6040518060a001604052805f151581526020015f6001600160a01b0316815260200160608152602001606081526020015f6001600160a01b031681525090565b5f8085851115613825575f80fd5b83861115613831575f80fd5b5050820193919092039150565b80356001600160e01b0319811690600484101561386f576001600160e01b0319600485900360031b81901b82161691505b5092915050565b80356001600160601b0319811690601484101561386f576001600160601b031960149490940360031b84901b1690921692915050565b6001600160a01b03811681146138c0575f80fd5b50565b5f80604083850312156138d4575f80fd5b82356138df816138ac565b946020939093013593505050565b5f805f606084860312156138ff575f80fd5b833561390a816138ac565b9250602084013561391a816138ac565b929592945050506040919091013590565b5f6020828403121561393b575f80fd5b8135613946816138ac565b9392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b80511515825260018060a01b0360208201511660208301525f604082015160a060408501526139ad60a085018261394d565b9050606083015184820360608601526139c6828261394d565b6080948501516001600160a01b03169590940194909452509092915050565b5f82825180855260208501945060208160051b830101602085015f5b83811015613a4a57601f198584030188528151805184526020810151905060406020850152613a33604085018261397b565b6020998a0199909450929092019150600101613a01565b50909695505050505050565b5f81516101608452613a6c61016085018261394d565b905060208301518482036020860152613a85828261394d565b9150506040830151613aa260408601826001600160a01b03169052565b5060608301518482036060860152613aba828261394d565b9150506080830151613ad0608086018215159052565b5060a0830151613ae560a086018260070b9052565b5060c0830151613af960c086018215159052565b5060e083015184820360e0860152613b1182826139e5565b915050610100830151613b4c6101008601828051600790810b83526020808301516001600160a01b031690840152604091820151900b910152565b509392505050565b5f8151808452602084019350602083015f5b82811015613bc4578151805160070b87526020808201516001600160a01b03908116828a01526040808401511515908a01526060808401511515908a0152608092830151169188019190915260a09096019590910190600101613b66565b5093949350505050565b5f8151808452602084019350602083015f5b82811015613bc45781515f815160070b8852602082015160070b6020890152604082015160070b6040890152606082015160070b606089015260808201511515608089015260018060a01b0360a08301511660a089015260c0880190508097505050602082019150600181019050613be0565b5f8151808452602084019350602083015f5b82811015613bc45781515f815160070b8852602082015160070b6020890152604082015160070b604089015260018060a01b03606083015116606089015260808201511515608089015260018060a01b0360a08301511660a089015260c0880190508097505050602082019150600181019050613c65565b5f81516101208452613cf3610120850182613a56565b90506020830151613d09602086018260070b9052565b506040830151613d1d604086018215159052565b506060830151613d31606086018215159052565b506080830151613d45608086018215159052565b5060a083015184820360a0860152613d5d8282613b54565b91505060c083015184820360c0860152613d778282613bce565b91505060e083015184820360e0860152613d918282613c53565b915050610100830151848203610100860152612c0d828261394d565b8260070b8152604060208201525f6135a26040830184613cdd565b8060070b81146138c0575f80fd5b5f8060408385031215613de7575f80fd5b8235613df2816138ac565b91506020830135613e0281613dc8565b809150509250929050565b8260070b8152604060208201525f825160c06040840152613e32610100840182613cdd565b9050602084015160070b606084015260018060a01b036040850151166080840152606084015160070b60a08401526080840151603f198483030160c0850152613e7b828261394d565b60a095909501516001600160a01b031660e0949094019390935250919392505050565b8260070b8152604060208201525f6135a2604083018461397b565b8460070b8152608060208201525f613ed46080830186613b54565b8281036040840152613ee68186613bce565b905082810360608401526135208185613c53565b600783900b81526080810161394660208301848051600790810b83526020808301516001600160a01b031690840152604091820151900b910152565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b0381118282101715613f6c57613f6c613f36565b60405290565b60405160a081016001600160401b0381118282101715613f6c57613f6c613f36565b60405161012081016001600160401b0381118282101715613f6c57613f6c613f36565b60405160c081016001600160401b0381118282101715613f6c57613f6c613f36565b604051601f8201601f191681016001600160401b038111828210171561400157614001613f36565b604052919050565b5f6001600160401b0382111561402157614021613f36565b5060051b60200190565b5f805f6060848603121561403d575f80fd5b8335614048816138ac565b9250602084013561405881613dc8565b915060408401356001600160401b03811115614072575f80fd5b8401601f81018613614082575f80fd5b803561409561409082614009565b613fd9565b8082825260208201915060208360051b8501019250888311156140b6575f80fd5b6020840193505b828410156140e15783356140d081613dc8565b8252602093840193909101906140bd565b809450505050509250925092565b5f6001600160401b0382111561410757614107613f36565b50601f01601f191660200190565b5f805f60608486031215614127575f80fd5b8335614132816138ac565b9250602084013561414281613dc8565b915060408401356001600160401b0381111561415c575f80fd5b8401601f8101861361416c575f80fd5b803561417a61409082614009565b8082825260208201915060208360051b85010192508883111561419b575f80fd5b602084015b8381101561421b5780356001600160401b038111156141bd575f80fd5b8501603f81018b136141cd575f80fd5b60208101356141de614090826140ef565b8181526040838301018d10156141f2575f80fd5b816040840160208301375f602083830101528086525050506020830192506020810190506141a0565b50809450505050509250925092565b5f606082018560070b83528460070b6020840152606060408401528084518083526080850191506020860192505f5b8181101561427a57835160070b835260209384019390920191600101614259565b5090979650505050505050565b5f805f60608486031215614299575f80fd5b83356142a4816138ac565b925060208401356142b4816138ac565b915060408401356142c4816138ac565b809150509250925092565b600181811c908216806142e357607f821691505b60208210810361430157634e487b7160e01b5f52602260045260245ffd5b50919050565b5f8154614313816142cf565b60018216801561432a576001811461433f5761436c565b60ff198316865281151582028601935061436c565b845f5260205f205f5b8381101561436457815488820152600190910190602001614348565b505081860193505b50505092915050565b5f6139468284614307565b5f815461438c816142cf565b8085526001821680156143a657600181146143c25761436c565b60ff1983166020870152602082151560051b870101935061436c565b845f5260205f205f5b838110156143ed5781546020828a0101526001820191506020810190506143cb565b870160200194505050505092915050565b5f82825480855260208501945060208160051b830101845f5260205f205f5b83811015613a4a57848303601f1901885281548352604060208401819052600183015460ff811615159185019190915260081c6001600160a01b0316606084015260a0608084015261447560e0840160028401614380565b838103603f190160a085015261448e8160038501614380565b60048401546001600160a01b031660c09590950194909452506020979097019660059091019060010161441d565b61016082525f6144d0610160840183614380565b83810360208501526144e58160018501614380565b90506144fb60028401546001600160a01b031690565b6001600160a01b03166040850152838103606085015261451e8160038501614380565b905060048301546145366080860160ff831615159052565b600881901c60070b60a086015261455760c0860160ff8360481c1615159052565b5083810360e085015261456d81600585016143fe565b90506139466101008501600685018054600781810b8452604091821c6001600160a01b0316602085015260019092015490910b910152565b5f8154808452602084019350825f5260205f205f5b82811015613bc4578154600781900b8752604081811c6001600160a01b0390811660208a015260e083901c60ff9081161515928a019290925260e89290921c1615156060880152600180840154909116608088015260a090960195600290920191016145ba565b5f8154808452602084019350825f5260205f205f5b82811015613bc4575f82548060070b88528060401c60070b60208901528060801c60070b60408901528060c01d60070b60608901525060018301546146826080890160ff831615159052565b60081c6001600160a01b031660a08801525060c09095019460029190910190600101614636565b5f8154808452602084019350825f5260205f205f5b82811015613bc4575f82548060070b88528060401c60070b60208901528060801c60070b604089015250600183015460018060a01b038116606089015261470f6080890160ff8360a01c1615159052565b505060028201546001600160a01b031660a087015260c0909501946003909101906001016146be565b60ff831681526040602082015261012060408201525f61475c6101608301846144bc565b6008840154600781900b606085015261477f6080850160ff8360401c1615159052565b61479360a0850160ff8360481c1615159052565b6147a760c0850160ff8360501c1615159052565b50828103603f190160e08401526147c181600986016145a5565b838103603f190161010085015290506147dd81600a8601614621565b838103603f190161012085015290506147f981600b86016146a9565b838103603f19016101408501529050612c0d81600c8601614380565b60ff85168152608060208201525f61483060808301866145a5565b82810360408401526148428186614621565b9050828103606084015261352081856146a9565b60ff831681526080810161394660208301848054600781810b8452604091821c6001600160a01b0316602085015260019092015490910b910152565b8035602083101561258e575f19602084900360031b1b1692915050565b60208082526017908201527f68747343616c6c3a2064656c6567617465642063616c6c000000000000000000604082015260600190565b80516148f1816138ac565b919050565b5f60208284031215614906575f80fd5b8151613946816138ac565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561258e5761258e614911565b8181038181111561258e5761258e614911565b5f82518060208501845e5f920191825250919050565b80516148f181613dc8565b5f82601f83011261497b575f80fd5b8151602083015f61498e614090846140ef565b90508281528583830111156149a1575f80fd5b8282602083015e5f92810160200192909252509392505050565b805180151581146148f1575f80fd5b5f82601f8301126149d9575f80fd5b81516149e761409082614009565b8082825260208201915060208360051b860101925085831115614a08575f80fd5b602085015b83811015614b255780516001600160401b03811115614a2a575f80fd5b86016040818903601f19011215614a3f575f80fd5b614a47613f4a565b6020820151815260408201516001600160401b03811115614a66575f80fd5b60208184010192505060a0828a031215614a7e575f80fd5b614a86613f72565b614a8f836149bb565b81526020830151614a9f816138ac565b602082015260408301516001600160401b03811115614abc575f80fd5b614ac88b82860161496c565b60408301525060608301516001600160401b03811115614ae6575f80fd5b614af28b82860161496c565b60608301525060808301519250614b08836138ac565b608081019290925260208181019290925284529283019201614a0d565b5095945050505050565b5f60608284031215614b3f575f80fd5b604051606081016001600160401b0381118282101715614b6157614b61613f36565b80604052508091508251614b7481613dc8565b81526020830151614b84816138ac565b60208201526040830151614b9781613dc8565b6040919091015292915050565b5f6101608284031215614bb5575f80fd5b614bbd613f94565b905081516001600160401b03811115614bd4575f80fd5b614be08482850161496c565b82525060208201516001600160401b03811115614bfb575f80fd5b614c078482850161496c565b602083015250614c19604083016148e6565b604082015260608201516001600160401b03811115614c36575f80fd5b614c428482850161496c565b606083015250614c54608083016149bb565b6080820152614c6560a08301614961565b60a0820152614c7660c083016149bb565b60c082015260e08201516001600160401b03811115614c93575f80fd5b614c9f848285016149ca565b60e083015250614cb3836101008401614b2f565b61010082015292915050565b5f82601f830112614cce575f80fd5b8151614cdc61409082614009565b80828252602082019150602060a08402860101925085831115614cfd575f80fd5b602085015b83811015614b255760a08188031215614d19575f80fd5b614d21613f72565b8151614d2c81613dc8565b81526020820151614d3c816138ac565b6020820152614d4d604083016149bb565b6040820152614d5e606083016149bb565b60608201526080820151614d71816138ac565b6080820152835260209092019160a001614d02565b5f82601f830112614d95575f80fd5b8151614da361409082614009565b80828252602082019150602060c08402860101925085831115614dc4575f80fd5b602085015b83811015614b255760c08188031215614de0575f80fd5b614de8613fb7565b8151614df381613dc8565b81526020820151614e0381613dc8565b60208201526040820151614e1681613dc8565b60408201526060820151614e2981613dc8565b6060820152614e3a608083016149bb565b608082015260a0820151614e4d816138ac565b60a0820152835260209092019160c001614dc9565b5f82601f830112614e71575f80fd5b8151614e7f61409082614009565b80828252602082019150602060c08402860101925085831115614ea0575f80fd5b602085015b83811015614b255760c08188031215614ebc575f80fd5b614ec4613fb7565b8151614ecf81613dc8565b81526020820151614edf81613dc8565b60208201526040820151614ef281613dc8565b60408201526060820151614f05816138ac565b6060820152614f16608083016149bb565b608082015260a0820151614f29816138ac565b60a0820152835260209092019160c001614ea5565b5f8060408385031215614f4f575f80fd5b8251614f5a81613dc8565b60208401519092506001600160401b03811115614f75575f80fd5b83016101208186031215614f87575f80fd5b614f8f613f94565b81516001600160401b03811115614fa4575f80fd5b614fb087828501614ba4565b825250614fbf60208301614961565b6020820152614fd0604083016149bb565b6040820152614fe1606083016149bb565b6060820152614ff2608083016149bb565b608082015260a08201516001600160401b0381111561500f575f80fd5b61501b87828501614cbf565b60a08301525060c08201516001600160401b03811115615039575f80fd5b61504587828501614d86565b60c08301525060e08201516001600160401b03811115615063575f80fd5b61506f87828501614e62565b60e0830152506101008201516001600160401b0381111561508e575f80fd5b61509a8782850161496c565b6101008301525080925050509250929050565b5f602082840312156150bd575f80fd5b81516001600160401b038111156150d2575f80fd5b6135a28482850161496c565b5f80604083850312156150ef575f80fd5b82516150fa81613dc8565b9150615108602084016149bb565b90509250929050565b634e487b7160e01b5f52603260045260245ffd5b5f8060408385031215615136575f80fd5b825161514181613dc8565b8092505060208301518060030b8114613e02575f80fd5b5f805f806080858703121561516b575f80fd5b845161517681613dc8565b60208601519094506001600160401b03811115615191575f80fd5b61519d87828801614cbf565b93505060408501516001600160401b038111156151b8575f80fd5b6151c487828801614d86565b92505060608501516001600160401b038111156151df575f80fd5b6151eb87828801614e62565b91505092959194509250565b5f8060808385031215615208575f80fd5b825161521381613dc8565b91506151088460208501614b2f565b5f60208284031215615232575f80fd5b5051919050565b80516020808301519190811015614301575f1960209190910360031b1b16919050565b5f6020828403121561526c575f80fd5b613946826149bb565b602081525f6139466020830184614380565b602081525f613946602083018461394d565b5f602082840312156152a9575f80fd5b815163ffffffff81168114613946575f80fd5b6001600160e01b0319938416815260409290921b67ffffffffffffffff1916600483015260e01b909116601c82015260200190565b6001600160e01b0319948516815260609390931b6001600160601b031916600484015260e091821b84166018840152901b909116601c8201526020019056fea26469706673582212200af8cd04d1019603157e3e6c44e0e79a02f37a804f634c6fd33c7de012ef564c64736f6c634300081a0033",
        "sourceMap": "320:28189:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10474:12;10907:2;10888:21;;;10880:63;;;;-1:-1:-1;;;10880:63:1;;216:2:39;10880:63:1;;;198:21:39;255:2;235:18;;;228:30;294:31;274:18;;;267:59;343:18;;10880:63:1;;;;;;;;;10954:24;10995:13;11006:1;10954:24;10995:8;10954:24;10995:13;:::i;:::-;10988:21;;;:::i;:::-;10981:29;;;-1:-1:-1;11048:10:1;11028:30;;11020:73;;;;-1:-1:-1;;;11020:73:1;;1253:2:39;11020:73:1;;;1235:21:39;1292:2;1272:18;;;1265:30;1331:32;1311:18;;;1304:60;1381:18;;11020:73:1;1051:354:39;11020:73:1;11104:13;11136:14;11147:2;11145:1;11136:8;11104:13;11136:14;:::i;:::-;11128:23;;;:::i;:::-;11120:32;;;-1:-1:-1;11187:4:1;11170:22;;11162:64;;;;-1:-1:-1;;;11162:64:1;;1991:2:39;11162:64:1;;;1973:21:39;2030:2;2010:18;;;2003:30;2069:31;2049:18;;;2042:59;2118:18;;11162:64:1;1789:353:39;11162:64:1;11405:20;:18;:20::i;:::-;320:28189;;;-1:-1:-1;320:28189:1;;;-1:-1:-1;;;;320:28189:1;3218:300;;;;;;:::i;:::-;;:::i;:::-;;;;3059:1:39;3048:21;;;;3030:40;;-1:-1:-1;;;;;3106:32:39;;;3101:2;3086:18;;3079:60;3003:18;3218:300:1;;;;;;;;25725:962;;;;;;:::i;:::-;;:::i;:::-;;5556:284;;;;;;:::i;:::-;;:::i;:::-;;;;4204:1:39;4193:21;;;;4175:40;;4258:14;;4251:22;4246:2;4231:18;;4224:50;4148:18;5556:284:1;4011:269:39;1638:272:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1916:1003::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4415:253::-;;;;;;:::i;:::-;;:::i;4674:652::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5332:218::-;;;;;;:::i;:::-;;:::i;:::-;;;;14090:1:39;14079:21;;;;14061:40;;14148:1;14137:21;;;;14132:2;14117:18;;14110:49;14034:18;5332:218:1;13895:270:39;3836:262:1;;;;;;:::i;:::-;;:::i;4104:305::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;2925:287::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;6854:924::-;;;;;;:::i;:::-;;:::i;:::-;;;;18533:1:39;18522:21;;;18504:40;;18580:21;;;;18575:2;18560:18;;18553:49;18477:18;6854:924:1;18338:270:39;1329:303:1;;;;;;:::i;:::-;;:::i;:::-;;;18787:10:39;18775:23;;;18757:42;;18745:2;18730:18;1329:303:1;18613:192:39;5846:1002:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;3524:306::-;;;;;;:::i;:::-;;:::i;11534:3120::-;11590:12;11614:15;11639;11651:2;11648;11639:8;11614:15;11639;:::i;:::-;11632:23;;;:::i;:::-;11614:41;;11738:18;;;;;;;;;;;-1:-1:-1;;;11738:18:1;;;;;11697:27;11728:29;;11697:27;;-1:-1:-1;;11697:27:1;:::i;:::-;;;;;;;;:60;11693:134;;11773:43;;-1:-1:-1;;;11773:43:1;;23568:2:39;11773:43:1;;;23550:21:39;23607:2;23587:18;;;23580:30;23646:34;23626:18;;;23619:62;-1:-1:-1;;;23697:18:39;;;23690:31;23738:19;;11773:43:1;23366:397:39;11693:134:1;-1:-1:-1;;11888:10:1;:25;11884:2242;;-1:-1:-1;;;;;;;;;11933:38:1;;;11929:195;;12018:2;11999:8;:21;;11991:67;;;;-1:-1:-1;;;11991:67:1;;23970:2:39;11991:67:1;;;23952:21:39;24009:2;23989:18;;;23982:30;24048:34;24028:18;;;24021:62;-1:-1:-1;;;24099:18:39;;;24092:31;24140:19;;11991:67:1;23768:397:39;11991:67:1;12094:2;12098:10;12083:26;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12076:33;;;11534:3120;:::o;11929:195::-;-1:-1:-1;;;;;;;;;12141:44:1;;;12137:268;;12232:2;12213:8;:21;;12205:73;;;;-1:-1:-1;;;12205:73:1;;32332:2:39;12205:73:1;;;32314:21:39;32371:2;32351:18;;;32344:30;32410:34;32390:18;;;32383:62;-1:-1:-1;;;32461:18:39;;;32454:37;32508:19;;12205:73:1;32130:403:39;12205:73:1;12303:87;;;;12314:2;;12318:20;;12340:25;;12367:22;;12303:87;;;:::i;12137:268::-;-1:-1:-1;;;;;;;;;12422:50:1;;;12418:236;;12519:2;12500:8;:21;;12492:79;;;;-1:-1:-1;;;12492:79:1;;33712:2:39;12492:79:1;;;33694:21:39;33751:2;33731:18;;;33724:30;33790:34;33770:18;;;33763:62;-1:-1:-1;;;33841:18:39;;;33834:43;33894:19;;12492:79:1;33510:409:39;12492:79:1;12611:27;;12596:43;;;12607:2;12596:43;;;34099:36:39;-1:-1:-1;;;12611:27:1;;;;;34178:14:39;34171:22;34151:18;;;34144:50;34072:18;;12596:43:1;33924:276:39;12418:236:1;-1:-1:-1;;;;;;;;;12671:53:1;;;12667:245;;12771:2;12752:8;:21;;12744:82;;;;-1:-1:-1;;;12744:82:1;;34407:2:39;12744:82:1;;;34389:21:39;34446:2;34426:18;;;34419:30;34485:34;34465:18;;;34458:62;-1:-1:-1;;;34536:18:39;;;34529:46;34592:19;;12744:82:1;34205:412:39;12744:82:1;12866:30;;12851:46;;;12862:2;12851:46;;;34099:36:39;-1:-1:-1;;;12866:30:1;;;;;34178:14:39;34171:22;34151:18;;;34144:50;34072:18;;12851:46:1;33924:276:39;12667:245:1;-1:-1:-1;;;;;;;;;12929:44:1;;;12925:220;;13020:2;13001:8;:21;;12993:73;;;;-1:-1:-1;;;12993:73:1;;34824:2:39;12993:73:1;;;34806:21:39;34863:2;34843:18;;;34836:30;34902:34;34882:18;;;34875:62;-1:-1:-1;;;34953:18:39;;;34946:37;35000:19;;12993:73:1;34622:403:39;12993:73:1;13091:39;;;;13102:2;;13106:23;;13091:39;;;:::i;12925:220::-;-1:-1:-1;;;;;;;;;13162:38:1;;;13158:528;;13247:2;13228:8;:21;;13220:67;;;;-1:-1:-1;;;13220:67:1;;35575:2:39;13220:67:1;;;35557:21:39;35614:2;35594:18;;;35587:30;35653:34;35633:18;;;35626:62;-1:-1:-1;;;35704:18:39;;;35697:31;35745:19;;13220:67:1;35373:397:39;13220:67:1;13351:28;13336:9;13319:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;13309:38;;;;;;:70;13305:148;;13410:24;;;13421:2;13410:24;;;36157:36:39;13431:1:1;36209:18:39;;;36202:49;;;;36130:18;;13410:24:1;35980:277:39;13305:148:1;13516:32;13501:9;13484:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;13474:38;;;;;;:74;13470:152;;13579:24;;;13590:2;13579:24;;;36157:36:39;13600:1:1;36209:18:39;;;36202:49;;;;36130:18;;13579:24:1;35980:277:39;13470:152:1;13646:25;;;13657:2;13646:25;;;36157:36:39;-1:-1:-1;;36209:18:39;;;36202:49;;;;36130:18;;13646:25:1;35980:277:39;13158:528:1;-1:-1:-1;;;;;;;;;13703:33:1;;;13699:417;;13783:3;13764:8;:22;;13756:62;;;;-1:-1:-1;;;13756:62:1;;36464:2:39;13756:62:1;;;36446:21:39;36503:2;36483:18;;;36476:30;36542:29;36522:18;;;36515:57;36589:18;;13756:62:1;36262:351:39;13756:62:1;13836:12;13867:15;13879:2;13876;13867:8;13836:12;13867:15;:::i;:::-;13859:24;;;:::i;:::-;13851:33;;;-1:-1:-1;13902:10:1;13931:15;13943:2;13940;13931:8;13902:10;13931:15;:::i;:::-;13923:24;;;:::i;:::-;13915:33;;;-1:-1:-1;13966:14:1;13999:16;14011:3;14008:2;13999:8;13966:14;13999:16;:::i;:::-;13991:25;;;:::i;:::-;13983:34;-1:-1:-1;14035:25:1;14043:4;14049:2;13983:34;14035:7;:25::i;:::-;14085:16;;;14096:4;14085:16;;;37018:41:39;36991:18;14085:16:1;;;;;;;;;;;;14078:23;;;;;;11534:3120;:::o;13699:417::-;14264:24;;;;;;;;;;;-1:-1:-1;;;14264:24:1;;;;;14223:27;14254:35;;14223:27;;-1:-1:-1;;14223:27:1;:::i;:::-;;;;;;;;:66;14219:131;;14312:27;14330:8;14312:17;:27::i;:::-;14305:34;;;11534:3120;:::o;14219:131::-;14493:28;;;;;;;;;;;-1:-1:-1;;;14493:28:1;;;;;14452:27;14483:39;;14452:27;;-1:-1:-1;;14452:27:1;:::i;:::-;;;;;;;;:70;14448:136;;14545:28;14564:8;14545:18;:28::i;14448:136::-;14594:53;;-1:-1:-1;;;14594:53:1;;37272:2:39;14594:53:1;;;37254:21:39;37311:2;37291:18;;;37284:30;37350:34;37330:18;;;37323:62;-1:-1:-1;;;37401:18:39;;;37394:40;37451:19;;14594:53:1;37070:406:39;3218:300:1;3315:18;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;3371:19:1;::::1;3363:58;;;::::0;-1:-1:-1;;;3363:58:1;;38035:2:39;3363:58:1::1;::::0;::::1;38017:21:39::0;38074:2;38054:18;;;38047:30;38113:28;38093:18;;;38086:56;38159:18;;3363:58:1::1;37833:350:39::0;3363:58:1::1;3470:40;::::0;-1:-1:-1;;;3470:40:1;;::::1;::::0;::::1;38334:25:39::0;;;3465:2:1::1;::::0;-1:-1:-1;;;;;3470:26:1;::::1;::::0;::::1;::::0;38307:18:39;;3470:40:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3431:80:::0;;;;-1:-1:-1;3218:300:1;-1:-1:-1;;;3218:300:1:o;25725:962::-;-1:-1:-1;;;;;25805:18:1;;25801:376;;25854:6;25839:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;25801:376:1;;-1:-1:-1;25801:376:1;;25891:16;25910:20;25925:4;25910:14;:20::i;:::-;26003:15;;25891:39;;-1:-1:-1;26041:21:1;;;;26033:65;;;;-1:-1:-1;;;26033:65:1;;39233:2:39;26033:65:1;;;39215:21:39;39272:2;39252:18;;;39245:30;39311:33;39291:18;;;39284:61;39362:18;;26033:65:1;39031:355:39;26033:65:1;26140:24;;;26123:42;;25801:376;-1:-1:-1;;;;;26191:16:1;;26187:494;;26238:6;26223:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;26187:494:1;;-1:-1:-1;26187:494:1;;26275:14;26292:18;26307:2;26292:14;:18::i;:::-;26379:13;;26275:35;;-1:-1:-1;26324:17:1;26598:18;26610:6;26379:13;26598:18;:::i;:::-;26641:28;;;-1:-1:-1;;26187:494:1;25725:962;;;:::o;5556:284::-;5652:55;;-1:-1:-1;;;;;39688:32:39;;5652:55:1;;;39670:51:39;5606:5:1;;;;;;39643:18:39;;5652:55:1;;;-1:-1:-1;;5652:55:1;;;;;;;;;;;;;;-1:-1:-1;;;;;5652:55:1;-1:-1:-1;;;5652:55:1;;;5759:19;5652:55;;-1:-1:-1;;;;;;;;;;5759:10:1;;;:19;;5652:55;;5759:19;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5717:61;;;;5796:2;5800:7;:32;;;;;5831:1;5811:10;:17;:21;5800:32;5788:45;;;;;;;5556:284;;;:::o;1638:272::-;1701:18;1721:26;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1767:19:1;::::1;1759:59;;;::::0;-1:-1:-1;;;1759:59:1;;40240:2:39;1759:59:1::1;::::0;::::1;40222:21:39::0;40279:2;40259:18;;;40252:30;40318:29;40298:18;;;40291:57;40365:18;;1759:59:1::1;40038:351:39::0;1759:59:1::1;1857:46;::::0;-1:-1:-1;;;1857:46:1;;-1:-1:-1;;;;;1857:39:1;::::1;:46;::::0;::::1;39670:51:39::0;;;1857:39:1;::::1;::::0;39643:18:39;;1857:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1857:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1829:74:::0;;;;-1:-1:-1;1638:272:1;-1:-1:-1;;1638:272:1:o;1916:1003::-;2018:5;2025:27;;:::i;:::-;-1:-1:-1;;;;;2072:19:1;;2064:70;;;;-1:-1:-1;;;2064:70:1;;52045:2:39;2064:70:1;;;52027:21:39;52084:2;52064:18;;;52057:30;52123:34;52103:18;;;52096:62;-1:-1:-1;;;52174:18:39;;;52167:36;52220:19;;2064:70:1;51843:402:39;2064:70:1;2196:46;;-1:-1:-1;;;2196:46:1;;-1:-1:-1;;;;;2196:39:1;;:46;;;39670:51:39;;;2146:18:1;;;;2196:39;;;39643:18:39;;2196:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2196:46:1;;;;;;;;;;;;:::i;:::-;2145:97;;;;2260:12;:17;;2276:1;2260:17;2252:79;;;;-1:-1:-1;;;2252:79:1;;52452:2:39;2252:79:1;;;52434:21:39;52491:2;52471:18;;;52464:30;52530:34;52510:18;;;52503:62;-1:-1:-1;;;52581:18:39;;;52574:47;52638:19;;2252:79:1;52250:413:39;2252:79:1;2341:48;;:::i;:::-;2399:42;;;2451:48;;;;:33;;;:48;2542:57;;-1:-1:-1;;;2542:57:1;;-1:-1:-1;;;;;2569:29:1;;2542:57;;;38334:25:39;-1:-1:-1;;;;;2542:26:1;;;;;38307:18:39;;2542:57:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2509:90:1;;;:30;;;:90;2640:53;;-1:-1:-1;;;2640:53:1;;-1:-1:-1;;;;;2663:29:1;;2640:53;;;38334:25:39;2640:22:1;;;;;;38307:18:39;;2640:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2609:84:1;;;:28;;;;:84;;;;2759:54;-1:-1:-1;;;2759:54:1;;-1:-1:-1;;;;;2783:29:1;;2759:54;;;38334:25:39;2759:23:1;;;;;;38307:18:39;;2759:54:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2759:54:1;;;;;;;;;;;;:::i;:::-;2721:29;;;:93;2866:1;2824:33;;;:44;2887:2;;-1:-1:-1;2721:20:1;-1:-1:-1;;;1916:1003:1;;;;;;:::o;4415:253::-;4490:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;4521:19:1;::::1;4513:73;;;::::0;-1:-1:-1;;;4513:73:1;;53212:2:39;4513:73:1::1;::::0;::::1;53194:21:39::0;53251:2;53231:18;;;53224:30;53290:34;53270:18;;;53263:62;-1:-1:-1;;;53341:18:39;;;53334:39;53390:19;;4513:73:1::1;53010:405:39::0;4513:73:1::1;4603:58;::::0;-1:-1:-1;;;4603:58:1;;-1:-1:-1;;;;;4603:51:1;::::1;:58;::::0;::::1;39670:51:39::0;;;4603::1;::::1;::::0;39643:18:39;;4603:58:1::1;;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4596:65;;;;4415:253:::0;;;:::o;4674:652::-;4750:5;4757:15;;:::i;:::-;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;4792:19:1;::::1;4784:58;;;::::0;-1:-1:-1;;;4784:58:1;;53953:2:39;4784:58:1::1;::::0;::::1;53935:21:39::0;53992:2;53972:18;;;53965:30;54031:28;54011:18;;;54004:56;54077:18;;4784:58:1::1;53751:350:39::0;4784:58:1::1;4903:46;::::0;-1:-1:-1;;;4903:46:1;;-1:-1:-1;;;;;4903:39:1;::::1;:46;::::0;::::1;39670:51:39::0;;;4853:18:1::1;::::0;;;4903:39;::::1;::::0;39643:18:39;;4903:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;4903:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;4852:97;;;;4967:12;:18;;4983:2;4967:18;4959:68;;;::::0;-1:-1:-1;;;4959:68:1;;54308:2:39;4959:68:1::1;::::0;::::1;54290:21:39::0;54347:2;54327:18;;;54320:30;54386:34;54366:18;;;54359:62;-1:-1:-1;;;54437:18:39;;;54430:35;54482:19;;4959:68:1::1;54106:401:39::0;4959:68:1::1;5042:9;5037:218;5061:15:::0;;:25:::1;;::::0;:32;5057:36;::::1;5037:218;;;5158:7;5118:9;:15;;;:25;;;5144:1;5118:28;;;;;;;;:::i;:::-;;;;;;;:36;;;:47:::0;5114:131:::1;;5193:2;5197:9;:15;;;:25;;;5223:1;5197:28;;;;;;;;:::i;:::-;;;;;;;:32;;;5185:45;;;;;;;;;5114:131;5095:3;;5037:218;;;;5264:24;;:::i;:::-;5306:2;::::0;5310:8;;-1:-1:-1;4674:652:1;-1:-1:-1;;;;;4674:652:1:o;5332:218::-;5395:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;5427:19:1;::::1;5419:61;;;::::0;-1:-1:-1;;;5419:61:1;;54846:2:39;5419:61:1::1;::::0;::::1;54828:21:39::0;54885:2;54865:18;;;54858:30;54924:31;54904:18;;;54897:59;54973:18;;5419:61:1::1;54644:353:39::0;5419:61:1::1;5497:46;::::0;-1:-1:-1;;;5497:46:1;;-1:-1:-1;;;;;5497:39:1;::::1;:46;::::0;::::1;39670:51:39::0;;;5497:39:1;::::1;::::0;39643:18:39;;5497:46:1::1;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3836:262::-:0;3914:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;3945:19:1;::::1;3937:76;;;::::0;-1:-1:-1;;;3937:76:1;;55618:2:39;3937:76:1::1;::::0;::::1;55600:21:39::0;55657:2;55637:18;;;55630:30;55696:34;55676:18;;;55669:62;-1:-1:-1;;;55747:18:39;;;55740:42;55799:19;;3937:76:1::1;55416:408:39::0;3937:76:1::1;4030:61;::::0;-1:-1:-1;;;4030:61:1;;-1:-1:-1;;;;;4030:54:1;::::1;:61;::::0;::::1;39670:51:39::0;;;4030:54:1;::::1;::::0;39643:18:39;;4030:61:1::1;39524:203:39::0;4104:305:1;4187:5;4194:17;;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;4276:19:1;::::1;4268:65;;;::::0;-1:-1:-1;;;4268:65:1;;56031:2:39;4268:65:1::1;::::0;::::1;56013:21:39::0;56070:2;56050:18;;;56043:30;56109:34;56089:18;;;56082:62;-1:-1:-1;;;56160:18:39;;;56153:31;56201:19;;4268:65:1::1;55829:397:39::0;4268:65:1::1;4350:52;::::0;-1:-1:-1;;;4350:52:1;;-1:-1:-1;;;;;4350:45:1;::::1;:52;::::0;::::1;39670:51:39::0;;;4350:45:1;::::1;::::0;39643:18:39;;4350:52:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;4350:52:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;4343:59;;;;;;;;4104:305:::0;;;;;:::o;2925:287::-;-1:-1:-1;;;;;;;;2994:18:1;-1:-1:-1;;;;;;;;;;;;;;;846:4:1;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;3057:19:1;::::1;3049:65;;;::::0;-1:-1:-1;;;3049:65:1;;57534:2:39;3049:65:1::1;::::0;::::1;57516:21:39::0;57573:2;57553:18;;;57546:30;57612:34;57592:18;;;57585:62;-1:-1:-1;;;57663:18:39;;;57656:31;57704:19;;3049:65:1::1;57332:397:39::0;3049:65:1::1;3153:52;::::0;-1:-1:-1;;;3153:52:1;;-1:-1:-1;;;;;3153:45:1;::::1;:52;::::0;::::1;39670:51:39::0;;;3153:45:1;::::1;::::0;39643:18:39;;3153:52:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6854:924::-:0;6953:18;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7026:19:1;::::1;7018:56;;;::::0;-1:-1:-1;;;7018:56:1;;58313:2:39;7018:56:1::1;::::0;::::1;58295:21:39::0;58352:2;58332:18;;;58325:30;58391:26;58371:18;;;58364:54;58435:18;;7018:56:1::1;58111:348:39::0;7018:56:1::1;7101:1;7092:6;:10;;;7084:48;;;::::0;-1:-1:-1;;;7084:48:1;;58666:2:39;7084:48:1::1;::::0;::::1;58648:21:39::0;58705:2;58685:18;;;58678:30;58744:27;58724:18;;;58717:55;58789:18;;7084:48:1::1;58464:349:39::0;7084:48:1::1;7203:46;::::0;-1:-1:-1;;;7203:46:1;;-1:-1:-1;;;;;7203:39:1;::::1;:46;::::0;::::1;39670:51:39::0;;;7144:27:1::1;::::0;;;7203:39;::::1;::::0;39643:18:39;;7203:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;7203:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;7143:106;;;;7267:21;:27;;7292:2;7267:27;7259:75;;;::::0;-1:-1:-1;;;7259:75:1;;59020:2:39;7259:75:1::1;::::0;::::1;59002:21:39::0;59059:2;59039:18;;;59032:30;59098:34;59078:18;;;59071:62;-1:-1:-1;;;59149:18:39;;;59142:33;59192:19;;7259:75:1::1;58818:399:39::0;7259:75:1::1;7371:15:::0;;:24:::1;;::::0;-1:-1:-1;;;;;7413:29:1;::::1;7405:68;;;::::0;-1:-1:-1;;;7405:68:1;;59424:2:39;7405:68:1::1;::::0;::::1;59406:21:39::0;59463:2;59443:18;;;59436:30;59502:28;59482:18;;;59475:56;59548:18;;7405:68:1::1;59222:350:39::0;7405:68:1::1;7484:86;::::0;-1:-1:-1;;;7484:86:1;;-1:-1:-1;;;;;59797:32:39;;;7484:86:1::1;::::0;::::1;59779:51:39::0;7542:1:1::1;59846:18:39::0;;;59839:60;-1:-1:-1;;;;;7546:23:1;::::1;59915:18:39::0;;;59908:34;7484:32:1;::::1;::::0;::::1;::::0;59752:18:39;;7484:86:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7596:2;7581:17;;7676:5;-1:-1:-1::0;;;;;7669:25:1::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7639:59;;7734:1;7716:14;:19;;;;7708:63;;;::::0;-1:-1:-1;;;7708:63:1;;60390:2:39;7708:63:1::1;::::0;::::1;60372:21:39::0;60429:2;60409:18;;;60402:30;60468:33;60448:18;;;60441:61;60519:18;;7708:63:1::1;60188:355:39::0;7708:63:1::1;7008:770;;;6854:924:::0;;;;;;:::o;1329:303::-;1407:16;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;1538:40:::1;::::0;;-1:-1:-1;;;1538:40:1::1;::::0;::::1;60729:46:39::0;;;1435:15:1::1;60791:11:39::0;;;60784:72;;;-1:-1:-1;;;;;;60894:2:39;60890:15;;;60886:53;60872:12;;;60865:75;1453:26:1;;1435:15;;;;60956:12:39;1538:40:1::1;;;;;;;;;;;;1530:49;;;:::i;:::-;1613:11:::0;;1329:303;-1:-1:-1;;;;;1329:303:1:o;5846:1002::-;5945:18;;6003:28;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6056:19:1;::::1;6048:56;;;::::0;-1:-1:-1;;;6048:56:1;;61483:2:39;6048:56:1::1;::::0;::::1;61465:21:39::0;61522:2;61502:18;;;61495:30;61561:26;61541:18;;;61534:54;61605:18;;6048:56:1::1;61281:348:39::0;6048:56:1::1;6131:1;6122:6;:10;;;6114:48;;;::::0;-1:-1:-1;;;6114:48:1;;61836:2:39;6114:48:1::1;::::0;::::1;61818:21:39::0;61875:2;61855:18;;;61848:30;61914:27;61894:18;;;61887:55;61959:18;;6114:48:1::1;61634:349:39::0;6114:48:1::1;6233:46;::::0;-1:-1:-1;;;6233:46:1;;-1:-1:-1;;;;;6233:39:1;::::1;:46;::::0;::::1;39670:51:39::0;;;6174:27:1::1;::::0;;;6233:39;::::1;::::0;39643:18:39;;6233:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;6233:46:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;6173:106;;;;6297:21;:27;;6322:2;6297:27;6289:75;;;::::0;-1:-1:-1;;;6289:75:1;;62190:2:39;6289:75:1::1;::::0;::::1;62172:21:39::0;62229:2;62209:18;;;62202:30;62268:34;62248:18;;;62241:62;-1:-1:-1;;;62319:18:39;;;62312:33;62362:19;;6289:75:1::1;61988:399:39::0;6289:75:1::1;6401:15:::0;;:24:::1;;::::0;-1:-1:-1;;;;;6443:29:1;::::1;6435:68;;;::::0;-1:-1:-1;;;6435:68:1;;62594:2:39;6435:68:1::1;::::0;::::1;62576:21:39::0;62633:2;62613:18;;;62606:30;62672:28;62652:18;;;62645:56;62718:18;;6435:68:1::1;62392:350:39::0;6435:68:1::1;6514:86;::::0;-1:-1:-1;;;6514:86:1;;6555:1:::1;6514:86;::::0;::::1;59779:51:39::0;-1:-1:-1;;;;;59866:32:39;;;59846:18;;;59839:60;-1:-1:-1;;;;;6576:23:1;::::1;59915:18:39::0;;;59908:34;6514:32:1;::::1;::::0;::::1;::::0;59752:18:39;;6514:86:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6626:2;6611:17;;6706:5;-1:-1:-1::0;;;;;6699:25:1::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6754:14;::::0;;6766:1:::1;6754:14:::0;;;::::1;::::0;::::1;::::0;;;6669:59;;-1:-1:-1;6754:14:1::1;6738:30;;6804:1;6786:14;:19;;;;6778:63;;;::::0;-1:-1:-1;;;6778:63:1;;62949:2:39;6778:63:1::1;::::0;::::1;62931:21:39::0;62988:2;62968:18;;;62961:30;63027:33;63007:18;;;63000:61;63078:18;;6778:63:1::1;62747:355:39::0;6778:63:1::1;6038:810;;;5846:1002:::0;;;;;;;:::o;3524:306::-;3659:5;;846:4;311:5;838:28;830:64;;;;-1:-1:-1;;;830:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;3690:19:1;::::1;3682:63;;;::::0;-1:-1:-1;;;3682:63:1;;63309:2:39;3682:63:1::1;::::0;::::1;63291:21:39::0;63348:2;63328:18;;;63321:30;63387:33;63367:18;;;63360:61;63438:18;;3682:63:1::1;63107:355:39::0;3682:63:1::1;3774:48;::::0;-1:-1:-1;;;3774:48:1;;-1:-1:-1;;;;;63659:32:39;;;3774:48:1::1;::::0;::::1;63641:51:39::0;63728:32;;;63708:18;;;63701:60;3769:2:1::1;::::0;3774:31;;::::1;::::0;::::1;::::0;63614:18:39;;3774:48:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3755:68;;;;3524:306:::0;;;;;;:::o;14660:2453::-;14721:12;-1:-1:-1;;;;;;;;;14749:32:1;;;14745:86;;14815:4;14804:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:23;;14660:2453;;;:::o;14745:86::-;-1:-1:-1;;;;;;;;;14844:36:1;;;14840:94;;14914:8;;14903:20;;;14914:8;;;;14903:20;;;64351:36:39;64324:18;14903:20:1;64209:184:39;14840:94:1;-1:-1:-1;;;;;;;;;14947:39:1;;;14943:100;;15020:11;;15009:23;;;;;;38334:25:39;;38322:2;38307:18;;38188:177;14943:100:1;-1:-1:-1;;;;;;;;;15056:34:1;;;15052:90;;15124:6;15113:18;;;;;;;;:::i;15052:90::-;-1:-1:-1;;;;;;;;;15155:37:1;;;15151:251;;15235:2;15216:8;:21;;15208:64;;;;-1:-1:-1;;;15208:64:1;;64600:2:39;15208:64:1;;;64582:21:39;64639:2;64619:18;;;64612:30;64678:32;64658:18;;;64651:60;64728:18;;15208:64:1;64398:354:39;15208:64:1;15287:15;15321;15333:2;15330;15321:8;15287:15;15321;:::i;:::-;15313:24;;;:::i;:::-;15305:33;;15287:51;;15370:20;15382:7;15370:11;:20::i;:::-;15359:32;;;;;;38334:25:39;;38322:2;38307:18;;38188:177;15359:32:1;;;;;;;;;;;;;15352:39;;;14660:2453;;;:::o;15151:251::-;-1:-1:-1;;;;;;;;;15415:36:1;;;15411:374;;15494:2;15475:8;:21;;15467:63;;;;-1:-1:-1;;;15467:63:1;;64959:2:39;15467:63:1;;;64941:21:39;64998:2;64978:18;;;64971:30;65037:31;65017:18;;;65010:59;65086:18;;15467:63:1;64757:353:39;15467:63:1;15545:10;15574:15;15586:2;15583;15574:8;15545:10;15574:15;:::i;:::-;15566:24;;;:::i;:::-;15558:33;;;-1:-1:-1;15605:14:1;15638:15;15650:2;15647;15638:8;15605:14;15638:15;:::i;:::-;15630:24;;;:::i;:::-;15622:33;-1:-1:-1;15685:10:1;15709:28;15685:10;15726:2;15622:33;15709:9;:28::i;:::-;15758:16;;;15769:4;15758:16;;;37018:41:39;36991:18;15758:16:1;;;;;;;;;;;;;15751:23;;;;;14660:2453;;;:::o;15411:374::-;-1:-1:-1;;;;;;;;;15798:40:1;;;15794:497;;15881:3;15862:8;:22;;15854:65;;;;-1:-1:-1;;;15854:65:1;;65317:2:39;15854:65:1;;;65299:21:39;65356:2;65336:18;;;65329:30;65395:32;65375:18;;;65368:60;65445:18;;15854:65:1;65115:354:39;15854:65:1;15934:12;15965:15;15977:2;15974;15965:8;15934:12;15965:15;:::i;:::-;15957:24;;;:::i;:::-;15949:33;;;-1:-1:-1;15996:10:1;16025:15;16037:2;16034;16025:8;15996:10;16025:15;:::i;:::-;16017:24;;;:::i;:::-;16009:33;;;-1:-1:-1;16056:14:1;16089:16;16101:3;16098:2;16089:8;16056:14;16089:16;:::i;:::-;16081:25;;;:::i;:::-;16073:34;-1:-1:-1;16139:10:1;16164:38;16180:4;16139:10;16073:34;16164:15;:38::i;:::-;16216:27;16226:4;16232:2;16236:6;16216:9;:27::i;:::-;16264:16;;;16275:4;16264:16;;;37018:41:39;36991:18;16264:16:1;;;;;;;;;;;;16257:23;;;;;;14660:2453;;;:::o;15794:497::-;-1:-1:-1;;;;;;;;;16304:37:1;;;16300:321;;16384:2;16365:8;:21;;16357:64;;;;-1:-1:-1;;;16357:64:1;;65676:2:39;16357:64:1;;;65658:21:39;65715:2;65695:18;;;65688:30;65754:32;65734:18;;;65727:60;65804:18;;16357:64:1;65474:354:39;16357:64:1;16436:13;16468:15;16480:2;16477;16468:8;16436:13;16468:15;:::i;:::-;16460:24;;;:::i;:::-;16452:33;;;-1:-1:-1;16499:15:1;16533;16545:2;16542;16533:8;16499:15;16533;:::i;:::-;16525:24;;;:::i;:::-;16517:33;;16499:51;;16582:27;16594:5;16601:7;16582:11;:27::i;:::-;16571:39;;;;;;38334:25:39;;38322:2;38307:18;;38188:177;16571:39:1;;;;;;;;;;;;;16564:46;;;;14660:2453;;;:::o;16300:321::-;-1:-1:-1;;;;;;;;;16634:35:1;;;16630:432;;16712:2;16693:8;:21;;16685:62;;;;-1:-1:-1;;;16685:62:1;;66035:2:39;16685:62:1;;;66017:21:39;66074:2;66054:18;;;66047:30;66113;66093:18;;;66086:58;66161:18;;16685:62:1;65833:352:39;16685:62:1;16762:15;16796;16808:2;16805;16796:8;16762:15;16796;:::i;:::-;16788:24;;;:::i;:::-;16780:33;;;-1:-1:-1;16827:14:1;16860:15;16872:2;16869;16860:8;16827:14;16860:15;:::i;:::-;16852:24;;;:::i;:::-;16844:33;-1:-1:-1;16907:10:1;16931:32;16907:10;16947:7;16844:33;16931:8;:32::i;:::-;16998:7;-1:-1:-1;;;;;16982:32:1;16991:5;-1:-1:-1;;;;;16982:32:1;;17007:6;16982:32;;;;38334:25:39;;38322:2;38307:18;;38188:177;16982:32:1;;;;;;;;17035:16;;;17046:4;17035:16;;;37018:41:39;36991:18;17035:16:1;36878:187:39;16630:432:1;17078:28;17097:8;17078:18;:28::i;:::-;17071:35;14660:2453;-1:-1:-1;;14660:2453:1:o;17119:2981::-;17181:12;-1:-1:-1;;;;;;;;;17209:33:1;;;17205:87;;17276:4;17265:16;;;;;;;;:::i;17205:87::-;-1:-1:-1;;;;;;;;;17305:35:1;;;17301:91;;17374:6;17363:18;;;;;;;;:::i;17301:91::-;-1:-1:-1;;;;;;;;;17405:37:1;;;17401:250;;17485:2;17466:8;:21;;17458:63;;;;-1:-1:-1;;;17458:63:1;;66392:2:39;17458:63:1;;;66374:21:39;66431:2;66411:18;;;66404:30;66470:31;66450:18;;;66443:59;66519:18;;17458:63:1;66190:353:39;17458:63:1;17535:16;17570:15;17582:2;17579;17570:8;17535:16;17570:15;:::i;:::-;17562:24;;;:::i;:::-;17554:33;-1:-1:-1;17619:20:1;17554:33;17619:10;:20::i;:::-;17608:32;;;;;;;;:::i;17401:250::-;-1:-1:-1;;;;;;;;;17664:40:1;;;17660:101;;17738:11;;17727:23;;;;;;38334:25:39;;38322:2;38307:18;;38188:177;17660:101:1;-1:-1:-1;;;;;;;;;17774:38:1;;;17770:247;;17855:2;17836:8;:21;;17828:64;;;;-1:-1:-1;;;17828:64:1;;64600:2:39;17828:64:1;;;64582:21:39;64639:2;64619:18;;;64612:30;64678:32;64658:18;;;64651:60;64728:18;;17828:64:1;64398:354:39;17770:247:1;-1:-1:-1;;;;;;;;;18030:36:1;;;18026:247;;18109:2;18090:8;:21;;18082:62;;;;-1:-1:-1;;;18082:62:1;;66975:2:39;18082:62:1;;;66957:21:39;67014:2;66994:18;;;66987:30;67053;67033:18;;;67026:58;67101:18;;18082:62:1;66773:352:39;18082:62:1;18158:16;18193:15;18205:2;18202;18193:8;18158:16;18193:15;:::i;:::-;18185:24;;;:::i;:::-;18177:33;-1:-1:-1;18242:19:1;18177:33;18242:9;:19::i;:::-;18231:31;;;-1:-1:-1;;;;;39688:32:39;;;18231:31:1;;;39670:51:39;39643:18;18231:31:1;39524:203:39;18026:247:1;-1:-1:-1;;;;;;;;;18286:41:1;;;18282:412;;18370:3;18351:8;:22;;18343:68;;;;-1:-1:-1;;;18343:68:1;;67332:2:39;18343:68:1;;;67314:21:39;67371:2;67351:18;;;67344:30;67410:34;67390:18;;;67383:62;-1:-1:-1;;;67461:18:39;;;67454:31;67502:19;;18343:68:1;67130:397:39;18343:68:1;18425:12;18456:15;18468:2;18465;18456:8;18425:12;18456:15;:::i;:::-;18448:24;;;:::i;:::-;18440:33;;;-1:-1:-1;18487:10:1;18516:15;18528:2;18525;18516:8;18487:10;18516:15;:::i;:::-;18508:24;;;:::i;:::-;18500:33;;;-1:-1:-1;18547:16:1;18582;18594:3;18591:2;18582:8;18547:16;18582;:::i;:::-;18574:25;;;:::i;:::-;18566:34;-1:-1:-1;18614:32:1;18627:4;18633:2;18566:34;18614:12;:32::i;18282:412::-;-1:-1:-1;;;;;;;;;18707:36:1;;;18703:344;;18786:2;18767:8;:21;;18759:62;;;;-1:-1:-1;;;18759:62:1;;66035:2:39;18759:62:1;;;66017:21:39;66074:2;66054:18;;;66047:30;66113;66093:18;;;66086:58;66161:18;;18759:62:1;65833:352:39;18759:62:1;18835:15;18869;18881:2;18878;18869:8;18835:15;18869;:::i;:::-;18861:24;;;:::i;:::-;18853:33;;;-1:-1:-1;18900:16:1;18935:15;18947:2;18944;18935:8;18900:16;18935:15;:::i;:::-;18927:24;;;:::i;:::-;18919:33;-1:-1:-1;18966:33:1;18975:7;18919:33;18994:4;18966:8;:33::i;:::-;19020:16;;;19031:4;19020:16;;;37018:41:39;36991:18;19020:16:1;36878:187:39;18703:344:1;-1:-1:-1;;;;;;;;;19060:46:1;;;19056:372;;19149:2;19130:8;:21;;19122:72;;;;-1:-1:-1;;;19122:72:1;;67734:2:39;19122:72:1;;;67716:21:39;67773:2;67753:18;;;67746:30;67812:34;67792:18;;;67785:62;-1:-1:-1;;;67863:18:39;;;67856:36;67909:19;;19122:72:1;67532:402:39;19122:72:1;19208:16;19243:15;19255:2;19252;19243:8;19208:16;19243:15;:::i;:::-;19235:24;;;:::i;:::-;19227:33;;;-1:-1:-1;19274:13:1;19306:15;19318:2;19315;19306:8;19274:13;19306:15;:::i;:::-;19298:24;;;:::i;:::-;19327:1;19290:38;;-1:-1:-1;19342:38:1;19361:8;19290:38;19342:18;:38::i;19056:372::-;-1:-1:-1;;;;;;;;;19441:40:1;;;19437:259;;19524:2;19505:8;:21;;19497:66;;;;-1:-1:-1;;;19497:66:1;;68141:2:39;19497:66:1;;;68123:21:39;;;68160:18;;;68153:30;68219:34;68199:18;;;68192:62;68271:18;;19497:66:1;67939:356:39;19497:66:1;19577:16;19612:15;19624:2;19621;19612:8;19577:16;19612:15;:::i;:::-;19604:24;;;:::i;:::-;19596:33;-1:-1:-1;19661:23:1;19596:33;19661:13;:23::i;19437:259::-;-1:-1:-1;;;;;;;;;19709:45:1;;;19705:344;;19797:2;19778:8;:21;;19770:71;;;;-1:-1:-1;;;19770:71:1;;68502:2:39;19770:71:1;;;68484:21:39;68541:2;68521:18;;;68514:30;68580:34;68560:18;;;68553:62;-1:-1:-1;;;68631:18:39;;;68624:35;68676:19;;19770:71:1;68300:401:39;19770:71:1;19855:13;19887:15;19899:2;19896;19887:8;19855:13;19887:15;:::i;:::-;19879:24;;;:::i;:::-;19871:33;;;-1:-1:-1;19918:16:1;19953:15;19965:2;19962;19953:8;19918:16;19953:15;:::i;:::-;19945:24;;;:::i;:::-;19937:33;;19918:52;;20002:35;20021:5;20028:8;20002:18;:35::i;:::-;19991:47;;;37043:14:39;;37036:22;19991:47:1;;;37018:41:39;36991:18;19991:47:1;36878:187:39;20937:312:1;21122:52;;-1:-1:-1;;;21122:52:1;;-1:-1:-1;;;;;39688:32:39;;21122:52:1;;;39670:51:39;21004:7:1;;-1:-1:-1;;;21041:25:1;21004:7;;;;311:5;;21122:43;;39643:18:39;;21122:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21103:71;;21216:8;21226:3;21231:9;21199:42;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;21191:51;;;:::i;:::-;21184:58;20937:312;-1:-1:-1;;;;;20937:312:1:o;23146:169::-;23201:14;23227:12;23242:23;23257:7;23242:14;:23::i;:::-;23296:11;;23146:169;-1:-1:-1;;;23146:169:1:o;24347:272::-;-1:-1:-1;;;;;24434:18:1;;24426:50;;;;-1:-1:-1;;;24426:50:1;;69608:2:39;24426:50:1;;;69590:21:39;69647:2;69627:18;;;69620:30;-1:-1:-1;;;69666:18:39;;;69659:49;69725:18;;24426:50:1;69406:343:39;24426:50:1;-1:-1:-1;;;;;24494:16:1;;24486:50;;;;-1:-1:-1;;;24486:50:1;;69956:2:39;24486:50:1;;;69938:21:39;69995:2;69975:18;;;69968:30;-1:-1:-1;;;70014:18:39;;;70007:51;70075:18;;24486:50:1;69754:345:39;24486:50:1;24546:25;24554:4;24560:2;24564:6;24546:7;:25::i;:::-;24601:2;-1:-1:-1;;;;;24586:26:1;24595:4;-1:-1:-1;;;;;24586:26:1;;24605:6;24586:26;;;;38334:25:39;;38322:2;38307:18;;38188:177;24586:26:1;;;;;;;;24347:272;;;:::o;27721:404::-;27812:24;27839:27;27851:5;27858:7;27839:11;:27::i;:::-;27812:54;;-1:-1:-1;;27880:16:1;:37;27876:243;;27961:6;27941:16;:26;;27933:68;;;;-1:-1:-1;;;27933:68:1;;70306:2:39;27933:68:1;;;70288:21:39;70345:2;70325:18;;;70318:30;70384:31;70364:18;;;70357:59;70433:18;;27933:68:1;70104:353:39;27933:68:1;28043:51;28052:5;28059:7;28087:6;28068:16;:25;28043:8;:51::i;:::-;27802:323;27721:404;;;:::o;23321:191::-;23391:14;23417:12;23432:30;23447:5;23454:7;23432:14;:30::i;:::-;23493:11;;23321:191;-1:-1:-1;;;;23321:191:1:o;26693:330::-;-1:-1:-1;;;;;26785:19:1;;26777:55;;;;-1:-1:-1;;;26777:55:1;;70664:2:39;26777:55:1;;;70646:21:39;70703:2;70683:18;;;70676:30;70742:25;70722:18;;;70715:53;70785:18;;26777:55:1;70462:347:39;26777:55:1;-1:-1:-1;;;;;26850:21:1;;26842:59;;;;-1:-1:-1;;;26842:59:1;;71016:2:39;26842:59:1;;;70998:21:39;71055:2;71035:18;;;71028:30;71094:27;71074:18;;;71067:55;71139:18;;26842:59:1;70814:349:39;26842:59:1;26911:21;26935:30;26950:5;26957:7;26935:14;:30::i;:::-;26986:29;;;;-1:-1:-1;;;26693:330:1:o;20106:769::-;20168:12;-1:-1:-1;;;;;;;;;20196:38:1;;;20192:194;;20250:12;20265:29;20283:10;20265:17;:29::i;:::-;20250:44;;20332:4;20326;20319:18;20370:4;20359:16;;;;;;37043:14:39;37036:22;37018:41;;37006:2;36991:18;;36878:187;20192:194:1;-1:-1:-1;;;;;;;;;20399:39:1;;;20395:196;;20454:12;20469:29;20487:10;20469:17;:29::i;:::-;20536:5;20523:19;;20564:16;;;20575:4;20564:16;;;37018:41:39;20454:44:1;;-1:-1:-1;36991:18:39;20564:16:1;36878:187:39;20395:196:1;-1:-1:-1;;;;;;;;;20604:41:1;;;20600:218;;20661:12;20676:29;20694:10;20676:17;:29::i;:::-;20759:11;;20792:15;;;37043:14:39;;37036:22;20792:15:1;;;37018:41:39;20759:11:1;;-1:-1:-1;20759:11:1;;36991:18:39;20792:15:1;36878:187:39;20600:218:1;20827:41;;-1:-1:-1;;;20827:41:1;;71370:2:39;20827:41:1;;;71352:21:39;71409:2;71389:18;;;71382:30;71448:33;71428:18;;;71421:61;71499:18;;20827:41:1;71168:355:39;23518:225:1;23573:17;23602:12;23617:31;23638:8;23617:13;:31::i;:::-;23602:46;;23658:19;23711:4;23698:17;;23732:4;23726:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23592:151;;23518:225;;;:::o;23749:173::-;23803:13;23828:12;23843:30;23863:8;23843:12;:30::i;24625:1094::-;-1:-1:-1;;;;;24717:18:1;;24709:50;;;;-1:-1:-1;;;24709:50:1;;69608:2:39;24709:50:1;;;69590:21:39;69647:2;69627:18;;;69620:30;-1:-1:-1;;;69666:18:39;;;69659:49;69725:18;;24709:50:1;69406:343:39;24709:50:1;-1:-1:-1;;;;;24777:16:1;;24769:50;;;;-1:-1:-1;;;24769:50:1;;69956:2:39;24769:50:1;;;69938:21:39;69995:2;69975:18;;;69968:30;-1:-1:-1;;;70014:18:39;;;70007:51;70075:18;;24769:50:1;69754:345:39;24769:50:1;24887:12;24902:30;24922:8;24902:12;:30::i;:::-;24985:11;;24887:45;;-1:-1:-1;;;;;;25015:13:1;;;;;;;25007:50;;;;-1:-1:-1;;;25007:50:1;;71730:2:39;25007:50:1;;;71712:21:39;71769:2;71749:18;;;71742:30;71808:26;71788:18;;;71781:54;71852:18;;25007:50:1;71528:348:39;25007:50:1;25147:10;-1:-1:-1;;;;;25147:18:1;;;25143:156;;25203:23;25217:8;25203:13;:23::i;:::-;-1:-1:-1;;;;;25189:37:1;:10;-1:-1:-1;;;;;25189:37:1;;:77;;;;25230:36;25249:4;25255:10;25230:18;:36::i;:::-;25181:107;;;;-1:-1:-1;;;25181:107:1;;72083:2:39;25181:107:1;;;72065:21:39;72122:2;72102:18;;;72095:30;-1:-1:-1;;;72141:18:39;;;72134:47;72198:18;;25181:107:1;71881:341:39;25181:107:1;25335:20;25358:34;25382:8;25358:16;:34::i;:::-;25335:57;;25434:1;25420:12;25413:23;25482:28;25513:31;25535:4;25541:2;25513:21;:31::i;:::-;25482:62;;25594:5;25572:20;25565:35;25665:2;25659:4;25652:16;25699:2;-1:-1:-1;;;;;25684:28:1;25693:4;-1:-1:-1;;;;;25684:28:1;;25703:8;25684:28;;;;38334:25:39;;38322:2;38307:18;;38188:177;25684:28:1;;;;;;;;24699:1020;;;;24625:1094;;;:::o;27029:567::-;27186:13;27202:19;27212:8;27202:9;:19::i;:::-;27186:35;-1:-1:-1;27239:10:1;-1:-1:-1;;;;;27239:19:1;;;;:60;;-1:-1:-1;27289:10:1;27262:23;27276:8;27262:13;:23::i;:::-;-1:-1:-1;;;;;27262:37:1;;27239:60;:101;;;;27303:37;27322:5;27329:10;27303:18;:37::i;:::-;27231:136;;;;-1:-1:-1;;;27231:136:1;;72429:2:39;27231:136:1;;;72411:21:39;72468:2;72448:18;;;72441:30;-1:-1:-1;;;72487:18:39;;;72480:52;72549:18;;27231:136:1;72227:346:39;27231:136:1;27378:12;27393:34;27417:8;27393:16;:34::i;:::-;27378:49;;27437:19;27459:10;:33;;27490:1;27459:33;;;27472:7;27459:33;27437:55;;27526:11;27520:4;27513:25;27571:7;-1:-1:-1;;;;;27555:34:1;27564:5;-1:-1:-1;;;;;27555:34:1;;27580:8;27555:34;;;;38334:25:39;;38322:2;38307:18;;38188:177;27555:34:1;;;;;;;;27107:489;;;27029:567;;;:::o;28131:376::-;28226:10;-1:-1:-1;;;;;28254:22:1;;;;;;:43;;;28292:5;-1:-1:-1;;;;;28280:17:1;:8;-1:-1:-1;;;;;28280:17:1;;;28254:43;28246:91;;;;-1:-1:-1;;;28246:91:1;;72780:2:39;28246:91:1;;;72762:21:39;72819:2;72799:18;;;72792:30;72858:34;72838:18;;;72831:62;-1:-1:-1;;;72909:18:39;;;72902:33;72952:19;;28246:91:1;72578:399:39;28246:91:1;28347:12;28362:38;28384:5;28391:8;28362:21;:38::i;:::-;28347:53;;28434:8;28428:4;28421:22;28481:8;-1:-1:-1;;;;;28459:41:1;28474:5;-1:-1:-1;;;;;28459:41:1;;28491:8;28459:41;;;;37043:14:39;37036:22;37018:41;;37006:2;36991:18;;36878:187;28459:41:1;;;;;;;;28200:307;;28131:376;;:::o;23928:187::-;23986:16;24014:12;24029:34;24053:8;24029:16;:34::i;24121:220::-;24199:19;24230:12;24245:38;24267:5;24274:8;24245:21;:38::i;21255:413::-;21453:50;;-1:-1:-1;;;21453:50:1;;-1:-1:-1;;;;;39688:32:39;;21453:50:1;;;39670:51:39;21337:7:1;;-1:-1:-1;;;21374:25:1;21337:7;;;;311:5;;21453:43;;39643:18:39;;21453:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21532:52;;-1:-1:-1;;;21532:52:1;;-1:-1:-1;;;;;39688:32:39;;21532:52:1;;;39670:51:39;21436:67:1;;-1:-1:-1;21513:16:1;;311:5;;21532:43;;39643:18:39;;21532:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21513:71;;21626:8;21636:3;21641:9;21652:7;21609:51;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;21601:60;;;:::i;:::-;21594:67;21255:413;-1:-1:-1;;;;;;;21255:413:1:o;21674:319::-;21866:52;;-1:-1:-1;;;21866:52:1;;-1:-1:-1;;;;;39688:32:39;;21866:52:1;;;39670:51:39;21744:7:1;;-1:-1:-1;;;21781:29:1;21744:7;;;;311:5;;21866:43;;39643:18:39;;21866:52:1;39524:203:39;21999:229:1;22179:41;;22065:7;;-1:-1:-1;;;22102:25:1;22065:7;;22179:41;;22102:25;;22065:7;;22211:8;;22179:41;;;:::i;:::-;;;;;;;;;;;;;22171:50;;;:::i;:::-;22164:57;21999:229;-1:-1:-1;;;;21999:229:1:o;22234:227::-;22412:41;;22299:7;;-1:-1:-1;;;22336:24:1;22299:7;;22412:41;;22336:24;;22299:7;;22444:8;;22412:41;;;:::i;22467:235::-;22653:41;;22536:7;;-1:-1:-1;;;22573:28:1;22536:7;;22653:41;;22573:28;;22536:7;;22685:8;;22653:41;;;:::i;22708:432::-;22922:50;;-1:-1:-1;;;22922:50:1;;-1:-1:-1;;;;;39688:32:39;;22922:50:1;;;39670:51:39;22798:7:1;;-1:-1:-1;;;22835:33:1;22798:7;;;;311:5;;22922:43;;39643:18:39;;22922:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23002:53;;-1:-1:-1;;;23002:53:1;;-1:-1:-1;;;;;39688:32:39;;23002:53:1;;;39670:51:39;22905:67:1;;-1:-1:-1;22982:17:1;;311:5;;23002:43;;39643:18:39;;23002:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22982:73;;23097:8;23107:3;23112:7;23121:10;23080:52;;;;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;372:331:39:-;477:9;488;530:8;518:10;515:24;512:44;;;552:1;549;542:12;512:44;581:6;571:8;568:20;565:40;;;601:1;598;591:12;565:40;-1:-1:-1;;627:23:39;;;672:25;;;;;-1:-1:-1;372:331:39:o;708:338::-;828:19;;-1:-1:-1;;;;;;865:29:39;;;914:1;906:10;;903:137;;;-1:-1:-1;;;;;;975:1:39;971:11;;;968:1;964:19;960:46;;;952:55;;948:82;;-1:-1:-1;903:137:39;;708:338;;;;:::o;1410:374::-;1531:19;;-1:-1:-1;;;;;;1568:40:39;;;1628:2;1620:11;;1617:161;;;-1:-1:-1;;;;;;1690:2:39;1686:12;;;;1683:1;1679:20;1675:58;;;1667:67;1663:105;;;;1410:374;-1:-1:-1;;1410:374:39:o;2147:131::-;-1:-1:-1;;;;;2222:31:39;;2212:42;;2202:70;;2268:1;2265;2258:12;2202:70;2147:131;:::o;2283:367::-;2351:6;2359;2412:2;2400:9;2391:7;2387:23;2383:32;2380:52;;;2428:1;2425;2418:12;2380:52;2467:9;2454:23;2486:31;2511:5;2486:31;:::i;:::-;2536:5;2614:2;2599:18;;;;2586:32;;-1:-1:-1;;;2283:367:39:o;3150:508::-;3227:6;3235;3243;3296:2;3284:9;3275:7;3271:23;3267:32;3264:52;;;3312:1;3309;3302:12;3264:52;3351:9;3338:23;3370:31;3395:5;3370:31;:::i;:::-;3420:5;-1:-1:-1;3477:2:39;3462:18;;3449:32;3490:33;3449:32;3490:33;:::i;:::-;3150:508;;3542:7;;-1:-1:-1;;;3622:2:39;3607:18;;;;3594:32;;3150:508::o;3663:247::-;3722:6;3775:2;3763:9;3754:7;3750:23;3746:32;3743:52;;;3791:1;3788;3781:12;3743:52;3830:9;3817:23;3849:31;3874:5;3849:31;:::i;:::-;3899:5;3663:247;-1:-1:-1;;;3663:247:39:o;4285:289::-;4327:3;4365:5;4359:12;4392:6;4387:3;4380:19;4448:6;4441:4;4434:5;4430:16;4423:4;4418:3;4414:14;4408:47;4500:1;4493:4;4484:6;4479:3;4475:16;4471:27;4464:38;4563:4;4556:2;4552:7;4547:2;4539:6;4535:15;4531:29;4526:3;4522:39;4518:50;4511:57;;;4285:289;;;;:::o;4579:622::-;4680:5;4674:12;4667:20;4660:28;4655:3;4648:41;4767:1;4763;4758:3;4754:11;4750:19;4742:4;4735:5;4731:16;4725:23;4721:49;4714:4;4709:3;4705:14;4698:73;4630:3;4817:4;4810:5;4806:16;4800:23;4855:4;4848;4843:3;4839:14;4832:28;4881:47;4922:4;4917:3;4913:14;4899:12;4881:47;:::i;:::-;4869:59;;4976:4;4969:5;4965:16;4959:23;5024:3;5018:4;5014:14;5007:4;5002:3;4998:14;4991:38;5052:39;5086:4;5070:14;5052:39;:::i;:::-;5144:4;5133:16;;;5127:23;-1:-1:-1;;;;;5123:49:39;5107:14;;;;5100:73;;;;-1:-1:-1;5038:53:39;;4579:622;-1:-1:-1;;4579:622:39:o;5206:774::-;5267:3;5298;5330:5;5324:12;5357:6;5352:3;5345:19;5389:4;5384:3;5380:14;5373:21;;5447:4;5437:6;5434:1;5430:14;5423:5;5419:26;5415:37;5486:4;5479:5;5475:16;5509:1;5519:435;5533:6;5530:1;5527:13;5519:435;;;5620:2;5616:7;5608:5;5602:4;5598:16;5594:30;5589:3;5582:43;5654:6;5648:13;5693:2;5687:9;5681:4;5674:23;5744:4;5740:2;5736:13;5730:20;5710:40;;5787:4;5780;5774;5770:15;5763:29;5813:57;5864:4;5858;5854:15;5840:12;5813:57;:::i;:::-;5905:4;5930:14;;;;5805:65;;-1:-1:-1;5893:17:39;;;;;-1:-1:-1;5555:1:39;5548:9;5519:435;;;-1:-1:-1;5970:4:39;;5206:774;-1:-1:-1;;;;;;5206:774:39:o;6249:1313::-;6303:3;6347:5;6341:12;6374:6;6369:3;6362:19;6402:49;6443:6;6438:3;6434:16;6420:12;6402:49;:::i;:::-;6390:61;;6499:4;6492:5;6488:16;6482:23;6547:3;6541:4;6537:14;6530:4;6525:3;6521:14;6514:38;6575:39;6609:4;6593:14;6575:39;:::i;:::-;6561:53;;;6662:4;6655:5;6651:16;6645:23;6677:50;6721:4;6716:3;6712:14;6696;-1:-1:-1;;;;;2817:31:39;2805:44;;2751:104;6677:50;;6775:4;6768:5;6764:16;6758:23;6825:3;6817:6;6813:16;6806:4;6801:3;6797:14;6790:40;6853:41;6887:6;6871:14;6853:41;:::i;:::-;6839:55;;;6942:4;6935:5;6931:16;6925:23;6957:47;6998:4;6993:3;6989:14;6973;3985:13;3978:21;3966:34;;3915:91;6957:47;;7052:4;7045:5;7041:16;7035:23;7067:48;7109:4;7104:3;7100:14;7084;2730:1;2719:20;2707:33;;2655:91;7067:48;;7163:4;7156:5;7152:16;7146:23;7178:47;7219:4;7214:3;7210:14;7194;3985:13;3978:21;3966:34;;3915:91;7178:47;;7273:4;7266:5;7262:16;7256:23;7323:3;7315:6;7311:16;7304:4;7299:3;7295:14;7288:40;7351:60;7404:6;7388:14;7351:60;:::i;:::-;7337:74;;;7459:6;7452:5;7448:18;7442:25;7476:58;7526:6;7521:3;7517:16;7501:14;6071:12;;6068:1;6057:27;;;6045:40;;6138:4;6127:16;;;6121:23;-1:-1:-1;;;;;6117:49:39;6101:14;;;6094:73;6230:4;6219:16;;;6213:23;6199:38;;6183:14;;6176:62;5985:259;7476:58;-1:-1:-1;7550:6:39;6249:1313;-1:-1:-1;;;6249:1313:39:o;7567:856::-;7628:3;7666:5;7660:12;7693:6;7688:3;7681:19;7725:4;7720:3;7716:14;7709:21;;7764:4;7757:5;7753:16;7787:1;7797:601;7811:6;7808:1;7805:13;7797:601;;;7870:13;;7954:9;;7951:1;7940:24;7928:37;;8019:4;8011:13;;;8005:20;-1:-1:-1;;;;;8001:46:39;;;7985:14;;;7978:70;8112:4;8104:13;;;8098:20;8091:28;8084:36;8068:14;;;8061:60;8185:4;8177:13;;;8171:20;8164:28;8157:36;8141:14;;;8134:60;8248:4;8240:13;;;8234:20;8230:46;8214:14;;;8207:70;;;;8035:3;8304:14;;;;8371:17;;;;8044:1;7826:9;7797:601;;;-1:-1:-1;8414:3:39;;7567:856;-1:-1:-1;;;;7567:856:39:o;8428:921::-;8494:3;8532:5;8526:12;8559:6;8554:3;8547:19;8591:4;8586:3;8582:14;8575:21;;8630:4;8623:5;8619:16;8653:1;8663:661;8677:6;8674:1;8671:13;8663:661;;;8742:6;8736:13;8780:1;8826:2;8820:9;8817:1;8806:24;8801:3;8794:37;8895:4;8891:2;8887:13;8881:20;8878:1;8867:35;8860:4;8855:3;8851:14;8844:59;8967:4;8963:2;8959:13;8953:20;8950:1;8939:35;8932:4;8927:3;8923:14;8916:59;9039:4;9035:2;9031:13;9025:20;9022:1;9011:35;9004:4;8999:3;8995:14;8988:59;9111:4;9107:2;9103:13;9097:20;9090:28;9083:36;9076:4;9071:3;9067:14;9060:60;9199:1;9195;9190:3;9186:11;9182:19;9174:4;9170:2;9166:13;9160:20;9156:46;9149:4;9144:3;9140:14;9133:70;9239:4;9234:3;9230:14;9216:28;;9264:10;9257:17;;;;9309:4;9301:6;9297:17;9287:27;;8699:1;8696;8692:9;8687:14;;8663:661;;9354:929;9417:3;9455:5;9449:12;9482:6;9477:3;9470:19;9514:4;9509:3;9505:14;9498:21;;9553:4;9546:5;9542:16;9576:1;9586:672;9600:6;9597:1;9594:13;9586:672;;;9665:6;9659:13;9703:1;9749:2;9743:9;9740:1;9729:24;9724:3;9717:37;9818:4;9814:2;9810:13;9804:20;9801:1;9790:35;9783:4;9778:3;9774:14;9767:59;9890:4;9886:2;9882:13;9876:20;9873:1;9862:35;9855:4;9850:3;9846:14;9839:59;9977:1;9973;9968:3;9964:11;9960:19;9952:4;9948:2;9944:13;9938:20;9934:46;9927:4;9922:3;9918:14;9911:70;10045:4;10041:2;10037:13;10031:20;10024:28;10017:36;10010:4;10005:3;10001:14;9994:60;10133:1;10129;10124:3;10120:11;10116:19;10108:4;10104:2;10100:13;10094:20;10090:46;10083:4;10078:3;10074:14;10067:70;10173:4;10168:3;10164:14;10150:28;;10198:10;10191:17;;;;10243:4;10235:6;10231:17;10221:27;;9622:1;9619;9615:9;9610:14;;9586:672;;10288:1384;10340:3;10384:5;10378:12;10411:6;10406:3;10399:19;10439:61;10492:6;10487:3;10483:16;10469:12;10439:61;:::i;:::-;10427:73;;10548:4;10541:5;10537:16;10531:23;10563:48;10605:4;10600:3;10596:14;10580;2730:1;2719:20;2707:33;;2655:91;10563:48;;10659:4;10652:5;10648:16;10642:23;10674:47;10715:4;10710:3;10706:14;10690;3985:13;3978:21;3966:34;;3915:91;10674:47;;10769:4;10762:5;10758:16;10752:23;10784:47;10825:4;10820:3;10816:14;10800;3985:13;3978:21;3966:34;;3915:91;10784:47;;10879:4;10872:5;10868:16;10862:23;10894:47;10935:4;10930:3;10926:14;10910;3985:13;3978:21;3966:34;;3915:91;10894:47;;10989:4;10982:5;10978:16;10972:23;11037:3;11031:4;11027:14;11020:4;11015:3;11011:14;11004:38;11065:58;11118:4;11102:14;11065:58;:::i;:::-;11051:72;;;11171:4;11164:5;11160:16;11154:23;11221:3;11213:6;11209:16;11202:4;11197:3;11193:14;11186:40;11249:65;11307:6;11291:14;11249:65;:::i;:::-;11235:79;;;11362:4;11355:5;11351:16;11345:23;11412:3;11404:6;11400:16;11393:4;11388:3;11384:14;11377:40;11440:62;11495:6;11479:14;11440:62;:::i;:::-;11426:76;;;11550:6;11543:5;11539:18;11533:25;11604:3;11596:6;11592:16;11583:6;11578:3;11574:16;11567:42;11625:41;11659:6;11643:14;11625:41;:::i;11677:346::-;11898:6;11895:1;11884:21;11873:9;11866:40;11942:2;11937;11926:9;11922:18;11915:30;11847:4;11962:55;12013:2;12002:9;11998:18;11990:6;11962:55;:::i;12028:118::-;12115:5;12112:1;12101:20;12094:5;12091:31;12081:59;;12136:1;12133;12126:12;12151:384;12217:6;12225;12278:2;12266:9;12257:7;12253:23;12249:32;12246:52;;;12294:1;12291;12284:12;12246:52;12333:9;12320:23;12352:31;12377:5;12352:31;:::i;:::-;12402:5;-1:-1:-1;12459:2:39;12444:18;;12431:32;12472:31;12431:32;12472:31;:::i;:::-;12522:7;12512:17;;;12151:384;;;;;:::o;12540:1002::-;12783:6;12780:1;12769:21;12758:9;12751:40;12827:2;12822;12811:9;12807:18;12800:30;12732:4;12865:6;12859:13;12908:4;12903:2;12892:9;12888:18;12881:32;12936:62;12993:3;12982:9;12978:19;12964:12;12936:62;:::i;:::-;12922:76;;13066:2;13058:6;13054:15;13048:22;13045:1;13034:37;13029:2;13018:9;13014:18;13007:65;13154:1;13150;13145:3;13141:11;13137:19;13131:2;13123:6;13119:15;13113:22;13109:48;13103:3;13092:9;13088:19;13081:77;13227:2;13219:6;13215:15;13209:22;13206:1;13195:37;13189:3;13178:9;13174:19;13167:66;13282:3;13274:6;13270:16;13264:23;13357:2;13353:7;13341:9;13333:6;13329:22;13325:36;13318:4;13307:9;13303:20;13296:66;13385:41;13419:6;13403:14;13385:41;:::i;:::-;13500:3;13473:16;;;;13467:23;-1:-1:-1;;;;;13463:49:39;13457:3;13442:19;;;;13435:78;;;;-1:-1:-1;13371:55:39;;12540:1002;-1:-1:-1;;;12540:1002:39:o;13547:343::-;13766:6;13763:1;13752:21;13741:9;13734:40;13810:2;13805;13794:9;13790:18;13783:30;13715:4;13830:54;13880:2;13869:9;13865:18;13857:6;13830:54;:::i;14170:954::-;14713:6;14710:1;14699:21;14688:9;14681:40;14757:3;14752:2;14741:9;14737:18;14730:31;14662:4;14784:65;14844:3;14833:9;14829:19;14821:6;14784:65;:::i;:::-;14897:9;14889:6;14885:22;14880:2;14869:9;14865:18;14858:50;14931:57;14981:6;14973;14931:57;:::i;:::-;14917:71;;15036:9;15028:6;15024:22;15019:2;15008:9;15004:18;14997:50;15064:54;15111:6;15103;15064:54;:::i;15129:326::-;15377:1;15366:21;;;15348:40;;15335:3;15320:19;;15397:52;15445:2;15430:18;;15422:6;6071:12;;6068:1;6057:27;;;6045:40;;6138:4;6127:16;;;6121:23;-1:-1:-1;;;;;6117:49:39;6101:14;;;6094:73;6230:4;6219:16;;;6213:23;6199:38;;6183:14;;6176:62;5985:259;15460:127;15521:10;15516:3;15512:20;15509:1;15502:31;15552:4;15549:1;15542:15;15576:4;15573:1;15566:15;15592:258;15665:4;15659:11;;;15697:17;;-1:-1:-1;;;;;15729:34:39;;15765:22;;;15726:62;15723:88;;;15791:18;;:::i;:::-;15827:4;15820:24;15592:258;:::o;15855:254::-;15928:2;15922:9;15970:4;15958:17;;-1:-1:-1;;;;;15990:34:39;;16026:22;;;15987:62;15984:88;;;16052:18;;:::i;16114:256::-;16187:2;16181:9;16229:6;16217:19;;-1:-1:-1;;;;;16251:34:39;;16287:22;;;16248:62;16245:88;;;16313:18;;:::i;16375:254::-;16448:2;16442:9;16490:4;16478:17;;-1:-1:-1;;;;;16510:34:39;;16546:22;;;16507:62;16504:88;;;16572:18;;:::i;16634:275::-;16705:2;16699:9;16770:2;16751:13;;-1:-1:-1;;16747:27:39;16735:40;;-1:-1:-1;;;;;16790:34:39;;16826:22;;;16787:62;16784:88;;;16852:18;;:::i;:::-;16888:2;16881:22;16634:275;;-1:-1:-1;16634:275:39:o;16914:181::-;16972:4;-1:-1:-1;;;;;16997:6:39;16994:30;16991:56;;;17027:18;;:::i;:::-;-1:-1:-1;17072:1:39;17068:14;17084:4;17064:25;;16914:181::o;17100:1233::-;17198:6;17206;17214;17267:2;17255:9;17246:7;17242:23;17238:32;17235:52;;;17283:1;17280;17273:12;17235:52;17322:9;17309:23;17341:31;17366:5;17341:31;:::i;:::-;17391:5;-1:-1:-1;17448:2:39;17433:18;;17420:32;17461:31;17420:32;17461:31;:::i;:::-;17511:7;-1:-1:-1;17569:2:39;17554:18;;17541:32;-1:-1:-1;;;;;17585:30:39;;17582:50;;;17628:1;17625;17618:12;17582:50;17651:22;;17704:4;17696:13;;17692:27;-1:-1:-1;17682:55:39;;17733:1;17730;17723:12;17682:55;17773:2;17760:16;17796:62;17812:45;17850:6;17812:45;:::i;:::-;17796:62;:::i;:::-;17880:3;17904:6;17899:3;17892:19;17936:2;17931:3;17927:12;17920:19;;17991:2;17981:6;17978:1;17974:14;17970:2;17966:23;17962:32;17948:46;;18017:7;18009:6;18006:19;18003:39;;;18038:1;18035;18028:12;18003:39;18070:2;18066;18062:11;18051:22;;18082:221;18098:6;18093:3;18090:15;18082:221;;;18180:3;18167:17;18197:31;18220:7;18197:31;:::i;:::-;18241:20;;18290:2;18115:12;;;;18281;;;;18082:221;;;18322:5;18312:15;;;;;;17100:1233;;;;;:::o;18810:186::-;18858:4;-1:-1:-1;;;;;18883:6:39;18880:30;18877:56;;;18913:18;;:::i;:::-;-1:-1:-1;18979:2:39;18958:15;-1:-1:-1;;18954:29:39;18985:4;18950:40;;18810:186::o;19001:1757::-;19110:6;19118;19126;19179:2;19167:9;19158:7;19154:23;19150:32;19147:52;;;19195:1;19192;19185:12;19147:52;19234:9;19221:23;19253:31;19278:5;19253:31;:::i;:::-;19303:5;-1:-1:-1;19360:2:39;19345:18;;19332:32;19373:31;19332:32;19373:31;:::i;:::-;19423:7;-1:-1:-1;19481:2:39;19466:18;;19453:32;-1:-1:-1;;;;;19497:30:39;;19494:50;;;19540:1;19537;19530:12;19494:50;19563:22;;19616:4;19608:13;;19604:27;-1:-1:-1;19594:55:39;;19645:1;19642;19635:12;19594:55;19685:2;19672:16;19708:62;19724:45;19762:6;19724:45;:::i;19708:62::-;19792:3;19816:6;19811:3;19804:19;19848:2;19843:3;19839:12;19832:19;;19903:2;19893:6;19890:1;19886:14;19882:2;19878:23;19874:32;19860:46;;19929:7;19921:6;19918:19;19915:39;;;19950:1;19947;19940:12;19915:39;19982:2;19978;19974:11;19994:734;20010:6;20005:3;20002:15;19994:734;;;20096:3;20083:17;-1:-1:-1;;;;;20119:11:39;20116:35;20113:55;;;20164:1;20161;20154:12;20113:55;20191:20;;20246:2;20238:11;;20234:25;-1:-1:-1;20224:53:39;;20273:1;20270;20263:12;20224:53;20327:2;20323;20319:11;20306:25;20359:54;20375:37;20403:8;20375:37;:::i;20359:54::-;20426:25;;;20470:35;20478:17;;;20470:35;20467:48;-1:-1:-1;20464:68:39;;;20528:1;20525;20518:12;20464:68;20589:8;20584:2;20580;20576:11;20571:2;20562:7;20558:16;20545:53;20651:1;20646:2;20635:8;20626:7;20622:22;20618:31;20611:42;20678:7;20673:3;20666:20;;;;20715:2;20710:3;20706:12;20699:19;;20036:2;20031:3;20027:12;20020:19;;19994:734;;;19998:3;20747:5;20737:15;;;;;;19001:1757;;;;;:::o;20763:787::-;20949:4;20997:2;20986:9;20982:18;21041:6;21038:1;21027:21;21016:9;21009:40;21099:6;21096:1;21085:21;21080:2;21069:9;21065:18;21058:49;21143:2;21138;21127:9;21123:18;21116:30;21166:6;21201;21195:13;21232:6;21224;21217:22;21270:3;21259:9;21255:19;21248:26;;21309:2;21301:6;21297:15;21283:29;;21330:1;21340:184;21354:6;21351:1;21348:13;21340:184;;;21429:13;;21426:1;21415:28;21403:41;;21473:2;21499:15;;;;21464:12;;;;21376:1;21369:9;21340:184;;;-1:-1:-1;21541:3:39;;20763:787;-1:-1:-1;;;;;;;20763:787:39:o;21555:529::-;21632:6;21640;21648;21701:2;21689:9;21680:7;21676:23;21672:32;21669:52;;;21717:1;21714;21707:12;21669:52;21756:9;21743:23;21775:31;21800:5;21775:31;:::i;:::-;21825:5;-1:-1:-1;21882:2:39;21867:18;;21854:32;21895:33;21854:32;21895:33;:::i;:::-;21947:7;-1:-1:-1;22006:2:39;21991:18;;21978:32;22019:33;21978:32;22019:33;:::i;:::-;22071:7;22061:17;;;21555:529;;;;;:::o;22089:380::-;22168:1;22164:12;;;;22211;;;22232:61;;22286:4;22278:6;22274:17;22264:27;;22232:61;22339:2;22331:6;22328:14;22308:18;22305:38;22302:161;;22385:10;22380:3;22376:20;22373:1;22366:31;22420:4;22417:1;22410:15;22448:4;22445:1;22438:15;22302:161;;22089:380;;;:::o;22474:680::-;22527:3;22568:5;22562:12;22597:36;22623:9;22597:36;:::i;:::-;22664:1;22649:17;;22675:133;;;;22822:1;22817:331;;;;22642:506;;22675:133;-1:-1:-1;;22708:24:39;;22696:37;;22781:14;;22774:22;22762:35;;22753:45;;;-1:-1:-1;22675:133:39;;22817:331;22848:5;22845:1;22838:16;22895:4;22892:1;22882:18;22922:1;22936:166;22950:6;22947:1;22944:13;22936:166;;;23030:14;;23017:11;;;23010:35;23086:1;23073:15;;;;22972:4;22965:12;22936:166;;;22940:3;;23131:6;23126:3;23122:16;23115:23;;22642:506;;;;22474:680;;;;:::o;23159:202::-;23289:3;23314:41;23351:3;23343:6;23314:41;:::i;24170:739::-;24220:3;24261:5;24255:12;24290:36;24316:9;24290:36;:::i;:::-;24335:19;;;24385:1;24370:17;;24396:150;;;;24560:1;24555:348;;;;24363:540;;24396:150;24459:3;24455:8;24444:9;24440:24;24433:4;24428:3;24424:14;24417:48;24531:4;24519:6;24512:14;24505:22;24502:1;24498:30;24493:3;24489:40;24485:51;24478:58;;24396:150;;24555:348;24586:5;24583:1;24576:16;24633:4;24630:1;24620:18;24660:1;24674:177;24688:6;24685:1;24682:13;24674:177;;;24785:7;24779:14;24772:4;24768:1;24763:3;24759:11;24755:22;24748:46;24835:1;24826:7;24822:15;24811:26;;24710:4;24707:1;24703:12;24698:17;;24674:177;;;24875:11;;24888:4;24871:22;;-1:-1:-1;;24363:540:39;;;24170:739;;;;:::o;25057:1237::-;25126:3;25157;25189:5;25183:12;25216:6;25211:3;25204:19;25248:4;25243:3;25239:14;25232:21;;25306:4;25296:6;25293:1;25289:14;25282:5;25278:26;25274:37;25330:5;25327:1;25320:16;25372:4;25369:1;25359:18;25395:1;25405:863;25419:6;25416:1;25413:13;25405:863;;;25484:16;;;-1:-1:-1;;25480:30:39;25468:43;;25537:13;;25524:27;;25588:4;25581;25571:15;;25564:29;;;25641:1;25629:14;;25623:21;25710:4;25695:20;;25688:28;25681:36;25664:15;;;25657:61;;;;25763:1;25759:17;-1:-1:-1;;;;;25755:43:39;25748:4;25738:15;;25731:68;25786:3;25829:4;25819:15;;25812:29;25868:60;25923:3;25913:14;;25906:4;25894:17;;25868:60;:::i;:::-;25969:17;;;-1:-1:-1;;25965:31:39;25958:4;25948:15;;25941:56;26024:52;25973:6;26062:4;26050:17;;26024:52;:::i;:::-;26134:1;26122:14;;26116:21;-1:-1:-1;;;;;26112:47:39;26106:3;26096:14;;;;26089:71;;;;-1:-1:-1;26253:4:39;26244:14;;;;;26222:1;26210:14;;;;26156:1;25434:9;25405:863;;26599:1069;26691:6;26686:3;26679:19;26661:3;26719:50;26761:6;26756:3;26752:16;26745:5;26719:50;:::i;:::-;26811:3;26805:4;26801:14;26794:4;26789:3;26785:14;26778:38;26839:49;26883:4;26876;26869:5;26865:16;26839:49;:::i;:::-;26825:63;;26917:67;26977:4;26970:5;26966:16;26960:23;-1:-1:-1;;;;;25010:36:39;;24914:138;26917:67;-1:-1:-1;;;;;2817:31:39;27035:4;27026:14;;2805:44;27073:16;;;27066:4;27057:14;;27050:40;27113:51;27077:6;27150:4;27139:16;;27113:51;:::i;:::-;27099:65;;27207:4;27200:5;27196:16;27190:23;27222:53;27269:4;27264:3;27260:14;27253:4;27242:9;27238:20;3985:13;3978:21;3966:34;;3915:91;27222:53;27319:1;27315:17;;;27312:1;27301:32;27344:4;27335:14;;2707:33;27359:62;27415:4;27410:3;27406:14;27399:4;27387:9;27383:2;27379:18;27375:29;3985:13;3978:21;3966:34;;3915:91;27359:62;;27465:3;27457:6;27453:16;27446:4;27441:3;27437:14;27430:40;27493:70;27556:6;27549:4;27542:5;27538:16;27493:70;:::i;:::-;27479:84;;27572:68;27632:6;27627:3;27623:16;27616:4;27609:5;27605:16;26384:12;;26428:1;26417:24;;;26405:37;;26482:2;26478:18;;;-1:-1:-1;;;;;26474:44:39;26467:4;26458:14;;26451:68;26515:1;26569:16;;;26563:23;26549:38;;;26535:12;;26528:60;26299:295;27673:915;27742:3;27780:5;27774:12;27807:6;27802:3;27795:19;27839:4;27834:3;27830:14;27823:21;;27863:5;27860:1;27853:16;27905:4;27902:1;27892:18;27928:1;27938:625;27952:6;27949:1;27946:13;27938:625;;;28050:13;;28099:1;28088:24;;;28076:37;;28157:2;28153:18;;;-1:-1:-1;;;;;28149:44:39;;;28142:4;28133:14;;28126:68;28250:3;28246:19;;;28267:4;28242:30;;;28235:38;28228:46;28214:12;;;28207:68;;;;28333:3;28329:19;;;;28325:30;28318:38;28311:46;28304:4;28295:14;;28288:70;28190:1;28404:14;;;28398:21;28394:47;;;28387:4;28378:14;;28371:71;28181:3;28469:14;;;;28548:4;28536:17;;;;27967:9;27938:625;;28593:1014;28667:3;28705:5;28699:12;28732:6;28727:3;28720:19;28764:4;28759:3;28755:14;28748:21;;28788:5;28785:1;28778:16;28830:4;28827:1;28817:18;28853:1;28863:719;28877:6;28874:1;28871:13;28863:719;;;28944:1;28981:6;28975:13;29027:9;29024:1;29013:24;29008:3;29001:37;29096:9;29092:2;29088:18;29085:1;29074:33;29067:4;29062:3;29058:14;29051:57;29165:9;29160:3;29156:19;29153:1;29142:34;29137:2;29132:3;29128:12;29121:56;29236:9;29231:3;29227:19;29224:1;29213:34;29206:4;29201:3;29197:14;29190:58;;29298:1;29290:6;29286:14;29280:21;29314:54;29363:3;29358;29354:13;29347:4;29334:11;29330:22;3985:13;3978:21;3966:34;;3915:91;29314:54;29408:1;29404:19;-1:-1:-1;;;;;29400:45:39;29456:4;29447:14;;2805:44;-1:-1:-1;29498:3:39;29489:13;;;;29567:4;29555:17;;;;;28899:1;28892:9;28863:719;;29612:1092;29683:3;29721:5;29715:12;29748:6;29743:3;29736:19;29780:4;29775:3;29771:14;29764:21;;29804:5;29801:1;29794:16;29846:4;29843:1;29833:18;29869:1;29879:800;29893:6;29890:1;29887:13;29879:800;;;29960:1;29997:6;29991:13;30043:9;30040:1;30029:24;30024:3;30017:37;30112:9;30108:2;30104:18;30101:1;30090:33;30083:4;30078:3;30074:14;30067:57;30181:9;30176:3;30172:19;30169:1;30158:34;30153:2;30148:3;30144:12;30137:56;;30243:1;30235:6;30231:14;30225:21;30316:1;30312;30307:3;30303:11;30299:19;30286:11;30282:37;30275:4;30270:3;30266:14;30259:61;30333:64;30392:3;30387;30383:13;30376:4;30362:11;30357:3;30353:21;30349:32;3985:13;3978:21;3966:34;;3915:91;30333:64;-1:-1:-1;;30491:4:39;30479:17;;30473:24;-1:-1:-1;;;;;25010:36:39;30553:3;30544:13;;2805:44;30594:4;30585:14;;;;30664:4;30652:17;;;;29915:1;29908:9;29879:800;;30709:1416;30936:4;30928:6;30924:17;30913:9;30906:36;30978:2;30973;30962:9;30958:18;30951:30;31017:6;31012:2;31001:9;30997:18;30990:34;30887:4;31047:66;31108:3;31097:9;31093:19;31085:6;31047:66;:::i;:::-;31157:4;31145:17;;31139:24;31200:1;31189:24;;;31230:2;31215:18;;2707:33;31243:67;31305:3;31294:9;31290:19;31283:4;31271:9;31267:2;31263:18;31259:29;3985:13;3978:21;3966:34;;3915:91;31243:67;31319;31381:3;31370:9;31366:19;31359:4;31347:9;31343:2;31339:18;31335:29;3985:13;3978:21;3966:34;;3915:91;31319:67;31395;31457:3;31446:9;31442:19;31435:4;31423:9;31419:2;31415:18;31411:29;3985:13;3978:21;3966:34;;3915:91;31395:67;-1:-1:-1;31503:22:39;;;-1:-1:-1;;31499:36:39;31493:3;31478:19;;31471:65;31559:71;31507:6;31616:4;31604:17;;31559:71;:::i;:::-;31671:22;;;-1:-1:-1;;31667:36:39;31661:3;31646:19;;31639:65;31545:85;-1:-1:-1;31727:76:39;31545:85;31789:4;31777:17;;31727:76;:::i;:::-;31847:22;;;-1:-1:-1;;31843:36:39;31834:6;31819:22;;31812:68;31713:90;-1:-1:-1;31903:73:39;31713:90;31962:4;31950:17;;31903:73;:::i;:::-;32017:22;;;-1:-1:-1;;32013:36:39;32007:3;31992:19;;31985:65;31889:87;-1:-1:-1;32067:52:39;31889:87;32105:4;32093:17;;32067:52;:::i;32538:967::-;33072:4;33064:6;33060:17;33049:9;33042:36;33114:3;33109:2;33098:9;33094:18;33087:31;33023:4;33141:73;33209:3;33198:9;33194:19;33186:6;33141:73;:::i;:::-;33262:9;33254:6;33250:22;33245:2;33234:9;33230:18;33223:50;33296:65;33354:6;33346;33296:65;:::i;:::-;33282:79;;33409:9;33401:6;33397:22;33392:2;33381:9;33377:18;33370:50;33437:62;33492:6;33484;33437:62;:::i;35030:338::-;35287:4;35275:17;;35257:36;;35244:3;35229:19;;35302:60;35358:2;35343:18;;35335:6;26384:12;;26428:1;26417:24;;;26405:37;;26482:2;26478:18;;;-1:-1:-1;;;;;26474:44:39;26467:4;26458:14;;26451:68;26515:1;26569:16;;;26563:23;26549:38;;;26535:12;;26528:60;26299:295;36618:255;36738:19;;36777:2;36769:11;;36766:101;;;-1:-1:-1;;36838:2:39;36834:12;;;36831:1;36827:20;36823:33;36812:45;36618:255;;;;:::o;37481:347::-;37683:2;37665:21;;;37722:2;37702:18;;;37695:30;37761:25;37756:2;37741:18;;37734:53;37819:2;37804:18;;37481:347::o;38370:138::-;38449:13;;38471:31;38449:13;38471:31;:::i;:::-;38370:138;;;:::o;38513:251::-;38583:6;38636:2;38624:9;38615:7;38611:23;38607:32;38604:52;;;38652:1;38649;38642:12;38604:52;38684:9;38678:16;38703:31;38728:5;38703:31;:::i;38769:127::-;38830:10;38825:3;38821:20;38818:1;38811:31;38861:4;38858:1;38851:15;38885:4;38882:1;38875:15;38901:125;38966:9;;;38987:10;;;38984:36;;;39000:18;;:::i;39391:128::-;39458:9;;;39479:11;;;39476:37;;;39493:18;;:::i;39732:301::-;39861:3;39899:6;39893:13;39945:6;39938:4;39930:6;39926:17;39921:3;39915:37;40007:1;39971:16;;39996:13;;;-1:-1:-1;39971:16:39;39732:301;-1:-1:-1;39732:301:39:o;40394:134::-;40471:13;;40493:29;40471:13;40493:29;:::i;40533:514::-;40587:5;40640:3;40633:4;40625:6;40621:17;40617:27;40607:55;;40658:1;40655;40648:12;40607:55;40691:6;40685:13;40730:4;40722:6;40718:17;40759:1;40780:52;40796:35;40824:6;40796:35;:::i;40780:52::-;40769:63;;40857:6;40848:7;40841:23;40897:3;40888:6;40883:3;40879:16;40876:25;40873:45;;;40914:1;40911;40904:12;40873:45;40958:6;40953:3;40946:4;40937:7;40933:18;40927:38;41014:1;40985:20;;;41007:4;40981:31;40974:42;;;;-1:-1:-1;40989:7:39;40533:514;-1:-1:-1;;;40533:514:39:o;41052:164::-;41128:13;;41177;;41170:21;41160:32;;41150:60;;41206:1;41203;41196:12;41221:2121;41294:5;41347:3;41340:4;41332:6;41328:17;41324:27;41314:55;;41365:1;41362;41355:12;41314:55;41398:6;41392:13;41425:62;41441:45;41479:6;41441:45;:::i;41425:62::-;41511:3;41535:6;41530:3;41523:19;41567:4;41562:3;41558:14;41551:21;;41628:4;41618:6;41615:1;41611:14;41603:6;41599:27;41595:38;41581:52;;41656:3;41648:6;41645:15;41642:35;;;41673:1;41670;41663:12;41642:35;41709:4;41701:6;41697:17;41723:1588;41739:6;41734:3;41731:15;41723:1588;;;41820:3;41814:10;-1:-1:-1;;;;;41843:11:39;41840:35;41837:55;;;41888:1;41885;41878:12;41837:55;41915:24;;41987:4;41963:12;;;-1:-1:-1;;41959:26:39;41955:37;41952:57;;;42005:1;42002;41995:12;41952:57;42035:23;;:::i;:::-;42125:4;42117:13;;42111:20;42144:22;;42209:4;42201:13;;42195:20;-1:-1:-1;;;;;42231:32:39;;42228:52;;;42276:1;42273;42266:12;42228:52;42326:4;42315:8;42311:2;42307:17;42303:28;42293:38;;;42365:4;42360:2;42355:3;42351:12;42347:23;42344:43;;;42383:1;42380;42373:12;42344:43;42415:23;;:::i;:::-;42467:30;42494:2;42467:30;:::i;:::-;42458:7;42451:47;42540:4;42536:2;42532:13;42526:20;42559:33;42584:7;42559:33;:::i;:::-;42625:4;42612:18;;42605:35;42683:4;42675:13;;42669:20;-1:-1:-1;;;;;42705:32:39;;42702:52;;;42750:1;42747;42740:12;42702:52;42794;42842:3;42831:8;42827:2;42823:17;42794:52;:::i;:::-;42787:4;42778:7;42774:18;42767:80;;42890:2;42886;42882:11;42876:18;-1:-1:-1;;;;;42913:8:39;42910:32;42907:52;;;42955:1;42952;42945:12;42907:52;42997;43045:3;43034:8;43030:2;43026:17;42997:52;:::i;:::-;42992:2;42983:7;42979:16;42972:78;;43092:3;43088:2;43084:12;43078:19;43063:34;;43110:33;43135:7;43110:33;:::i;:::-;43176:3;43163:17;;43156:34;;;;43221:4;43210:16;;;43203:33;;;;43249:18;;43287:14;;;;41756;41723:1588;;;-1:-1:-1;43329:7:39;41221:2121;-1:-1:-1;;;;;41221:2121:39:o;43347:762::-;43411:5;43459:4;43447:9;43442:3;43438:19;43434:30;43431:50;;;43477:1;43474;43467:12;43431:50;43530:2;43524:9;43572:4;43560:17;;-1:-1:-1;;;;;43592:34:39;;43628:22;;;43589:62;43586:88;;;43654:18;;:::i;:::-;43694:10;43690:2;43683:22;;43723:6;43714:15;;43759:9;43753:16;43778:31;43801:7;43778:31;:::i;:::-;43818:23;;43886:2;43871:18;;43865:25;43899:33;43865:25;43899:33;:::i;:::-;43960:2;43948:15;;43941:32;44018:2;44003:18;;43997:25;44031:31;43997:25;44031:31;:::i;:::-;44090:2;44078:15;;;;44071:32;43347:762;;-1:-1:-1;;43347:762:39:o;44114:1418::-;44183:5;44231:6;44219:9;44214:3;44210:19;44206:32;44203:52;;;44251:1;44248;44241:12;44203:52;44273:23;;:::i;:::-;44264:32;;44325:9;44319:16;-1:-1:-1;;;;;44350:6:39;44347:30;44344:50;;;44390:1;44387;44380:12;44344:50;44417:57;44470:3;44461:6;44450:9;44446:22;44417:57;:::i;:::-;44410:5;44403:72;;44521:2;44510:9;44506:18;44500:25;-1:-1:-1;;;;;44540:8:39;44537:32;44534:52;;;44582:1;44579;44572:12;44534:52;44618:59;44673:3;44662:8;44651:9;44647:24;44618:59;:::i;:::-;44613:2;44606:5;44602:14;44595:83;;44710:49;44755:2;44744:9;44740:18;44710:49;:::i;:::-;44705:2;44698:5;44694:14;44687:73;44806:2;44795:9;44791:18;44785:25;-1:-1:-1;;;;;44825:8:39;44822:32;44819:52;;;44867:1;44864;44857:12;44819:52;44903:59;44958:3;44947:8;44936:9;44932:24;44903:59;:::i;:::-;44898:2;44891:5;44887:14;44880:83;;44996:47;45038:3;45027:9;45023:19;44996:47;:::i;:::-;44990:3;44983:5;44979:15;44972:72;45077:48;45120:3;45109:9;45105:19;45077:48;:::i;:::-;45071:3;45064:5;45060:15;45053:73;45159:47;45201:3;45190:9;45186:19;45159:47;:::i;:::-;45153:3;45146:5;45142:15;45135:72;45253:3;45242:9;45238:19;45232:26;-1:-1:-1;;;;;45273:8:39;45270:32;45267:52;;;45315:1;45312;45305:12;45267:52;45352:78;45426:3;45415:8;45404:9;45400:24;45352:78;:::i;:::-;45346:3;45339:5;45335:15;45328:103;;45464:61;45521:3;45515;45504:9;45500:19;45464:61;:::i;:::-;45458:3;45451:5;45447:15;45440:86;44114:1418;;;;:::o;45537:1327::-;45610:5;45663:3;45656:4;45648:6;45644:17;45640:27;45630:55;;45681:1;45678;45671:12;45630:55;45714:6;45708:13;45741:62;45757:45;45795:6;45757:45;:::i;45741:62::-;45827:3;45851:6;45846:3;45839:19;45883:4;45878:3;45874:14;45867:21;;45947:4;45939;45931:6;45927:17;45919:6;45915:30;45911:41;45897:55;;45975:3;45967:6;45964:15;45961:35;;;45992:1;45989;45982:12;45961:35;46028:4;46020:6;46016:17;46042:791;46058:6;46053:3;46050:15;46042:791;;;46136:4;46130:3;46125;46121:13;46117:24;46114:44;;;46154:1;46151;46144:12;46114:44;46184:23;;:::i;:::-;46241:3;46235:10;46258:31;46281:7;46258:31;:::i;:::-;46302:22;;46367:4;46358:14;;46352:21;46386:33;46352:21;46386:33;:::i;:::-;46450:4;46439:16;;46432:33;46501:40;46537:2;46528:12;;46501:40;:::i;:::-;46496:2;46489:5;46485:14;46478:64;46578:40;46614:2;46609:3;46605:12;46578:40;:::i;:::-;46573:2;46566:5;46562:14;46555:64;46662:3;46657;46653:13;46647:20;46680:33;46705:7;46680:33;:::i;:::-;46744:3;46733:15;;46726:32;46771:18;;46818:4;46809:14;;;;46084:4;46075:14;46042:791;;46869:1525;46947:5;47000:3;46993:4;46985:6;46981:17;46977:27;46967:55;;47018:1;47015;47008:12;46967:55;47051:6;47045:13;47078:62;47094:45;47132:6;47094:45;:::i;47078:62::-;47164:3;47188:6;47183:3;47176:19;47220:4;47215:3;47211:14;47204:21;;47284:4;47276;47268:6;47264:17;47256:6;47252:30;47248:41;47234:55;;47312:3;47304:6;47301:15;47298:35;;;47329:1;47326;47319:12;47298:35;47365:4;47357:6;47353:17;47379:984;47395:6;47390:3;47387:15;47379:984;;;47473:4;47467:3;47462;47458:13;47454:24;47451:44;;;47491:1;47488;47481:12;47451:44;47521:23;;:::i;:::-;47578:3;47572:10;47595:31;47618:7;47595:31;:::i;:::-;47639:22;;47704:4;47695:14;;47689:21;47723:31;47689:21;47723:31;:::i;:::-;47785:4;47774:16;;47767:33;47843:2;47834:12;;47828:19;47860:31;47828:19;47860:31;:::i;:::-;47922:2;47911:14;;47904:31;47978:2;47969:12;;47963:19;47995:31;47963:19;47995:31;:::i;:::-;48057:2;48046:14;;48039:31;48107:41;48143:3;48134:13;;48107:41;:::i;:::-;48101:3;48094:5;48090:15;48083:66;48192:3;48187;48183:13;48177:20;48210:33;48235:7;48210:33;:::i;:::-;48274:3;48263:15;;48256:32;48301:18;;48348:4;48339:14;;;;47421:4;47412:14;47379:984;;48399:1524;48474:5;48527:3;48520:4;48512:6;48508:17;48504:27;48494:55;;48545:1;48542;48535:12;48494:55;48578:6;48572:13;48605:62;48621:45;48659:6;48621:45;:::i;48605:62::-;48691:3;48715:6;48710:3;48703:19;48747:4;48742:3;48738:14;48731:21;;48811:4;48803;48795:6;48791:17;48783:6;48779:30;48775:41;48761:55;;48839:3;48831:6;48828:15;48825:35;;;48856:1;48853;48846:12;48825:35;48892:4;48884:6;48880:17;48906:986;48922:6;48917:3;48914:15;48906:986;;;49000:4;48994:3;48989;48985:13;48981:24;48978:44;;;49018:1;49015;49008:12;48978:44;49048:23;;:::i;:::-;49105:3;49099:10;49122:31;49145:7;49122:31;:::i;:::-;49166:22;;49231:4;49222:14;;49216:21;49250:31;49216:21;49250:31;:::i;:::-;49312:4;49301:16;;49294:33;49370:2;49361:12;;49355:19;49387:31;49355:19;49387:31;:::i;:::-;49449:2;49438:14;;49431:31;49505:2;49496:12;;49490:19;49522:33;49490:19;49522:33;:::i;:::-;49586:2;49575:14;;49568:31;49636:41;49672:3;49663:13;;49636:41;:::i;:::-;49630:3;49623:5;49619:15;49612:66;49721:3;49716;49712:13;49706:20;49739:33;49764:7;49739:33;:::i;:::-;49803:3;49792:15;;49785:32;49830:18;;49877:4;49868:14;;;;48948:4;48939:14;48906:986;;49928:1910;50032:6;50040;50093:2;50081:9;50072:7;50068:23;50064:32;50061:52;;;50109:1;50106;50099:12;50061:52;50141:9;50135:16;50160:29;50183:5;50160:29;:::i;:::-;50257:2;50242:18;;50236:25;50208:5;;-1:-1:-1;;;;;;50273:30:39;;50270:50;;;50316:1;50313;50306:12;50270:50;50339:22;;50395:6;50377:16;;;50373:29;50370:49;;;50415:1;50412;50405:12;50370:49;50443:23;;:::i;:::-;50497:2;50491:9;-1:-1:-1;;;;;50515:8:39;50512:32;50509:52;;;50557:1;50554;50547:12;50509:52;50586:68;50646:7;50635:8;50631:2;50627:17;50586:68;:::i;:::-;50577:7;50570:85;;50689:40;50725:2;50721;50717:11;50689:40;:::i;:::-;50684:2;50675:7;50671:16;50664:66;50764:39;50799:2;50795;50791:11;50764:39;:::i;:::-;50759:2;50750:7;50746:16;50739:65;50838:39;50873:2;50869;50865:11;50838:39;:::i;:::-;50833:2;50824:7;50820:16;50813:65;50913:40;50948:3;50944:2;50940:12;50913:40;:::i;:::-;50907:3;50898:7;50894:17;50887:67;50993:3;50989:2;50985:12;50979:19;-1:-1:-1;;;;;51013:8:39;51010:32;51007:52;;;51055:1;51052;51045:12;51007:52;51094:75;51161:7;51150:8;51146:2;51142:17;51094:75;:::i;:::-;51088:3;51079:7;51075:17;51068:102;;51209:3;51205:2;51201:12;51195:19;-1:-1:-1;;;;;51229:8:39;51226:32;51223:52;;;51271:1;51268;51261:12;51223:52;51310:80;51382:7;51371:8;51367:2;51363:17;51310:80;:::i;:::-;51304:3;51295:7;51291:17;51284:107;;51430:3;51426:2;51422:12;51416:19;-1:-1:-1;;;;;51450:8:39;51447:32;51444:52;;;51492:1;51489;51482:12;51444:52;51531:77;51600:7;51589:8;51585:2;51581:17;51531:77;:::i;:::-;51525:3;51516:7;51512:17;51505:104;;51648:3;51644:2;51640:12;51634:19;-1:-1:-1;;;;;51668:8:39;51665:32;51662:52;;;51710:1;51707;51700:12;51662:52;51749:56;51797:7;51786:8;51782:2;51778:17;51749:56;:::i;:::-;51743:3;51734:7;51730:17;51723:83;;51825:7;51815:17;;;;49928:1910;;;;;:::o;52668:337::-;52748:6;52801:2;52789:9;52780:7;52776:23;52772:32;52769:52;;;52817:1;52814;52807:12;52769:52;52850:9;52844:16;-1:-1:-1;;;;;52875:6:39;52872:30;52869:50;;;52915:1;52912;52905:12;52869:50;52938:61;52991:7;52982:6;52971:9;52967:22;52938:61;:::i;53420:326::-;53494:6;53502;53555:2;53543:9;53534:7;53530:23;53526:32;53523:52;;;53571:1;53568;53561:12;53523:52;53603:9;53597:16;53622:29;53645:5;53622:29;:::i;:::-;53670:5;-1:-1:-1;53694:46:39;53736:2;53721:18;;53694:46;:::i;:::-;53684:56;;53420:326;;;;;:::o;54512:127::-;54573:10;54568:3;54564:20;54561:1;54554:31;54604:4;54601:1;54594:15;54628:4;54625:1;54618:15;55002:409;55077:6;55085;55138:2;55126:9;55117:7;55113:23;55109:32;55106:52;;;55154:1;55151;55144:12;55106:52;55186:9;55180:16;55205:29;55228:5;55205:29;:::i;:::-;55253:5;55243:15;;;55303:2;55292:9;55288:18;55282:25;55352:7;55349:1;55338:22;55329:7;55326:35;55316:63;;55375:1;55372;55365:12;56231:1096;56486:6;56494;56502;56510;56563:3;56551:9;56542:7;56538:23;56534:33;56531:53;;;56580:1;56577;56570:12;56531:53;56612:9;56606:16;56631:29;56654:5;56631:29;:::i;:::-;56728:2;56713:18;;56707:25;56679:5;;-1:-1:-1;;;;;;56744:30:39;;56741:50;;;56787:1;56784;56777:12;56741:50;56810:80;56882:7;56873:6;56862:9;56858:22;56810:80;:::i;:::-;56800:90;;;56936:2;56925:9;56921:18;56915:25;-1:-1:-1;;;;;56955:8:39;56952:32;56949:52;;;56997:1;56994;56987:12;56949:52;57020:87;57099:7;57088:8;57077:9;57073:24;57020:87;:::i;:::-;57010:97;;;57153:2;57142:9;57138:18;57132:25;-1:-1:-1;;;;;57172:8:39;57169:32;57166:52;;;57214:1;57211;57204:12;57166:52;57237:84;57313:7;57302:8;57291:9;57287:24;57237:84;:::i;:::-;57227:94;;;56231:1096;;;;;;;:::o;57734:372::-;57835:6;57843;57896:3;57884:9;57875:7;57871:23;57867:33;57864:53;;;57913:1;57910;57903:12;57864:53;57945:9;57939:16;57964:29;57987:5;57964:29;:::i;:::-;58012:5;-1:-1:-1;58036:64:39;58092:7;58087:2;58072:18;;58036:64;:::i;59953:230::-;60023:6;60076:2;60064:9;60055:7;60051:23;60047:32;60044:52;;;60092:1;60089;60082:12;60044:52;-1:-1:-1;60137:16:39;;59953:230;-1:-1:-1;59953:230:39:o;60979:297::-;61097:12;;61144:4;61133:16;;;61127:23;;61097:12;61162:16;;61159:111;;;-1:-1:-1;;61236:4:39;61232:17;;;;61229:1;61225:25;61221:38;61210:50;;60979:297;-1:-1:-1;60979:297:39:o;63772:202::-;63839:6;63892:2;63880:9;63871:7;63867:23;63863:32;63860:52;;;63908:1;63905;63898:12;63860:52;63931:37;63958:9;63931:37;:::i;63979:225::-;64125:2;64114:9;64107:21;64088:4;64145:53;64194:2;64183:9;64179:18;64171:6;64145:53;:::i;66548:220::-;66697:2;66686:9;66679:21;66660:4;66717:45;66758:2;66747:9;66743:18;66735:6;66717:45;:::i;68706:280::-;68775:6;68828:2;68816:9;68807:7;68803:23;68799:32;68796:52;;;68844:1;68841;68834:12;68796:52;68876:9;68870:16;68926:10;68919:5;68915:22;68908:5;68905:33;68895:61;;68952:1;68949;68942:12;68991:410;-1:-1:-1;;;;;;69184:33:39;;;69172:46;;69255:2;69251:15;;;;-1:-1:-1;;69247:45:39;69243:1;69234:11;;69227:66;69200:3;69327:16;69323:43;;;69318:2;69309:12;;69302:65;69392:2;69383:12;;68991:410::o;72982:518::-;-1:-1:-1;;;;;;73201:33:39;;;73189:46;;73272:2;73268:15;;;;-1:-1:-1;;;;;;73264:53:39;73260:1;73251:11;;73244:74;73217:3;73352:16;;;73348:43;;73343:2;73334:12;;73327:65;73426:16;;73422:43;;;73417:2;73408:12;;73401:65;73491:2;73482:12;;72982:518::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "_update(address,address,uint256)": "0bb3bfa8",
        "burnToken(address,int64,int64[])": "d6910d06",
        "getAccountId(address)": "e0b490f7",
        "getApproved(address,uint256)": "098f2366",
        "getNonFungibleTokenInfo(address,int64)": "287e1da8",
        "getTokenCustomFees(address)": "ae7611a0",
        "getTokenDefaultFreezeStatus(address)": "a7daa18d",
        "getTokenDefaultKycStatus(address)": "335e04c1",
        "getTokenExpiryInfo(address)": "d614cdb8",
        "getTokenInfo(address)": "1f69565f",
        "getTokenKey(address,uint256)": "3c4dd32e",
        "getTokenType(address)": "93272baf",
        "isApprovedForAll(address,address,address)": "f49f40db",
        "isToken(address)": "19f37361",
        "mintToken(address,int64,bytes[])": "e0f4059a"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"\",\"type\":\"int64[]\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"accountId\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"getNonFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"ownerId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"creationTime\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"spenderId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.NonFungibleTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultFreezeStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultKycStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenExpiryInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"tokenKeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"getTokenKey\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"getAccountId(address)\":{\"details\":\"Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties.\"},\"getApproved(address,uint256)\":{\"params\":{\"serialNumber\":\"The NFT to find the approved address for\",\"token\":\"The Hedera NFT token address to check approval\"},\"returns\":{\"approved\":\"The approved address for this NFT, or the zero address if there is none\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getNonFungibleTokenInfo(address,int64)\":{\"params\":{\"serialNumber\":\"The NFT serialNumber to check\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"NonFungibleTokenInfo info for `token` `serialNumber`\"}},\"getTokenCustomFees(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"Set of fixed fees for `token`\",\"_2\":\"Set of fractional fees for `token`\",\"_3\":\"Set of royalty fees for `token`\"}},\"getTokenDefaultFreezeStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default freeze status is frozen.\"}},\"getTokenDefaultKycStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `token` default kyc status is KycNotApplicable and false if Revoked.\"}},\"getTokenExpiryInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"Expiry info for `token`\"}},\"getTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"TokenInfo info for `token`\"}},\"getTokenKey(address,uint256)\":{\"params\":{\"keyType\":\"The keyType of the desired KeyValue\",\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"KeyValue info for key of type `keyType`\"}},\"getTokenType(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\"}},\"isApprovedForAll(address,address,address)\":{\"params\":{\"operator\":\"The address that acts on behalf of the owner\",\"owner\":\"The address that owns the NFTs\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if `operator` is an approved operator for `owner`, false otherwise\"}},\"isToken(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"The response code for the status of the request. SUCCESS is 22.\",\"_1\":\"True if valid token found for the given address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getApproved(address,uint256)\":{\"notice\":\"Get the approved address for a single NFT Only Applicable to NFT Tokens\"},\"getNonFungibleTokenInfo(address,int64)\":{\"notice\":\"Query non fungible token info\"},\"getTokenCustomFees(address)\":{\"notice\":\"Query token custom fees\"},\"getTokenDefaultFreezeStatus(address)\":{\"notice\":\"Query token default freeze status\"},\"getTokenDefaultKycStatus(address)\":{\"notice\":\"Query token default kyc status\"},\"getTokenExpiryInfo(address)\":{\"notice\":\"Query token expiry info\"},\"getTokenInfo(address)\":{\"notice\":\"Query token info\"},\"getTokenKey(address,uint256)\":{\"notice\":\"Query token KeyValue\"},\"getTokenType(address)\":{\"notice\":\"Query to return the token type for a given address\"},\"isApprovedForAll(address,address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address Only Applicable to NFT Tokens\"},\"isToken(address)\":{\"notice\":\"Query if valid token found for the given address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HtsSystemContract.sol\":\"HtsSystemContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":surl/=lib/surl/\"]},\"sources\":{\"contracts/HtsSystemContract.sol\":{\"keccak256\":\"0xc0c1b34905a591a4a23569d30ba8e5802ef131cebc0c7a04a37b88bdaee36683\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f58ef6ca6c7e65a2fe5fc3679b7707ac0ea12e5ed05548e849a26815c0ac7046\",\"dweb:/ipfs/QmeRkr8LuXPMCtJ46oHyh9C8kEqxHpUDmAoyEEewxKVkhV\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x77993e2d90d6b91d30b8721a52364902d823dd5d1020500071c4ecd7f847a00e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://776be938a4f20b2b40e95a5d58f330454d21077894659a674ac8bda378561598\",\"dweb:/ipfs/QmToUenT2jKjiJLCozN3xQp2esRVbRceyS8KVMqcd9j29W\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0x7b4a961afb96ff6326f4d2985f20edf7aa10b3ba1b68c502a0cdcd84ba26e767\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://322d92f6a244dd8a9818d5be6e4e17c6dd048a033449dd79b43229c7077da06d\",\"dweb:/ipfs/QmdFyC7EU8iGiyFzh77YsUpp6eysV8ijyLUKWsDPVKq7yG\"]},\"contracts/IHRC719.sol\":{\"keccak256\":\"0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d\",\"dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD\"]},\"contracts/IHederaTokenService.sol\":{\"keccak256\":\"0xc284e845cf96c53d24d6e7e6cf7fc6489b67d47a9faa28f9fc1aff01052b7c3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6c8f42fcf8fc28e48b526346eaa26142f1cca83f71866903be3d9468c2d5de0f\",\"dweb:/ipfs/QmSvcnj5f6LyJk4TVbWHdRh1Kiakj8RGtGxtxX1v2vzGBc\"]}},\"version\":1}",
    "metadata": {
        "compiler": { "version": "0.8.26+commit.8a97fa7a" },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "approved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ApprovalForAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                { "inputs": [], "stateMutability": "nonpayable", "type": "fallback" },
                {
                    "inputs": [
                        { "internalType": "address", "name": "from", "type": "address" },
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "amount", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "_update"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "int64[]", "name": "", "type": "int64[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAccountId",
                    "outputs": [{ "internalType": "uint32", "name": "accountId", "type": "uint32" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "serialNumber", "type": "uint256" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getApproved",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "address", "name": "approved", "type": "address" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "serialNumber", "type": "int64" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getNonFungibleTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.NonFungibleTokenInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.TokenInfo",
                                    "name": "tokenInfo",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IHederaTokenService.HederaToken",
                                            "name": "token",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "string",
                                                    "name": "name",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "symbol",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "treasury",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "string",
                                                    "name": "memo",
                                                    "type": "string"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "tokenSupplyType",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maxSupply",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "freezeDefault",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.TokenKey[]",
                                                    "name": "tokenKeys",
                                                    "type": "tuple[]",
                                                    "components": [
                                                        {
                                                            "internalType": "uint256",
                                                            "name": "keyType",
                                                            "type": "uint256"
                                                        },
                                                        {
                                                            "internalType": "struct IHederaTokenService.KeyValue",
                                                            "name": "key",
                                                            "type": "tuple",
                                                            "components": [
                                                                {
                                                                    "internalType": "bool",
                                                                    "name": "inheritAccountKey",
                                                                    "type": "bool"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "contractId",
                                                                    "type": "address"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ed25519",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "bytes",
                                                                    "name": "ECDSA_secp256k1",
                                                                    "type": "bytes"
                                                                },
                                                                {
                                                                    "internalType": "address",
                                                                    "name": "delegatableContractId",
                                                                    "type": "address"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.Expiry",
                                                    "name": "expiry",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "int64",
                                                            "name": "second",
                                                            "type": "int64"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "autoRenewAccount",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "int64",
                                                            "name": "autoRenewPeriod",
                                                            "type": "int64"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "totalSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "deleted",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "defaultKycStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "pauseStatus",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FixedFee[]",
                                            "name": "fixedFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useCurrentTokenForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                                            "name": "fractionalFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "minimumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "maximumAmount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "netOfTransfers",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                            "name": "royaltyFees",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "numerator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "denominator",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "amount",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "tokenId",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "bool",
                                                    "name": "useHbarsForPayment",
                                                    "type": "bool"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "feeCollector",
                                                    "type": "address"
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "ledgerId",
                                            "type": "string"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "int64",
                                    "name": "serialNumber",
                                    "type": "int64"
                                },
                                { "internalType": "address", "name": "ownerId", "type": "address" },
                                {
                                    "internalType": "int64",
                                    "name": "creationTime",
                                    "type": "int64"
                                },
                                { "internalType": "bytes", "name": "metadata", "type": "bytes" },
                                {
                                    "internalType": "address",
                                    "name": "spenderId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenCustomFees",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.FixedFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "useCurrentTokenForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.FractionalFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                {
                                    "internalType": "int64",
                                    "name": "minimumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "maximumAmount",
                                    "type": "int64"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "netOfTransfers",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "int64", "name": "numerator", "type": "int64" },
                                { "internalType": "int64", "name": "denominator", "type": "int64" },
                                { "internalType": "int64", "name": "amount", "type": "int64" },
                                { "internalType": "address", "name": "tokenId", "type": "address" },
                                {
                                    "internalType": "bool",
                                    "name": "useHbarsForPayment",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenDefaultFreezeStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenDefaultKycStatus",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenExpiryInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.Expiry",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                { "internalType": "int64", "name": "second", "type": "int64" },
                                {
                                    "internalType": "address",
                                    "name": "autoRenewAccount",
                                    "type": "address"
                                },
                                {
                                    "internalType": "int64",
                                    "name": "autoRenewPeriod",
                                    "type": "int64"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenInfo",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.TokenInfo",
                            "name": "tokenInfo",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct IHederaTokenService.HederaToken",
                                    "name": "token",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "string",
                                            "name": "name",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "symbol",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "treasury",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "string",
                                            "name": "memo",
                                            "type": "string"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "tokenSupplyType",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maxSupply",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "freezeDefault",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.TokenKey[]",
                                            "name": "tokenKeys",
                                            "type": "tuple[]",
                                            "components": [
                                                {
                                                    "internalType": "uint256",
                                                    "name": "keyType",
                                                    "type": "uint256"
                                                },
                                                {
                                                    "internalType": "struct IHederaTokenService.KeyValue",
                                                    "name": "key",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "bool",
                                                            "name": "inheritAccountKey",
                                                            "type": "bool"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "contractId",
                                                            "type": "address"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ed25519",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "ECDSA_secp256k1",
                                                            "type": "bytes"
                                                        },
                                                        {
                                                            "internalType": "address",
                                                            "name": "delegatableContractId",
                                                            "type": "address"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IHederaTokenService.Expiry",
                                            "name": "expiry",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "int64",
                                                    "name": "second",
                                                    "type": "int64"
                                                },
                                                {
                                                    "internalType": "address",
                                                    "name": "autoRenewAccount",
                                                    "type": "address"
                                                },
                                                {
                                                    "internalType": "int64",
                                                    "name": "autoRenewPeriod",
                                                    "type": "int64"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                { "internalType": "int64", "name": "totalSupply", "type": "int64" },
                                { "internalType": "bool", "name": "deleted", "type": "bool" },
                                {
                                    "internalType": "bool",
                                    "name": "defaultKycStatus",
                                    "type": "bool"
                                },
                                { "internalType": "bool", "name": "pauseStatus", "type": "bool" },
                                {
                                    "internalType": "struct IHederaTokenService.FixedFee[]",
                                    "name": "fixedFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useCurrentTokenForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.FractionalFee[]",
                                    "name": "fractionalFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "minimumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "maximumAmount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "netOfTransfers",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct IHederaTokenService.RoyaltyFee[]",
                                    "name": "royaltyFees",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "int64",
                                            "name": "numerator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "denominator",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "int64",
                                            "name": "amount",
                                            "type": "int64"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "tokenId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "useHbarsForPayment",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "feeCollector",
                                            "type": "address"
                                        }
                                    ]
                                },
                                { "internalType": "string", "name": "ledgerId", "type": "string" }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "keyType", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenKey",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        {
                            "internalType": "struct IHederaTokenService.KeyValue",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "inheritAccountKey",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "address",
                                    "name": "contractId",
                                    "type": "address"
                                },
                                { "internalType": "bytes", "name": "ed25519", "type": "bytes" },
                                {
                                    "internalType": "bytes",
                                    "name": "ECDSA_secp256k1",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatableContractId",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "getTokenType",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "int32", "name": "", "type": "int32" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "address", "name": "owner", "type": "address" },
                        { "internalType": "address", "name": "operator", "type": "address" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isApprovedForAll",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "isToken",
                    "outputs": [
                        { "internalType": "int64", "name": "", "type": "int64" },
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "int64", "name": "amount", "type": "int64" },
                        { "internalType": "bytes[]", "name": "", "type": "bytes[]" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintToken",
                    "outputs": [
                        { "internalType": "int64", "name": "responseCode", "type": "int64" },
                        { "internalType": "int64", "name": "newTotalSupply", "type": "int64" },
                        { "internalType": "int64[]", "name": "serialNumbers", "type": "int64[]" }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "getAccountId(address)": {
                        "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
                    },
                    "getApproved(address,uint256)": {
                        "params": {
                            "serialNumber": "The NFT to find the approved address for",
                            "token": "The Hedera NFT token address to check approval"
                        },
                        "returns": {
                            "approved": "The approved address for this NFT, or the zero address if there is none",
                            "responseCode": "The response code for the status of the request. SUCCESS is 22."
                        }
                    },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "params": {
                            "serialNumber": "The NFT serialNumber to check",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                        }
                    },
                    "getTokenCustomFees(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "Set of fixed fees for `token`",
                            "_2": "Set of fractional fees for `token`",
                            "_3": "Set of royalty fees for `token`"
                        }
                    },
                    "getTokenDefaultFreezeStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default freeze status is frozen."
                        }
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                        }
                    },
                    "getTokenExpiryInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenInfo": "Expiry info for `token`"
                        }
                    },
                    "getTokenInfo(address)": {
                        "params": { "token": "The token address to check" },
                        "returns": {
                            "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                            "tokenInfo": "TokenInfo info for `token`"
                        }
                    },
                    "getTokenKey(address,uint256)": {
                        "params": {
                            "keyType": "The keyType of the desired KeyValue",
                            "token": "The token address to check"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "KeyValue info for key of type `keyType`"
                        }
                    },
                    "getTokenType(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                        }
                    },
                    "isApprovedForAll(address,address,address)": {
                        "params": {
                            "operator": "The address that acts on behalf of the owner",
                            "owner": "The address that owns the NFTs",
                            "token": "The Hedera NFT token address to approve"
                        },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                        }
                    },
                    "isToken(address)": {
                        "params": { "token": "The token address" },
                        "returns": {
                            "_0": "The response code for the status of the request. SUCCESS is 22.",
                            "_1": "True if valid token found for the given address"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "getApproved(address,uint256)": {
                        "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
                    },
                    "getNonFungibleTokenInfo(address,int64)": {
                        "notice": "Query non fungible token info"
                    },
                    "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
                    "getTokenDefaultFreezeStatus(address)": {
                        "notice": "Query token default freeze status"
                    },
                    "getTokenDefaultKycStatus(address)": {
                        "notice": "Query token default kyc status"
                    },
                    "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
                    "getTokenInfo(address)": { "notice": "Query token info" },
                    "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
                    "getTokenType(address)": {
                        "notice": "Query to return the token type for a given address"
                    },
                    "isApprovedForAll(address,address,address)": {
                        "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
                    },
                    "isToken(address)": {
                        "notice": "Query if valid token found for the given address"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "ds-test/=lib/surl/lib/forge-std/lib/ds-test/src/",
                "forge-std/=lib/forge-std/src/",
                "solidity-stringutils/=lib/surl/lib/solidity-stringutils/",
                "surl/=lib/surl/"
            ],
            "optimizer": { "enabled": true, "runs": 200 },
            "metadata": { "bytecodeHash": "ipfs" },
            "compilationTarget": { "contracts/HtsSystemContract.sol": "HtsSystemContract" },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "contracts/HtsSystemContract.sol": {
                "keccak256": "0xc0c1b34905a591a4a23569d30ba8e5802ef131cebc0c7a04a37b88bdaee36683",
                "urls": [
                    "bzz-raw://f58ef6ca6c7e65a2fe5fc3679b7707ac0ea12e5ed05548e849a26815c0ac7046",
                    "dweb:/ipfs/QmeRkr8LuXPMCtJ46oHyh9C8kEqxHpUDmAoyEEewxKVkhV"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC20.sol": {
                "keccak256": "0x77993e2d90d6b91d30b8721a52364902d823dd5d1020500071c4ecd7f847a00e",
                "urls": [
                    "bzz-raw://776be938a4f20b2b40e95a5d58f330454d21077894659a674ac8bda378561598",
                    "dweb:/ipfs/QmToUenT2jKjiJLCozN3xQp2esRVbRceyS8KVMqcd9j29W"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IERC721.sol": {
                "keccak256": "0x7b4a961afb96ff6326f4d2985f20edf7aa10b3ba1b68c502a0cdcd84ba26e767",
                "urls": [
                    "bzz-raw://322d92f6a244dd8a9818d5be6e4e17c6dd048a033449dd79b43229c7077da06d",
                    "dweb:/ipfs/QmdFyC7EU8iGiyFzh77YsUpp6eysV8ijyLUKWsDPVKq7yG"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHRC719.sol": {
                "keccak256": "0xfcb360b093598823faf2adec5558a7140d0b0edc7d0836dfe97888535abb25fd",
                "urls": [
                    "bzz-raw://9a5f3ec2697152fb41e9903aee844c2e0bf6456fa1d48214d151742bdee06a4d",
                    "dweb:/ipfs/QmS7msTEpaWWiyKRCK3CqX9Bzp5WzoS1ZQ26ACxdWrvXBD"
                ],
                "license": "Apache-2.0"
            },
            "contracts/IHederaTokenService.sol": {
                "keccak256": "0xc284e845cf96c53d24d6e7e6cf7fc6489b67d47a9faa28f9fc1aff01052b7c3f",
                "urls": [
                    "bzz-raw://6c8f42fcf8fc28e48b526346eaa26142f1cca83f71866903be3d9468c2d5de0f",
                    "dweb:/ipfs/QmSvcnj5f6LyJk4TVbWHdRh1Kiakj8RGtGxtxX1v2vzGBc"
                ],
                "license": "Apache-2.0"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 91,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "tokenType",
                "offset": 0,
                "slot": "0",
                "type": "t_string_storage"
            },
            {
                "astId": 93,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "name",
                "offset": 0,
                "slot": "1",
                "type": "t_string_storage"
            },
            {
                "astId": 95,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "symbol",
                "offset": 0,
                "slot": "2",
                "type": "t_string_storage"
            },
            {
                "astId": 97,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "decimals",
                "offset": 0,
                "slot": "3",
                "type": "t_uint8"
            },
            {
                "astId": 99,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "totalSupply",
                "offset": 0,
                "slot": "4",
                "type": "t_uint256"
            },
            {
                "astId": 102,
                "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                "label": "_tokenInfo",
                "offset": 0,
                "slot": "5",
                "type": "t_struct(TokenInfo)6118_storage"
            }
        ],
        "types": {
            "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
            "t_array(t_struct(FixedFee)6151_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FixedFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FixedFee)6151_storage"
            },
            "t_array(t_struct(FractionalFee)6165_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.FractionalFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(FractionalFee)6165_storage"
            },
            "t_array(t_struct(RoyaltyFee)6179_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.RoyaltyFee[]",
                "numberOfBytes": "32",
                "base": "t_struct(RoyaltyFee)6179_storage"
            },
            "t_array(t_struct(TokenKey)6059_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct IHederaTokenService.TokenKey[]",
                "numberOfBytes": "32",
                "base": "t_struct(TokenKey)6059_storage"
            },
            "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
            "t_bytes_storage": { "encoding": "bytes", "label": "bytes", "numberOfBytes": "32" },
            "t_int64": { "encoding": "inplace", "label": "int64", "numberOfBytes": "8" },
            "t_string_storage": { "encoding": "bytes", "label": "string", "numberOfBytes": "32" },
            "t_struct(Expiry)6040_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.Expiry",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6035,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "second",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6037,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewAccount",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6039,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "autoRenewPeriod",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_int64"
                    }
                ]
            },
            "t_struct(FixedFee)6151_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FixedFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6142,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6144,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6146,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 28,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6148,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useCurrentTokenForPayment",
                        "offset": 29,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6150,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(FractionalFee)6165_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.FractionalFee",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 6154,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6156,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6158,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "minimumAmount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6160,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maximumAmount",
                        "offset": 24,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6162,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "netOfTransfers",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6164,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 1,
                        "slot": "1",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(HederaToken)6082_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.HederaToken",
                "numberOfBytes": "256",
                "members": [
                    {
                        "astId": 6062,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "name",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6064,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "symbol",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6066,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "treasury",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    },
                    {
                        "astId": 6068,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "memo",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 6070,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenSupplyType",
                        "offset": 0,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6072,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "maxSupply",
                        "offset": 1,
                        "slot": "4",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6074,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "freezeDefault",
                        "offset": 9,
                        "slot": "4",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6078,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenKeys",
                        "offset": 0,
                        "slot": "5",
                        "type": "t_array(t_struct(TokenKey)6059_storage)dyn_storage"
                    },
                    {
                        "astId": 6081,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "expiry",
                        "offset": 0,
                        "slot": "6",
                        "type": "t_struct(Expiry)6040_storage"
                    }
                ]
            },
            "t_struct(KeyValue)6052_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.KeyValue",
                "numberOfBytes": "128",
                "members": [
                    {
                        "astId": 6043,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "inheritAccountKey",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6045,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "contractId",
                        "offset": 1,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 6047,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ed25519",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 6049,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ECDSA_secp256k1",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_bytes_storage"
                    },
                    {
                        "astId": 6051,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "delegatableContractId",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(RoyaltyFee)6179_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.RoyaltyFee",
                "numberOfBytes": "96",
                "members": [
                    {
                        "astId": 6168,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "numerator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6170,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "denominator",
                        "offset": 8,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6172,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "amount",
                        "offset": 16,
                        "slot": "0",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6174,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "tokenId",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_address"
                    },
                    {
                        "astId": 6176,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "useHbarsForPayment",
                        "offset": 20,
                        "slot": "1",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6178,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "feeCollector",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(TokenInfo)6118_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenInfo",
                "numberOfBytes": "416",
                "members": [
                    {
                        "astId": 6087,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "token",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_struct(HederaToken)6082_storage"
                    },
                    {
                        "astId": 6090,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "totalSupply",
                        "offset": 0,
                        "slot": "8",
                        "type": "t_int64"
                    },
                    {
                        "astId": 6093,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "deleted",
                        "offset": 8,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6096,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "defaultKycStatus",
                        "offset": 9,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6099,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "pauseStatus",
                        "offset": 10,
                        "slot": "8",
                        "type": "t_bool"
                    },
                    {
                        "astId": 6104,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fixedFees",
                        "offset": 0,
                        "slot": "9",
                        "type": "t_array(t_struct(FixedFee)6151_storage)dyn_storage"
                    },
                    {
                        "astId": 6109,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "fractionalFees",
                        "offset": 0,
                        "slot": "10",
                        "type": "t_array(t_struct(FractionalFee)6165_storage)dyn_storage"
                    },
                    {
                        "astId": 6114,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "royaltyFees",
                        "offset": 0,
                        "slot": "11",
                        "type": "t_array(t_struct(RoyaltyFee)6179_storage)dyn_storage"
                    },
                    {
                        "astId": 6117,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "ledgerId",
                        "offset": 0,
                        "slot": "12",
                        "type": "t_string_storage"
                    }
                ]
            },
            "t_struct(TokenKey)6059_storage": {
                "encoding": "inplace",
                "label": "struct IHederaTokenService.TokenKey",
                "numberOfBytes": "160",
                "members": [
                    {
                        "astId": 6055,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "keyType",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 6058,
                        "contract": "contracts/HtsSystemContract.sol:HtsSystemContract",
                        "label": "key",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_struct(KeyValue)6052_storage"
                    }
                ]
            },
            "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" },
            "t_uint8": { "encoding": "inplace", "label": "uint8", "numberOfBytes": "1" }
        }
    },
    "userdoc": {
        "version": 1,
        "kind": "user",
        "methods": {
            "getApproved(address,uint256)": {
                "notice": "Get the approved address for a single NFT Only Applicable to NFT Tokens"
            },
            "getNonFungibleTokenInfo(address,int64)": { "notice": "Query non fungible token info" },
            "getTokenCustomFees(address)": { "notice": "Query token custom fees" },
            "getTokenDefaultFreezeStatus(address)": {
                "notice": "Query token default freeze status"
            },
            "getTokenDefaultKycStatus(address)": { "notice": "Query token default kyc status" },
            "getTokenExpiryInfo(address)": { "notice": "Query token expiry info" },
            "getTokenInfo(address)": { "notice": "Query token info" },
            "getTokenKey(address,uint256)": { "notice": "Query token KeyValue" },
            "getTokenType(address)": {
                "notice": "Query to return the token type for a given address"
            },
            "isApprovedForAll(address,address,address)": {
                "notice": "Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"
            },
            "isToken(address)": { "notice": "Query if valid token found for the given address" }
        }
    },
    "devdoc": {
        "version": 1,
        "kind": "dev",
        "methods": {
            "getAccountId(address)": {
                "details": "Returns the account id (omitting both shard and realm numbers) of the given `address`. The storage adapter, _i.e._, `getHtsStorageAt`, assumes that both shard and realm numbers are zero. Thus, they can be omitted from the account id. See https://docs.hedera.com/hedera/core-concepts/accounts/account-properties for more info on account properties."
            },
            "getApproved(address,uint256)": {
                "params": {
                    "serialNumber": "The NFT to find the approved address for",
                    "token": "The Hedera NFT token address to check approval"
                },
                "returns": {
                    "approved": "The approved address for this NFT, or the zero address if there is none",
                    "responseCode": "The response code for the status of the request. SUCCESS is 22."
                }
            },
            "getNonFungibleTokenInfo(address,int64)": {
                "params": {
                    "serialNumber": "The NFT serialNumber to check",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "NonFungibleTokenInfo info for `token` `serialNumber`"
                }
            },
            "getTokenCustomFees(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "Set of fixed fees for `token`",
                    "_2": "Set of fractional fees for `token`",
                    "_3": "Set of royalty fees for `token`"
                }
            },
            "getTokenDefaultFreezeStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default freeze status is frozen."
                }
            },
            "getTokenDefaultKycStatus(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `token` default kyc status is KycNotApplicable and false if Revoked."
                }
            },
            "getTokenExpiryInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenInfo": "Expiry info for `token`"
                }
            },
            "getTokenInfo(address)": {
                "params": { "token": "The token address to check" },
                "returns": {
                    "responseCode": "The response code for the status of the request. SUCCESS is 22.",
                    "tokenInfo": "TokenInfo info for `token`"
                }
            },
            "getTokenKey(address,uint256)": {
                "params": {
                    "keyType": "The keyType of the desired KeyValue",
                    "token": "The token address to check"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "KeyValue info for key of type `keyType`"
                }
            },
            "getTokenType(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"
                }
            },
            "isApprovedForAll(address,address,address)": {
                "params": {
                    "operator": "The address that acts on behalf of the owner",
                    "owner": "The address that owns the NFTs",
                    "token": "The Hedera NFT token address to approve"
                },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if `operator` is an approved operator for `owner`, false otherwise"
                }
            },
            "isToken(address)": {
                "params": { "token": "The token address" },
                "returns": {
                    "_0": "The response code for the status of the request. SUCCESS is 22.",
                    "_1": "True if valid token found for the given address"
                }
            }
        },
        "events": {
            "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
            },
            "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
            }
        }
    },
    "id": 1
}
